/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk_N_E"] = self["webpackChunk_N_E"] || []).push([["app/clicker/layout"],{

/***/ "?da34":
/*!************************!*\
  !*** buffer (ignored) ***!
  \************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

/* (ignored) */

/***/ }),

/***/ "?5ddf":
/*!************************!*\
  !*** crypto (ignored) ***!
  \************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

/* (ignored) */

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22F%3A%5C%5CDownloads%5C%5Cckliker-main%5C%5Cckliker-main%5C%5Capp%5C%5Cclicker%5C%5Clayout.tsx%22%2C%22ids%22%3A%5B%5D%7D&server=false!":
/*!**************************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22F%3A%5C%5CDownloads%5C%5Cckliker-main%5C%5Cckliker-main%5C%5Capp%5C%5Cclicker%5C%5Clayout.tsx%22%2C%22ids%22%3A%5B%5D%7D&server=false! ***!
  \**************************************************************************************************************************************************************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("Promise.resolve(/*! import() eager */).then(__webpack_require__.bind(__webpack_require__, /*! ./app/clicker/layout.tsx */ \"(app-pages-browser)/./app/clicker/layout.tsx\"));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvYnVpbGQvd2VicGFjay9sb2FkZXJzL25leHQtZmxpZ2h0LWNsaWVudC1lbnRyeS1sb2FkZXIuanM/bW9kdWxlcz0lN0IlMjJyZXF1ZXN0JTIyJTNBJTIyRiUzQSU1QyU1Q0Rvd25sb2FkcyU1QyU1Q2NrbGlrZXItbWFpbiU1QyU1Q2NrbGlrZXItbWFpbiU1QyU1Q2FwcCU1QyU1Q2NsaWNrZXIlNUMlNUNsYXlvdXQudHN4JTIyJTJDJTIyaWRzJTIyJTNBJTVCJTVEJTdEJnNlcnZlcj1mYWxzZSEiLCJtYXBwaW5ncyI6IkFBQUEsMEtBQXdHIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8/MTYzZSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQoLyogd2VicGFja01vZGU6IFwiZWFnZXJcIiAqLyBcIkY6XFxcXERvd25sb2Fkc1xcXFxja2xpa2VyLW1haW5cXFxcY2tsaWtlci1tYWluXFxcXGFwcFxcXFxjbGlja2VyXFxcXGxheW91dC50c3hcIik7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22F%3A%5C%5CDownloads%5C%5Cckliker-main%5C%5Cckliker-main%5C%5Capp%5C%5Cclicker%5C%5Clayout.tsx%22%2C%22ids%22%3A%5B%5D%7D&server=false!\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@tonconnect/isomorphic-eventsource/browser.js":
/*!********************************************************************!*\
  !*** ./node_modules/@tonconnect/isomorphic-eventsource/browser.js ***!
  \********************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("{}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AdG9uY29ubmVjdC9pc29tb3JwaGljLWV2ZW50c291cmNlL2Jyb3dzZXIuanMiLCJtYXBwaW5ncyI6IkFBQUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0B0b25jb25uZWN0L2lzb21vcnBoaWMtZXZlbnRzb3VyY2UvYnJvd3Nlci5qcz8yOGJmIl0sInNvdXJjZXNDb250ZW50IjpbInt9XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@tonconnect/isomorphic-eventsource/browser.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@tonconnect/isomorphic-fetch/browser.js":
/*!**************************************************************!*\
  !*** ./node_modules/@tonconnect/isomorphic-fetch/browser.js ***!
  \**************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("{}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AdG9uY29ubmVjdC9pc29tb3JwaGljLWZldGNoL2Jyb3dzZXIuanMiLCJtYXBwaW5ncyI6IkFBQUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0B0b25jb25uZWN0L2lzb21vcnBoaWMtZmV0Y2gvYnJvd3Nlci5qcz81ODkyIl0sInNvdXJjZXNDb250ZW50IjpbInt9XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@tonconnect/isomorphic-fetch/browser.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/deepmerge/dist/cjs.js":
/*!********************************************!*\
  !*** ./node_modules/deepmerge/dist/cjs.js ***!
  \********************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n\nvar isMergeableObject = function isMergeableObject(value) {\n\treturn isNonNullObject(value)\n\t\t&& !isSpecial(value)\n};\n\nfunction isNonNullObject(value) {\n\treturn !!value && typeof value === 'object'\n}\n\nfunction isSpecial(value) {\n\tvar stringValue = Object.prototype.toString.call(value);\n\n\treturn stringValue === '[object RegExp]'\n\t\t|| stringValue === '[object Date]'\n\t\t|| isReactElement(value)\n}\n\n// see https://github.com/facebook/react/blob/b5ac963fb791d1298e7f396236383bc955f916c1/src/isomorphic/classic/element/ReactElement.js#L21-L25\nvar canUseSymbol = typeof Symbol === 'function' && Symbol.for;\nvar REACT_ELEMENT_TYPE = canUseSymbol ? Symbol.for('react.element') : 0xeac7;\n\nfunction isReactElement(value) {\n\treturn value.$$typeof === REACT_ELEMENT_TYPE\n}\n\nfunction emptyTarget(val) {\n\treturn Array.isArray(val) ? [] : {}\n}\n\nfunction cloneUnlessOtherwiseSpecified(value, options) {\n\treturn (options.clone !== false && options.isMergeableObject(value))\n\t\t? deepmerge(emptyTarget(value), value, options)\n\t\t: value\n}\n\nfunction defaultArrayMerge(target, source, options) {\n\treturn target.concat(source).map(function(element) {\n\t\treturn cloneUnlessOtherwiseSpecified(element, options)\n\t})\n}\n\nfunction getMergeFunction(key, options) {\n\tif (!options.customMerge) {\n\t\treturn deepmerge\n\t}\n\tvar customMerge = options.customMerge(key);\n\treturn typeof customMerge === 'function' ? customMerge : deepmerge\n}\n\nfunction getEnumerableOwnPropertySymbols(target) {\n\treturn Object.getOwnPropertySymbols\n\t\t? Object.getOwnPropertySymbols(target).filter(function(symbol) {\n\t\t\treturn Object.propertyIsEnumerable.call(target, symbol)\n\t\t})\n\t\t: []\n}\n\nfunction getKeys(target) {\n\treturn Object.keys(target).concat(getEnumerableOwnPropertySymbols(target))\n}\n\nfunction propertyIsOnObject(object, property) {\n\ttry {\n\t\treturn property in object\n\t} catch(_) {\n\t\treturn false\n\t}\n}\n\n// Protects from prototype poisoning and unexpected merging up the prototype chain.\nfunction propertyIsUnsafe(target, key) {\n\treturn propertyIsOnObject(target, key) // Properties are safe to merge if they don't exist in the target yet,\n\t\t&& !(Object.hasOwnProperty.call(target, key) // unsafe if they exist up the prototype chain,\n\t\t\t&& Object.propertyIsEnumerable.call(target, key)) // and also unsafe if they're nonenumerable.\n}\n\nfunction mergeObject(target, source, options) {\n\tvar destination = {};\n\tif (options.isMergeableObject(target)) {\n\t\tgetKeys(target).forEach(function(key) {\n\t\t\tdestination[key] = cloneUnlessOtherwiseSpecified(target[key], options);\n\t\t});\n\t}\n\tgetKeys(source).forEach(function(key) {\n\t\tif (propertyIsUnsafe(target, key)) {\n\t\t\treturn\n\t\t}\n\n\t\tif (propertyIsOnObject(target, key) && options.isMergeableObject(source[key])) {\n\t\t\tdestination[key] = getMergeFunction(key, options)(target[key], source[key], options);\n\t\t} else {\n\t\t\tdestination[key] = cloneUnlessOtherwiseSpecified(source[key], options);\n\t\t}\n\t});\n\treturn destination\n}\n\nfunction deepmerge(target, source, options) {\n\toptions = options || {};\n\toptions.arrayMerge = options.arrayMerge || defaultArrayMerge;\n\toptions.isMergeableObject = options.isMergeableObject || isMergeableObject;\n\t// cloneUnlessOtherwiseSpecified is added to `options` so that custom arrayMerge()\n\t// implementations can use it. The caller may not replace it.\n\toptions.cloneUnlessOtherwiseSpecified = cloneUnlessOtherwiseSpecified;\n\n\tvar sourceIsArray = Array.isArray(source);\n\tvar targetIsArray = Array.isArray(target);\n\tvar sourceAndTargetTypesMatch = sourceIsArray === targetIsArray;\n\n\tif (!sourceAndTargetTypesMatch) {\n\t\treturn cloneUnlessOtherwiseSpecified(source, options)\n\t} else if (sourceIsArray) {\n\t\treturn options.arrayMerge(target, source, options)\n\t} else {\n\t\treturn mergeObject(target, source, options)\n\t}\n}\n\ndeepmerge.all = function deepmergeAll(array, options) {\n\tif (!Array.isArray(array)) {\n\t\tthrow new Error('first argument should be an array')\n\t}\n\n\treturn array.reduce(function(prev, next) {\n\t\treturn deepmerge(prev, next, options)\n\t}, {})\n};\n\nvar deepmerge_1 = deepmerge;\n\nmodule.exports = deepmerge_1;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9kZWVwbWVyZ2UvZGlzdC9janMuanMiLCJtYXBwaW5ncyI6IkFBQWE7O0FBRWI7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxFQUFFO0FBQ0Y7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQTtBQUNBLEVBQUU7QUFDRjtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsRUFBRSxJQUFJO0FBQ047O0FBRUE7O0FBRUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2RlZXBtZXJnZS9kaXN0L2Nqcy5qcz8yMzZkIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxudmFyIGlzTWVyZ2VhYmxlT2JqZWN0ID0gZnVuY3Rpb24gaXNNZXJnZWFibGVPYmplY3QodmFsdWUpIHtcblx0cmV0dXJuIGlzTm9uTnVsbE9iamVjdCh2YWx1ZSlcblx0XHQmJiAhaXNTcGVjaWFsKHZhbHVlKVxufTtcblxuZnVuY3Rpb24gaXNOb25OdWxsT2JqZWN0KHZhbHVlKSB7XG5cdHJldHVybiAhIXZhbHVlICYmIHR5cGVvZiB2YWx1ZSA9PT0gJ29iamVjdCdcbn1cblxuZnVuY3Rpb24gaXNTcGVjaWFsKHZhbHVlKSB7XG5cdHZhciBzdHJpbmdWYWx1ZSA9IE9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbCh2YWx1ZSk7XG5cblx0cmV0dXJuIHN0cmluZ1ZhbHVlID09PSAnW29iamVjdCBSZWdFeHBdJ1xuXHRcdHx8IHN0cmluZ1ZhbHVlID09PSAnW29iamVjdCBEYXRlXSdcblx0XHR8fCBpc1JlYWN0RWxlbWVudCh2YWx1ZSlcbn1cblxuLy8gc2VlIGh0dHBzOi8vZ2l0aHViLmNvbS9mYWNlYm9vay9yZWFjdC9ibG9iL2I1YWM5NjNmYjc5MWQxMjk4ZTdmMzk2MjM2MzgzYmM5NTVmOTE2YzEvc3JjL2lzb21vcnBoaWMvY2xhc3NpYy9lbGVtZW50L1JlYWN0RWxlbWVudC5qcyNMMjEtTDI1XG52YXIgY2FuVXNlU3ltYm9sID0gdHlwZW9mIFN5bWJvbCA9PT0gJ2Z1bmN0aW9uJyAmJiBTeW1ib2wuZm9yO1xudmFyIFJFQUNUX0VMRU1FTlRfVFlQRSA9IGNhblVzZVN5bWJvbCA/IFN5bWJvbC5mb3IoJ3JlYWN0LmVsZW1lbnQnKSA6IDB4ZWFjNztcblxuZnVuY3Rpb24gaXNSZWFjdEVsZW1lbnQodmFsdWUpIHtcblx0cmV0dXJuIHZhbHVlLiQkdHlwZW9mID09PSBSRUFDVF9FTEVNRU5UX1RZUEVcbn1cblxuZnVuY3Rpb24gZW1wdHlUYXJnZXQodmFsKSB7XG5cdHJldHVybiBBcnJheS5pc0FycmF5KHZhbCkgPyBbXSA6IHt9XG59XG5cbmZ1bmN0aW9uIGNsb25lVW5sZXNzT3RoZXJ3aXNlU3BlY2lmaWVkKHZhbHVlLCBvcHRpb25zKSB7XG5cdHJldHVybiAob3B0aW9ucy5jbG9uZSAhPT0gZmFsc2UgJiYgb3B0aW9ucy5pc01lcmdlYWJsZU9iamVjdCh2YWx1ZSkpXG5cdFx0PyBkZWVwbWVyZ2UoZW1wdHlUYXJnZXQodmFsdWUpLCB2YWx1ZSwgb3B0aW9ucylcblx0XHQ6IHZhbHVlXG59XG5cbmZ1bmN0aW9uIGRlZmF1bHRBcnJheU1lcmdlKHRhcmdldCwgc291cmNlLCBvcHRpb25zKSB7XG5cdHJldHVybiB0YXJnZXQuY29uY2F0KHNvdXJjZSkubWFwKGZ1bmN0aW9uKGVsZW1lbnQpIHtcblx0XHRyZXR1cm4gY2xvbmVVbmxlc3NPdGhlcndpc2VTcGVjaWZpZWQoZWxlbWVudCwgb3B0aW9ucylcblx0fSlcbn1cblxuZnVuY3Rpb24gZ2V0TWVyZ2VGdW5jdGlvbihrZXksIG9wdGlvbnMpIHtcblx0aWYgKCFvcHRpb25zLmN1c3RvbU1lcmdlKSB7XG5cdFx0cmV0dXJuIGRlZXBtZXJnZVxuXHR9XG5cdHZhciBjdXN0b21NZXJnZSA9IG9wdGlvbnMuY3VzdG9tTWVyZ2Uoa2V5KTtcblx0cmV0dXJuIHR5cGVvZiBjdXN0b21NZXJnZSA9PT0gJ2Z1bmN0aW9uJyA/IGN1c3RvbU1lcmdlIDogZGVlcG1lcmdlXG59XG5cbmZ1bmN0aW9uIGdldEVudW1lcmFibGVPd25Qcm9wZXJ0eVN5bWJvbHModGFyZ2V0KSB7XG5cdHJldHVybiBPYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzXG5cdFx0PyBPYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzKHRhcmdldCkuZmlsdGVyKGZ1bmN0aW9uKHN5bWJvbCkge1xuXHRcdFx0cmV0dXJuIE9iamVjdC5wcm9wZXJ0eUlzRW51bWVyYWJsZS5jYWxsKHRhcmdldCwgc3ltYm9sKVxuXHRcdH0pXG5cdFx0OiBbXVxufVxuXG5mdW5jdGlvbiBnZXRLZXlzKHRhcmdldCkge1xuXHRyZXR1cm4gT2JqZWN0LmtleXModGFyZ2V0KS5jb25jYXQoZ2V0RW51bWVyYWJsZU93blByb3BlcnR5U3ltYm9scyh0YXJnZXQpKVxufVxuXG5mdW5jdGlvbiBwcm9wZXJ0eUlzT25PYmplY3Qob2JqZWN0LCBwcm9wZXJ0eSkge1xuXHR0cnkge1xuXHRcdHJldHVybiBwcm9wZXJ0eSBpbiBvYmplY3Rcblx0fSBjYXRjaChfKSB7XG5cdFx0cmV0dXJuIGZhbHNlXG5cdH1cbn1cblxuLy8gUHJvdGVjdHMgZnJvbSBwcm90b3R5cGUgcG9pc29uaW5nIGFuZCB1bmV4cGVjdGVkIG1lcmdpbmcgdXAgdGhlIHByb3RvdHlwZSBjaGFpbi5cbmZ1bmN0aW9uIHByb3BlcnR5SXNVbnNhZmUodGFyZ2V0LCBrZXkpIHtcblx0cmV0dXJuIHByb3BlcnR5SXNPbk9iamVjdCh0YXJnZXQsIGtleSkgLy8gUHJvcGVydGllcyBhcmUgc2FmZSB0byBtZXJnZSBpZiB0aGV5IGRvbid0IGV4aXN0IGluIHRoZSB0YXJnZXQgeWV0LFxuXHRcdCYmICEoT2JqZWN0Lmhhc093blByb3BlcnR5LmNhbGwodGFyZ2V0LCBrZXkpIC8vIHVuc2FmZSBpZiB0aGV5IGV4aXN0IHVwIHRoZSBwcm90b3R5cGUgY2hhaW4sXG5cdFx0XHQmJiBPYmplY3QucHJvcGVydHlJc0VudW1lcmFibGUuY2FsbCh0YXJnZXQsIGtleSkpIC8vIGFuZCBhbHNvIHVuc2FmZSBpZiB0aGV5J3JlIG5vbmVudW1lcmFibGUuXG59XG5cbmZ1bmN0aW9uIG1lcmdlT2JqZWN0KHRhcmdldCwgc291cmNlLCBvcHRpb25zKSB7XG5cdHZhciBkZXN0aW5hdGlvbiA9IHt9O1xuXHRpZiAob3B0aW9ucy5pc01lcmdlYWJsZU9iamVjdCh0YXJnZXQpKSB7XG5cdFx0Z2V0S2V5cyh0YXJnZXQpLmZvckVhY2goZnVuY3Rpb24oa2V5KSB7XG5cdFx0XHRkZXN0aW5hdGlvbltrZXldID0gY2xvbmVVbmxlc3NPdGhlcndpc2VTcGVjaWZpZWQodGFyZ2V0W2tleV0sIG9wdGlvbnMpO1xuXHRcdH0pO1xuXHR9XG5cdGdldEtleXMoc291cmNlKS5mb3JFYWNoKGZ1bmN0aW9uKGtleSkge1xuXHRcdGlmIChwcm9wZXJ0eUlzVW5zYWZlKHRhcmdldCwga2V5KSkge1xuXHRcdFx0cmV0dXJuXG5cdFx0fVxuXG5cdFx0aWYgKHByb3BlcnR5SXNPbk9iamVjdCh0YXJnZXQsIGtleSkgJiYgb3B0aW9ucy5pc01lcmdlYWJsZU9iamVjdChzb3VyY2Vba2V5XSkpIHtcblx0XHRcdGRlc3RpbmF0aW9uW2tleV0gPSBnZXRNZXJnZUZ1bmN0aW9uKGtleSwgb3B0aW9ucykodGFyZ2V0W2tleV0sIHNvdXJjZVtrZXldLCBvcHRpb25zKTtcblx0XHR9IGVsc2Uge1xuXHRcdFx0ZGVzdGluYXRpb25ba2V5XSA9IGNsb25lVW5sZXNzT3RoZXJ3aXNlU3BlY2lmaWVkKHNvdXJjZVtrZXldLCBvcHRpb25zKTtcblx0XHR9XG5cdH0pO1xuXHRyZXR1cm4gZGVzdGluYXRpb25cbn1cblxuZnVuY3Rpb24gZGVlcG1lcmdlKHRhcmdldCwgc291cmNlLCBvcHRpb25zKSB7XG5cdG9wdGlvbnMgPSBvcHRpb25zIHx8IHt9O1xuXHRvcHRpb25zLmFycmF5TWVyZ2UgPSBvcHRpb25zLmFycmF5TWVyZ2UgfHwgZGVmYXVsdEFycmF5TWVyZ2U7XG5cdG9wdGlvbnMuaXNNZXJnZWFibGVPYmplY3QgPSBvcHRpb25zLmlzTWVyZ2VhYmxlT2JqZWN0IHx8IGlzTWVyZ2VhYmxlT2JqZWN0O1xuXHQvLyBjbG9uZVVubGVzc090aGVyd2lzZVNwZWNpZmllZCBpcyBhZGRlZCB0byBgb3B0aW9uc2Agc28gdGhhdCBjdXN0b20gYXJyYXlNZXJnZSgpXG5cdC8vIGltcGxlbWVudGF0aW9ucyBjYW4gdXNlIGl0LiBUaGUgY2FsbGVyIG1heSBub3QgcmVwbGFjZSBpdC5cblx0b3B0aW9ucy5jbG9uZVVubGVzc090aGVyd2lzZVNwZWNpZmllZCA9IGNsb25lVW5sZXNzT3RoZXJ3aXNlU3BlY2lmaWVkO1xuXG5cdHZhciBzb3VyY2VJc0FycmF5ID0gQXJyYXkuaXNBcnJheShzb3VyY2UpO1xuXHR2YXIgdGFyZ2V0SXNBcnJheSA9IEFycmF5LmlzQXJyYXkodGFyZ2V0KTtcblx0dmFyIHNvdXJjZUFuZFRhcmdldFR5cGVzTWF0Y2ggPSBzb3VyY2VJc0FycmF5ID09PSB0YXJnZXRJc0FycmF5O1xuXG5cdGlmICghc291cmNlQW5kVGFyZ2V0VHlwZXNNYXRjaCkge1xuXHRcdHJldHVybiBjbG9uZVVubGVzc090aGVyd2lzZVNwZWNpZmllZChzb3VyY2UsIG9wdGlvbnMpXG5cdH0gZWxzZSBpZiAoc291cmNlSXNBcnJheSkge1xuXHRcdHJldHVybiBvcHRpb25zLmFycmF5TWVyZ2UodGFyZ2V0LCBzb3VyY2UsIG9wdGlvbnMpXG5cdH0gZWxzZSB7XG5cdFx0cmV0dXJuIG1lcmdlT2JqZWN0KHRhcmdldCwgc291cmNlLCBvcHRpb25zKVxuXHR9XG59XG5cbmRlZXBtZXJnZS5hbGwgPSBmdW5jdGlvbiBkZWVwbWVyZ2VBbGwoYXJyYXksIG9wdGlvbnMpIHtcblx0aWYgKCFBcnJheS5pc0FycmF5KGFycmF5KSkge1xuXHRcdHRocm93IG5ldyBFcnJvcignZmlyc3QgYXJndW1lbnQgc2hvdWxkIGJlIGFuIGFycmF5Jylcblx0fVxuXG5cdHJldHVybiBhcnJheS5yZWR1Y2UoZnVuY3Rpb24ocHJldiwgbmV4dCkge1xuXHRcdHJldHVybiBkZWVwbWVyZ2UocHJldiwgbmV4dCwgb3B0aW9ucylcblx0fSwge30pXG59O1xuXG52YXIgZGVlcG1lcmdlXzEgPSBkZWVwbWVyZ2U7XG5cbm1vZHVsZS5leHBvcnRzID0gZGVlcG1lcmdlXzE7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/deepmerge/dist/cjs.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next/dist/build/polyfills/process.js":
/*!***********************************************************!*\
  !*** ./node_modules/next/dist/build/polyfills/process.js ***!
  \***********************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nvar _global_process, _global_process1;\nmodule.exports = ((_global_process = __webpack_require__.g.process) == null ? void 0 : _global_process.env) && typeof ((_global_process1 = __webpack_require__.g.process) == null ? void 0 : _global_process1.env) === \"object\" ? __webpack_require__.g.process : __webpack_require__(/*! next/dist/compiled/process */ \"(app-pages-browser)/./node_modules/next/dist/compiled/process/browser.js\");\n\n//# sourceMappingURL=process.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvYnVpbGQvcG9seWZpbGxzL3Byb2Nlc3MuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBLHFDQUFxQyxxQkFBTSxpRkFBaUYscUJBQU0sa0VBQWtFLHFCQUFNLFdBQVcsbUJBQU8sQ0FBQyw0R0FBNEI7O0FBRXpQIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvYnVpbGQvcG9seWZpbGxzL3Byb2Nlc3MuanM/NzdiNCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbnZhciBfZ2xvYmFsX3Byb2Nlc3MsIF9nbG9iYWxfcHJvY2VzczE7XG5tb2R1bGUuZXhwb3J0cyA9ICgoX2dsb2JhbF9wcm9jZXNzID0gZ2xvYmFsLnByb2Nlc3MpID09IG51bGwgPyB2b2lkIDAgOiBfZ2xvYmFsX3Byb2Nlc3MuZW52KSAmJiB0eXBlb2YgKChfZ2xvYmFsX3Byb2Nlc3MxID0gZ2xvYmFsLnByb2Nlc3MpID09IG51bGwgPyB2b2lkIDAgOiBfZ2xvYmFsX3Byb2Nlc3MxLmVudikgPT09IFwib2JqZWN0XCIgPyBnbG9iYWwucHJvY2VzcyA6IHJlcXVpcmUoXCJuZXh0L2Rpc3QvY29tcGlsZWQvcHJvY2Vzc1wiKTtcblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9cHJvY2Vzcy5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/build/polyfills/process.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next/dist/compiled/process/browser.js":
/*!************************************************************!*\
  !*** ./node_modules/next/dist/compiled/process/browser.js ***!
  \************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("var __dirname = \"/\";\n(function(){var e={229:function(e){var t=e.exports={};var r;var n;function defaultSetTimout(){throw new Error(\"setTimeout has not been defined\")}function defaultClearTimeout(){throw new Error(\"clearTimeout has not been defined\")}(function(){try{if(typeof setTimeout===\"function\"){r=setTimeout}else{r=defaultSetTimout}}catch(e){r=defaultSetTimout}try{if(typeof clearTimeout===\"function\"){n=clearTimeout}else{n=defaultClearTimeout}}catch(e){n=defaultClearTimeout}})();function runTimeout(e){if(r===setTimeout){return setTimeout(e,0)}if((r===defaultSetTimout||!r)&&setTimeout){r=setTimeout;return setTimeout(e,0)}try{return r(e,0)}catch(t){try{return r.call(null,e,0)}catch(t){return r.call(this,e,0)}}}function runClearTimeout(e){if(n===clearTimeout){return clearTimeout(e)}if((n===defaultClearTimeout||!n)&&clearTimeout){n=clearTimeout;return clearTimeout(e)}try{return n(e)}catch(t){try{return n.call(null,e)}catch(t){return n.call(this,e)}}}var i=[];var o=false;var u;var a=-1;function cleanUpNextTick(){if(!o||!u){return}o=false;if(u.length){i=u.concat(i)}else{a=-1}if(i.length){drainQueue()}}function drainQueue(){if(o){return}var e=runTimeout(cleanUpNextTick);o=true;var t=i.length;while(t){u=i;i=[];while(++a<t){if(u){u[a].run()}}a=-1;t=i.length}u=null;o=false;runClearTimeout(e)}t.nextTick=function(e){var t=new Array(arguments.length-1);if(arguments.length>1){for(var r=1;r<arguments.length;r++){t[r-1]=arguments[r]}}i.push(new Item(e,t));if(i.length===1&&!o){runTimeout(drainQueue)}};function Item(e,t){this.fun=e;this.array=t}Item.prototype.run=function(){this.fun.apply(null,this.array)};t.title=\"browser\";t.browser=true;t.env={};t.argv=[];t.version=\"\";t.versions={};function noop(){}t.on=noop;t.addListener=noop;t.once=noop;t.off=noop;t.removeListener=noop;t.removeAllListeners=noop;t.emit=noop;t.prependListener=noop;t.prependOnceListener=noop;t.listeners=function(e){return[]};t.binding=function(e){throw new Error(\"process.binding is not supported\")};t.cwd=function(){return\"/\"};t.chdir=function(e){throw new Error(\"process.chdir is not supported\")};t.umask=function(){return 0}}};var t={};function __nccwpck_require__(r){var n=t[r];if(n!==undefined){return n.exports}var i=t[r]={exports:{}};var o=true;try{e[r](i,i.exports,__nccwpck_require__);o=false}finally{if(o)delete t[r]}return i.exports}if(typeof __nccwpck_require__!==\"undefined\")__nccwpck_require__.ab=__dirname+\"/\";var r=__nccwpck_require__(229);module.exports=r})();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvY29tcGlsZWQvcHJvY2Vzcy9icm93c2VyLmpzIiwibWFwcGluZ3MiOiI7QUFBQSxZQUFZLE9BQU8sZ0JBQWdCLG1CQUFtQixNQUFNLE1BQU0sNEJBQTRCLG1EQUFtRCwrQkFBK0IscURBQXFELFlBQVksSUFBSSxtQ0FBbUMsYUFBYSxLQUFLLG9CQUFvQixTQUFTLG1CQUFtQixJQUFJLHFDQUFxQyxlQUFlLEtBQUssdUJBQXVCLFNBQVMsdUJBQXVCLElBQUksdUJBQXVCLG1CQUFtQix1QkFBdUIsMkNBQTJDLGFBQWEsdUJBQXVCLElBQUksY0FBYyxTQUFTLElBQUksd0JBQXdCLFNBQVMsMEJBQTBCLDRCQUE0QixxQkFBcUIsdUJBQXVCLGdEQUFnRCxlQUFlLHVCQUF1QixJQUFJLFlBQVksU0FBUyxJQUFJLHNCQUFzQixTQUFTLHdCQUF3QixTQUFTLFlBQVksTUFBTSxTQUFTLDJCQUEyQixXQUFXLE9BQU8sUUFBUSxhQUFhLGNBQWMsS0FBSyxLQUFLLGFBQWEsY0FBYyxzQkFBc0IsTUFBTSxPQUFPLGtDQUFrQyxPQUFPLGVBQWUsU0FBUyxJQUFJLEtBQUssYUFBYSxNQUFNLFlBQVksS0FBSyxXQUFXLE9BQU8sUUFBUSxtQkFBbUIsdUJBQXVCLG9DQUFvQyx1QkFBdUIsWUFBWSxtQkFBbUIsS0FBSyxxQkFBcUIsc0JBQXNCLHFCQUFxQix5QkFBeUIsbUJBQW1CLFdBQVcsYUFBYSw4QkFBOEIsaUNBQWlDLGtCQUFrQixlQUFlLFNBQVMsVUFBVSxhQUFhLGNBQWMsaUJBQWlCLFVBQVUsbUJBQW1CLFlBQVksV0FBVyxzQkFBc0IsMEJBQTBCLFlBQVksdUJBQXVCLDJCQUEyQix3QkFBd0IsVUFBVSxzQkFBc0IscURBQXFELGlCQUFpQixXQUFXLG9CQUFvQixtREFBbUQsbUJBQW1CLFlBQVksU0FBUyxnQ0FBZ0MsV0FBVyxrQkFBa0IsaUJBQWlCLFlBQVksWUFBWSxXQUFXLElBQUksc0NBQXNDLFFBQVEsUUFBUSxpQkFBaUIsaUJBQWlCLG1FQUFtRSxTQUFTLEtBQUssK0JBQStCLGlCQUFpQiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2NvbXBpbGVkL3Byb2Nlc3MvYnJvd3Nlci5qcz8xZDQzIl0sInNvdXJjZXNDb250ZW50IjpbIihmdW5jdGlvbigpe3ZhciBlPXsyMjk6ZnVuY3Rpb24oZSl7dmFyIHQ9ZS5leHBvcnRzPXt9O3ZhciByO3ZhciBuO2Z1bmN0aW9uIGRlZmF1bHRTZXRUaW1vdXQoKXt0aHJvdyBuZXcgRXJyb3IoXCJzZXRUaW1lb3V0IGhhcyBub3QgYmVlbiBkZWZpbmVkXCIpfWZ1bmN0aW9uIGRlZmF1bHRDbGVhclRpbWVvdXQoKXt0aHJvdyBuZXcgRXJyb3IoXCJjbGVhclRpbWVvdXQgaGFzIG5vdCBiZWVuIGRlZmluZWRcIil9KGZ1bmN0aW9uKCl7dHJ5e2lmKHR5cGVvZiBzZXRUaW1lb3V0PT09XCJmdW5jdGlvblwiKXtyPXNldFRpbWVvdXR9ZWxzZXtyPWRlZmF1bHRTZXRUaW1vdXR9fWNhdGNoKGUpe3I9ZGVmYXVsdFNldFRpbW91dH10cnl7aWYodHlwZW9mIGNsZWFyVGltZW91dD09PVwiZnVuY3Rpb25cIil7bj1jbGVhclRpbWVvdXR9ZWxzZXtuPWRlZmF1bHRDbGVhclRpbWVvdXR9fWNhdGNoKGUpe249ZGVmYXVsdENsZWFyVGltZW91dH19KSgpO2Z1bmN0aW9uIHJ1blRpbWVvdXQoZSl7aWYocj09PXNldFRpbWVvdXQpe3JldHVybiBzZXRUaW1lb3V0KGUsMCl9aWYoKHI9PT1kZWZhdWx0U2V0VGltb3V0fHwhcikmJnNldFRpbWVvdXQpe3I9c2V0VGltZW91dDtyZXR1cm4gc2V0VGltZW91dChlLDApfXRyeXtyZXR1cm4gcihlLDApfWNhdGNoKHQpe3RyeXtyZXR1cm4gci5jYWxsKG51bGwsZSwwKX1jYXRjaCh0KXtyZXR1cm4gci5jYWxsKHRoaXMsZSwwKX19fWZ1bmN0aW9uIHJ1bkNsZWFyVGltZW91dChlKXtpZihuPT09Y2xlYXJUaW1lb3V0KXtyZXR1cm4gY2xlYXJUaW1lb3V0KGUpfWlmKChuPT09ZGVmYXVsdENsZWFyVGltZW91dHx8IW4pJiZjbGVhclRpbWVvdXQpe249Y2xlYXJUaW1lb3V0O3JldHVybiBjbGVhclRpbWVvdXQoZSl9dHJ5e3JldHVybiBuKGUpfWNhdGNoKHQpe3RyeXtyZXR1cm4gbi5jYWxsKG51bGwsZSl9Y2F0Y2godCl7cmV0dXJuIG4uY2FsbCh0aGlzLGUpfX19dmFyIGk9W107dmFyIG89ZmFsc2U7dmFyIHU7dmFyIGE9LTE7ZnVuY3Rpb24gY2xlYW5VcE5leHRUaWNrKCl7aWYoIW98fCF1KXtyZXR1cm59bz1mYWxzZTtpZih1Lmxlbmd0aCl7aT11LmNvbmNhdChpKX1lbHNle2E9LTF9aWYoaS5sZW5ndGgpe2RyYWluUXVldWUoKX19ZnVuY3Rpb24gZHJhaW5RdWV1ZSgpe2lmKG8pe3JldHVybn12YXIgZT1ydW5UaW1lb3V0KGNsZWFuVXBOZXh0VGljayk7bz10cnVlO3ZhciB0PWkubGVuZ3RoO3doaWxlKHQpe3U9aTtpPVtdO3doaWxlKCsrYTx0KXtpZih1KXt1W2FdLnJ1bigpfX1hPS0xO3Q9aS5sZW5ndGh9dT1udWxsO289ZmFsc2U7cnVuQ2xlYXJUaW1lb3V0KGUpfXQubmV4dFRpY2s9ZnVuY3Rpb24oZSl7dmFyIHQ9bmV3IEFycmF5KGFyZ3VtZW50cy5sZW5ndGgtMSk7aWYoYXJndW1lbnRzLmxlbmd0aD4xKXtmb3IodmFyIHI9MTtyPGFyZ3VtZW50cy5sZW5ndGg7cisrKXt0W3ItMV09YXJndW1lbnRzW3JdfX1pLnB1c2gobmV3IEl0ZW0oZSx0KSk7aWYoaS5sZW5ndGg9PT0xJiYhbyl7cnVuVGltZW91dChkcmFpblF1ZXVlKX19O2Z1bmN0aW9uIEl0ZW0oZSx0KXt0aGlzLmZ1bj1lO3RoaXMuYXJyYXk9dH1JdGVtLnByb3RvdHlwZS5ydW49ZnVuY3Rpb24oKXt0aGlzLmZ1bi5hcHBseShudWxsLHRoaXMuYXJyYXkpfTt0LnRpdGxlPVwiYnJvd3NlclwiO3QuYnJvd3Nlcj10cnVlO3QuZW52PXt9O3QuYXJndj1bXTt0LnZlcnNpb249XCJcIjt0LnZlcnNpb25zPXt9O2Z1bmN0aW9uIG5vb3AoKXt9dC5vbj1ub29wO3QuYWRkTGlzdGVuZXI9bm9vcDt0Lm9uY2U9bm9vcDt0Lm9mZj1ub29wO3QucmVtb3ZlTGlzdGVuZXI9bm9vcDt0LnJlbW92ZUFsbExpc3RlbmVycz1ub29wO3QuZW1pdD1ub29wO3QucHJlcGVuZExpc3RlbmVyPW5vb3A7dC5wcmVwZW5kT25jZUxpc3RlbmVyPW5vb3A7dC5saXN0ZW5lcnM9ZnVuY3Rpb24oZSl7cmV0dXJuW119O3QuYmluZGluZz1mdW5jdGlvbihlKXt0aHJvdyBuZXcgRXJyb3IoXCJwcm9jZXNzLmJpbmRpbmcgaXMgbm90IHN1cHBvcnRlZFwiKX07dC5jd2Q9ZnVuY3Rpb24oKXtyZXR1cm5cIi9cIn07dC5jaGRpcj1mdW5jdGlvbihlKXt0aHJvdyBuZXcgRXJyb3IoXCJwcm9jZXNzLmNoZGlyIGlzIG5vdCBzdXBwb3J0ZWRcIil9O3QudW1hc2s9ZnVuY3Rpb24oKXtyZXR1cm4gMH19fTt2YXIgdD17fTtmdW5jdGlvbiBfX25jY3dwY2tfcmVxdWlyZV9fKHIpe3ZhciBuPXRbcl07aWYobiE9PXVuZGVmaW5lZCl7cmV0dXJuIG4uZXhwb3J0c312YXIgaT10W3JdPXtleHBvcnRzOnt9fTt2YXIgbz10cnVlO3RyeXtlW3JdKGksaS5leHBvcnRzLF9fbmNjd3Bja19yZXF1aXJlX18pO289ZmFsc2V9ZmluYWxseXtpZihvKWRlbGV0ZSB0W3JdfXJldHVybiBpLmV4cG9ydHN9aWYodHlwZW9mIF9fbmNjd3Bja19yZXF1aXJlX18hPT1cInVuZGVmaW5lZFwiKV9fbmNjd3Bja19yZXF1aXJlX18uYWI9X19kaXJuYW1lK1wiL1wiO3ZhciByPV9fbmNjd3Bja19yZXF1aXJlX18oMjI5KTttb2R1bGUuZXhwb3J0cz1yfSkoKTsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/compiled/process/browser.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/tweetnacl-util/nacl-util.js":
/*!**************************************************!*\
  !*** ./node_modules/tweetnacl-util/nacl-util.js ***!
  \**************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("/* provided dependency */ var Buffer = __webpack_require__(/*! buffer */ \"?da34\")[\"Buffer\"];\n// Written in 2014-2016 by Dmitry Chestnykh and Devi Mandiri.\n// Public domain.\n(function(root, f) {\n  'use strict';\n  if ( true && module.exports) module.exports = f();\n  else if (root.nacl) root.nacl.util = f();\n  else {\n    root.nacl = {};\n    root.nacl.util = f();\n  }\n}(this, function() {\n  'use strict';\n\n  var util = {};\n\n  function validateBase64(s) {\n    if (!(/^(?:[A-Za-z0-9+\\/]{2}[A-Za-z0-9+\\/]{2})*(?:[A-Za-z0-9+\\/]{2}==|[A-Za-z0-9+\\/]{3}=)?$/.test(s))) {\n      throw new TypeError('invalid encoding');\n    }\n  }\n\n  util.decodeUTF8 = function(s) {\n    if (typeof s !== 'string') throw new TypeError('expected string');\n    var i, d = unescape(encodeURIComponent(s)), b = new Uint8Array(d.length);\n    for (i = 0; i < d.length; i++) b[i] = d.charCodeAt(i);\n    return b;\n  };\n\n  util.encodeUTF8 = function(arr) {\n    var i, s = [];\n    for (i = 0; i < arr.length; i++) s.push(String.fromCharCode(arr[i]));\n    return decodeURIComponent(escape(s.join('')));\n  };\n\n  if (typeof atob === 'undefined') {\n    // Node.js\n\n    if (typeof Buffer.from !== 'undefined') {\n       // Node v6 and later\n      util.encodeBase64 = function (arr) { // v6 and later\n          return Buffer.from(arr).toString('base64');\n      };\n\n      util.decodeBase64 = function (s) {\n        validateBase64(s);\n        return new Uint8Array(Array.prototype.slice.call(Buffer.from(s, 'base64'), 0));\n      };\n\n    } else {\n      // Node earlier than v6\n      util.encodeBase64 = function (arr) { // v6 and later\n        return (new Buffer(arr)).toString('base64');\n      };\n\n      util.decodeBase64 = function(s) {\n        validateBase64(s);\n        return new Uint8Array(Array.prototype.slice.call(new Buffer(s, 'base64'), 0));\n      };\n    }\n\n  } else {\n    // Browsers\n\n    util.encodeBase64 = function(arr) {\n      var i, s = [], len = arr.length;\n      for (i = 0; i < len; i++) s.push(String.fromCharCode(arr[i]));\n      return btoa(s.join(''));\n    };\n\n    util.decodeBase64 = function(s) {\n      validateBase64(s);\n      var i, d = atob(s), b = new Uint8Array(d.length);\n      for (i = 0; i < d.length; i++) b[i] = d.charCodeAt(i);\n      return b;\n    };\n\n  }\n\n  return util;\n\n}));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy90d2VldG5hY2wtdXRpbC9uYWNsLXV0aWwuanMiLCJtYXBwaW5ncyI6IjtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsTUFBTSxLQUE2QjtBQUNuQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQztBQUNEOztBQUVBOztBQUVBO0FBQ0EsOEJBQThCLEVBQUUsZUFBZSxFQUFFLG9CQUFvQixFQUFFLGtCQUFrQixFQUFFO0FBQzNGO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxnQkFBZ0IsY0FBYztBQUM5QjtBQUNBOztBQUVBO0FBQ0E7QUFDQSxnQkFBZ0IsZ0JBQWdCO0FBQ2hDO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQSxlQUFlLE1BQU07QUFDckI7QUFDQSwyQ0FBMkM7QUFDM0MsaUJBQWlCLE1BQU07QUFDdkI7O0FBRUE7QUFDQTtBQUNBLHlEQUF5RCxNQUFNO0FBQy9EOztBQUVBLE1BQU07QUFDTjtBQUNBLDJDQUEyQztBQUMzQyxvQkFBb0IsTUFBTTtBQUMxQjs7QUFFQTtBQUNBO0FBQ0EsNkRBQTZELE1BQU07QUFDbkU7QUFDQTs7QUFFQSxJQUFJO0FBQ0o7O0FBRUE7QUFDQTtBQUNBLGtCQUFrQixTQUFTO0FBQzNCO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0Esa0JBQWtCLGNBQWM7QUFDaEM7QUFDQTs7QUFFQTs7QUFFQTs7QUFFQSxDQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy90d2VldG5hY2wtdXRpbC9uYWNsLXV0aWwuanM/ODk4OCJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBXcml0dGVuIGluIDIwMTQtMjAxNiBieSBEbWl0cnkgQ2hlc3RueWtoIGFuZCBEZXZpIE1hbmRpcmkuXG4vLyBQdWJsaWMgZG9tYWluLlxuKGZ1bmN0aW9uKHJvb3QsIGYpIHtcbiAgJ3VzZSBzdHJpY3QnO1xuICBpZiAodHlwZW9mIG1vZHVsZSAhPT0gJ3VuZGVmaW5lZCcgJiYgbW9kdWxlLmV4cG9ydHMpIG1vZHVsZS5leHBvcnRzID0gZigpO1xuICBlbHNlIGlmIChyb290Lm5hY2wpIHJvb3QubmFjbC51dGlsID0gZigpO1xuICBlbHNlIHtcbiAgICByb290Lm5hY2wgPSB7fTtcbiAgICByb290Lm5hY2wudXRpbCA9IGYoKTtcbiAgfVxufSh0aGlzLCBmdW5jdGlvbigpIHtcbiAgJ3VzZSBzdHJpY3QnO1xuXG4gIHZhciB1dGlsID0ge307XG5cbiAgZnVuY3Rpb24gdmFsaWRhdGVCYXNlNjQocykge1xuICAgIGlmICghKC9eKD86W0EtWmEtejAtOStcXC9dezJ9W0EtWmEtejAtOStcXC9dezJ9KSooPzpbQS1aYS16MC05K1xcL117Mn09PXxbQS1aYS16MC05K1xcL117M309KT8kLy50ZXN0KHMpKSkge1xuICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcignaW52YWxpZCBlbmNvZGluZycpO1xuICAgIH1cbiAgfVxuXG4gIHV0aWwuZGVjb2RlVVRGOCA9IGZ1bmN0aW9uKHMpIHtcbiAgICBpZiAodHlwZW9mIHMgIT09ICdzdHJpbmcnKSB0aHJvdyBuZXcgVHlwZUVycm9yKCdleHBlY3RlZCBzdHJpbmcnKTtcbiAgICB2YXIgaSwgZCA9IHVuZXNjYXBlKGVuY29kZVVSSUNvbXBvbmVudChzKSksIGIgPSBuZXcgVWludDhBcnJheShkLmxlbmd0aCk7XG4gICAgZm9yIChpID0gMDsgaSA8IGQubGVuZ3RoOyBpKyspIGJbaV0gPSBkLmNoYXJDb2RlQXQoaSk7XG4gICAgcmV0dXJuIGI7XG4gIH07XG5cbiAgdXRpbC5lbmNvZGVVVEY4ID0gZnVuY3Rpb24oYXJyKSB7XG4gICAgdmFyIGksIHMgPSBbXTtcbiAgICBmb3IgKGkgPSAwOyBpIDwgYXJyLmxlbmd0aDsgaSsrKSBzLnB1c2goU3RyaW5nLmZyb21DaGFyQ29kZShhcnJbaV0pKTtcbiAgICByZXR1cm4gZGVjb2RlVVJJQ29tcG9uZW50KGVzY2FwZShzLmpvaW4oJycpKSk7XG4gIH07XG5cbiAgaWYgKHR5cGVvZiBhdG9iID09PSAndW5kZWZpbmVkJykge1xuICAgIC8vIE5vZGUuanNcblxuICAgIGlmICh0eXBlb2YgQnVmZmVyLmZyb20gIT09ICd1bmRlZmluZWQnKSB7XG4gICAgICAgLy8gTm9kZSB2NiBhbmQgbGF0ZXJcbiAgICAgIHV0aWwuZW5jb2RlQmFzZTY0ID0gZnVuY3Rpb24gKGFycikgeyAvLyB2NiBhbmQgbGF0ZXJcbiAgICAgICAgICByZXR1cm4gQnVmZmVyLmZyb20oYXJyKS50b1N0cmluZygnYmFzZTY0Jyk7XG4gICAgICB9O1xuXG4gICAgICB1dGlsLmRlY29kZUJhc2U2NCA9IGZ1bmN0aW9uIChzKSB7XG4gICAgICAgIHZhbGlkYXRlQmFzZTY0KHMpO1xuICAgICAgICByZXR1cm4gbmV3IFVpbnQ4QXJyYXkoQXJyYXkucHJvdG90eXBlLnNsaWNlLmNhbGwoQnVmZmVyLmZyb20ocywgJ2Jhc2U2NCcpLCAwKSk7XG4gICAgICB9O1xuXG4gICAgfSBlbHNlIHtcbiAgICAgIC8vIE5vZGUgZWFybGllciB0aGFuIHY2XG4gICAgICB1dGlsLmVuY29kZUJhc2U2NCA9IGZ1bmN0aW9uIChhcnIpIHsgLy8gdjYgYW5kIGxhdGVyXG4gICAgICAgIHJldHVybiAobmV3IEJ1ZmZlcihhcnIpKS50b1N0cmluZygnYmFzZTY0Jyk7XG4gICAgICB9O1xuXG4gICAgICB1dGlsLmRlY29kZUJhc2U2NCA9IGZ1bmN0aW9uKHMpIHtcbiAgICAgICAgdmFsaWRhdGVCYXNlNjQocyk7XG4gICAgICAgIHJldHVybiBuZXcgVWludDhBcnJheShBcnJheS5wcm90b3R5cGUuc2xpY2UuY2FsbChuZXcgQnVmZmVyKHMsICdiYXNlNjQnKSwgMCkpO1xuICAgICAgfTtcbiAgICB9XG5cbiAgfSBlbHNlIHtcbiAgICAvLyBCcm93c2Vyc1xuXG4gICAgdXRpbC5lbmNvZGVCYXNlNjQgPSBmdW5jdGlvbihhcnIpIHtcbiAgICAgIHZhciBpLCBzID0gW10sIGxlbiA9IGFyci5sZW5ndGg7XG4gICAgICBmb3IgKGkgPSAwOyBpIDwgbGVuOyBpKyspIHMucHVzaChTdHJpbmcuZnJvbUNoYXJDb2RlKGFycltpXSkpO1xuICAgICAgcmV0dXJuIGJ0b2Eocy5qb2luKCcnKSk7XG4gICAgfTtcblxuICAgIHV0aWwuZGVjb2RlQmFzZTY0ID0gZnVuY3Rpb24ocykge1xuICAgICAgdmFsaWRhdGVCYXNlNjQocyk7XG4gICAgICB2YXIgaSwgZCA9IGF0b2IocyksIGIgPSBuZXcgVWludDhBcnJheShkLmxlbmd0aCk7XG4gICAgICBmb3IgKGkgPSAwOyBpIDwgZC5sZW5ndGg7IGkrKykgYltpXSA9IGQuY2hhckNvZGVBdChpKTtcbiAgICAgIHJldHVybiBiO1xuICAgIH07XG5cbiAgfVxuXG4gIHJldHVybiB1dGlsO1xuXG59KSk7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/tweetnacl-util/nacl-util.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/tweetnacl/nacl-fast.js":
/*!*********************************************!*\
  !*** ./node_modules/tweetnacl/nacl-fast.js ***!
  \*********************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("(function(nacl) {\n'use strict';\n\n// Ported in 2014 by Dmitry Chestnykh and Devi Mandiri.\n// Public domain.\n//\n// Implementation derived from TweetNaCl version 20140427.\n// See for details: http://tweetnacl.cr.yp.to/\n\nvar gf = function(init) {\n  var i, r = new Float64Array(16);\n  if (init) for (i = 0; i < init.length; i++) r[i] = init[i];\n  return r;\n};\n\n//  Pluggable, initialized in high-level API below.\nvar randombytes = function(/* x, n */) { throw new Error('no PRNG'); };\n\nvar _0 = new Uint8Array(16);\nvar _9 = new Uint8Array(32); _9[0] = 9;\n\nvar gf0 = gf(),\n    gf1 = gf([1]),\n    _121665 = gf([0xdb41, 1]),\n    D = gf([0x78a3, 0x1359, 0x4dca, 0x75eb, 0xd8ab, 0x4141, 0x0a4d, 0x0070, 0xe898, 0x7779, 0x4079, 0x8cc7, 0xfe73, 0x2b6f, 0x6cee, 0x5203]),\n    D2 = gf([0xf159, 0x26b2, 0x9b94, 0xebd6, 0xb156, 0x8283, 0x149a, 0x00e0, 0xd130, 0xeef3, 0x80f2, 0x198e, 0xfce7, 0x56df, 0xd9dc, 0x2406]),\n    X = gf([0xd51a, 0x8f25, 0x2d60, 0xc956, 0xa7b2, 0x9525, 0xc760, 0x692c, 0xdc5c, 0xfdd6, 0xe231, 0xc0a4, 0x53fe, 0xcd6e, 0x36d3, 0x2169]),\n    Y = gf([0x6658, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666]),\n    I = gf([0xa0b0, 0x4a0e, 0x1b27, 0xc4ee, 0xe478, 0xad2f, 0x1806, 0x2f43, 0xd7a7, 0x3dfb, 0x0099, 0x2b4d, 0xdf0b, 0x4fc1, 0x2480, 0x2b83]);\n\nfunction ts64(x, i, h, l) {\n  x[i]   = (h >> 24) & 0xff;\n  x[i+1] = (h >> 16) & 0xff;\n  x[i+2] = (h >>  8) & 0xff;\n  x[i+3] = h & 0xff;\n  x[i+4] = (l >> 24)  & 0xff;\n  x[i+5] = (l >> 16)  & 0xff;\n  x[i+6] = (l >>  8)  & 0xff;\n  x[i+7] = l & 0xff;\n}\n\nfunction vn(x, xi, y, yi, n) {\n  var i,d = 0;\n  for (i = 0; i < n; i++) d |= x[xi+i]^y[yi+i];\n  return (1 & ((d - 1) >>> 8)) - 1;\n}\n\nfunction crypto_verify_16(x, xi, y, yi) {\n  return vn(x,xi,y,yi,16);\n}\n\nfunction crypto_verify_32(x, xi, y, yi) {\n  return vn(x,xi,y,yi,32);\n}\n\nfunction core_salsa20(o, p, k, c) {\n  var j0  = c[ 0] & 0xff | (c[ 1] & 0xff)<<8 | (c[ 2] & 0xff)<<16 | (c[ 3] & 0xff)<<24,\n      j1  = k[ 0] & 0xff | (k[ 1] & 0xff)<<8 | (k[ 2] & 0xff)<<16 | (k[ 3] & 0xff)<<24,\n      j2  = k[ 4] & 0xff | (k[ 5] & 0xff)<<8 | (k[ 6] & 0xff)<<16 | (k[ 7] & 0xff)<<24,\n      j3  = k[ 8] & 0xff | (k[ 9] & 0xff)<<8 | (k[10] & 0xff)<<16 | (k[11] & 0xff)<<24,\n      j4  = k[12] & 0xff | (k[13] & 0xff)<<8 | (k[14] & 0xff)<<16 | (k[15] & 0xff)<<24,\n      j5  = c[ 4] & 0xff | (c[ 5] & 0xff)<<8 | (c[ 6] & 0xff)<<16 | (c[ 7] & 0xff)<<24,\n      j6  = p[ 0] & 0xff | (p[ 1] & 0xff)<<8 | (p[ 2] & 0xff)<<16 | (p[ 3] & 0xff)<<24,\n      j7  = p[ 4] & 0xff | (p[ 5] & 0xff)<<8 | (p[ 6] & 0xff)<<16 | (p[ 7] & 0xff)<<24,\n      j8  = p[ 8] & 0xff | (p[ 9] & 0xff)<<8 | (p[10] & 0xff)<<16 | (p[11] & 0xff)<<24,\n      j9  = p[12] & 0xff | (p[13] & 0xff)<<8 | (p[14] & 0xff)<<16 | (p[15] & 0xff)<<24,\n      j10 = c[ 8] & 0xff | (c[ 9] & 0xff)<<8 | (c[10] & 0xff)<<16 | (c[11] & 0xff)<<24,\n      j11 = k[16] & 0xff | (k[17] & 0xff)<<8 | (k[18] & 0xff)<<16 | (k[19] & 0xff)<<24,\n      j12 = k[20] & 0xff | (k[21] & 0xff)<<8 | (k[22] & 0xff)<<16 | (k[23] & 0xff)<<24,\n      j13 = k[24] & 0xff | (k[25] & 0xff)<<8 | (k[26] & 0xff)<<16 | (k[27] & 0xff)<<24,\n      j14 = k[28] & 0xff | (k[29] & 0xff)<<8 | (k[30] & 0xff)<<16 | (k[31] & 0xff)<<24,\n      j15 = c[12] & 0xff | (c[13] & 0xff)<<8 | (c[14] & 0xff)<<16 | (c[15] & 0xff)<<24;\n\n  var x0 = j0, x1 = j1, x2 = j2, x3 = j3, x4 = j4, x5 = j5, x6 = j6, x7 = j7,\n      x8 = j8, x9 = j9, x10 = j10, x11 = j11, x12 = j12, x13 = j13, x14 = j14,\n      x15 = j15, u;\n\n  for (var i = 0; i < 20; i += 2) {\n    u = x0 + x12 | 0;\n    x4 ^= u<<7 | u>>>(32-7);\n    u = x4 + x0 | 0;\n    x8 ^= u<<9 | u>>>(32-9);\n    u = x8 + x4 | 0;\n    x12 ^= u<<13 | u>>>(32-13);\n    u = x12 + x8 | 0;\n    x0 ^= u<<18 | u>>>(32-18);\n\n    u = x5 + x1 | 0;\n    x9 ^= u<<7 | u>>>(32-7);\n    u = x9 + x5 | 0;\n    x13 ^= u<<9 | u>>>(32-9);\n    u = x13 + x9 | 0;\n    x1 ^= u<<13 | u>>>(32-13);\n    u = x1 + x13 | 0;\n    x5 ^= u<<18 | u>>>(32-18);\n\n    u = x10 + x6 | 0;\n    x14 ^= u<<7 | u>>>(32-7);\n    u = x14 + x10 | 0;\n    x2 ^= u<<9 | u>>>(32-9);\n    u = x2 + x14 | 0;\n    x6 ^= u<<13 | u>>>(32-13);\n    u = x6 + x2 | 0;\n    x10 ^= u<<18 | u>>>(32-18);\n\n    u = x15 + x11 | 0;\n    x3 ^= u<<7 | u>>>(32-7);\n    u = x3 + x15 | 0;\n    x7 ^= u<<9 | u>>>(32-9);\n    u = x7 + x3 | 0;\n    x11 ^= u<<13 | u>>>(32-13);\n    u = x11 + x7 | 0;\n    x15 ^= u<<18 | u>>>(32-18);\n\n    u = x0 + x3 | 0;\n    x1 ^= u<<7 | u>>>(32-7);\n    u = x1 + x0 | 0;\n    x2 ^= u<<9 | u>>>(32-9);\n    u = x2 + x1 | 0;\n    x3 ^= u<<13 | u>>>(32-13);\n    u = x3 + x2 | 0;\n    x0 ^= u<<18 | u>>>(32-18);\n\n    u = x5 + x4 | 0;\n    x6 ^= u<<7 | u>>>(32-7);\n    u = x6 + x5 | 0;\n    x7 ^= u<<9 | u>>>(32-9);\n    u = x7 + x6 | 0;\n    x4 ^= u<<13 | u>>>(32-13);\n    u = x4 + x7 | 0;\n    x5 ^= u<<18 | u>>>(32-18);\n\n    u = x10 + x9 | 0;\n    x11 ^= u<<7 | u>>>(32-7);\n    u = x11 + x10 | 0;\n    x8 ^= u<<9 | u>>>(32-9);\n    u = x8 + x11 | 0;\n    x9 ^= u<<13 | u>>>(32-13);\n    u = x9 + x8 | 0;\n    x10 ^= u<<18 | u>>>(32-18);\n\n    u = x15 + x14 | 0;\n    x12 ^= u<<7 | u>>>(32-7);\n    u = x12 + x15 | 0;\n    x13 ^= u<<9 | u>>>(32-9);\n    u = x13 + x12 | 0;\n    x14 ^= u<<13 | u>>>(32-13);\n    u = x14 + x13 | 0;\n    x15 ^= u<<18 | u>>>(32-18);\n  }\n   x0 =  x0 +  j0 | 0;\n   x1 =  x1 +  j1 | 0;\n   x2 =  x2 +  j2 | 0;\n   x3 =  x3 +  j3 | 0;\n   x4 =  x4 +  j4 | 0;\n   x5 =  x5 +  j5 | 0;\n   x6 =  x6 +  j6 | 0;\n   x7 =  x7 +  j7 | 0;\n   x8 =  x8 +  j8 | 0;\n   x9 =  x9 +  j9 | 0;\n  x10 = x10 + j10 | 0;\n  x11 = x11 + j11 | 0;\n  x12 = x12 + j12 | 0;\n  x13 = x13 + j13 | 0;\n  x14 = x14 + j14 | 0;\n  x15 = x15 + j15 | 0;\n\n  o[ 0] = x0 >>>  0 & 0xff;\n  o[ 1] = x0 >>>  8 & 0xff;\n  o[ 2] = x0 >>> 16 & 0xff;\n  o[ 3] = x0 >>> 24 & 0xff;\n\n  o[ 4] = x1 >>>  0 & 0xff;\n  o[ 5] = x1 >>>  8 & 0xff;\n  o[ 6] = x1 >>> 16 & 0xff;\n  o[ 7] = x1 >>> 24 & 0xff;\n\n  o[ 8] = x2 >>>  0 & 0xff;\n  o[ 9] = x2 >>>  8 & 0xff;\n  o[10] = x2 >>> 16 & 0xff;\n  o[11] = x2 >>> 24 & 0xff;\n\n  o[12] = x3 >>>  0 & 0xff;\n  o[13] = x3 >>>  8 & 0xff;\n  o[14] = x3 >>> 16 & 0xff;\n  o[15] = x3 >>> 24 & 0xff;\n\n  o[16] = x4 >>>  0 & 0xff;\n  o[17] = x4 >>>  8 & 0xff;\n  o[18] = x4 >>> 16 & 0xff;\n  o[19] = x4 >>> 24 & 0xff;\n\n  o[20] = x5 >>>  0 & 0xff;\n  o[21] = x5 >>>  8 & 0xff;\n  o[22] = x5 >>> 16 & 0xff;\n  o[23] = x5 >>> 24 & 0xff;\n\n  o[24] = x6 >>>  0 & 0xff;\n  o[25] = x6 >>>  8 & 0xff;\n  o[26] = x6 >>> 16 & 0xff;\n  o[27] = x6 >>> 24 & 0xff;\n\n  o[28] = x7 >>>  0 & 0xff;\n  o[29] = x7 >>>  8 & 0xff;\n  o[30] = x7 >>> 16 & 0xff;\n  o[31] = x7 >>> 24 & 0xff;\n\n  o[32] = x8 >>>  0 & 0xff;\n  o[33] = x8 >>>  8 & 0xff;\n  o[34] = x8 >>> 16 & 0xff;\n  o[35] = x8 >>> 24 & 0xff;\n\n  o[36] = x9 >>>  0 & 0xff;\n  o[37] = x9 >>>  8 & 0xff;\n  o[38] = x9 >>> 16 & 0xff;\n  o[39] = x9 >>> 24 & 0xff;\n\n  o[40] = x10 >>>  0 & 0xff;\n  o[41] = x10 >>>  8 & 0xff;\n  o[42] = x10 >>> 16 & 0xff;\n  o[43] = x10 >>> 24 & 0xff;\n\n  o[44] = x11 >>>  0 & 0xff;\n  o[45] = x11 >>>  8 & 0xff;\n  o[46] = x11 >>> 16 & 0xff;\n  o[47] = x11 >>> 24 & 0xff;\n\n  o[48] = x12 >>>  0 & 0xff;\n  o[49] = x12 >>>  8 & 0xff;\n  o[50] = x12 >>> 16 & 0xff;\n  o[51] = x12 >>> 24 & 0xff;\n\n  o[52] = x13 >>>  0 & 0xff;\n  o[53] = x13 >>>  8 & 0xff;\n  o[54] = x13 >>> 16 & 0xff;\n  o[55] = x13 >>> 24 & 0xff;\n\n  o[56] = x14 >>>  0 & 0xff;\n  o[57] = x14 >>>  8 & 0xff;\n  o[58] = x14 >>> 16 & 0xff;\n  o[59] = x14 >>> 24 & 0xff;\n\n  o[60] = x15 >>>  0 & 0xff;\n  o[61] = x15 >>>  8 & 0xff;\n  o[62] = x15 >>> 16 & 0xff;\n  o[63] = x15 >>> 24 & 0xff;\n}\n\nfunction core_hsalsa20(o,p,k,c) {\n  var j0  = c[ 0] & 0xff | (c[ 1] & 0xff)<<8 | (c[ 2] & 0xff)<<16 | (c[ 3] & 0xff)<<24,\n      j1  = k[ 0] & 0xff | (k[ 1] & 0xff)<<8 | (k[ 2] & 0xff)<<16 | (k[ 3] & 0xff)<<24,\n      j2  = k[ 4] & 0xff | (k[ 5] & 0xff)<<8 | (k[ 6] & 0xff)<<16 | (k[ 7] & 0xff)<<24,\n      j3  = k[ 8] & 0xff | (k[ 9] & 0xff)<<8 | (k[10] & 0xff)<<16 | (k[11] & 0xff)<<24,\n      j4  = k[12] & 0xff | (k[13] & 0xff)<<8 | (k[14] & 0xff)<<16 | (k[15] & 0xff)<<24,\n      j5  = c[ 4] & 0xff | (c[ 5] & 0xff)<<8 | (c[ 6] & 0xff)<<16 | (c[ 7] & 0xff)<<24,\n      j6  = p[ 0] & 0xff | (p[ 1] & 0xff)<<8 | (p[ 2] & 0xff)<<16 | (p[ 3] & 0xff)<<24,\n      j7  = p[ 4] & 0xff | (p[ 5] & 0xff)<<8 | (p[ 6] & 0xff)<<16 | (p[ 7] & 0xff)<<24,\n      j8  = p[ 8] & 0xff | (p[ 9] & 0xff)<<8 | (p[10] & 0xff)<<16 | (p[11] & 0xff)<<24,\n      j9  = p[12] & 0xff | (p[13] & 0xff)<<8 | (p[14] & 0xff)<<16 | (p[15] & 0xff)<<24,\n      j10 = c[ 8] & 0xff | (c[ 9] & 0xff)<<8 | (c[10] & 0xff)<<16 | (c[11] & 0xff)<<24,\n      j11 = k[16] & 0xff | (k[17] & 0xff)<<8 | (k[18] & 0xff)<<16 | (k[19] & 0xff)<<24,\n      j12 = k[20] & 0xff | (k[21] & 0xff)<<8 | (k[22] & 0xff)<<16 | (k[23] & 0xff)<<24,\n      j13 = k[24] & 0xff | (k[25] & 0xff)<<8 | (k[26] & 0xff)<<16 | (k[27] & 0xff)<<24,\n      j14 = k[28] & 0xff | (k[29] & 0xff)<<8 | (k[30] & 0xff)<<16 | (k[31] & 0xff)<<24,\n      j15 = c[12] & 0xff | (c[13] & 0xff)<<8 | (c[14] & 0xff)<<16 | (c[15] & 0xff)<<24;\n\n  var x0 = j0, x1 = j1, x2 = j2, x3 = j3, x4 = j4, x5 = j5, x6 = j6, x7 = j7,\n      x8 = j8, x9 = j9, x10 = j10, x11 = j11, x12 = j12, x13 = j13, x14 = j14,\n      x15 = j15, u;\n\n  for (var i = 0; i < 20; i += 2) {\n    u = x0 + x12 | 0;\n    x4 ^= u<<7 | u>>>(32-7);\n    u = x4 + x0 | 0;\n    x8 ^= u<<9 | u>>>(32-9);\n    u = x8 + x4 | 0;\n    x12 ^= u<<13 | u>>>(32-13);\n    u = x12 + x8 | 0;\n    x0 ^= u<<18 | u>>>(32-18);\n\n    u = x5 + x1 | 0;\n    x9 ^= u<<7 | u>>>(32-7);\n    u = x9 + x5 | 0;\n    x13 ^= u<<9 | u>>>(32-9);\n    u = x13 + x9 | 0;\n    x1 ^= u<<13 | u>>>(32-13);\n    u = x1 + x13 | 0;\n    x5 ^= u<<18 | u>>>(32-18);\n\n    u = x10 + x6 | 0;\n    x14 ^= u<<7 | u>>>(32-7);\n    u = x14 + x10 | 0;\n    x2 ^= u<<9 | u>>>(32-9);\n    u = x2 + x14 | 0;\n    x6 ^= u<<13 | u>>>(32-13);\n    u = x6 + x2 | 0;\n    x10 ^= u<<18 | u>>>(32-18);\n\n    u = x15 + x11 | 0;\n    x3 ^= u<<7 | u>>>(32-7);\n    u = x3 + x15 | 0;\n    x7 ^= u<<9 | u>>>(32-9);\n    u = x7 + x3 | 0;\n    x11 ^= u<<13 | u>>>(32-13);\n    u = x11 + x7 | 0;\n    x15 ^= u<<18 | u>>>(32-18);\n\n    u = x0 + x3 | 0;\n    x1 ^= u<<7 | u>>>(32-7);\n    u = x1 + x0 | 0;\n    x2 ^= u<<9 | u>>>(32-9);\n    u = x2 + x1 | 0;\n    x3 ^= u<<13 | u>>>(32-13);\n    u = x3 + x2 | 0;\n    x0 ^= u<<18 | u>>>(32-18);\n\n    u = x5 + x4 | 0;\n    x6 ^= u<<7 | u>>>(32-7);\n    u = x6 + x5 | 0;\n    x7 ^= u<<9 | u>>>(32-9);\n    u = x7 + x6 | 0;\n    x4 ^= u<<13 | u>>>(32-13);\n    u = x4 + x7 | 0;\n    x5 ^= u<<18 | u>>>(32-18);\n\n    u = x10 + x9 | 0;\n    x11 ^= u<<7 | u>>>(32-7);\n    u = x11 + x10 | 0;\n    x8 ^= u<<9 | u>>>(32-9);\n    u = x8 + x11 | 0;\n    x9 ^= u<<13 | u>>>(32-13);\n    u = x9 + x8 | 0;\n    x10 ^= u<<18 | u>>>(32-18);\n\n    u = x15 + x14 | 0;\n    x12 ^= u<<7 | u>>>(32-7);\n    u = x12 + x15 | 0;\n    x13 ^= u<<9 | u>>>(32-9);\n    u = x13 + x12 | 0;\n    x14 ^= u<<13 | u>>>(32-13);\n    u = x14 + x13 | 0;\n    x15 ^= u<<18 | u>>>(32-18);\n  }\n\n  o[ 0] = x0 >>>  0 & 0xff;\n  o[ 1] = x0 >>>  8 & 0xff;\n  o[ 2] = x0 >>> 16 & 0xff;\n  o[ 3] = x0 >>> 24 & 0xff;\n\n  o[ 4] = x5 >>>  0 & 0xff;\n  o[ 5] = x5 >>>  8 & 0xff;\n  o[ 6] = x5 >>> 16 & 0xff;\n  o[ 7] = x5 >>> 24 & 0xff;\n\n  o[ 8] = x10 >>>  0 & 0xff;\n  o[ 9] = x10 >>>  8 & 0xff;\n  o[10] = x10 >>> 16 & 0xff;\n  o[11] = x10 >>> 24 & 0xff;\n\n  o[12] = x15 >>>  0 & 0xff;\n  o[13] = x15 >>>  8 & 0xff;\n  o[14] = x15 >>> 16 & 0xff;\n  o[15] = x15 >>> 24 & 0xff;\n\n  o[16] = x6 >>>  0 & 0xff;\n  o[17] = x6 >>>  8 & 0xff;\n  o[18] = x6 >>> 16 & 0xff;\n  o[19] = x6 >>> 24 & 0xff;\n\n  o[20] = x7 >>>  0 & 0xff;\n  o[21] = x7 >>>  8 & 0xff;\n  o[22] = x7 >>> 16 & 0xff;\n  o[23] = x7 >>> 24 & 0xff;\n\n  o[24] = x8 >>>  0 & 0xff;\n  o[25] = x8 >>>  8 & 0xff;\n  o[26] = x8 >>> 16 & 0xff;\n  o[27] = x8 >>> 24 & 0xff;\n\n  o[28] = x9 >>>  0 & 0xff;\n  o[29] = x9 >>>  8 & 0xff;\n  o[30] = x9 >>> 16 & 0xff;\n  o[31] = x9 >>> 24 & 0xff;\n}\n\nfunction crypto_core_salsa20(out,inp,k,c) {\n  core_salsa20(out,inp,k,c);\n}\n\nfunction crypto_core_hsalsa20(out,inp,k,c) {\n  core_hsalsa20(out,inp,k,c);\n}\n\nvar sigma = new Uint8Array([101, 120, 112, 97, 110, 100, 32, 51, 50, 45, 98, 121, 116, 101, 32, 107]);\n            // \"expand 32-byte k\"\n\nfunction crypto_stream_salsa20_xor(c,cpos,m,mpos,b,n,k) {\n  var z = new Uint8Array(16), x = new Uint8Array(64);\n  var u, i;\n  for (i = 0; i < 16; i++) z[i] = 0;\n  for (i = 0; i < 8; i++) z[i] = n[i];\n  while (b >= 64) {\n    crypto_core_salsa20(x,z,k,sigma);\n    for (i = 0; i < 64; i++) c[cpos+i] = m[mpos+i] ^ x[i];\n    u = 1;\n    for (i = 8; i < 16; i++) {\n      u = u + (z[i] & 0xff) | 0;\n      z[i] = u & 0xff;\n      u >>>= 8;\n    }\n    b -= 64;\n    cpos += 64;\n    mpos += 64;\n  }\n  if (b > 0) {\n    crypto_core_salsa20(x,z,k,sigma);\n    for (i = 0; i < b; i++) c[cpos+i] = m[mpos+i] ^ x[i];\n  }\n  return 0;\n}\n\nfunction crypto_stream_salsa20(c,cpos,b,n,k) {\n  var z = new Uint8Array(16), x = new Uint8Array(64);\n  var u, i;\n  for (i = 0; i < 16; i++) z[i] = 0;\n  for (i = 0; i < 8; i++) z[i] = n[i];\n  while (b >= 64) {\n    crypto_core_salsa20(x,z,k,sigma);\n    for (i = 0; i < 64; i++) c[cpos+i] = x[i];\n    u = 1;\n    for (i = 8; i < 16; i++) {\n      u = u + (z[i] & 0xff) | 0;\n      z[i] = u & 0xff;\n      u >>>= 8;\n    }\n    b -= 64;\n    cpos += 64;\n  }\n  if (b > 0) {\n    crypto_core_salsa20(x,z,k,sigma);\n    for (i = 0; i < b; i++) c[cpos+i] = x[i];\n  }\n  return 0;\n}\n\nfunction crypto_stream(c,cpos,d,n,k) {\n  var s = new Uint8Array(32);\n  crypto_core_hsalsa20(s,n,k,sigma);\n  var sn = new Uint8Array(8);\n  for (var i = 0; i < 8; i++) sn[i] = n[i+16];\n  return crypto_stream_salsa20(c,cpos,d,sn,s);\n}\n\nfunction crypto_stream_xor(c,cpos,m,mpos,d,n,k) {\n  var s = new Uint8Array(32);\n  crypto_core_hsalsa20(s,n,k,sigma);\n  var sn = new Uint8Array(8);\n  for (var i = 0; i < 8; i++) sn[i] = n[i+16];\n  return crypto_stream_salsa20_xor(c,cpos,m,mpos,d,sn,s);\n}\n\n/*\n* Port of Andrew Moon's Poly1305-donna-16. Public domain.\n* https://github.com/floodyberry/poly1305-donna\n*/\n\nvar poly1305 = function(key) {\n  this.buffer = new Uint8Array(16);\n  this.r = new Uint16Array(10);\n  this.h = new Uint16Array(10);\n  this.pad = new Uint16Array(8);\n  this.leftover = 0;\n  this.fin = 0;\n\n  var t0, t1, t2, t3, t4, t5, t6, t7;\n\n  t0 = key[ 0] & 0xff | (key[ 1] & 0xff) << 8; this.r[0] = ( t0                     ) & 0x1fff;\n  t1 = key[ 2] & 0xff | (key[ 3] & 0xff) << 8; this.r[1] = ((t0 >>> 13) | (t1 <<  3)) & 0x1fff;\n  t2 = key[ 4] & 0xff | (key[ 5] & 0xff) << 8; this.r[2] = ((t1 >>> 10) | (t2 <<  6)) & 0x1f03;\n  t3 = key[ 6] & 0xff | (key[ 7] & 0xff) << 8; this.r[3] = ((t2 >>>  7) | (t3 <<  9)) & 0x1fff;\n  t4 = key[ 8] & 0xff | (key[ 9] & 0xff) << 8; this.r[4] = ((t3 >>>  4) | (t4 << 12)) & 0x00ff;\n  this.r[5] = ((t4 >>>  1)) & 0x1ffe;\n  t5 = key[10] & 0xff | (key[11] & 0xff) << 8; this.r[6] = ((t4 >>> 14) | (t5 <<  2)) & 0x1fff;\n  t6 = key[12] & 0xff | (key[13] & 0xff) << 8; this.r[7] = ((t5 >>> 11) | (t6 <<  5)) & 0x1f81;\n  t7 = key[14] & 0xff | (key[15] & 0xff) << 8; this.r[8] = ((t6 >>>  8) | (t7 <<  8)) & 0x1fff;\n  this.r[9] = ((t7 >>>  5)) & 0x007f;\n\n  this.pad[0] = key[16] & 0xff | (key[17] & 0xff) << 8;\n  this.pad[1] = key[18] & 0xff | (key[19] & 0xff) << 8;\n  this.pad[2] = key[20] & 0xff | (key[21] & 0xff) << 8;\n  this.pad[3] = key[22] & 0xff | (key[23] & 0xff) << 8;\n  this.pad[4] = key[24] & 0xff | (key[25] & 0xff) << 8;\n  this.pad[5] = key[26] & 0xff | (key[27] & 0xff) << 8;\n  this.pad[6] = key[28] & 0xff | (key[29] & 0xff) << 8;\n  this.pad[7] = key[30] & 0xff | (key[31] & 0xff) << 8;\n};\n\npoly1305.prototype.blocks = function(m, mpos, bytes) {\n  var hibit = this.fin ? 0 : (1 << 11);\n  var t0, t1, t2, t3, t4, t5, t6, t7, c;\n  var d0, d1, d2, d3, d4, d5, d6, d7, d8, d9;\n\n  var h0 = this.h[0],\n      h1 = this.h[1],\n      h2 = this.h[2],\n      h3 = this.h[3],\n      h4 = this.h[4],\n      h5 = this.h[5],\n      h6 = this.h[6],\n      h7 = this.h[7],\n      h8 = this.h[8],\n      h9 = this.h[9];\n\n  var r0 = this.r[0],\n      r1 = this.r[1],\n      r2 = this.r[2],\n      r3 = this.r[3],\n      r4 = this.r[4],\n      r5 = this.r[5],\n      r6 = this.r[6],\n      r7 = this.r[7],\n      r8 = this.r[8],\n      r9 = this.r[9];\n\n  while (bytes >= 16) {\n    t0 = m[mpos+ 0] & 0xff | (m[mpos+ 1] & 0xff) << 8; h0 += ( t0                     ) & 0x1fff;\n    t1 = m[mpos+ 2] & 0xff | (m[mpos+ 3] & 0xff) << 8; h1 += ((t0 >>> 13) | (t1 <<  3)) & 0x1fff;\n    t2 = m[mpos+ 4] & 0xff | (m[mpos+ 5] & 0xff) << 8; h2 += ((t1 >>> 10) | (t2 <<  6)) & 0x1fff;\n    t3 = m[mpos+ 6] & 0xff | (m[mpos+ 7] & 0xff) << 8; h3 += ((t2 >>>  7) | (t3 <<  9)) & 0x1fff;\n    t4 = m[mpos+ 8] & 0xff | (m[mpos+ 9] & 0xff) << 8; h4 += ((t3 >>>  4) | (t4 << 12)) & 0x1fff;\n    h5 += ((t4 >>>  1)) & 0x1fff;\n    t5 = m[mpos+10] & 0xff | (m[mpos+11] & 0xff) << 8; h6 += ((t4 >>> 14) | (t5 <<  2)) & 0x1fff;\n    t6 = m[mpos+12] & 0xff | (m[mpos+13] & 0xff) << 8; h7 += ((t5 >>> 11) | (t6 <<  5)) & 0x1fff;\n    t7 = m[mpos+14] & 0xff | (m[mpos+15] & 0xff) << 8; h8 += ((t6 >>>  8) | (t7 <<  8)) & 0x1fff;\n    h9 += ((t7 >>> 5)) | hibit;\n\n    c = 0;\n\n    d0 = c;\n    d0 += h0 * r0;\n    d0 += h1 * (5 * r9);\n    d0 += h2 * (5 * r8);\n    d0 += h3 * (5 * r7);\n    d0 += h4 * (5 * r6);\n    c = (d0 >>> 13); d0 &= 0x1fff;\n    d0 += h5 * (5 * r5);\n    d0 += h6 * (5 * r4);\n    d0 += h7 * (5 * r3);\n    d0 += h8 * (5 * r2);\n    d0 += h9 * (5 * r1);\n    c += (d0 >>> 13); d0 &= 0x1fff;\n\n    d1 = c;\n    d1 += h0 * r1;\n    d1 += h1 * r0;\n    d1 += h2 * (5 * r9);\n    d1 += h3 * (5 * r8);\n    d1 += h4 * (5 * r7);\n    c = (d1 >>> 13); d1 &= 0x1fff;\n    d1 += h5 * (5 * r6);\n    d1 += h6 * (5 * r5);\n    d1 += h7 * (5 * r4);\n    d1 += h8 * (5 * r3);\n    d1 += h9 * (5 * r2);\n    c += (d1 >>> 13); d1 &= 0x1fff;\n\n    d2 = c;\n    d2 += h0 * r2;\n    d2 += h1 * r1;\n    d2 += h2 * r0;\n    d2 += h3 * (5 * r9);\n    d2 += h4 * (5 * r8);\n    c = (d2 >>> 13); d2 &= 0x1fff;\n    d2 += h5 * (5 * r7);\n    d2 += h6 * (5 * r6);\n    d2 += h7 * (5 * r5);\n    d2 += h8 * (5 * r4);\n    d2 += h9 * (5 * r3);\n    c += (d2 >>> 13); d2 &= 0x1fff;\n\n    d3 = c;\n    d3 += h0 * r3;\n    d3 += h1 * r2;\n    d3 += h2 * r1;\n    d3 += h3 * r0;\n    d3 += h4 * (5 * r9);\n    c = (d3 >>> 13); d3 &= 0x1fff;\n    d3 += h5 * (5 * r8);\n    d3 += h6 * (5 * r7);\n    d3 += h7 * (5 * r6);\n    d3 += h8 * (5 * r5);\n    d3 += h9 * (5 * r4);\n    c += (d3 >>> 13); d3 &= 0x1fff;\n\n    d4 = c;\n    d4 += h0 * r4;\n    d4 += h1 * r3;\n    d4 += h2 * r2;\n    d4 += h3 * r1;\n    d4 += h4 * r0;\n    c = (d4 >>> 13); d4 &= 0x1fff;\n    d4 += h5 * (5 * r9);\n    d4 += h6 * (5 * r8);\n    d4 += h7 * (5 * r7);\n    d4 += h8 * (5 * r6);\n    d4 += h9 * (5 * r5);\n    c += (d4 >>> 13); d4 &= 0x1fff;\n\n    d5 = c;\n    d5 += h0 * r5;\n    d5 += h1 * r4;\n    d5 += h2 * r3;\n    d5 += h3 * r2;\n    d5 += h4 * r1;\n    c = (d5 >>> 13); d5 &= 0x1fff;\n    d5 += h5 * r0;\n    d5 += h6 * (5 * r9);\n    d5 += h7 * (5 * r8);\n    d5 += h8 * (5 * r7);\n    d5 += h9 * (5 * r6);\n    c += (d5 >>> 13); d5 &= 0x1fff;\n\n    d6 = c;\n    d6 += h0 * r6;\n    d6 += h1 * r5;\n    d6 += h2 * r4;\n    d6 += h3 * r3;\n    d6 += h4 * r2;\n    c = (d6 >>> 13); d6 &= 0x1fff;\n    d6 += h5 * r1;\n    d6 += h6 * r0;\n    d6 += h7 * (5 * r9);\n    d6 += h8 * (5 * r8);\n    d6 += h9 * (5 * r7);\n    c += (d6 >>> 13); d6 &= 0x1fff;\n\n    d7 = c;\n    d7 += h0 * r7;\n    d7 += h1 * r6;\n    d7 += h2 * r5;\n    d7 += h3 * r4;\n    d7 += h4 * r3;\n    c = (d7 >>> 13); d7 &= 0x1fff;\n    d7 += h5 * r2;\n    d7 += h6 * r1;\n    d7 += h7 * r0;\n    d7 += h8 * (5 * r9);\n    d7 += h9 * (5 * r8);\n    c += (d7 >>> 13); d7 &= 0x1fff;\n\n    d8 = c;\n    d8 += h0 * r8;\n    d8 += h1 * r7;\n    d8 += h2 * r6;\n    d8 += h3 * r5;\n    d8 += h4 * r4;\n    c = (d8 >>> 13); d8 &= 0x1fff;\n    d8 += h5 * r3;\n    d8 += h6 * r2;\n    d8 += h7 * r1;\n    d8 += h8 * r0;\n    d8 += h9 * (5 * r9);\n    c += (d8 >>> 13); d8 &= 0x1fff;\n\n    d9 = c;\n    d9 += h0 * r9;\n    d9 += h1 * r8;\n    d9 += h2 * r7;\n    d9 += h3 * r6;\n    d9 += h4 * r5;\n    c = (d9 >>> 13); d9 &= 0x1fff;\n    d9 += h5 * r4;\n    d9 += h6 * r3;\n    d9 += h7 * r2;\n    d9 += h8 * r1;\n    d9 += h9 * r0;\n    c += (d9 >>> 13); d9 &= 0x1fff;\n\n    c = (((c << 2) + c)) | 0;\n    c = (c + d0) | 0;\n    d0 = c & 0x1fff;\n    c = (c >>> 13);\n    d1 += c;\n\n    h0 = d0;\n    h1 = d1;\n    h2 = d2;\n    h3 = d3;\n    h4 = d4;\n    h5 = d5;\n    h6 = d6;\n    h7 = d7;\n    h8 = d8;\n    h9 = d9;\n\n    mpos += 16;\n    bytes -= 16;\n  }\n  this.h[0] = h0;\n  this.h[1] = h1;\n  this.h[2] = h2;\n  this.h[3] = h3;\n  this.h[4] = h4;\n  this.h[5] = h5;\n  this.h[6] = h6;\n  this.h[7] = h7;\n  this.h[8] = h8;\n  this.h[9] = h9;\n};\n\npoly1305.prototype.finish = function(mac, macpos) {\n  var g = new Uint16Array(10);\n  var c, mask, f, i;\n\n  if (this.leftover) {\n    i = this.leftover;\n    this.buffer[i++] = 1;\n    for (; i < 16; i++) this.buffer[i] = 0;\n    this.fin = 1;\n    this.blocks(this.buffer, 0, 16);\n  }\n\n  c = this.h[1] >>> 13;\n  this.h[1] &= 0x1fff;\n  for (i = 2; i < 10; i++) {\n    this.h[i] += c;\n    c = this.h[i] >>> 13;\n    this.h[i] &= 0x1fff;\n  }\n  this.h[0] += (c * 5);\n  c = this.h[0] >>> 13;\n  this.h[0] &= 0x1fff;\n  this.h[1] += c;\n  c = this.h[1] >>> 13;\n  this.h[1] &= 0x1fff;\n  this.h[2] += c;\n\n  g[0] = this.h[0] + 5;\n  c = g[0] >>> 13;\n  g[0] &= 0x1fff;\n  for (i = 1; i < 10; i++) {\n    g[i] = this.h[i] + c;\n    c = g[i] >>> 13;\n    g[i] &= 0x1fff;\n  }\n  g[9] -= (1 << 13);\n\n  mask = (c ^ 1) - 1;\n  for (i = 0; i < 10; i++) g[i] &= mask;\n  mask = ~mask;\n  for (i = 0; i < 10; i++) this.h[i] = (this.h[i] & mask) | g[i];\n\n  this.h[0] = ((this.h[0]       ) | (this.h[1] << 13)                    ) & 0xffff;\n  this.h[1] = ((this.h[1] >>>  3) | (this.h[2] << 10)                    ) & 0xffff;\n  this.h[2] = ((this.h[2] >>>  6) | (this.h[3] <<  7)                    ) & 0xffff;\n  this.h[3] = ((this.h[3] >>>  9) | (this.h[4] <<  4)                    ) & 0xffff;\n  this.h[4] = ((this.h[4] >>> 12) | (this.h[5] <<  1) | (this.h[6] << 14)) & 0xffff;\n  this.h[5] = ((this.h[6] >>>  2) | (this.h[7] << 11)                    ) & 0xffff;\n  this.h[6] = ((this.h[7] >>>  5) | (this.h[8] <<  8)                    ) & 0xffff;\n  this.h[7] = ((this.h[8] >>>  8) | (this.h[9] <<  5)                    ) & 0xffff;\n\n  f = this.h[0] + this.pad[0];\n  this.h[0] = f & 0xffff;\n  for (i = 1; i < 8; i++) {\n    f = (((this.h[i] + this.pad[i]) | 0) + (f >>> 16)) | 0;\n    this.h[i] = f & 0xffff;\n  }\n\n  mac[macpos+ 0] = (this.h[0] >>> 0) & 0xff;\n  mac[macpos+ 1] = (this.h[0] >>> 8) & 0xff;\n  mac[macpos+ 2] = (this.h[1] >>> 0) & 0xff;\n  mac[macpos+ 3] = (this.h[1] >>> 8) & 0xff;\n  mac[macpos+ 4] = (this.h[2] >>> 0) & 0xff;\n  mac[macpos+ 5] = (this.h[2] >>> 8) & 0xff;\n  mac[macpos+ 6] = (this.h[3] >>> 0) & 0xff;\n  mac[macpos+ 7] = (this.h[3] >>> 8) & 0xff;\n  mac[macpos+ 8] = (this.h[4] >>> 0) & 0xff;\n  mac[macpos+ 9] = (this.h[4] >>> 8) & 0xff;\n  mac[macpos+10] = (this.h[5] >>> 0) & 0xff;\n  mac[macpos+11] = (this.h[5] >>> 8) & 0xff;\n  mac[macpos+12] = (this.h[6] >>> 0) & 0xff;\n  mac[macpos+13] = (this.h[6] >>> 8) & 0xff;\n  mac[macpos+14] = (this.h[7] >>> 0) & 0xff;\n  mac[macpos+15] = (this.h[7] >>> 8) & 0xff;\n};\n\npoly1305.prototype.update = function(m, mpos, bytes) {\n  var i, want;\n\n  if (this.leftover) {\n    want = (16 - this.leftover);\n    if (want > bytes)\n      want = bytes;\n    for (i = 0; i < want; i++)\n      this.buffer[this.leftover + i] = m[mpos+i];\n    bytes -= want;\n    mpos += want;\n    this.leftover += want;\n    if (this.leftover < 16)\n      return;\n    this.blocks(this.buffer, 0, 16);\n    this.leftover = 0;\n  }\n\n  if (bytes >= 16) {\n    want = bytes - (bytes % 16);\n    this.blocks(m, mpos, want);\n    mpos += want;\n    bytes -= want;\n  }\n\n  if (bytes) {\n    for (i = 0; i < bytes; i++)\n      this.buffer[this.leftover + i] = m[mpos+i];\n    this.leftover += bytes;\n  }\n};\n\nfunction crypto_onetimeauth(out, outpos, m, mpos, n, k) {\n  var s = new poly1305(k);\n  s.update(m, mpos, n);\n  s.finish(out, outpos);\n  return 0;\n}\n\nfunction crypto_onetimeauth_verify(h, hpos, m, mpos, n, k) {\n  var x = new Uint8Array(16);\n  crypto_onetimeauth(x,0,m,mpos,n,k);\n  return crypto_verify_16(h,hpos,x,0);\n}\n\nfunction crypto_secretbox(c,m,d,n,k) {\n  var i;\n  if (d < 32) return -1;\n  crypto_stream_xor(c,0,m,0,d,n,k);\n  crypto_onetimeauth(c, 16, c, 32, d - 32, c);\n  for (i = 0; i < 16; i++) c[i] = 0;\n  return 0;\n}\n\nfunction crypto_secretbox_open(m,c,d,n,k) {\n  var i;\n  var x = new Uint8Array(32);\n  if (d < 32) return -1;\n  crypto_stream(x,0,32,n,k);\n  if (crypto_onetimeauth_verify(c, 16,c, 32,d - 32,x) !== 0) return -1;\n  crypto_stream_xor(m,0,c,0,d,n,k);\n  for (i = 0; i < 32; i++) m[i] = 0;\n  return 0;\n}\n\nfunction set25519(r, a) {\n  var i;\n  for (i = 0; i < 16; i++) r[i] = a[i]|0;\n}\n\nfunction car25519(o) {\n  var i, v, c = 1;\n  for (i = 0; i < 16; i++) {\n    v = o[i] + c + 65535;\n    c = Math.floor(v / 65536);\n    o[i] = v - c * 65536;\n  }\n  o[0] += c-1 + 37 * (c-1);\n}\n\nfunction sel25519(p, q, b) {\n  var t, c = ~(b-1);\n  for (var i = 0; i < 16; i++) {\n    t = c & (p[i] ^ q[i]);\n    p[i] ^= t;\n    q[i] ^= t;\n  }\n}\n\nfunction pack25519(o, n) {\n  var i, j, b;\n  var m = gf(), t = gf();\n  for (i = 0; i < 16; i++) t[i] = n[i];\n  car25519(t);\n  car25519(t);\n  car25519(t);\n  for (j = 0; j < 2; j++) {\n    m[0] = t[0] - 0xffed;\n    for (i = 1; i < 15; i++) {\n      m[i] = t[i] - 0xffff - ((m[i-1]>>16) & 1);\n      m[i-1] &= 0xffff;\n    }\n    m[15] = t[15] - 0x7fff - ((m[14]>>16) & 1);\n    b = (m[15]>>16) & 1;\n    m[14] &= 0xffff;\n    sel25519(t, m, 1-b);\n  }\n  for (i = 0; i < 16; i++) {\n    o[2*i] = t[i] & 0xff;\n    o[2*i+1] = t[i]>>8;\n  }\n}\n\nfunction neq25519(a, b) {\n  var c = new Uint8Array(32), d = new Uint8Array(32);\n  pack25519(c, a);\n  pack25519(d, b);\n  return crypto_verify_32(c, 0, d, 0);\n}\n\nfunction par25519(a) {\n  var d = new Uint8Array(32);\n  pack25519(d, a);\n  return d[0] & 1;\n}\n\nfunction unpack25519(o, n) {\n  var i;\n  for (i = 0; i < 16; i++) o[i] = n[2*i] + (n[2*i+1] << 8);\n  o[15] &= 0x7fff;\n}\n\nfunction A(o, a, b) {\n  for (var i = 0; i < 16; i++) o[i] = a[i] + b[i];\n}\n\nfunction Z(o, a, b) {\n  for (var i = 0; i < 16; i++) o[i] = a[i] - b[i];\n}\n\nfunction M(o, a, b) {\n  var v, c,\n     t0 = 0,  t1 = 0,  t2 = 0,  t3 = 0,  t4 = 0,  t5 = 0,  t6 = 0,  t7 = 0,\n     t8 = 0,  t9 = 0, t10 = 0, t11 = 0, t12 = 0, t13 = 0, t14 = 0, t15 = 0,\n    t16 = 0, t17 = 0, t18 = 0, t19 = 0, t20 = 0, t21 = 0, t22 = 0, t23 = 0,\n    t24 = 0, t25 = 0, t26 = 0, t27 = 0, t28 = 0, t29 = 0, t30 = 0,\n    b0 = b[0],\n    b1 = b[1],\n    b2 = b[2],\n    b3 = b[3],\n    b4 = b[4],\n    b5 = b[5],\n    b6 = b[6],\n    b7 = b[7],\n    b8 = b[8],\n    b9 = b[9],\n    b10 = b[10],\n    b11 = b[11],\n    b12 = b[12],\n    b13 = b[13],\n    b14 = b[14],\n    b15 = b[15];\n\n  v = a[0];\n  t0 += v * b0;\n  t1 += v * b1;\n  t2 += v * b2;\n  t3 += v * b3;\n  t4 += v * b4;\n  t5 += v * b5;\n  t6 += v * b6;\n  t7 += v * b7;\n  t8 += v * b8;\n  t9 += v * b9;\n  t10 += v * b10;\n  t11 += v * b11;\n  t12 += v * b12;\n  t13 += v * b13;\n  t14 += v * b14;\n  t15 += v * b15;\n  v = a[1];\n  t1 += v * b0;\n  t2 += v * b1;\n  t3 += v * b2;\n  t4 += v * b3;\n  t5 += v * b4;\n  t6 += v * b5;\n  t7 += v * b6;\n  t8 += v * b7;\n  t9 += v * b8;\n  t10 += v * b9;\n  t11 += v * b10;\n  t12 += v * b11;\n  t13 += v * b12;\n  t14 += v * b13;\n  t15 += v * b14;\n  t16 += v * b15;\n  v = a[2];\n  t2 += v * b0;\n  t3 += v * b1;\n  t4 += v * b2;\n  t5 += v * b3;\n  t6 += v * b4;\n  t7 += v * b5;\n  t8 += v * b6;\n  t9 += v * b7;\n  t10 += v * b8;\n  t11 += v * b9;\n  t12 += v * b10;\n  t13 += v * b11;\n  t14 += v * b12;\n  t15 += v * b13;\n  t16 += v * b14;\n  t17 += v * b15;\n  v = a[3];\n  t3 += v * b0;\n  t4 += v * b1;\n  t5 += v * b2;\n  t6 += v * b3;\n  t7 += v * b4;\n  t8 += v * b5;\n  t9 += v * b6;\n  t10 += v * b7;\n  t11 += v * b8;\n  t12 += v * b9;\n  t13 += v * b10;\n  t14 += v * b11;\n  t15 += v * b12;\n  t16 += v * b13;\n  t17 += v * b14;\n  t18 += v * b15;\n  v = a[4];\n  t4 += v * b0;\n  t5 += v * b1;\n  t6 += v * b2;\n  t7 += v * b3;\n  t8 += v * b4;\n  t9 += v * b5;\n  t10 += v * b6;\n  t11 += v * b7;\n  t12 += v * b8;\n  t13 += v * b9;\n  t14 += v * b10;\n  t15 += v * b11;\n  t16 += v * b12;\n  t17 += v * b13;\n  t18 += v * b14;\n  t19 += v * b15;\n  v = a[5];\n  t5 += v * b0;\n  t6 += v * b1;\n  t7 += v * b2;\n  t8 += v * b3;\n  t9 += v * b4;\n  t10 += v * b5;\n  t11 += v * b6;\n  t12 += v * b7;\n  t13 += v * b8;\n  t14 += v * b9;\n  t15 += v * b10;\n  t16 += v * b11;\n  t17 += v * b12;\n  t18 += v * b13;\n  t19 += v * b14;\n  t20 += v * b15;\n  v = a[6];\n  t6 += v * b0;\n  t7 += v * b1;\n  t8 += v * b2;\n  t9 += v * b3;\n  t10 += v * b4;\n  t11 += v * b5;\n  t12 += v * b6;\n  t13 += v * b7;\n  t14 += v * b8;\n  t15 += v * b9;\n  t16 += v * b10;\n  t17 += v * b11;\n  t18 += v * b12;\n  t19 += v * b13;\n  t20 += v * b14;\n  t21 += v * b15;\n  v = a[7];\n  t7 += v * b0;\n  t8 += v * b1;\n  t9 += v * b2;\n  t10 += v * b3;\n  t11 += v * b4;\n  t12 += v * b5;\n  t13 += v * b6;\n  t14 += v * b7;\n  t15 += v * b8;\n  t16 += v * b9;\n  t17 += v * b10;\n  t18 += v * b11;\n  t19 += v * b12;\n  t20 += v * b13;\n  t21 += v * b14;\n  t22 += v * b15;\n  v = a[8];\n  t8 += v * b0;\n  t9 += v * b1;\n  t10 += v * b2;\n  t11 += v * b3;\n  t12 += v * b4;\n  t13 += v * b5;\n  t14 += v * b6;\n  t15 += v * b7;\n  t16 += v * b8;\n  t17 += v * b9;\n  t18 += v * b10;\n  t19 += v * b11;\n  t20 += v * b12;\n  t21 += v * b13;\n  t22 += v * b14;\n  t23 += v * b15;\n  v = a[9];\n  t9 += v * b0;\n  t10 += v * b1;\n  t11 += v * b2;\n  t12 += v * b3;\n  t13 += v * b4;\n  t14 += v * b5;\n  t15 += v * b6;\n  t16 += v * b7;\n  t17 += v * b8;\n  t18 += v * b9;\n  t19 += v * b10;\n  t20 += v * b11;\n  t21 += v * b12;\n  t22 += v * b13;\n  t23 += v * b14;\n  t24 += v * b15;\n  v = a[10];\n  t10 += v * b0;\n  t11 += v * b1;\n  t12 += v * b2;\n  t13 += v * b3;\n  t14 += v * b4;\n  t15 += v * b5;\n  t16 += v * b6;\n  t17 += v * b7;\n  t18 += v * b8;\n  t19 += v * b9;\n  t20 += v * b10;\n  t21 += v * b11;\n  t22 += v * b12;\n  t23 += v * b13;\n  t24 += v * b14;\n  t25 += v * b15;\n  v = a[11];\n  t11 += v * b0;\n  t12 += v * b1;\n  t13 += v * b2;\n  t14 += v * b3;\n  t15 += v * b4;\n  t16 += v * b5;\n  t17 += v * b6;\n  t18 += v * b7;\n  t19 += v * b8;\n  t20 += v * b9;\n  t21 += v * b10;\n  t22 += v * b11;\n  t23 += v * b12;\n  t24 += v * b13;\n  t25 += v * b14;\n  t26 += v * b15;\n  v = a[12];\n  t12 += v * b0;\n  t13 += v * b1;\n  t14 += v * b2;\n  t15 += v * b3;\n  t16 += v * b4;\n  t17 += v * b5;\n  t18 += v * b6;\n  t19 += v * b7;\n  t20 += v * b8;\n  t21 += v * b9;\n  t22 += v * b10;\n  t23 += v * b11;\n  t24 += v * b12;\n  t25 += v * b13;\n  t26 += v * b14;\n  t27 += v * b15;\n  v = a[13];\n  t13 += v * b0;\n  t14 += v * b1;\n  t15 += v * b2;\n  t16 += v * b3;\n  t17 += v * b4;\n  t18 += v * b5;\n  t19 += v * b6;\n  t20 += v * b7;\n  t21 += v * b8;\n  t22 += v * b9;\n  t23 += v * b10;\n  t24 += v * b11;\n  t25 += v * b12;\n  t26 += v * b13;\n  t27 += v * b14;\n  t28 += v * b15;\n  v = a[14];\n  t14 += v * b0;\n  t15 += v * b1;\n  t16 += v * b2;\n  t17 += v * b3;\n  t18 += v * b4;\n  t19 += v * b5;\n  t20 += v * b6;\n  t21 += v * b7;\n  t22 += v * b8;\n  t23 += v * b9;\n  t24 += v * b10;\n  t25 += v * b11;\n  t26 += v * b12;\n  t27 += v * b13;\n  t28 += v * b14;\n  t29 += v * b15;\n  v = a[15];\n  t15 += v * b0;\n  t16 += v * b1;\n  t17 += v * b2;\n  t18 += v * b3;\n  t19 += v * b4;\n  t20 += v * b5;\n  t21 += v * b6;\n  t22 += v * b7;\n  t23 += v * b8;\n  t24 += v * b9;\n  t25 += v * b10;\n  t26 += v * b11;\n  t27 += v * b12;\n  t28 += v * b13;\n  t29 += v * b14;\n  t30 += v * b15;\n\n  t0  += 38 * t16;\n  t1  += 38 * t17;\n  t2  += 38 * t18;\n  t3  += 38 * t19;\n  t4  += 38 * t20;\n  t5  += 38 * t21;\n  t6  += 38 * t22;\n  t7  += 38 * t23;\n  t8  += 38 * t24;\n  t9  += 38 * t25;\n  t10 += 38 * t26;\n  t11 += 38 * t27;\n  t12 += 38 * t28;\n  t13 += 38 * t29;\n  t14 += 38 * t30;\n  // t15 left as is\n\n  // first car\n  c = 1;\n  v =  t0 + c + 65535; c = Math.floor(v / 65536);  t0 = v - c * 65536;\n  v =  t1 + c + 65535; c = Math.floor(v / 65536);  t1 = v - c * 65536;\n  v =  t2 + c + 65535; c = Math.floor(v / 65536);  t2 = v - c * 65536;\n  v =  t3 + c + 65535; c = Math.floor(v / 65536);  t3 = v - c * 65536;\n  v =  t4 + c + 65535; c = Math.floor(v / 65536);  t4 = v - c * 65536;\n  v =  t5 + c + 65535; c = Math.floor(v / 65536);  t5 = v - c * 65536;\n  v =  t6 + c + 65535; c = Math.floor(v / 65536);  t6 = v - c * 65536;\n  v =  t7 + c + 65535; c = Math.floor(v / 65536);  t7 = v - c * 65536;\n  v =  t8 + c + 65535; c = Math.floor(v / 65536);  t8 = v - c * 65536;\n  v =  t9 + c + 65535; c = Math.floor(v / 65536);  t9 = v - c * 65536;\n  v = t10 + c + 65535; c = Math.floor(v / 65536); t10 = v - c * 65536;\n  v = t11 + c + 65535; c = Math.floor(v / 65536); t11 = v - c * 65536;\n  v = t12 + c + 65535; c = Math.floor(v / 65536); t12 = v - c * 65536;\n  v = t13 + c + 65535; c = Math.floor(v / 65536); t13 = v - c * 65536;\n  v = t14 + c + 65535; c = Math.floor(v / 65536); t14 = v - c * 65536;\n  v = t15 + c + 65535; c = Math.floor(v / 65536); t15 = v - c * 65536;\n  t0 += c-1 + 37 * (c-1);\n\n  // second car\n  c = 1;\n  v =  t0 + c + 65535; c = Math.floor(v / 65536);  t0 = v - c * 65536;\n  v =  t1 + c + 65535; c = Math.floor(v / 65536);  t1 = v - c * 65536;\n  v =  t2 + c + 65535; c = Math.floor(v / 65536);  t2 = v - c * 65536;\n  v =  t3 + c + 65535; c = Math.floor(v / 65536);  t3 = v - c * 65536;\n  v =  t4 + c + 65535; c = Math.floor(v / 65536);  t4 = v - c * 65536;\n  v =  t5 + c + 65535; c = Math.floor(v / 65536);  t5 = v - c * 65536;\n  v =  t6 + c + 65535; c = Math.floor(v / 65536);  t6 = v - c * 65536;\n  v =  t7 + c + 65535; c = Math.floor(v / 65536);  t7 = v - c * 65536;\n  v =  t8 + c + 65535; c = Math.floor(v / 65536);  t8 = v - c * 65536;\n  v =  t9 + c + 65535; c = Math.floor(v / 65536);  t9 = v - c * 65536;\n  v = t10 + c + 65535; c = Math.floor(v / 65536); t10 = v - c * 65536;\n  v = t11 + c + 65535; c = Math.floor(v / 65536); t11 = v - c * 65536;\n  v = t12 + c + 65535; c = Math.floor(v / 65536); t12 = v - c * 65536;\n  v = t13 + c + 65535; c = Math.floor(v / 65536); t13 = v - c * 65536;\n  v = t14 + c + 65535; c = Math.floor(v / 65536); t14 = v - c * 65536;\n  v = t15 + c + 65535; c = Math.floor(v / 65536); t15 = v - c * 65536;\n  t0 += c-1 + 37 * (c-1);\n\n  o[ 0] = t0;\n  o[ 1] = t1;\n  o[ 2] = t2;\n  o[ 3] = t3;\n  o[ 4] = t4;\n  o[ 5] = t5;\n  o[ 6] = t6;\n  o[ 7] = t7;\n  o[ 8] = t8;\n  o[ 9] = t9;\n  o[10] = t10;\n  o[11] = t11;\n  o[12] = t12;\n  o[13] = t13;\n  o[14] = t14;\n  o[15] = t15;\n}\n\nfunction S(o, a) {\n  M(o, a, a);\n}\n\nfunction inv25519(o, i) {\n  var c = gf();\n  var a;\n  for (a = 0; a < 16; a++) c[a] = i[a];\n  for (a = 253; a >= 0; a--) {\n    S(c, c);\n    if(a !== 2 && a !== 4) M(c, c, i);\n  }\n  for (a = 0; a < 16; a++) o[a] = c[a];\n}\n\nfunction pow2523(o, i) {\n  var c = gf();\n  var a;\n  for (a = 0; a < 16; a++) c[a] = i[a];\n  for (a = 250; a >= 0; a--) {\n      S(c, c);\n      if(a !== 1) M(c, c, i);\n  }\n  for (a = 0; a < 16; a++) o[a] = c[a];\n}\n\nfunction crypto_scalarmult(q, n, p) {\n  var z = new Uint8Array(32);\n  var x = new Float64Array(80), r, i;\n  var a = gf(), b = gf(), c = gf(),\n      d = gf(), e = gf(), f = gf();\n  for (i = 0; i < 31; i++) z[i] = n[i];\n  z[31]=(n[31]&127)|64;\n  z[0]&=248;\n  unpack25519(x,p);\n  for (i = 0; i < 16; i++) {\n    b[i]=x[i];\n    d[i]=a[i]=c[i]=0;\n  }\n  a[0]=d[0]=1;\n  for (i=254; i>=0; --i) {\n    r=(z[i>>>3]>>>(i&7))&1;\n    sel25519(a,b,r);\n    sel25519(c,d,r);\n    A(e,a,c);\n    Z(a,a,c);\n    A(c,b,d);\n    Z(b,b,d);\n    S(d,e);\n    S(f,a);\n    M(a,c,a);\n    M(c,b,e);\n    A(e,a,c);\n    Z(a,a,c);\n    S(b,a);\n    Z(c,d,f);\n    M(a,c,_121665);\n    A(a,a,d);\n    M(c,c,a);\n    M(a,d,f);\n    M(d,b,x);\n    S(b,e);\n    sel25519(a,b,r);\n    sel25519(c,d,r);\n  }\n  for (i = 0; i < 16; i++) {\n    x[i+16]=a[i];\n    x[i+32]=c[i];\n    x[i+48]=b[i];\n    x[i+64]=d[i];\n  }\n  var x32 = x.subarray(32);\n  var x16 = x.subarray(16);\n  inv25519(x32,x32);\n  M(x16,x16,x32);\n  pack25519(q,x16);\n  return 0;\n}\n\nfunction crypto_scalarmult_base(q, n) {\n  return crypto_scalarmult(q, n, _9);\n}\n\nfunction crypto_box_keypair(y, x) {\n  randombytes(x, 32);\n  return crypto_scalarmult_base(y, x);\n}\n\nfunction crypto_box_beforenm(k, y, x) {\n  var s = new Uint8Array(32);\n  crypto_scalarmult(s, x, y);\n  return crypto_core_hsalsa20(k, _0, s, sigma);\n}\n\nvar crypto_box_afternm = crypto_secretbox;\nvar crypto_box_open_afternm = crypto_secretbox_open;\n\nfunction crypto_box(c, m, d, n, y, x) {\n  var k = new Uint8Array(32);\n  crypto_box_beforenm(k, y, x);\n  return crypto_box_afternm(c, m, d, n, k);\n}\n\nfunction crypto_box_open(m, c, d, n, y, x) {\n  var k = new Uint8Array(32);\n  crypto_box_beforenm(k, y, x);\n  return crypto_box_open_afternm(m, c, d, n, k);\n}\n\nvar K = [\n  0x428a2f98, 0xd728ae22, 0x71374491, 0x23ef65cd,\n  0xb5c0fbcf, 0xec4d3b2f, 0xe9b5dba5, 0x8189dbbc,\n  0x3956c25b, 0xf348b538, 0x59f111f1, 0xb605d019,\n  0x923f82a4, 0xaf194f9b, 0xab1c5ed5, 0xda6d8118,\n  0xd807aa98, 0xa3030242, 0x12835b01, 0x45706fbe,\n  0x243185be, 0x4ee4b28c, 0x550c7dc3, 0xd5ffb4e2,\n  0x72be5d74, 0xf27b896f, 0x80deb1fe, 0x3b1696b1,\n  0x9bdc06a7, 0x25c71235, 0xc19bf174, 0xcf692694,\n  0xe49b69c1, 0x9ef14ad2, 0xefbe4786, 0x384f25e3,\n  0x0fc19dc6, 0x8b8cd5b5, 0x240ca1cc, 0x77ac9c65,\n  0x2de92c6f, 0x592b0275, 0x4a7484aa, 0x6ea6e483,\n  0x5cb0a9dc, 0xbd41fbd4, 0x76f988da, 0x831153b5,\n  0x983e5152, 0xee66dfab, 0xa831c66d, 0x2db43210,\n  0xb00327c8, 0x98fb213f, 0xbf597fc7, 0xbeef0ee4,\n  0xc6e00bf3, 0x3da88fc2, 0xd5a79147, 0x930aa725,\n  0x06ca6351, 0xe003826f, 0x14292967, 0x0a0e6e70,\n  0x27b70a85, 0x46d22ffc, 0x2e1b2138, 0x5c26c926,\n  0x4d2c6dfc, 0x5ac42aed, 0x53380d13, 0x9d95b3df,\n  0x650a7354, 0x8baf63de, 0x766a0abb, 0x3c77b2a8,\n  0x81c2c92e, 0x47edaee6, 0x92722c85, 0x1482353b,\n  0xa2bfe8a1, 0x4cf10364, 0xa81a664b, 0xbc423001,\n  0xc24b8b70, 0xd0f89791, 0xc76c51a3, 0x0654be30,\n  0xd192e819, 0xd6ef5218, 0xd6990624, 0x5565a910,\n  0xf40e3585, 0x5771202a, 0x106aa070, 0x32bbd1b8,\n  0x19a4c116, 0xb8d2d0c8, 0x1e376c08, 0x5141ab53,\n  0x2748774c, 0xdf8eeb99, 0x34b0bcb5, 0xe19b48a8,\n  0x391c0cb3, 0xc5c95a63, 0x4ed8aa4a, 0xe3418acb,\n  0x5b9cca4f, 0x7763e373, 0x682e6ff3, 0xd6b2b8a3,\n  0x748f82ee, 0x5defb2fc, 0x78a5636f, 0x43172f60,\n  0x84c87814, 0xa1f0ab72, 0x8cc70208, 0x1a6439ec,\n  0x90befffa, 0x23631e28, 0xa4506ceb, 0xde82bde9,\n  0xbef9a3f7, 0xb2c67915, 0xc67178f2, 0xe372532b,\n  0xca273ece, 0xea26619c, 0xd186b8c7, 0x21c0c207,\n  0xeada7dd6, 0xcde0eb1e, 0xf57d4f7f, 0xee6ed178,\n  0x06f067aa, 0x72176fba, 0x0a637dc5, 0xa2c898a6,\n  0x113f9804, 0xbef90dae, 0x1b710b35, 0x131c471b,\n  0x28db77f5, 0x23047d84, 0x32caab7b, 0x40c72493,\n  0x3c9ebe0a, 0x15c9bebc, 0x431d67c4, 0x9c100d4c,\n  0x4cc5d4be, 0xcb3e42b6, 0x597f299c, 0xfc657e2a,\n  0x5fcb6fab, 0x3ad6faec, 0x6c44198c, 0x4a475817\n];\n\nfunction crypto_hashblocks_hl(hh, hl, m, n) {\n  var wh = new Int32Array(16), wl = new Int32Array(16),\n      bh0, bh1, bh2, bh3, bh4, bh5, bh6, bh7,\n      bl0, bl1, bl2, bl3, bl4, bl5, bl6, bl7,\n      th, tl, i, j, h, l, a, b, c, d;\n\n  var ah0 = hh[0],\n      ah1 = hh[1],\n      ah2 = hh[2],\n      ah3 = hh[3],\n      ah4 = hh[4],\n      ah5 = hh[5],\n      ah6 = hh[6],\n      ah7 = hh[7],\n\n      al0 = hl[0],\n      al1 = hl[1],\n      al2 = hl[2],\n      al3 = hl[3],\n      al4 = hl[4],\n      al5 = hl[5],\n      al6 = hl[6],\n      al7 = hl[7];\n\n  var pos = 0;\n  while (n >= 128) {\n    for (i = 0; i < 16; i++) {\n      j = 8 * i + pos;\n      wh[i] = (m[j+0] << 24) | (m[j+1] << 16) | (m[j+2] << 8) | m[j+3];\n      wl[i] = (m[j+4] << 24) | (m[j+5] << 16) | (m[j+6] << 8) | m[j+7];\n    }\n    for (i = 0; i < 80; i++) {\n      bh0 = ah0;\n      bh1 = ah1;\n      bh2 = ah2;\n      bh3 = ah3;\n      bh4 = ah4;\n      bh5 = ah5;\n      bh6 = ah6;\n      bh7 = ah7;\n\n      bl0 = al0;\n      bl1 = al1;\n      bl2 = al2;\n      bl3 = al3;\n      bl4 = al4;\n      bl5 = al5;\n      bl6 = al6;\n      bl7 = al7;\n\n      // add\n      h = ah7;\n      l = al7;\n\n      a = l & 0xffff; b = l >>> 16;\n      c = h & 0xffff; d = h >>> 16;\n\n      // Sigma1\n      h = ((ah4 >>> 14) | (al4 << (32-14))) ^ ((ah4 >>> 18) | (al4 << (32-18))) ^ ((al4 >>> (41-32)) | (ah4 << (32-(41-32))));\n      l = ((al4 >>> 14) | (ah4 << (32-14))) ^ ((al4 >>> 18) | (ah4 << (32-18))) ^ ((ah4 >>> (41-32)) | (al4 << (32-(41-32))));\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      // Ch\n      h = (ah4 & ah5) ^ (~ah4 & ah6);\n      l = (al4 & al5) ^ (~al4 & al6);\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      // K\n      h = K[i*2];\n      l = K[i*2+1];\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      // w\n      h = wh[i%16];\n      l = wl[i%16];\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      b += a >>> 16;\n      c += b >>> 16;\n      d += c >>> 16;\n\n      th = c & 0xffff | d << 16;\n      tl = a & 0xffff | b << 16;\n\n      // add\n      h = th;\n      l = tl;\n\n      a = l & 0xffff; b = l >>> 16;\n      c = h & 0xffff; d = h >>> 16;\n\n      // Sigma0\n      h = ((ah0 >>> 28) | (al0 << (32-28))) ^ ((al0 >>> (34-32)) | (ah0 << (32-(34-32)))) ^ ((al0 >>> (39-32)) | (ah0 << (32-(39-32))));\n      l = ((al0 >>> 28) | (ah0 << (32-28))) ^ ((ah0 >>> (34-32)) | (al0 << (32-(34-32)))) ^ ((ah0 >>> (39-32)) | (al0 << (32-(39-32))));\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      // Maj\n      h = (ah0 & ah1) ^ (ah0 & ah2) ^ (ah1 & ah2);\n      l = (al0 & al1) ^ (al0 & al2) ^ (al1 & al2);\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      b += a >>> 16;\n      c += b >>> 16;\n      d += c >>> 16;\n\n      bh7 = (c & 0xffff) | (d << 16);\n      bl7 = (a & 0xffff) | (b << 16);\n\n      // add\n      h = bh3;\n      l = bl3;\n\n      a = l & 0xffff; b = l >>> 16;\n      c = h & 0xffff; d = h >>> 16;\n\n      h = th;\n      l = tl;\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      b += a >>> 16;\n      c += b >>> 16;\n      d += c >>> 16;\n\n      bh3 = (c & 0xffff) | (d << 16);\n      bl3 = (a & 0xffff) | (b << 16);\n\n      ah1 = bh0;\n      ah2 = bh1;\n      ah3 = bh2;\n      ah4 = bh3;\n      ah5 = bh4;\n      ah6 = bh5;\n      ah7 = bh6;\n      ah0 = bh7;\n\n      al1 = bl0;\n      al2 = bl1;\n      al3 = bl2;\n      al4 = bl3;\n      al5 = bl4;\n      al6 = bl5;\n      al7 = bl6;\n      al0 = bl7;\n\n      if (i%16 === 15) {\n        for (j = 0; j < 16; j++) {\n          // add\n          h = wh[j];\n          l = wl[j];\n\n          a = l & 0xffff; b = l >>> 16;\n          c = h & 0xffff; d = h >>> 16;\n\n          h = wh[(j+9)%16];\n          l = wl[(j+9)%16];\n\n          a += l & 0xffff; b += l >>> 16;\n          c += h & 0xffff; d += h >>> 16;\n\n          // sigma0\n          th = wh[(j+1)%16];\n          tl = wl[(j+1)%16];\n          h = ((th >>> 1) | (tl << (32-1))) ^ ((th >>> 8) | (tl << (32-8))) ^ (th >>> 7);\n          l = ((tl >>> 1) | (th << (32-1))) ^ ((tl >>> 8) | (th << (32-8))) ^ ((tl >>> 7) | (th << (32-7)));\n\n          a += l & 0xffff; b += l >>> 16;\n          c += h & 0xffff; d += h >>> 16;\n\n          // sigma1\n          th = wh[(j+14)%16];\n          tl = wl[(j+14)%16];\n          h = ((th >>> 19) | (tl << (32-19))) ^ ((tl >>> (61-32)) | (th << (32-(61-32)))) ^ (th >>> 6);\n          l = ((tl >>> 19) | (th << (32-19))) ^ ((th >>> (61-32)) | (tl << (32-(61-32)))) ^ ((tl >>> 6) | (th << (32-6)));\n\n          a += l & 0xffff; b += l >>> 16;\n          c += h & 0xffff; d += h >>> 16;\n\n          b += a >>> 16;\n          c += b >>> 16;\n          d += c >>> 16;\n\n          wh[j] = (c & 0xffff) | (d << 16);\n          wl[j] = (a & 0xffff) | (b << 16);\n        }\n      }\n    }\n\n    // add\n    h = ah0;\n    l = al0;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[0];\n    l = hl[0];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[0] = ah0 = (c & 0xffff) | (d << 16);\n    hl[0] = al0 = (a & 0xffff) | (b << 16);\n\n    h = ah1;\n    l = al1;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[1];\n    l = hl[1];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[1] = ah1 = (c & 0xffff) | (d << 16);\n    hl[1] = al1 = (a & 0xffff) | (b << 16);\n\n    h = ah2;\n    l = al2;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[2];\n    l = hl[2];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[2] = ah2 = (c & 0xffff) | (d << 16);\n    hl[2] = al2 = (a & 0xffff) | (b << 16);\n\n    h = ah3;\n    l = al3;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[3];\n    l = hl[3];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[3] = ah3 = (c & 0xffff) | (d << 16);\n    hl[3] = al3 = (a & 0xffff) | (b << 16);\n\n    h = ah4;\n    l = al4;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[4];\n    l = hl[4];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[4] = ah4 = (c & 0xffff) | (d << 16);\n    hl[4] = al4 = (a & 0xffff) | (b << 16);\n\n    h = ah5;\n    l = al5;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[5];\n    l = hl[5];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[5] = ah5 = (c & 0xffff) | (d << 16);\n    hl[5] = al5 = (a & 0xffff) | (b << 16);\n\n    h = ah6;\n    l = al6;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[6];\n    l = hl[6];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[6] = ah6 = (c & 0xffff) | (d << 16);\n    hl[6] = al6 = (a & 0xffff) | (b << 16);\n\n    h = ah7;\n    l = al7;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[7];\n    l = hl[7];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[7] = ah7 = (c & 0xffff) | (d << 16);\n    hl[7] = al7 = (a & 0xffff) | (b << 16);\n\n    pos += 128;\n    n -= 128;\n  }\n\n  return n;\n}\n\nfunction crypto_hash(out, m, n) {\n  var hh = new Int32Array(8),\n      hl = new Int32Array(8),\n      x = new Uint8Array(256),\n      i, b = n;\n\n  hh[0] = 0x6a09e667;\n  hh[1] = 0xbb67ae85;\n  hh[2] = 0x3c6ef372;\n  hh[3] = 0xa54ff53a;\n  hh[4] = 0x510e527f;\n  hh[5] = 0x9b05688c;\n  hh[6] = 0x1f83d9ab;\n  hh[7] = 0x5be0cd19;\n\n  hl[0] = 0xf3bcc908;\n  hl[1] = 0x84caa73b;\n  hl[2] = 0xfe94f82b;\n  hl[3] = 0x5f1d36f1;\n  hl[4] = 0xade682d1;\n  hl[5] = 0x2b3e6c1f;\n  hl[6] = 0xfb41bd6b;\n  hl[7] = 0x137e2179;\n\n  crypto_hashblocks_hl(hh, hl, m, n);\n  n %= 128;\n\n  for (i = 0; i < n; i++) x[i] = m[b-n+i];\n  x[n] = 128;\n\n  n = 256-128*(n<112?1:0);\n  x[n-9] = 0;\n  ts64(x, n-8,  (b / 0x20000000) | 0, b << 3);\n  crypto_hashblocks_hl(hh, hl, x, n);\n\n  for (i = 0; i < 8; i++) ts64(out, 8*i, hh[i], hl[i]);\n\n  return 0;\n}\n\nfunction add(p, q) {\n  var a = gf(), b = gf(), c = gf(),\n      d = gf(), e = gf(), f = gf(),\n      g = gf(), h = gf(), t = gf();\n\n  Z(a, p[1], p[0]);\n  Z(t, q[1], q[0]);\n  M(a, a, t);\n  A(b, p[0], p[1]);\n  A(t, q[0], q[1]);\n  M(b, b, t);\n  M(c, p[3], q[3]);\n  M(c, c, D2);\n  M(d, p[2], q[2]);\n  A(d, d, d);\n  Z(e, b, a);\n  Z(f, d, c);\n  A(g, d, c);\n  A(h, b, a);\n\n  M(p[0], e, f);\n  M(p[1], h, g);\n  M(p[2], g, f);\n  M(p[3], e, h);\n}\n\nfunction cswap(p, q, b) {\n  var i;\n  for (i = 0; i < 4; i++) {\n    sel25519(p[i], q[i], b);\n  }\n}\n\nfunction pack(r, p) {\n  var tx = gf(), ty = gf(), zi = gf();\n  inv25519(zi, p[2]);\n  M(tx, p[0], zi);\n  M(ty, p[1], zi);\n  pack25519(r, ty);\n  r[31] ^= par25519(tx) << 7;\n}\n\nfunction scalarmult(p, q, s) {\n  var b, i;\n  set25519(p[0], gf0);\n  set25519(p[1], gf1);\n  set25519(p[2], gf1);\n  set25519(p[3], gf0);\n  for (i = 255; i >= 0; --i) {\n    b = (s[(i/8)|0] >> (i&7)) & 1;\n    cswap(p, q, b);\n    add(q, p);\n    add(p, p);\n    cswap(p, q, b);\n  }\n}\n\nfunction scalarbase(p, s) {\n  var q = [gf(), gf(), gf(), gf()];\n  set25519(q[0], X);\n  set25519(q[1], Y);\n  set25519(q[2], gf1);\n  M(q[3], X, Y);\n  scalarmult(p, q, s);\n}\n\nfunction crypto_sign_keypair(pk, sk, seeded) {\n  var d = new Uint8Array(64);\n  var p = [gf(), gf(), gf(), gf()];\n  var i;\n\n  if (!seeded) randombytes(sk, 32);\n  crypto_hash(d, sk, 32);\n  d[0] &= 248;\n  d[31] &= 127;\n  d[31] |= 64;\n\n  scalarbase(p, d);\n  pack(pk, p);\n\n  for (i = 0; i < 32; i++) sk[i+32] = pk[i];\n  return 0;\n}\n\nvar L = new Float64Array([0xed, 0xd3, 0xf5, 0x5c, 0x1a, 0x63, 0x12, 0x58, 0xd6, 0x9c, 0xf7, 0xa2, 0xde, 0xf9, 0xde, 0x14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0x10]);\n\nfunction modL(r, x) {\n  var carry, i, j, k;\n  for (i = 63; i >= 32; --i) {\n    carry = 0;\n    for (j = i - 32, k = i - 12; j < k; ++j) {\n      x[j] += carry - 16 * x[i] * L[j - (i - 32)];\n      carry = Math.floor((x[j] + 128) / 256);\n      x[j] -= carry * 256;\n    }\n    x[j] += carry;\n    x[i] = 0;\n  }\n  carry = 0;\n  for (j = 0; j < 32; j++) {\n    x[j] += carry - (x[31] >> 4) * L[j];\n    carry = x[j] >> 8;\n    x[j] &= 255;\n  }\n  for (j = 0; j < 32; j++) x[j] -= carry * L[j];\n  for (i = 0; i < 32; i++) {\n    x[i+1] += x[i] >> 8;\n    r[i] = x[i] & 255;\n  }\n}\n\nfunction reduce(r) {\n  var x = new Float64Array(64), i;\n  for (i = 0; i < 64; i++) x[i] = r[i];\n  for (i = 0; i < 64; i++) r[i] = 0;\n  modL(r, x);\n}\n\n// Note: difference from C - smlen returned, not passed as argument.\nfunction crypto_sign(sm, m, n, sk) {\n  var d = new Uint8Array(64), h = new Uint8Array(64), r = new Uint8Array(64);\n  var i, j, x = new Float64Array(64);\n  var p = [gf(), gf(), gf(), gf()];\n\n  crypto_hash(d, sk, 32);\n  d[0] &= 248;\n  d[31] &= 127;\n  d[31] |= 64;\n\n  var smlen = n + 64;\n  for (i = 0; i < n; i++) sm[64 + i] = m[i];\n  for (i = 0; i < 32; i++) sm[32 + i] = d[32 + i];\n\n  crypto_hash(r, sm.subarray(32), n+32);\n  reduce(r);\n  scalarbase(p, r);\n  pack(sm, p);\n\n  for (i = 32; i < 64; i++) sm[i] = sk[i];\n  crypto_hash(h, sm, n + 64);\n  reduce(h);\n\n  for (i = 0; i < 64; i++) x[i] = 0;\n  for (i = 0; i < 32; i++) x[i] = r[i];\n  for (i = 0; i < 32; i++) {\n    for (j = 0; j < 32; j++) {\n      x[i+j] += h[i] * d[j];\n    }\n  }\n\n  modL(sm.subarray(32), x);\n  return smlen;\n}\n\nfunction unpackneg(r, p) {\n  var t = gf(), chk = gf(), num = gf(),\n      den = gf(), den2 = gf(), den4 = gf(),\n      den6 = gf();\n\n  set25519(r[2], gf1);\n  unpack25519(r[1], p);\n  S(num, r[1]);\n  M(den, num, D);\n  Z(num, num, r[2]);\n  A(den, r[2], den);\n\n  S(den2, den);\n  S(den4, den2);\n  M(den6, den4, den2);\n  M(t, den6, num);\n  M(t, t, den);\n\n  pow2523(t, t);\n  M(t, t, num);\n  M(t, t, den);\n  M(t, t, den);\n  M(r[0], t, den);\n\n  S(chk, r[0]);\n  M(chk, chk, den);\n  if (neq25519(chk, num)) M(r[0], r[0], I);\n\n  S(chk, r[0]);\n  M(chk, chk, den);\n  if (neq25519(chk, num)) return -1;\n\n  if (par25519(r[0]) === (p[31]>>7)) Z(r[0], gf0, r[0]);\n\n  M(r[3], r[0], r[1]);\n  return 0;\n}\n\nfunction crypto_sign_open(m, sm, n, pk) {\n  var i;\n  var t = new Uint8Array(32), h = new Uint8Array(64);\n  var p = [gf(), gf(), gf(), gf()],\n      q = [gf(), gf(), gf(), gf()];\n\n  if (n < 64) return -1;\n\n  if (unpackneg(q, pk)) return -1;\n\n  for (i = 0; i < n; i++) m[i] = sm[i];\n  for (i = 0; i < 32; i++) m[i+32] = pk[i];\n  crypto_hash(h, m, n);\n  reduce(h);\n  scalarmult(p, q, h);\n\n  scalarbase(q, sm.subarray(32));\n  add(p, q);\n  pack(t, p);\n\n  n -= 64;\n  if (crypto_verify_32(sm, 0, t, 0)) {\n    for (i = 0; i < n; i++) m[i] = 0;\n    return -1;\n  }\n\n  for (i = 0; i < n; i++) m[i] = sm[i + 64];\n  return n;\n}\n\nvar crypto_secretbox_KEYBYTES = 32,\n    crypto_secretbox_NONCEBYTES = 24,\n    crypto_secretbox_ZEROBYTES = 32,\n    crypto_secretbox_BOXZEROBYTES = 16,\n    crypto_scalarmult_BYTES = 32,\n    crypto_scalarmult_SCALARBYTES = 32,\n    crypto_box_PUBLICKEYBYTES = 32,\n    crypto_box_SECRETKEYBYTES = 32,\n    crypto_box_BEFORENMBYTES = 32,\n    crypto_box_NONCEBYTES = crypto_secretbox_NONCEBYTES,\n    crypto_box_ZEROBYTES = crypto_secretbox_ZEROBYTES,\n    crypto_box_BOXZEROBYTES = crypto_secretbox_BOXZEROBYTES,\n    crypto_sign_BYTES = 64,\n    crypto_sign_PUBLICKEYBYTES = 32,\n    crypto_sign_SECRETKEYBYTES = 64,\n    crypto_sign_SEEDBYTES = 32,\n    crypto_hash_BYTES = 64;\n\nnacl.lowlevel = {\n  crypto_core_hsalsa20: crypto_core_hsalsa20,\n  crypto_stream_xor: crypto_stream_xor,\n  crypto_stream: crypto_stream,\n  crypto_stream_salsa20_xor: crypto_stream_salsa20_xor,\n  crypto_stream_salsa20: crypto_stream_salsa20,\n  crypto_onetimeauth: crypto_onetimeauth,\n  crypto_onetimeauth_verify: crypto_onetimeauth_verify,\n  crypto_verify_16: crypto_verify_16,\n  crypto_verify_32: crypto_verify_32,\n  crypto_secretbox: crypto_secretbox,\n  crypto_secretbox_open: crypto_secretbox_open,\n  crypto_scalarmult: crypto_scalarmult,\n  crypto_scalarmult_base: crypto_scalarmult_base,\n  crypto_box_beforenm: crypto_box_beforenm,\n  crypto_box_afternm: crypto_box_afternm,\n  crypto_box: crypto_box,\n  crypto_box_open: crypto_box_open,\n  crypto_box_keypair: crypto_box_keypair,\n  crypto_hash: crypto_hash,\n  crypto_sign: crypto_sign,\n  crypto_sign_keypair: crypto_sign_keypair,\n  crypto_sign_open: crypto_sign_open,\n\n  crypto_secretbox_KEYBYTES: crypto_secretbox_KEYBYTES,\n  crypto_secretbox_NONCEBYTES: crypto_secretbox_NONCEBYTES,\n  crypto_secretbox_ZEROBYTES: crypto_secretbox_ZEROBYTES,\n  crypto_secretbox_BOXZEROBYTES: crypto_secretbox_BOXZEROBYTES,\n  crypto_scalarmult_BYTES: crypto_scalarmult_BYTES,\n  crypto_scalarmult_SCALARBYTES: crypto_scalarmult_SCALARBYTES,\n  crypto_box_PUBLICKEYBYTES: crypto_box_PUBLICKEYBYTES,\n  crypto_box_SECRETKEYBYTES: crypto_box_SECRETKEYBYTES,\n  crypto_box_BEFORENMBYTES: crypto_box_BEFORENMBYTES,\n  crypto_box_NONCEBYTES: crypto_box_NONCEBYTES,\n  crypto_box_ZEROBYTES: crypto_box_ZEROBYTES,\n  crypto_box_BOXZEROBYTES: crypto_box_BOXZEROBYTES,\n  crypto_sign_BYTES: crypto_sign_BYTES,\n  crypto_sign_PUBLICKEYBYTES: crypto_sign_PUBLICKEYBYTES,\n  crypto_sign_SECRETKEYBYTES: crypto_sign_SECRETKEYBYTES,\n  crypto_sign_SEEDBYTES: crypto_sign_SEEDBYTES,\n  crypto_hash_BYTES: crypto_hash_BYTES,\n\n  gf: gf,\n  D: D,\n  L: L,\n  pack25519: pack25519,\n  unpack25519: unpack25519,\n  M: M,\n  A: A,\n  S: S,\n  Z: Z,\n  pow2523: pow2523,\n  add: add,\n  set25519: set25519,\n  modL: modL,\n  scalarmult: scalarmult,\n  scalarbase: scalarbase,\n};\n\n/* High-level API */\n\nfunction checkLengths(k, n) {\n  if (k.length !== crypto_secretbox_KEYBYTES) throw new Error('bad key size');\n  if (n.length !== crypto_secretbox_NONCEBYTES) throw new Error('bad nonce size');\n}\n\nfunction checkBoxLengths(pk, sk) {\n  if (pk.length !== crypto_box_PUBLICKEYBYTES) throw new Error('bad public key size');\n  if (sk.length !== crypto_box_SECRETKEYBYTES) throw new Error('bad secret key size');\n}\n\nfunction checkArrayTypes() {\n  for (var i = 0; i < arguments.length; i++) {\n    if (!(arguments[i] instanceof Uint8Array))\n      throw new TypeError('unexpected type, use Uint8Array');\n  }\n}\n\nfunction cleanup(arr) {\n  for (var i = 0; i < arr.length; i++) arr[i] = 0;\n}\n\nnacl.randomBytes = function(n) {\n  var b = new Uint8Array(n);\n  randombytes(b, n);\n  return b;\n};\n\nnacl.secretbox = function(msg, nonce, key) {\n  checkArrayTypes(msg, nonce, key);\n  checkLengths(key, nonce);\n  var m = new Uint8Array(crypto_secretbox_ZEROBYTES + msg.length);\n  var c = new Uint8Array(m.length);\n  for (var i = 0; i < msg.length; i++) m[i+crypto_secretbox_ZEROBYTES] = msg[i];\n  crypto_secretbox(c, m, m.length, nonce, key);\n  return c.subarray(crypto_secretbox_BOXZEROBYTES);\n};\n\nnacl.secretbox.open = function(box, nonce, key) {\n  checkArrayTypes(box, nonce, key);\n  checkLengths(key, nonce);\n  var c = new Uint8Array(crypto_secretbox_BOXZEROBYTES + box.length);\n  var m = new Uint8Array(c.length);\n  for (var i = 0; i < box.length; i++) c[i+crypto_secretbox_BOXZEROBYTES] = box[i];\n  if (c.length < 32) return null;\n  if (crypto_secretbox_open(m, c, c.length, nonce, key) !== 0) return null;\n  return m.subarray(crypto_secretbox_ZEROBYTES);\n};\n\nnacl.secretbox.keyLength = crypto_secretbox_KEYBYTES;\nnacl.secretbox.nonceLength = crypto_secretbox_NONCEBYTES;\nnacl.secretbox.overheadLength = crypto_secretbox_BOXZEROBYTES;\n\nnacl.scalarMult = function(n, p) {\n  checkArrayTypes(n, p);\n  if (n.length !== crypto_scalarmult_SCALARBYTES) throw new Error('bad n size');\n  if (p.length !== crypto_scalarmult_BYTES) throw new Error('bad p size');\n  var q = new Uint8Array(crypto_scalarmult_BYTES);\n  crypto_scalarmult(q, n, p);\n  return q;\n};\n\nnacl.scalarMult.base = function(n) {\n  checkArrayTypes(n);\n  if (n.length !== crypto_scalarmult_SCALARBYTES) throw new Error('bad n size');\n  var q = new Uint8Array(crypto_scalarmult_BYTES);\n  crypto_scalarmult_base(q, n);\n  return q;\n};\n\nnacl.scalarMult.scalarLength = crypto_scalarmult_SCALARBYTES;\nnacl.scalarMult.groupElementLength = crypto_scalarmult_BYTES;\n\nnacl.box = function(msg, nonce, publicKey, secretKey) {\n  var k = nacl.box.before(publicKey, secretKey);\n  return nacl.secretbox(msg, nonce, k);\n};\n\nnacl.box.before = function(publicKey, secretKey) {\n  checkArrayTypes(publicKey, secretKey);\n  checkBoxLengths(publicKey, secretKey);\n  var k = new Uint8Array(crypto_box_BEFORENMBYTES);\n  crypto_box_beforenm(k, publicKey, secretKey);\n  return k;\n};\n\nnacl.box.after = nacl.secretbox;\n\nnacl.box.open = function(msg, nonce, publicKey, secretKey) {\n  var k = nacl.box.before(publicKey, secretKey);\n  return nacl.secretbox.open(msg, nonce, k);\n};\n\nnacl.box.open.after = nacl.secretbox.open;\n\nnacl.box.keyPair = function() {\n  var pk = new Uint8Array(crypto_box_PUBLICKEYBYTES);\n  var sk = new Uint8Array(crypto_box_SECRETKEYBYTES);\n  crypto_box_keypair(pk, sk);\n  return {publicKey: pk, secretKey: sk};\n};\n\nnacl.box.keyPair.fromSecretKey = function(secretKey) {\n  checkArrayTypes(secretKey);\n  if (secretKey.length !== crypto_box_SECRETKEYBYTES)\n    throw new Error('bad secret key size');\n  var pk = new Uint8Array(crypto_box_PUBLICKEYBYTES);\n  crypto_scalarmult_base(pk, secretKey);\n  return {publicKey: pk, secretKey: new Uint8Array(secretKey)};\n};\n\nnacl.box.publicKeyLength = crypto_box_PUBLICKEYBYTES;\nnacl.box.secretKeyLength = crypto_box_SECRETKEYBYTES;\nnacl.box.sharedKeyLength = crypto_box_BEFORENMBYTES;\nnacl.box.nonceLength = crypto_box_NONCEBYTES;\nnacl.box.overheadLength = nacl.secretbox.overheadLength;\n\nnacl.sign = function(msg, secretKey) {\n  checkArrayTypes(msg, secretKey);\n  if (secretKey.length !== crypto_sign_SECRETKEYBYTES)\n    throw new Error('bad secret key size');\n  var signedMsg = new Uint8Array(crypto_sign_BYTES+msg.length);\n  crypto_sign(signedMsg, msg, msg.length, secretKey);\n  return signedMsg;\n};\n\nnacl.sign.open = function(signedMsg, publicKey) {\n  checkArrayTypes(signedMsg, publicKey);\n  if (publicKey.length !== crypto_sign_PUBLICKEYBYTES)\n    throw new Error('bad public key size');\n  var tmp = new Uint8Array(signedMsg.length);\n  var mlen = crypto_sign_open(tmp, signedMsg, signedMsg.length, publicKey);\n  if (mlen < 0) return null;\n  var m = new Uint8Array(mlen);\n  for (var i = 0; i < m.length; i++) m[i] = tmp[i];\n  return m;\n};\n\nnacl.sign.detached = function(msg, secretKey) {\n  var signedMsg = nacl.sign(msg, secretKey);\n  var sig = new Uint8Array(crypto_sign_BYTES);\n  for (var i = 0; i < sig.length; i++) sig[i] = signedMsg[i];\n  return sig;\n};\n\nnacl.sign.detached.verify = function(msg, sig, publicKey) {\n  checkArrayTypes(msg, sig, publicKey);\n  if (sig.length !== crypto_sign_BYTES)\n    throw new Error('bad signature size');\n  if (publicKey.length !== crypto_sign_PUBLICKEYBYTES)\n    throw new Error('bad public key size');\n  var sm = new Uint8Array(crypto_sign_BYTES + msg.length);\n  var m = new Uint8Array(crypto_sign_BYTES + msg.length);\n  var i;\n  for (i = 0; i < crypto_sign_BYTES; i++) sm[i] = sig[i];\n  for (i = 0; i < msg.length; i++) sm[i+crypto_sign_BYTES] = msg[i];\n  return (crypto_sign_open(m, sm, sm.length, publicKey) >= 0);\n};\n\nnacl.sign.keyPair = function() {\n  var pk = new Uint8Array(crypto_sign_PUBLICKEYBYTES);\n  var sk = new Uint8Array(crypto_sign_SECRETKEYBYTES);\n  crypto_sign_keypair(pk, sk);\n  return {publicKey: pk, secretKey: sk};\n};\n\nnacl.sign.keyPair.fromSecretKey = function(secretKey) {\n  checkArrayTypes(secretKey);\n  if (secretKey.length !== crypto_sign_SECRETKEYBYTES)\n    throw new Error('bad secret key size');\n  var pk = new Uint8Array(crypto_sign_PUBLICKEYBYTES);\n  for (var i = 0; i < pk.length; i++) pk[i] = secretKey[32+i];\n  return {publicKey: pk, secretKey: new Uint8Array(secretKey)};\n};\n\nnacl.sign.keyPair.fromSeed = function(seed) {\n  checkArrayTypes(seed);\n  if (seed.length !== crypto_sign_SEEDBYTES)\n    throw new Error('bad seed size');\n  var pk = new Uint8Array(crypto_sign_PUBLICKEYBYTES);\n  var sk = new Uint8Array(crypto_sign_SECRETKEYBYTES);\n  for (var i = 0; i < 32; i++) sk[i] = seed[i];\n  crypto_sign_keypair(pk, sk, true);\n  return {publicKey: pk, secretKey: sk};\n};\n\nnacl.sign.publicKeyLength = crypto_sign_PUBLICKEYBYTES;\nnacl.sign.secretKeyLength = crypto_sign_SECRETKEYBYTES;\nnacl.sign.seedLength = crypto_sign_SEEDBYTES;\nnacl.sign.signatureLength = crypto_sign_BYTES;\n\nnacl.hash = function(msg) {\n  checkArrayTypes(msg);\n  var h = new Uint8Array(crypto_hash_BYTES);\n  crypto_hash(h, msg, msg.length);\n  return h;\n};\n\nnacl.hash.hashLength = crypto_hash_BYTES;\n\nnacl.verify = function(x, y) {\n  checkArrayTypes(x, y);\n  // Zero length arguments are considered not equal.\n  if (x.length === 0 || y.length === 0) return false;\n  if (x.length !== y.length) return false;\n  return (vn(x, 0, y, 0, x.length) === 0) ? true : false;\n};\n\nnacl.setPRNG = function(fn) {\n  randombytes = fn;\n};\n\n(function() {\n  // Initialize PRNG if environment provides CSPRNG.\n  // If not, methods calling randombytes will throw.\n  var crypto = typeof self !== 'undefined' ? (self.crypto || self.msCrypto) : null;\n  if (crypto && crypto.getRandomValues) {\n    // Browsers.\n    var QUOTA = 65536;\n    nacl.setPRNG(function(x, n) {\n      var i, v = new Uint8Array(n);\n      for (i = 0; i < n; i += QUOTA) {\n        crypto.getRandomValues(v.subarray(i, i + Math.min(n - i, QUOTA)));\n      }\n      for (i = 0; i < n; i++) x[i] = v[i];\n      cleanup(v);\n    });\n  } else if (true) {\n    // Node.js.\n    crypto = __webpack_require__(/*! crypto */ \"?5ddf\");\n    if (crypto && crypto.randomBytes) {\n      nacl.setPRNG(function(x, n) {\n        var i, v = crypto.randomBytes(n);\n        for (i = 0; i < n; i++) x[i] = v[i];\n        cleanup(v);\n      });\n    }\n  }\n})();\n\n})( true && module.exports ? module.exports : (self.nacl = self.nacl || {}));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/tweetnacl/nacl-fast.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/ua-parser-js/src/ua-parser.js":
/*!****************************************************!*\
  !*** ./node_modules/ua-parser-js/src/ua-parser.js ***!
  \****************************************************/
/***/ (function(module, exports, __webpack_require__) {

eval(__webpack_require__.ts("var __WEBPACK_AMD_DEFINE_RESULT__;/////////////////////////////////////////////////////////////////////////////////\n/* UAParser.js v1.0.39\n   Copyright © 2012-2021 Faisal Salman <f@faisalman.com>\n   MIT License *//*\n   Detect Browser, Engine, OS, CPU, and Device type/model from User-Agent data.\n   Supports browser & node.js environment. \n   Demo   : https://faisalman.github.io/ua-parser-js\n   Source : https://github.com/faisalman/ua-parser-js */\n/////////////////////////////////////////////////////////////////////////////////\n\n(function (window, undefined) {\n\n    'use strict';\n\n    //////////////\n    // Constants\n    /////////////\n\n\n    var LIBVERSION  = '1.0.39',\n        EMPTY       = '',\n        UNKNOWN     = '?',\n        FUNC_TYPE   = 'function',\n        UNDEF_TYPE  = 'undefined',\n        OBJ_TYPE    = 'object',\n        STR_TYPE    = 'string',\n        MAJOR       = 'major',\n        MODEL       = 'model',\n        NAME        = 'name',\n        TYPE        = 'type',\n        VENDOR      = 'vendor',\n        VERSION     = 'version',\n        ARCHITECTURE= 'architecture',\n        CONSOLE     = 'console',\n        MOBILE      = 'mobile',\n        TABLET      = 'tablet',\n        SMARTTV     = 'smarttv',\n        WEARABLE    = 'wearable',\n        EMBEDDED    = 'embedded',\n        UA_MAX_LENGTH = 500;\n\n    var AMAZON  = 'Amazon',\n        APPLE   = 'Apple',\n        ASUS    = 'ASUS',\n        BLACKBERRY = 'BlackBerry',\n        BROWSER = 'Browser',\n        CHROME  = 'Chrome',\n        EDGE    = 'Edge',\n        FIREFOX = 'Firefox',\n        GOOGLE  = 'Google',\n        HUAWEI  = 'Huawei',\n        LG      = 'LG',\n        MICROSOFT = 'Microsoft',\n        MOTOROLA  = 'Motorola',\n        OPERA   = 'Opera',\n        SAMSUNG = 'Samsung',\n        SHARP   = 'Sharp',\n        SONY    = 'Sony',\n        XIAOMI  = 'Xiaomi',\n        ZEBRA   = 'Zebra',\n        FACEBOOK    = 'Facebook',\n        CHROMIUM_OS = 'Chromium OS',\n        MAC_OS  = 'Mac OS',\n        SUFFIX_BROWSER = ' Browser';\n\n    ///////////\n    // Helper\n    //////////\n\n    var extend = function (regexes, extensions) {\n            var mergedRegexes = {};\n            for (var i in regexes) {\n                if (extensions[i] && extensions[i].length % 2 === 0) {\n                    mergedRegexes[i] = extensions[i].concat(regexes[i]);\n                } else {\n                    mergedRegexes[i] = regexes[i];\n                }\n            }\n            return mergedRegexes;\n        },\n        enumerize = function (arr) {\n            var enums = {};\n            for (var i=0; i<arr.length; i++) {\n                enums[arr[i].toUpperCase()] = arr[i];\n            }\n            return enums;\n        },\n        has = function (str1, str2) {\n            return typeof str1 === STR_TYPE ? lowerize(str2).indexOf(lowerize(str1)) !== -1 : false;\n        },\n        lowerize = function (str) {\n            return str.toLowerCase();\n        },\n        majorize = function (version) {\n            return typeof(version) === STR_TYPE ? version.replace(/[^\\d\\.]/g, EMPTY).split('.')[0] : undefined;\n        },\n        trim = function (str, len) {\n            if (typeof(str) === STR_TYPE) {\n                str = str.replace(/^\\s\\s*/, EMPTY);\n                return typeof(len) === UNDEF_TYPE ? str : str.substring(0, UA_MAX_LENGTH);\n            }\n    };\n\n    ///////////////\n    // Map helper\n    //////////////\n\n    var rgxMapper = function (ua, arrays) {\n\n            var i = 0, j, k, p, q, matches, match;\n\n            // loop through all regexes maps\n            while (i < arrays.length && !matches) {\n\n                var regex = arrays[i],       // even sequence (0,2,4,..)\n                    props = arrays[i + 1];   // odd sequence (1,3,5,..)\n                j = k = 0;\n\n                // try matching uastring with regexes\n                while (j < regex.length && !matches) {\n\n                    if (!regex[j]) { break; }\n                    matches = regex[j++].exec(ua);\n\n                    if (!!matches) {\n                        for (p = 0; p < props.length; p++) {\n                            match = matches[++k];\n                            q = props[p];\n                            // check if given property is actually array\n                            if (typeof q === OBJ_TYPE && q.length > 0) {\n                                if (q.length === 2) {\n                                    if (typeof q[1] == FUNC_TYPE) {\n                                        // assign modified match\n                                        this[q[0]] = q[1].call(this, match);\n                                    } else {\n                                        // assign given value, ignore regex match\n                                        this[q[0]] = q[1];\n                                    }\n                                } else if (q.length === 3) {\n                                    // check whether function or regex\n                                    if (typeof q[1] === FUNC_TYPE && !(q[1].exec && q[1].test)) {\n                                        // call function (usually string mapper)\n                                        this[q[0]] = match ? q[1].call(this, match, q[2]) : undefined;\n                                    } else {\n                                        // sanitize match using given regex\n                                        this[q[0]] = match ? match.replace(q[1], q[2]) : undefined;\n                                    }\n                                } else if (q.length === 4) {\n                                        this[q[0]] = match ? q[3].call(this, match.replace(q[1], q[2])) : undefined;\n                                }\n                            } else {\n                                this[q] = match ? match : undefined;\n                            }\n                        }\n                    }\n                }\n                i += 2;\n            }\n        },\n\n        strMapper = function (str, map) {\n\n            for (var i in map) {\n                // check if current value is array\n                if (typeof map[i] === OBJ_TYPE && map[i].length > 0) {\n                    for (var j = 0; j < map[i].length; j++) {\n                        if (has(map[i][j], str)) {\n                            return (i === UNKNOWN) ? undefined : i;\n                        }\n                    }\n                } else if (has(map[i], str)) {\n                    return (i === UNKNOWN) ? undefined : i;\n                }\n            }\n            return map.hasOwnProperty('*') ? map['*'] : str;\n    };\n\n    ///////////////\n    // String map\n    //////////////\n\n    // Safari < 3.0\n    var oldSafariMap = {\n            '1.0'   : '/8',\n            '1.2'   : '/1',\n            '1.3'   : '/3',\n            '2.0'   : '/412',\n            '2.0.2' : '/416',\n            '2.0.3' : '/417',\n            '2.0.4' : '/419',\n            '?'     : '/'\n        },\n        windowsVersionMap = {\n            'ME'        : '4.90',\n            'NT 3.11'   : 'NT3.51',\n            'NT 4.0'    : 'NT4.0',\n            '2000'      : 'NT 5.0',\n            'XP'        : ['NT 5.1', 'NT 5.2'],\n            'Vista'     : 'NT 6.0',\n            '7'         : 'NT 6.1',\n            '8'         : 'NT 6.2',\n            '8.1'       : 'NT 6.3',\n            '10'        : ['NT 6.4', 'NT 10.0'],\n            'RT'        : 'ARM'\n    };\n\n    //////////////\n    // Regex map\n    /////////////\n\n    var regexes = {\n\n        browser : [[\n\n            /\\b(?:crmo|crios)\\/([\\w\\.]+)/i                                      // Chrome for Android/iOS\n            ], [VERSION, [NAME, 'Chrome']], [\n            /edg(?:e|ios|a)?\\/([\\w\\.]+)/i                                       // Microsoft Edge\n            ], [VERSION, [NAME, 'Edge']], [\n\n            // Presto based\n            /(opera mini)\\/([-\\w\\.]+)/i,                                        // Opera Mini\n            /(opera [mobiletab]{3,6})\\b.+version\\/([-\\w\\.]+)/i,                 // Opera Mobi/Tablet\n            /(opera)(?:.+version\\/|[\\/ ]+)([\\w\\.]+)/i                           // Opera\n            ], [NAME, VERSION], [\n            /opios[\\/ ]+([\\w\\.]+)/i                                             // Opera mini on iphone >= 8.0\n            ], [VERSION, [NAME, OPERA+' Mini']], [\n            /\\bop(?:rg)?x\\/([\\w\\.]+)/i                                          // Opera GX\n            ], [VERSION, [NAME, OPERA+' GX']], [\n            /\\bopr\\/([\\w\\.]+)/i                                                 // Opera Webkit\n            ], [VERSION, [NAME, OPERA]], [\n\n            // Mixed\n            /\\bb[ai]*d(?:uhd|[ub]*[aekoprswx]{5,6})[\\/ ]?([\\w\\.]+)/i            // Baidu\n            ], [VERSION, [NAME, 'Baidu']], [\n            /(kindle)\\/([\\w\\.]+)/i,                                             // Kindle\n            /(lunascape|maxthon|netfront|jasmine|blazer|sleipnir)[\\/ ]?([\\w\\.]*)/i,      \n                                                                                // Lunascape/Maxthon/Netfront/Jasmine/Blazer/Sleipnir\n            // Trident based\n            /(avant|iemobile|slim)\\s?(?:browser)?[\\/ ]?([\\w\\.]*)/i,             // Avant/IEMobile/SlimBrowser\n            /(?:ms|\\()(ie) ([\\w\\.]+)/i,                                         // Internet Explorer\n\n            // Webkit/KHTML based                                               // Flock/RockMelt/Midori/Epiphany/Silk/Skyfire/Bolt/Iron/Iridium/PhantomJS/Bowser/QupZilla/Falkon\n            /(flock|rockmelt|midori|epiphany|silk|skyfire|ovibrowser|bolt|iron|vivaldi|iridium|phantomjs|bowser|qupzilla|falkon|rekonq|puffin|brave|whale(?!.+naver)|qqbrowserlite|duckduckgo|klar|helio)\\/([-\\w\\.]+)/i,\n                                                                                // Rekonq/Puffin/Brave/Whale/QQBrowserLite/QQ//Vivaldi/DuckDuckGo/Klar/Helio\n            /(heytap|ovi)browser\\/([\\d\\.]+)/i,                                  // HeyTap/Ovi\n            /(weibo)__([\\d\\.]+)/i                                               // Weibo\n            ], [NAME, VERSION], [\n            /quark(?:pc)?\\/([-\\w\\.]+)/i                                         // Quark\n            ], [VERSION, [NAME, 'Quark']], [\n            /\\bddg\\/([\\w\\.]+)/i                                                 // DuckDuckGo\n            ], [VERSION, [NAME, 'DuckDuckGo']], [\n            /(?:\\buc? ?browser|(?:juc.+)ucweb)[\\/ ]?([\\w\\.]+)/i                 // UCBrowser\n            ], [VERSION, [NAME, 'UC'+BROWSER]], [\n            /microm.+\\bqbcore\\/([\\w\\.]+)/i,                                     // WeChat Desktop for Windows Built-in Browser\n            /\\bqbcore\\/([\\w\\.]+).+microm/i,\n            /micromessenger\\/([\\w\\.]+)/i                                        // WeChat\n            ], [VERSION, [NAME, 'WeChat']], [\n            /konqueror\\/([\\w\\.]+)/i                                             // Konqueror\n            ], [VERSION, [NAME, 'Konqueror']], [\n            /trident.+rv[: ]([\\w\\.]{1,9})\\b.+like gecko/i                       // IE11\n            ], [VERSION, [NAME, 'IE']], [\n            /ya(?:search)?browser\\/([\\w\\.]+)/i                                  // Yandex\n            ], [VERSION, [NAME, 'Yandex']], [\n            /slbrowser\\/([\\w\\.]+)/i                                             // Smart Lenovo Browser\n            ], [VERSION, [NAME, 'Smart Lenovo '+BROWSER]], [\n            /(avast|avg)\\/([\\w\\.]+)/i                                           // Avast/AVG Secure Browser\n            ], [[NAME, /(.+)/, '$1 Secure '+BROWSER], VERSION], [\n            /\\bfocus\\/([\\w\\.]+)/i                                               // Firefox Focus\n            ], [VERSION, [NAME, FIREFOX+' Focus']], [\n            /\\bopt\\/([\\w\\.]+)/i                                                 // Opera Touch\n            ], [VERSION, [NAME, OPERA+' Touch']], [\n            /coc_coc\\w+\\/([\\w\\.]+)/i                                            // Coc Coc Browser\n            ], [VERSION, [NAME, 'Coc Coc']], [\n            /dolfin\\/([\\w\\.]+)/i                                                // Dolphin\n            ], [VERSION, [NAME, 'Dolphin']], [\n            /coast\\/([\\w\\.]+)/i                                                 // Opera Coast\n            ], [VERSION, [NAME, OPERA+' Coast']], [\n            /miuibrowser\\/([\\w\\.]+)/i                                           // MIUI Browser\n            ], [VERSION, [NAME, 'MIUI '+BROWSER]], [\n            /fxios\\/([-\\w\\.]+)/i                                                // Firefox for iOS\n            ], [VERSION, [NAME, FIREFOX]], [\n            /\\bqihu|(qi?ho?o?|360)browser/i                                     // 360\n            ], [[NAME, '360' + SUFFIX_BROWSER]], [\n            /\\b(qq)\\/([\\w\\.]+)/i                                                // QQ\n            ], [[NAME, /(.+)/, '$1Browser'], VERSION], [\n            /(oculus|sailfish|huawei|vivo|pico)browser\\/([\\w\\.]+)/i\n            ], [[NAME, /(.+)/, '$1' + SUFFIX_BROWSER], VERSION], [              // Oculus/Sailfish/HuaweiBrowser/VivoBrowser/PicoBrowser\n            /samsungbrowser\\/([\\w\\.]+)/i                                        // Samsung Internet\n            ], [VERSION, [NAME, SAMSUNG + ' Internet']], [\n            /(comodo_dragon)\\/([\\w\\.]+)/i                                       // Comodo Dragon\n            ], [[NAME, /_/g, ' '], VERSION], [\n            /metasr[\\/ ]?([\\d\\.]+)/i                                            // Sogou Explorer\n            ], [VERSION, [NAME, 'Sogou Explorer']], [\n            /(sogou)mo\\w+\\/([\\d\\.]+)/i                                          // Sogou Mobile\n            ], [[NAME, 'Sogou Mobile'], VERSION], [\n            /(electron)\\/([\\w\\.]+) safari/i,                                    // Electron-based App\n            /(tesla)(?: qtcarbrowser|\\/(20\\d\\d\\.[-\\w\\.]+))/i,                   // Tesla\n            /m?(qqbrowser|2345Explorer)[\\/ ]?([\\w\\.]+)/i                        // QQBrowser/2345 Browser\n            ], [NAME, VERSION], [\n            /(lbbrowser|rekonq)/i,                                              // LieBao Browser/Rekonq\n            /\\[(linkedin)app\\]/i                                                // LinkedIn App for iOS & Android\n            ], [NAME], [\n\n            // WebView\n            /((?:fban\\/fbios|fb_iab\\/fb4a)(?!.+fbav)|;fbav\\/([\\w\\.]+);)/i       // Facebook App for iOS & Android\n            ], [[NAME, FACEBOOK], VERSION], [\n            /(Klarna)\\/([\\w\\.]+)/i,                                             // Klarna Shopping Browser for iOS & Android\n            /(kakao(?:talk|story))[\\/ ]([\\w\\.]+)/i,                             // Kakao App\n            /(naver)\\(.*?(\\d+\\.[\\w\\.]+).*\\)/i,                                  // Naver InApp\n            /safari (line)\\/([\\w\\.]+)/i,                                        // Line App for iOS\n            /\\b(line)\\/([\\w\\.]+)\\/iab/i,                                        // Line App for Android\n            /(alipay)client\\/([\\w\\.]+)/i,                                       // Alipay\n            /(twitter)(?:and| f.+e\\/([\\w\\.]+))/i,                               // Twitter\n            /(chromium|instagram|snapchat)[\\/ ]([-\\w\\.]+)/i                     // Chromium/Instagram/Snapchat\n            ], [NAME, VERSION], [\n            /\\bgsa\\/([\\w\\.]+) .*safari\\//i                                      // Google Search Appliance on iOS\n            ], [VERSION, [NAME, 'GSA']], [\n            /musical_ly(?:.+app_?version\\/|_)([\\w\\.]+)/i                        // TikTok\n            ], [VERSION, [NAME, 'TikTok']], [\n\n            /headlesschrome(?:\\/([\\w\\.]+)| )/i                                  // Chrome Headless\n            ], [VERSION, [NAME, CHROME+' Headless']], [\n\n            / wv\\).+(chrome)\\/([\\w\\.]+)/i                                       // Chrome WebView\n            ], [[NAME, CHROME+' WebView'], VERSION], [\n\n            /droid.+ version\\/([\\w\\.]+)\\b.+(?:mobile safari|safari)/i           // Android Browser\n            ], [VERSION, [NAME, 'Android '+BROWSER]], [\n\n            /(chrome|omniweb|arora|[tizenoka]{5} ?browser)\\/v?([\\w\\.]+)/i       // Chrome/OmniWeb/Arora/Tizen/Nokia\n            ], [NAME, VERSION], [\n\n            /version\\/([\\w\\.\\,]+) .*mobile\\/\\w+ (safari)/i                      // Mobile Safari\n            ], [VERSION, [NAME, 'Mobile Safari']], [\n            /version\\/([\\w(\\.|\\,)]+) .*(mobile ?safari|safari)/i                // Safari & Safari Mobile\n            ], [VERSION, NAME], [\n            /webkit.+?(mobile ?safari|safari)(\\/[\\w\\.]+)/i                      // Safari < 3.0\n            ], [NAME, [VERSION, strMapper, oldSafariMap]], [\n\n            /(webkit|khtml)\\/([\\w\\.]+)/i\n            ], [NAME, VERSION], [\n\n            // Gecko based\n            /(navigator|netscape\\d?)\\/([-\\w\\.]+)/i                              // Netscape\n            ], [[NAME, 'Netscape'], VERSION], [\n            /(wolvic)\\/([\\w\\.]+)/i                                              // Wolvic\n            ], [NAME, VERSION], [\n            /mobile vr; rv:([\\w\\.]+)\\).+firefox/i                               // Firefox Reality\n            ], [VERSION, [NAME, FIREFOX+' Reality']], [\n            /ekiohf.+(flow)\\/([\\w\\.]+)/i,                                       // Flow\n            /(swiftfox)/i,                                                      // Swiftfox\n            /(icedragon|iceweasel|camino|chimera|fennec|maemo browser|minimo|conkeror)[\\/ ]?([\\w\\.\\+]+)/i,\n                                                                                // IceDragon/Iceweasel/Camino/Chimera/Fennec/Maemo/Minimo/Conkeror\n            /(seamonkey|k-meleon|icecat|iceape|firebird|phoenix|palemoon|basilisk|waterfox)\\/([-\\w\\.]+)$/i,\n                                                                                // Firefox/SeaMonkey/K-Meleon/IceCat/IceApe/Firebird/Phoenix\n            /(firefox)\\/([\\w\\.]+)/i,                                            // Other Firefox-based\n            /(mozilla)\\/([\\w\\.]+) .+rv\\:.+gecko\\/\\d+/i,                         // Mozilla\n\n            // Other\n            /(polaris|lynx|dillo|icab|doris|amaya|w3m|netsurf|obigo|mosaic|(?:go|ice|up)[\\. ]?browser)[-\\/ ]?v?([\\w\\.]+)/i,\n                                                                                // Polaris/Lynx/Dillo/iCab/Doris/Amaya/w3m/NetSurf/Obigo/Mosaic/Go/ICE/UP.Browser\n            /(links) \\(([\\w\\.]+)/i                                              // Links\n            ], [NAME, [VERSION, /_/g, '.']], [\n            \n            /(cobalt)\\/([\\w\\.]+)/i                                              // Cobalt\n            ], [NAME, [VERSION, /master.|lts./, \"\"]]\n        ],\n\n        cpu : [[\n\n            /(?:(amd|x(?:(?:86|64)[-_])?|wow|win)64)[;\\)]/i                     // AMD64 (x64)\n            ], [[ARCHITECTURE, 'amd64']], [\n\n            /(ia32(?=;))/i                                                      // IA32 (quicktime)\n            ], [[ARCHITECTURE, lowerize]], [\n\n            /((?:i[346]|x)86)[;\\)]/i                                            // IA32 (x86)\n            ], [[ARCHITECTURE, 'ia32']], [\n\n            /\\b(aarch64|arm(v?8e?l?|_?64))\\b/i                                 // ARM64\n            ], [[ARCHITECTURE, 'arm64']], [\n\n            /\\b(arm(?:v[67])?ht?n?[fl]p?)\\b/i                                   // ARMHF\n            ], [[ARCHITECTURE, 'armhf']], [\n\n            // PocketPC mistakenly identified as PowerPC\n            /windows (ce|mobile); ppc;/i\n            ], [[ARCHITECTURE, 'arm']], [\n\n            /((?:ppc|powerpc)(?:64)?)(?: mac|;|\\))/i                            // PowerPC\n            ], [[ARCHITECTURE, /ower/, EMPTY, lowerize]], [\n\n            /(sun4\\w)[;\\)]/i                                                    // SPARC\n            ], [[ARCHITECTURE, 'sparc']], [\n\n            /((?:avr32|ia64(?=;))|68k(?=\\))|\\barm(?=v(?:[1-7]|[5-7]1)l?|;|eabi)|(?=atmel )avr|(?:irix|mips|sparc)(?:64)?\\b|pa-risc)/i\n                                                                                // IA64, 68K, ARM/64, AVR/32, IRIX/64, MIPS/64, SPARC/64, PA-RISC\n            ], [[ARCHITECTURE, lowerize]]\n        ],\n\n        device : [[\n\n            //////////////////////////\n            // MOBILES & TABLETS\n            /////////////////////////\n\n            // Samsung\n            /\\b(sch-i[89]0\\d|shw-m380s|sm-[ptx]\\w{2,4}|gt-[pn]\\d{2,4}|sgh-t8[56]9|nexus 10)/i\n            ], [MODEL, [VENDOR, SAMSUNG], [TYPE, TABLET]], [\n            /\\b((?:s[cgp]h|gt|sm)-(?![lr])\\w+|sc[g-]?[\\d]+a?|galaxy nexus)/i,\n            /samsung[- ]((?!sm-[lr])[-\\w]+)/i,\n            /sec-(sgh\\w+)/i\n            ], [MODEL, [VENDOR, SAMSUNG], [TYPE, MOBILE]], [\n\n            // Apple\n            /(?:\\/|\\()(ip(?:hone|od)[\\w, ]*)(?:\\/|;)/i                          // iPod/iPhone\n            ], [MODEL, [VENDOR, APPLE], [TYPE, MOBILE]], [\n            /\\((ipad);[-\\w\\),; ]+apple/i,                                       // iPad\n            /applecoremedia\\/[\\w\\.]+ \\((ipad)/i,\n            /\\b(ipad)\\d\\d?,\\d\\d?[;\\]].+ios/i\n            ], [MODEL, [VENDOR, APPLE], [TYPE, TABLET]], [\n            /(macintosh);/i\n            ], [MODEL, [VENDOR, APPLE]], [\n\n            // Sharp\n            /\\b(sh-?[altvz]?\\d\\d[a-ekm]?)/i\n            ], [MODEL, [VENDOR, SHARP], [TYPE, MOBILE]], [\n\n            // Huawei\n            /\\b((?:ag[rs][23]?|bah2?|sht?|btv)-a?[lw]\\d{2})\\b(?!.+d\\/s)/i\n            ], [MODEL, [VENDOR, HUAWEI], [TYPE, TABLET]], [\n            /(?:huawei|honor)([-\\w ]+)[;\\)]/i,\n            /\\b(nexus 6p|\\w{2,4}e?-[atu]?[ln][\\dx][012359c][adn]?)\\b(?!.+d\\/s)/i\n            ], [MODEL, [VENDOR, HUAWEI], [TYPE, MOBILE]], [\n\n            // Xiaomi\n            /\\b(poco[\\w ]+|m2\\d{3}j\\d\\d[a-z]{2})(?: bui|\\))/i,                  // Xiaomi POCO\n            /\\b; (\\w+) build\\/hm\\1/i,                                           // Xiaomi Hongmi 'numeric' models\n            /\\b(hm[-_ ]?note?[_ ]?(?:\\d\\w)?) bui/i,                             // Xiaomi Hongmi\n            /\\b(redmi[\\-_ ]?(?:note|k)?[\\w_ ]+)(?: bui|\\))/i,                   // Xiaomi Redmi\n            /oid[^\\)]+; (m?[12][0-389][01]\\w{3,6}[c-y])( bui|; wv|\\))/i,        // Xiaomi Redmi 'numeric' models\n            /\\b(mi[-_ ]?(?:a\\d|one|one[_ ]plus|note lte|max|cc)?[_ ]?(?:\\d?\\w?)[_ ]?(?:plus|se|lite|pro)?)(?: bui|\\))/i // Xiaomi Mi\n            ], [[MODEL, /_/g, ' '], [VENDOR, XIAOMI], [TYPE, MOBILE]], [\n            /oid[^\\)]+; (2\\d{4}(283|rpbf)[cgl])( bui|\\))/i,                     // Redmi Pad\n            /\\b(mi[-_ ]?(?:pad)(?:[\\w_ ]+))(?: bui|\\))/i                        // Mi Pad tablets\n            ],[[MODEL, /_/g, ' '], [VENDOR, XIAOMI], [TYPE, TABLET]], [\n\n            // OPPO\n            /; (\\w+) bui.+ oppo/i,\n            /\\b(cph[12]\\d{3}|p(?:af|c[al]|d\\w|e[ar])[mt]\\d0|x9007|a101op)\\b/i\n            ], [MODEL, [VENDOR, 'OPPO'], [TYPE, MOBILE]], [\n            /\\b(opd2\\d{3}a?) bui/i\n            ], [MODEL, [VENDOR, 'OPPO'], [TYPE, TABLET]], [\n\n            // Vivo\n            /vivo (\\w+)(?: bui|\\))/i,\n            /\\b(v[12]\\d{3}\\w?[at])(?: bui|;)/i\n            ], [MODEL, [VENDOR, 'Vivo'], [TYPE, MOBILE]], [\n\n            // Realme\n            /\\b(rmx[1-3]\\d{3})(?: bui|;|\\))/i\n            ], [MODEL, [VENDOR, 'Realme'], [TYPE, MOBILE]], [\n\n            // Motorola\n            /\\b(milestone|droid(?:[2-4x]| (?:bionic|x2|pro|razr))?:?( 4g)?)\\b[\\w ]+build\\//i,\n            /\\bmot(?:orola)?[- ](\\w*)/i,\n            /((?:moto[\\w\\(\\) ]+|xt\\d{3,4}|nexus 6)(?= bui|\\)))/i\n            ], [MODEL, [VENDOR, MOTOROLA], [TYPE, MOBILE]], [\n            /\\b(mz60\\d|xoom[2 ]{0,2}) build\\//i\n            ], [MODEL, [VENDOR, MOTOROLA], [TYPE, TABLET]], [\n\n            // LG\n            /((?=lg)?[vl]k\\-?\\d{3}) bui| 3\\.[-\\w; ]{10}lg?-([06cv9]{3,4})/i\n            ], [MODEL, [VENDOR, LG], [TYPE, TABLET]], [\n            /(lm(?:-?f100[nv]?|-[\\w\\.]+)(?= bui|\\))|nexus [45])/i,\n            /\\blg[-e;\\/ ]+((?!browser|netcast|android tv)\\w+)/i,\n            /\\blg-?([\\d\\w]+) bui/i\n            ], [MODEL, [VENDOR, LG], [TYPE, MOBILE]], [\n\n            // Lenovo\n            /(ideatab[-\\w ]+)/i,\n            /lenovo ?(s[56]000[-\\w]+|tab(?:[\\w ]+)|yt[-\\d\\w]{6}|tb[-\\d\\w]{6})/i\n            ], [MODEL, [VENDOR, 'Lenovo'], [TYPE, TABLET]], [\n\n            // Nokia\n            /(?:maemo|nokia).*(n900|lumia \\d+)/i,\n            /nokia[-_ ]?([-\\w\\.]*)/i\n            ], [[MODEL, /_/g, ' '], [VENDOR, 'Nokia'], [TYPE, MOBILE]], [\n\n            // Google\n            /(pixel c)\\b/i                                                      // Google Pixel C\n            ], [MODEL, [VENDOR, GOOGLE], [TYPE, TABLET]], [\n            /droid.+; (pixel[\\daxl ]{0,6})(?: bui|\\))/i                         // Google Pixel\n            ], [MODEL, [VENDOR, GOOGLE], [TYPE, MOBILE]], [\n\n            // Sony\n            /droid.+ (a?\\d[0-2]{2}so|[c-g]\\d{4}|so[-gl]\\w+|xq-a\\w[4-7][12])(?= bui|\\).+chrome\\/(?![1-6]{0,1}\\d\\.))/i\n            ], [MODEL, [VENDOR, SONY], [TYPE, MOBILE]], [\n            /sony tablet [ps]/i,\n            /\\b(?:sony)?sgp\\w+(?: bui|\\))/i\n            ], [[MODEL, 'Xperia Tablet'], [VENDOR, SONY], [TYPE, TABLET]], [\n\n            // OnePlus\n            / (kb2005|in20[12]5|be20[12][59])\\b/i,\n            /(?:one)?(?:plus)? (a\\d0\\d\\d)(?: b|\\))/i\n            ], [MODEL, [VENDOR, 'OnePlus'], [TYPE, MOBILE]], [\n\n            // Amazon\n            /(alexa)webm/i,\n            /(kf[a-z]{2}wi|aeo(?!bc)\\w\\w)( bui|\\))/i,                           // Kindle Fire without Silk / Echo Show\n            /(kf[a-z]+)( bui|\\)).+silk\\//i                                      // Kindle Fire HD\n            ], [MODEL, [VENDOR, AMAZON], [TYPE, TABLET]], [\n            /((?:sd|kf)[0349hijorstuw]+)( bui|\\)).+silk\\//i                     // Fire Phone\n            ], [[MODEL, /(.+)/g, 'Fire Phone $1'], [VENDOR, AMAZON], [TYPE, MOBILE]], [\n\n            // BlackBerry\n            /(playbook);[-\\w\\),; ]+(rim)/i                                      // BlackBerry PlayBook\n            ], [MODEL, VENDOR, [TYPE, TABLET]], [\n            /\\b((?:bb[a-f]|st[hv])100-\\d)/i,\n            /\\(bb10; (\\w+)/i                                                    // BlackBerry 10\n            ], [MODEL, [VENDOR, BLACKBERRY], [TYPE, MOBILE]], [\n\n            // Asus\n            /(?:\\b|asus_)(transfo[prime ]{4,10} \\w+|eeepc|slider \\w+|nexus 7|padfone|p00[cj])/i\n            ], [MODEL, [VENDOR, ASUS], [TYPE, TABLET]], [\n            / (z[bes]6[027][012][km][ls]|zenfone \\d\\w?)\\b/i\n            ], [MODEL, [VENDOR, ASUS], [TYPE, MOBILE]], [\n\n            // HTC\n            /(nexus 9)/i                                                        // HTC Nexus 9\n            ], [MODEL, [VENDOR, 'HTC'], [TYPE, TABLET]], [\n            /(htc)[-;_ ]{1,2}([\\w ]+(?=\\)| bui)|\\w+)/i,                         // HTC\n\n            // ZTE\n            /(zte)[- ]([\\w ]+?)(?: bui|\\/|\\))/i,\n            /(alcatel|geeksphone|nexian|panasonic(?!(?:;|\\.))|sony(?!-bra))[-_ ]?([-\\w]*)/i         // Alcatel/GeeksPhone/Nexian/Panasonic/Sony\n            ], [VENDOR, [MODEL, /_/g, ' '], [TYPE, MOBILE]], [\n\n            // TCL\n            /droid [\\w\\.]+; ((?:8[14]9[16]|9(?:0(?:48|60|8[01])|1(?:3[27]|66)|2(?:6[69]|9[56])|466))[gqswx])\\w*(\\)| bui)/i\n            ], [MODEL, [VENDOR, 'TCL'], [TYPE, TABLET]], [\n\n            // itel\n            /(itel) ((\\w+))/i\n            ], [[VENDOR, lowerize], MODEL, [TYPE, strMapper, { 'tablet' : ['p10001l', 'w7001'], '*' : 'mobile' }]], [\n\n            // Acer\n            /droid.+; ([ab][1-7]-?[0178a]\\d\\d?)/i\n            ], [MODEL, [VENDOR, 'Acer'], [TYPE, TABLET]], [\n\n            // Meizu\n            /droid.+; (m[1-5] note) bui/i,\n            /\\bmz-([-\\w]{2,})/i\n            ], [MODEL, [VENDOR, 'Meizu'], [TYPE, MOBILE]], [\n                \n            // Ulefone\n            /; ((?:power )?armor(?:[\\w ]{0,8}))(?: bui|\\))/i\n            ], [MODEL, [VENDOR, 'Ulefone'], [TYPE, MOBILE]], [\n\n            // Nothing\n            /droid.+; (a(?:015|06[35]|142p?))/i\n            ], [MODEL, [VENDOR, 'Nothing'], [TYPE, MOBILE]], [\n\n            // MIXED\n            /(blackberry|benq|palm(?=\\-)|sonyericsson|acer|asus|dell|meizu|motorola|polytron|infinix|tecno)[-_ ]?([-\\w]*)/i,\n                                                                                // BlackBerry/BenQ/Palm/Sony-Ericsson/Acer/Asus/Dell/Meizu/Motorola/Polytron\n            /(hp) ([\\w ]+\\w)/i,                                                 // HP iPAQ\n            /(asus)-?(\\w+)/i,                                                   // Asus\n            /(microsoft); (lumia[\\w ]+)/i,                                      // Microsoft Lumia\n            /(lenovo)[-_ ]?([-\\w]+)/i,                                          // Lenovo\n            /(jolla)/i,                                                         // Jolla\n            /(oppo) ?([\\w ]+) bui/i                                             // OPPO\n            ], [VENDOR, MODEL, [TYPE, MOBILE]], [\n\n            /(kobo)\\s(ereader|touch)/i,                                         // Kobo\n            /(archos) (gamepad2?)/i,                                            // Archos\n            /(hp).+(touchpad(?!.+tablet)|tablet)/i,                             // HP TouchPad\n            /(kindle)\\/([\\w\\.]+)/i,                                             // Kindle\n            /(nook)[\\w ]+build\\/(\\w+)/i,                                        // Nook\n            /(dell) (strea[kpr\\d ]*[\\dko])/i,                                   // Dell Streak\n            /(le[- ]+pan)[- ]+(\\w{1,9}) bui/i,                                  // Le Pan Tablets\n            /(trinity)[- ]*(t\\d{3}) bui/i,                                      // Trinity Tablets\n            /(gigaset)[- ]+(q\\w{1,9}) bui/i,                                    // Gigaset Tablets\n            /(vodafone) ([\\w ]+)(?:\\)| bui)/i                                   // Vodafone\n            ], [VENDOR, MODEL, [TYPE, TABLET]], [\n\n            /(surface duo)/i                                                    // Surface Duo\n            ], [MODEL, [VENDOR, MICROSOFT], [TYPE, TABLET]], [\n            /droid [\\d\\.]+; (fp\\du?)(?: b|\\))/i                                 // Fairphone\n            ], [MODEL, [VENDOR, 'Fairphone'], [TYPE, MOBILE]], [\n            /(u304aa)/i                                                         // AT&T\n            ], [MODEL, [VENDOR, 'AT&T'], [TYPE, MOBILE]], [\n            /\\bsie-(\\w*)/i                                                      // Siemens\n            ], [MODEL, [VENDOR, 'Siemens'], [TYPE, MOBILE]], [\n            /\\b(rct\\w+) b/i                                                     // RCA Tablets\n            ], [MODEL, [VENDOR, 'RCA'], [TYPE, TABLET]], [\n            /\\b(venue[\\d ]{2,7}) b/i                                            // Dell Venue Tablets\n            ], [MODEL, [VENDOR, 'Dell'], [TYPE, TABLET]], [\n            /\\b(q(?:mv|ta)\\w+) b/i                                              // Verizon Tablet\n            ], [MODEL, [VENDOR, 'Verizon'], [TYPE, TABLET]], [\n            /\\b(?:barnes[& ]+noble |bn[rt])([\\w\\+ ]*) b/i                       // Barnes & Noble Tablet\n            ], [MODEL, [VENDOR, 'Barnes & Noble'], [TYPE, TABLET]], [\n            /\\b(tm\\d{3}\\w+) b/i\n            ], [MODEL, [VENDOR, 'NuVision'], [TYPE, TABLET]], [\n            /\\b(k88) b/i                                                        // ZTE K Series Tablet\n            ], [MODEL, [VENDOR, 'ZTE'], [TYPE, TABLET]], [\n            /\\b(nx\\d{3}j) b/i                                                   // ZTE Nubia\n            ], [MODEL, [VENDOR, 'ZTE'], [TYPE, MOBILE]], [\n            /\\b(gen\\d{3}) b.+49h/i                                              // Swiss GEN Mobile\n            ], [MODEL, [VENDOR, 'Swiss'], [TYPE, MOBILE]], [\n            /\\b(zur\\d{3}) b/i                                                   // Swiss ZUR Tablet\n            ], [MODEL, [VENDOR, 'Swiss'], [TYPE, TABLET]], [\n            /\\b((zeki)?tb.*\\b) b/i                                              // Zeki Tablets\n            ], [MODEL, [VENDOR, 'Zeki'], [TYPE, TABLET]], [\n            /\\b([yr]\\d{2}) b/i,\n            /\\b(dragon[- ]+touch |dt)(\\w{5}) b/i                                // Dragon Touch Tablet\n            ], [[VENDOR, 'Dragon Touch'], MODEL, [TYPE, TABLET]], [\n            /\\b(ns-?\\w{0,9}) b/i                                                // Insignia Tablets\n            ], [MODEL, [VENDOR, 'Insignia'], [TYPE, TABLET]], [\n            /\\b((nxa|next)-?\\w{0,9}) b/i                                        // NextBook Tablets\n            ], [MODEL, [VENDOR, 'NextBook'], [TYPE, TABLET]], [\n            /\\b(xtreme\\_)?(v(1[045]|2[015]|[3469]0|7[05])) b/i                  // Voice Xtreme Phones\n            ], [[VENDOR, 'Voice'], MODEL, [TYPE, MOBILE]], [\n            /\\b(lvtel\\-)?(v1[12]) b/i                                           // LvTel Phones\n            ], [[VENDOR, 'LvTel'], MODEL, [TYPE, MOBILE]], [\n            /\\b(ph-1) /i                                                        // Essential PH-1\n            ], [MODEL, [VENDOR, 'Essential'], [TYPE, MOBILE]], [\n            /\\b(v(100md|700na|7011|917g).*\\b) b/i                               // Envizen Tablets\n            ], [MODEL, [VENDOR, 'Envizen'], [TYPE, TABLET]], [\n            /\\b(trio[-\\w\\. ]+) b/i                                              // MachSpeed Tablets\n            ], [MODEL, [VENDOR, 'MachSpeed'], [TYPE, TABLET]], [\n            /\\btu_(1491) b/i                                                    // Rotor Tablets\n            ], [MODEL, [VENDOR, 'Rotor'], [TYPE, TABLET]], [\n            /(shield[\\w ]+) b/i                                                 // Nvidia Shield Tablets\n            ], [MODEL, [VENDOR, 'Nvidia'], [TYPE, TABLET]], [\n            /(sprint) (\\w+)/i                                                   // Sprint Phones\n            ], [VENDOR, MODEL, [TYPE, MOBILE]], [\n            /(kin\\.[onetw]{3})/i                                                // Microsoft Kin\n            ], [[MODEL, /\\./g, ' '], [VENDOR, MICROSOFT], [TYPE, MOBILE]], [\n            /droid.+; (cc6666?|et5[16]|mc[239][23]x?|vc8[03]x?)\\)/i             // Zebra\n            ], [MODEL, [VENDOR, ZEBRA], [TYPE, TABLET]], [\n            /droid.+; (ec30|ps20|tc[2-8]\\d[kx])\\)/i\n            ], [MODEL, [VENDOR, ZEBRA], [TYPE, MOBILE]], [\n\n            ///////////////////\n            // SMARTTVS\n            ///////////////////\n\n            /smart-tv.+(samsung)/i                                              // Samsung\n            ], [VENDOR, [TYPE, SMARTTV]], [\n            /hbbtv.+maple;(\\d+)/i\n            ], [[MODEL, /^/, 'SmartTV'], [VENDOR, SAMSUNG], [TYPE, SMARTTV]], [\n            /(nux; netcast.+smarttv|lg (netcast\\.tv-201\\d|android tv))/i        // LG SmartTV\n            ], [[VENDOR, LG], [TYPE, SMARTTV]], [\n            /(apple) ?tv/i                                                      // Apple TV\n            ], [VENDOR, [MODEL, APPLE+' TV'], [TYPE, SMARTTV]], [\n            /crkey/i                                                            // Google Chromecast\n            ], [[MODEL, CHROME+'cast'], [VENDOR, GOOGLE], [TYPE, SMARTTV]], [\n            /droid.+aft(\\w+)( bui|\\))/i                                         // Fire TV\n            ], [MODEL, [VENDOR, AMAZON], [TYPE, SMARTTV]], [\n            /\\(dtv[\\);].+(aquos)/i,\n            /(aquos-tv[\\w ]+)\\)/i                                               // Sharp\n            ], [MODEL, [VENDOR, SHARP], [TYPE, SMARTTV]],[\n            /(bravia[\\w ]+)( bui|\\))/i                                              // Sony\n            ], [MODEL, [VENDOR, SONY], [TYPE, SMARTTV]], [\n            /(mitv-\\w{5}) bui/i                                                 // Xiaomi\n            ], [MODEL, [VENDOR, XIAOMI], [TYPE, SMARTTV]], [\n            /Hbbtv.*(technisat) (.*);/i                                         // TechniSAT\n            ], [VENDOR, MODEL, [TYPE, SMARTTV]], [\n            /\\b(roku)[\\dx]*[\\)\\/]((?:dvp-)?[\\d\\.]*)/i,                          // Roku\n            /hbbtv\\/\\d+\\.\\d+\\.\\d+ +\\([\\w\\+ ]*; *([\\w\\d][^;]*);([^;]*)/i         // HbbTV devices\n            ], [[VENDOR, trim], [MODEL, trim], [TYPE, SMARTTV]], [\n            /\\b(android tv|smart[- ]?tv|opera tv|tv; rv:)\\b/i                   // SmartTV from Unidentified Vendors\n            ], [[TYPE, SMARTTV]], [\n\n            ///////////////////\n            // CONSOLES\n            ///////////////////\n\n            /(ouya)/i,                                                          // Ouya\n            /(nintendo) ([wids3utch]+)/i                                        // Nintendo\n            ], [VENDOR, MODEL, [TYPE, CONSOLE]], [\n            /droid.+; (shield) bui/i                                            // Nvidia\n            ], [MODEL, [VENDOR, 'Nvidia'], [TYPE, CONSOLE]], [\n            /(playstation [345portablevi]+)/i                                   // Playstation\n            ], [MODEL, [VENDOR, SONY], [TYPE, CONSOLE]], [\n            /\\b(xbox(?: one)?(?!; xbox))[\\); ]/i                                // Microsoft Xbox\n            ], [MODEL, [VENDOR, MICROSOFT], [TYPE, CONSOLE]], [\n\n            ///////////////////\n            // WEARABLES\n            ///////////////////\n\n            /\\b(sm-[lr]\\d\\d[05][fnuw]?s?)\\b/i                                   // Samsung Galaxy Watch\n            ], [MODEL, [VENDOR, SAMSUNG], [TYPE, WEARABLE]], [\n            /((pebble))app/i                                                    // Pebble\n            ], [VENDOR, MODEL, [TYPE, WEARABLE]], [\n            /(watch)(?: ?os[,\\/]|\\d,\\d\\/)[\\d\\.]+/i                              // Apple Watch\n            ], [MODEL, [VENDOR, APPLE], [TYPE, WEARABLE]], [\n            /droid.+; (glass) \\d/i                                              // Google Glass\n            ], [MODEL, [VENDOR, GOOGLE], [TYPE, WEARABLE]], [\n            /droid.+; (wt63?0{2,3})\\)/i\n            ], [MODEL, [VENDOR, ZEBRA], [TYPE, WEARABLE]], [\n            /(quest( \\d| pro)?)/i                                               // Oculus Quest\n            ], [MODEL, [VENDOR, FACEBOOK], [TYPE, WEARABLE]], [\n\n            ///////////////////\n            // EMBEDDED\n            ///////////////////\n\n            /(tesla)(?: qtcarbrowser|\\/[-\\w\\.]+)/i                              // Tesla\n            ], [VENDOR, [TYPE, EMBEDDED]], [\n            /(aeobc)\\b/i                                                        // Echo Dot\n            ], [MODEL, [VENDOR, AMAZON], [TYPE, EMBEDDED]], [\n\n            ////////////////////\n            // MIXED (GENERIC)\n            ///////////////////\n\n            /droid .+?; ([^;]+?)(?: bui|; wv\\)|\\) applew).+? mobile safari/i    // Android Phones from Unidentified Vendors\n            ], [MODEL, [TYPE, MOBILE]], [\n            /droid .+?; ([^;]+?)(?: bui|\\) applew).+?(?! mobile) safari/i       // Android Tablets from Unidentified Vendors\n            ], [MODEL, [TYPE, TABLET]], [\n            /\\b((tablet|tab)[;\\/]|focus\\/\\d(?!.+mobile))/i                      // Unidentifiable Tablet\n            ], [[TYPE, TABLET]], [\n            /(phone|mobile(?:[;\\/]| [ \\w\\/\\.]*safari)|pda(?=.+windows ce))/i    // Unidentifiable Mobile\n            ], [[TYPE, MOBILE]], [\n            /(android[-\\w\\. ]{0,9});.+buil/i                                    // Generic Android Device\n            ], [MODEL, [VENDOR, 'Generic']]\n        ],\n\n        engine : [[\n\n            /windows.+ edge\\/([\\w\\.]+)/i                                       // EdgeHTML\n            ], [VERSION, [NAME, EDGE+'HTML']], [\n\n            /webkit\\/537\\.36.+chrome\\/(?!27)([\\w\\.]+)/i                         // Blink\n            ], [VERSION, [NAME, 'Blink']], [\n\n            /(presto)\\/([\\w\\.]+)/i,                                             // Presto\n            /(webkit|trident|netfront|netsurf|amaya|lynx|w3m|goanna)\\/([\\w\\.]+)/i, // WebKit/Trident/NetFront/NetSurf/Amaya/Lynx/w3m/Goanna\n            /ekioh(flow)\\/([\\w\\.]+)/i,                                          // Flow\n            /(khtml|tasman|links)[\\/ ]\\(?([\\w\\.]+)/i,                           // KHTML/Tasman/Links\n            /(icab)[\\/ ]([23]\\.[\\d\\.]+)/i,                                      // iCab\n            /\\b(libweb)/i\n            ], [NAME, VERSION], [\n\n            /rv\\:([\\w\\.]{1,9})\\b.+(gecko)/i                                     // Gecko\n            ], [VERSION, NAME]\n        ],\n\n        os : [[\n\n            // Windows\n            /microsoft (windows) (vista|xp)/i                                   // Windows (iTunes)\n            ], [NAME, VERSION], [\n            /(windows (?:phone(?: os)?|mobile))[\\/ ]?([\\d\\.\\w ]*)/i             // Windows Phone\n            ], [NAME, [VERSION, strMapper, windowsVersionMap]], [\n            /windows nt 6\\.2; (arm)/i,                                        // Windows RT\n            /windows[\\/ ]?([ntce\\d\\. ]+\\w)(?!.+xbox)/i,\n            /(?:win(?=3|9|n)|win 9x )([nt\\d\\.]+)/i\n            ], [[VERSION, strMapper, windowsVersionMap], [NAME, 'Windows']], [\n\n            // iOS/macOS\n            /ip[honead]{2,4}\\b(?:.*os ([\\w]+) like mac|; opera)/i,              // iOS\n            /(?:ios;fbsv\\/|iphone.+ios[\\/ ])([\\d\\.]+)/i,\n            /cfnetwork\\/.+darwin/i\n            ], [[VERSION, /_/g, '.'], [NAME, 'iOS']], [\n            /(mac os x) ?([\\w\\. ]*)/i,\n            /(macintosh|mac_powerpc\\b)(?!.+haiku)/i                             // Mac OS\n            ], [[NAME, MAC_OS], [VERSION, /_/g, '.']], [\n\n            // Mobile OSes\n            /droid ([\\w\\.]+)\\b.+(android[- ]x86|harmonyos)/i                    // Android-x86/HarmonyOS\n            ], [VERSION, NAME], [                                               // Android/WebOS/QNX/Bada/RIM/Maemo/MeeGo/Sailfish OS\n            /(android|webos|qnx|bada|rim tablet os|maemo|meego|sailfish)[-\\/ ]?([\\w\\.]*)/i,\n            /(blackberry)\\w*\\/([\\w\\.]*)/i,                                      // Blackberry\n            /(tizen|kaios)[\\/ ]([\\w\\.]+)/i,                                     // Tizen/KaiOS\n            /\\((series40);/i                                                    // Series 40\n            ], [NAME, VERSION], [\n            /\\(bb(10);/i                                                        // BlackBerry 10\n            ], [VERSION, [NAME, BLACKBERRY]], [\n            /(?:symbian ?os|symbos|s60(?=;)|series60)[-\\/ ]?([\\w\\.]*)/i         // Symbian\n            ], [VERSION, [NAME, 'Symbian']], [\n            /mozilla\\/[\\d\\.]+ \\((?:mobile|tablet|tv|mobile; [\\w ]+); rv:.+ gecko\\/([\\w\\.]+)/i // Firefox OS\n            ], [VERSION, [NAME, FIREFOX+' OS']], [\n            /web0s;.+rt(tv)/i,\n            /\\b(?:hp)?wos(?:browser)?\\/([\\w\\.]+)/i                              // WebOS\n            ], [VERSION, [NAME, 'webOS']], [\n            /watch(?: ?os[,\\/]|\\d,\\d\\/)([\\d\\.]+)/i                              // watchOS\n            ], [VERSION, [NAME, 'watchOS']], [\n\n            // Google Chromecast\n            /crkey\\/([\\d\\.]+)/i                                                 // Google Chromecast\n            ], [VERSION, [NAME, CHROME+'cast']], [\n            /(cros) [\\w]+(?:\\)| ([\\w\\.]+)\\b)/i                                  // Chromium OS\n            ], [[NAME, CHROMIUM_OS], VERSION],[\n\n            // Smart TVs\n            /panasonic;(viera)/i,                                               // Panasonic Viera\n            /(netrange)mmh/i,                                                   // Netrange\n            /(nettv)\\/(\\d+\\.[\\w\\.]+)/i,                                         // NetTV\n\n            // Console\n            /(nintendo|playstation) ([wids345portablevuch]+)/i,                 // Nintendo/Playstation\n            /(xbox); +xbox ([^\\);]+)/i,                                         // Microsoft Xbox (360, One, X, S, Series X, Series S)\n\n            // Other\n            /\\b(joli|palm)\\b ?(?:os)?\\/?([\\w\\.]*)/i,                            // Joli/Palm\n            /(mint)[\\/\\(\\) ]?(\\w*)/i,                                           // Mint\n            /(mageia|vectorlinux)[; ]/i,                                        // Mageia/VectorLinux\n            /([kxln]?ubuntu|debian|suse|opensuse|gentoo|arch(?= linux)|slackware|fedora|mandriva|centos|pclinuxos|red ?hat|zenwalk|linpus|raspbian|plan 9|minix|risc os|contiki|deepin|manjaro|elementary os|sabayon|linspire)(?: gnu\\/linux)?(?: enterprise)?(?:[- ]linux)?(?:-gnu)?[-\\/ ]?(?!chrom|package)([-\\w\\.]*)/i,\n                                                                                // Ubuntu/Debian/SUSE/Gentoo/Arch/Slackware/Fedora/Mandriva/CentOS/PCLinuxOS/RedHat/Zenwalk/Linpus/Raspbian/Plan9/Minix/RISCOS/Contiki/Deepin/Manjaro/elementary/Sabayon/Linspire\n            /(hurd|linux) ?([\\w\\.]*)/i,                                         // Hurd/Linux\n            /(gnu) ?([\\w\\.]*)/i,                                                // GNU\n            /\\b([-frentopcghs]{0,5}bsd|dragonfly)[\\/ ]?(?!amd|[ix346]{1,2}86)([\\w\\.]*)/i, // FreeBSD/NetBSD/OpenBSD/PC-BSD/GhostBSD/DragonFly\n            /(haiku) (\\w+)/i                                                    // Haiku\n            ], [NAME, VERSION], [\n            /(sunos) ?([\\w\\.\\d]*)/i                                             // Solaris\n            ], [[NAME, 'Solaris'], VERSION], [\n            /((?:open)?solaris)[-\\/ ]?([\\w\\.]*)/i,                              // Solaris\n            /(aix) ((\\d)(?=\\.|\\)| )[\\w\\.])*/i,                                  // AIX\n            /\\b(beos|os\\/2|amigaos|morphos|openvms|fuchsia|hp-ux|serenityos)/i, // BeOS/OS2/AmigaOS/MorphOS/OpenVMS/Fuchsia/HP-UX/SerenityOS\n            /(unix) ?([\\w\\.]*)/i                                                // UNIX\n            ], [NAME, VERSION]\n        ]\n    };\n\n    /////////////////\n    // Constructor\n    ////////////////\n\n    var UAParser = function (ua, extensions) {\n\n        if (typeof ua === OBJ_TYPE) {\n            extensions = ua;\n            ua = undefined;\n        }\n\n        if (!(this instanceof UAParser)) {\n            return new UAParser(ua, extensions).getResult();\n        }\n\n        var _navigator = (typeof window !== UNDEF_TYPE && window.navigator) ? window.navigator : undefined;\n        var _ua = ua || ((_navigator && _navigator.userAgent) ? _navigator.userAgent : EMPTY);\n        var _uach = (_navigator && _navigator.userAgentData) ? _navigator.userAgentData : undefined;\n        var _rgxmap = extensions ? extend(regexes, extensions) : regexes;\n        var _isSelfNav = _navigator && _navigator.userAgent == _ua;\n\n        this.getBrowser = function () {\n            var _browser = {};\n            _browser[NAME] = undefined;\n            _browser[VERSION] = undefined;\n            rgxMapper.call(_browser, _ua, _rgxmap.browser);\n            _browser[MAJOR] = majorize(_browser[VERSION]);\n            // Brave-specific detection\n            if (_isSelfNav && _navigator && _navigator.brave && typeof _navigator.brave.isBrave == FUNC_TYPE) {\n                _browser[NAME] = 'Brave';\n            }\n            return _browser;\n        };\n        this.getCPU = function () {\n            var _cpu = {};\n            _cpu[ARCHITECTURE] = undefined;\n            rgxMapper.call(_cpu, _ua, _rgxmap.cpu);\n            return _cpu;\n        };\n        this.getDevice = function () {\n            var _device = {};\n            _device[VENDOR] = undefined;\n            _device[MODEL] = undefined;\n            _device[TYPE] = undefined;\n            rgxMapper.call(_device, _ua, _rgxmap.device);\n            if (_isSelfNav && !_device[TYPE] && _uach && _uach.mobile) {\n                _device[TYPE] = MOBILE;\n            }\n            // iPadOS-specific detection: identified as Mac, but has some iOS-only properties\n            if (_isSelfNav && _device[MODEL] == 'Macintosh' && _navigator && typeof _navigator.standalone !== UNDEF_TYPE && _navigator.maxTouchPoints && _navigator.maxTouchPoints > 2) {\n                _device[MODEL] = 'iPad';\n                _device[TYPE] = TABLET;\n            }\n            return _device;\n        };\n        this.getEngine = function () {\n            var _engine = {};\n            _engine[NAME] = undefined;\n            _engine[VERSION] = undefined;\n            rgxMapper.call(_engine, _ua, _rgxmap.engine);\n            return _engine;\n        };\n        this.getOS = function () {\n            var _os = {};\n            _os[NAME] = undefined;\n            _os[VERSION] = undefined;\n            rgxMapper.call(_os, _ua, _rgxmap.os);\n            if (_isSelfNav && !_os[NAME] && _uach && _uach.platform && _uach.platform != 'Unknown') {\n                _os[NAME] = _uach.platform  \n                                    .replace(/chrome os/i, CHROMIUM_OS)\n                                    .replace(/macos/i, MAC_OS);           // backward compatibility\n            }\n            return _os;\n        };\n        this.getResult = function () {\n            return {\n                ua      : this.getUA(),\n                browser : this.getBrowser(),\n                engine  : this.getEngine(),\n                os      : this.getOS(),\n                device  : this.getDevice(),\n                cpu     : this.getCPU()\n            };\n        };\n        this.getUA = function () {\n            return _ua;\n        };\n        this.setUA = function (ua) {\n            _ua = (typeof ua === STR_TYPE && ua.length > UA_MAX_LENGTH) ? trim(ua, UA_MAX_LENGTH) : ua;\n            return this;\n        };\n        this.setUA(_ua);\n        return this;\n    };\n\n    UAParser.VERSION = LIBVERSION;\n    UAParser.BROWSER =  enumerize([NAME, VERSION, MAJOR]);\n    UAParser.CPU = enumerize([ARCHITECTURE]);\n    UAParser.DEVICE = enumerize([MODEL, VENDOR, TYPE, CONSOLE, MOBILE, SMARTTV, TABLET, WEARABLE, EMBEDDED]);\n    UAParser.ENGINE = UAParser.OS = enumerize([NAME, VERSION]);\n\n    ///////////\n    // Export\n    //////////\n\n    // check js environment\n    if (typeof(exports) !== UNDEF_TYPE) {\n        // nodejs env\n        if (\"object\" !== UNDEF_TYPE && module.exports) {\n            exports = module.exports = UAParser;\n        }\n        exports.UAParser = UAParser;\n    } else {\n        // requirejs env (optional)\n        if (\"function\" === FUNC_TYPE && __webpack_require__.amdO) {\n            !(__WEBPACK_AMD_DEFINE_RESULT__ = (function () {\n                return UAParser;\n            }).call(exports, __webpack_require__, exports, module),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n        } else if (typeof window !== UNDEF_TYPE) {\n            // browser env\n            window.UAParser = UAParser;\n        }\n    }\n\n    // jQuery/Zepto specific (optional)\n    // Note:\n    //   In AMD env the global scope should be kept clean, but jQuery is an exception.\n    //   jQuery always exports to global scope, unless jQuery.noConflict(true) is used,\n    //   and we should catch that.\n    var $ = typeof window !== UNDEF_TYPE && (window.jQuery || window.Zepto);\n    if ($ && !$.ua) {\n        var parser = new UAParser();\n        $.ua = parser.getResult();\n        $.ua.get = function () {\n            return parser.getUA();\n        };\n        $.ua.set = function (ua) {\n            parser.setUA(ua);\n            var result = parser.getResult();\n            for (var prop in result) {\n                $.ua[prop] = result[prop];\n            }\n        };\n    }\n\n})(typeof window === 'object' ? window : this);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/ua-parser-js/src/ua-parser.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./images/base-gift.png":
/*!******************************!*\
  !*** ./images/base-gift.png ***!
  \******************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\"src\":\"/_next/static/media/base-gift.7e246e7f.png\",\"height\":400,\"width\":400,\"blurDataURL\":\"/_next/image?url=%2F_next%2Fstatic%2Fmedia%2Fbase-gift.7e246e7f.png&w=8&q=70\",\"blurWidth\":8,\"blurHeight\":8});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL2ltYWdlcy9iYXNlLWdpZnQucG5nIiwibWFwcGluZ3MiOiI7QUFBQSwrREFBZSxDQUFDLHNNQUFzTSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9pbWFnZXMvYmFzZS1naWZ0LnBuZz8wZDc2Il0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBkZWZhdWx0IHtcInNyY1wiOlwiL19uZXh0L3N0YXRpYy9tZWRpYS9iYXNlLWdpZnQuN2UyNDZlN2YucG5nXCIsXCJoZWlnaHRcIjo0MDAsXCJ3aWR0aFwiOjQwMCxcImJsdXJEYXRhVVJMXCI6XCIvX25leHQvaW1hZ2U/dXJsPSUyRl9uZXh0JTJGc3RhdGljJTJGbWVkaWElMkZiYXNlLWdpZnQuN2UyNDZlN2YucG5nJnc9OCZxPTcwXCIsXCJibHVyV2lkdGhcIjo4LFwiYmx1ckhlaWdodFwiOjh9OyJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./images/base-gift.png\n"));

/***/ }),

/***/ "(app-pages-browser)/./images/battery.png":
/*!****************************!*\
  !*** ./images/battery.png ***!
  \****************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\"src\":\"/_next/static/media/battery.3ca93508.png\",\"height\":400,\"width\":400,\"blurDataURL\":\"/_next/image?url=%2F_next%2Fstatic%2Fmedia%2Fbattery.3ca93508.png&w=8&q=70\",\"blurWidth\":8,\"blurHeight\":8});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL2ltYWdlcy9iYXR0ZXJ5LnBuZyIsIm1hcHBpbmdzIjoiO0FBQUEsK0RBQWUsQ0FBQyxrTUFBa00iLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vaW1hZ2VzL2JhdHRlcnkucG5nPzk5ZWQiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGRlZmF1bHQge1wic3JjXCI6XCIvX25leHQvc3RhdGljL21lZGlhL2JhdHRlcnkuM2NhOTM1MDgucG5nXCIsXCJoZWlnaHRcIjo0MDAsXCJ3aWR0aFwiOjQwMCxcImJsdXJEYXRhVVJMXCI6XCIvX25leHQvaW1hZ2U/dXJsPSUyRl9uZXh0JTJGc3RhdGljJTJGbWVkaWElMkZiYXR0ZXJ5LjNjYTkzNTA4LnBuZyZ3PTgmcT03MFwiLFwiYmx1cldpZHRoXCI6OCxcImJsdXJIZWlnaHRcIjo4fTsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./images/battery.png\n"));

/***/ }),

/***/ "(app-pages-browser)/./images/big-gift.png":
/*!*****************************!*\
  !*** ./images/big-gift.png ***!
  \*****************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\"src\":\"/_next/static/media/big-gift.2886e133.png\",\"height\":400,\"width\":400,\"blurDataURL\":\"/_next/image?url=%2F_next%2Fstatic%2Fmedia%2Fbig-gift.2886e133.png&w=8&q=70\",\"blurWidth\":8,\"blurHeight\":8});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL2ltYWdlcy9iaWctZ2lmdC5wbmciLCJtYXBwaW5ncyI6IjtBQUFBLCtEQUFlLENBQUMsb01BQW9NIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL2ltYWdlcy9iaWctZ2lmdC5wbmc/OGQwNiJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZGVmYXVsdCB7XCJzcmNcIjpcIi9fbmV4dC9zdGF0aWMvbWVkaWEvYmlnLWdpZnQuMjg4NmUxMzMucG5nXCIsXCJoZWlnaHRcIjo0MDAsXCJ3aWR0aFwiOjQwMCxcImJsdXJEYXRhVVJMXCI6XCIvX25leHQvaW1hZ2U/dXJsPSUyRl9uZXh0JTJGc3RhdGljJTJGbWVkaWElMkZiaWctZ2lmdC4yODg2ZTEzMy5wbmcmdz04JnE9NzBcIixcImJsdXJXaWR0aFwiOjgsXCJibHVySGVpZ2h0XCI6OH07Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./images/big-gift.png\n"));

/***/ }),

/***/ "(app-pages-browser)/./images/binance-logo.png":
/*!*********************************!*\
  !*** ./images/binance-logo.png ***!
  \*********************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\"src\":\"/_next/static/media/binance-logo.3a74fbe9.png\",\"height\":128,\"width\":128,\"blurDataURL\":\"/_next/image?url=%2F_next%2Fstatic%2Fmedia%2Fbinance-logo.3a74fbe9.png&w=8&q=70\",\"blurWidth\":8,\"blurHeight\":8});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL2ltYWdlcy9iaW5hbmNlLWxvZ28ucG5nIiwibWFwcGluZ3MiOiI7QUFBQSwrREFBZSxDQUFDLDRNQUE0TSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9pbWFnZXMvYmluYW5jZS1sb2dvLnBuZz9kYjg3Il0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBkZWZhdWx0IHtcInNyY1wiOlwiL19uZXh0L3N0YXRpYy9tZWRpYS9iaW5hbmNlLWxvZ28uM2E3NGZiZTkucG5nXCIsXCJoZWlnaHRcIjoxMjgsXCJ3aWR0aFwiOjEyOCxcImJsdXJEYXRhVVJMXCI6XCIvX25leHQvaW1hZ2U/dXJsPSUyRl9uZXh0JTJGc3RhdGljJTJGbWVkaWElMkZiaW5hbmNlLWxvZ28uM2E3NGZiZTkucG5nJnc9OCZxPTcwXCIsXCJibHVyV2lkdGhcIjo4LFwiYmx1ckhlaWdodFwiOjh9OyJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./images/binance-logo.png\n"));

/***/ }),

/***/ "(app-pages-browser)/./images/bot-url-qr.png":
/*!*******************************!*\
  !*** ./images/bot-url-qr.png ***!
  \*******************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\"src\":\"/_next/static/media/bot-url-qr.adff3a7b.png\",\"height\":400,\"width\":400,\"blurDataURL\":\"/_next/image?url=%2F_next%2Fstatic%2Fmedia%2Fbot-url-qr.adff3a7b.png&w=8&q=70\",\"blurWidth\":8,\"blurHeight\":8});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL2ltYWdlcy9ib3QtdXJsLXFyLnBuZyIsIm1hcHBpbmdzIjoiO0FBQUEsK0RBQWUsQ0FBQyx3TUFBd00iLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vaW1hZ2VzL2JvdC11cmwtcXIucG5nPzJlN2YiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGRlZmF1bHQge1wic3JjXCI6XCIvX25leHQvc3RhdGljL21lZGlhL2JvdC11cmwtcXIuYWRmZjNhN2IucG5nXCIsXCJoZWlnaHRcIjo0MDAsXCJ3aWR0aFwiOjQwMCxcImJsdXJEYXRhVVJMXCI6XCIvX25leHQvaW1hZ2U/dXJsPSUyRl9uZXh0JTJGc3RhdGljJTJGbWVkaWElMkZib3QtdXJsLXFyLmFkZmYzYTdiLnBuZyZ3PTgmcT03MFwiLFwiYmx1cldpZHRoXCI6OCxcImJsdXJIZWlnaHRcIjo4fTsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./images/bot-url-qr.png\n"));

/***/ }),

/***/ "(app-pages-browser)/./images/crystals/crystal1.png":
/*!**************************************!*\
  !*** ./images/crystals/crystal1.png ***!
  \**************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\"src\":\"/_next/static/media/crystal1.b6569a34.png\",\"height\":256,\"width\":226,\"blurDataURL\":\"/_next/image?url=%2F_next%2Fstatic%2Fmedia%2Fcrystal1.b6569a34.png&w=7&q=70\",\"blurWidth\":7,\"blurHeight\":8});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL2ltYWdlcy9jcnlzdGFscy9jcnlzdGFsMS5wbmciLCJtYXBwaW5ncyI6IjtBQUFBLCtEQUFlLENBQUMsb01BQW9NIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL2ltYWdlcy9jcnlzdGFscy9jcnlzdGFsMS5wbmc/ZDIyNiJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZGVmYXVsdCB7XCJzcmNcIjpcIi9fbmV4dC9zdGF0aWMvbWVkaWEvY3J5c3RhbDEuYjY1NjlhMzQucG5nXCIsXCJoZWlnaHRcIjoyNTYsXCJ3aWR0aFwiOjIyNixcImJsdXJEYXRhVVJMXCI6XCIvX25leHQvaW1hZ2U/dXJsPSUyRl9uZXh0JTJGc3RhdGljJTJGbWVkaWElMkZjcnlzdGFsMS5iNjU2OWEzNC5wbmcmdz03JnE9NzBcIixcImJsdXJXaWR0aFwiOjcsXCJibHVySGVpZ2h0XCI6OH07Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./images/crystals/crystal1.png\n"));

/***/ }),

/***/ "(app-pages-browser)/./images/crystals/crystal2.png":
/*!**************************************!*\
  !*** ./images/crystals/crystal2.png ***!
  \**************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\"src\":\"/_next/static/media/crystal2.e0815421.png\",\"height\":256,\"width\":256,\"blurDataURL\":\"/_next/image?url=%2F_next%2Fstatic%2Fmedia%2Fcrystal2.e0815421.png&w=8&q=70\",\"blurWidth\":8,\"blurHeight\":8});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL2ltYWdlcy9jcnlzdGFscy9jcnlzdGFsMi5wbmciLCJtYXBwaW5ncyI6IjtBQUFBLCtEQUFlLENBQUMsb01BQW9NIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL2ltYWdlcy9jcnlzdGFscy9jcnlzdGFsMi5wbmc/ODgxZCJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZGVmYXVsdCB7XCJzcmNcIjpcIi9fbmV4dC9zdGF0aWMvbWVkaWEvY3J5c3RhbDIuZTA4MTU0MjEucG5nXCIsXCJoZWlnaHRcIjoyNTYsXCJ3aWR0aFwiOjI1NixcImJsdXJEYXRhVVJMXCI6XCIvX25leHQvaW1hZ2U/dXJsPSUyRl9uZXh0JTJGc3RhdGljJTJGbWVkaWElMkZjcnlzdGFsMi5lMDgxNTQyMS5wbmcmdz04JnE9NzBcIixcImJsdXJXaWR0aFwiOjgsXCJibHVySGVpZ2h0XCI6OH07Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./images/crystals/crystal2.png\n"));

/***/ }),

/***/ "(app-pages-browser)/./images/crystals/crystal3.png":
/*!**************************************!*\
  !*** ./images/crystals/crystal3.png ***!
  \**************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\"src\":\"/_next/static/media/crystal3.74adcd71.png\",\"height\":256,\"width\":256,\"blurDataURL\":\"/_next/image?url=%2F_next%2Fstatic%2Fmedia%2Fcrystal3.74adcd71.png&w=8&q=70\",\"blurWidth\":8,\"blurHeight\":8});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL2ltYWdlcy9jcnlzdGFscy9jcnlzdGFsMy5wbmciLCJtYXBwaW5ncyI6IjtBQUFBLCtEQUFlLENBQUMsb01BQW9NIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL2ltYWdlcy9jcnlzdGFscy9jcnlzdGFsMy5wbmc/N2VkYSJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZGVmYXVsdCB7XCJzcmNcIjpcIi9fbmV4dC9zdGF0aWMvbWVkaWEvY3J5c3RhbDMuNzRhZGNkNzEucG5nXCIsXCJoZWlnaHRcIjoyNTYsXCJ3aWR0aFwiOjI1NixcImJsdXJEYXRhVVJMXCI6XCIvX25leHQvaW1hZ2U/dXJsPSUyRl9uZXh0JTJGc3RhdGljJTJGbWVkaWElMkZjcnlzdGFsMy43NGFkY2Q3MS5wbmcmdz04JnE9NzBcIixcImJsdXJXaWR0aFwiOjgsXCJibHVySGVpZ2h0XCI6OH07Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./images/crystals/crystal3.png\n"));

/***/ }),

/***/ "(app-pages-browser)/./images/crystals/crystal4.png":
/*!**************************************!*\
  !*** ./images/crystals/crystal4.png ***!
  \**************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\"src\":\"/_next/static/media/crystal4.4a9d9bdf.png\",\"height\":256,\"width\":256,\"blurDataURL\":\"/_next/image?url=%2F_next%2Fstatic%2Fmedia%2Fcrystal4.4a9d9bdf.png&w=8&q=70\",\"blurWidth\":8,\"blurHeight\":8});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL2ltYWdlcy9jcnlzdGFscy9jcnlzdGFsNC5wbmciLCJtYXBwaW5ncyI6IjtBQUFBLCtEQUFlLENBQUMsb01BQW9NIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL2ltYWdlcy9jcnlzdGFscy9jcnlzdGFsNC5wbmc/MDFlMiJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZGVmYXVsdCB7XCJzcmNcIjpcIi9fbmV4dC9zdGF0aWMvbWVkaWEvY3J5c3RhbDQuNGE5ZDliZGYucG5nXCIsXCJoZWlnaHRcIjoyNTYsXCJ3aWR0aFwiOjI1NixcImJsdXJEYXRhVVJMXCI6XCIvX25leHQvaW1hZ2U/dXJsPSUyRl9uZXh0JTJGc3RhdGljJTJGbWVkaWElMkZjcnlzdGFsNC40YTlkOWJkZi5wbmcmdz04JnE9NzBcIixcImJsdXJXaWR0aFwiOjgsXCJibHVySGVpZ2h0XCI6OH07Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./images/crystals/crystal4.png\n"));

/***/ }),

/***/ "(app-pages-browser)/./images/crystals/crystal5.png":
/*!**************************************!*\
  !*** ./images/crystals/crystal5.png ***!
  \**************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\"src\":\"/_next/static/media/crystal5.8405affc.png\",\"height\":256,\"width\":256,\"blurDataURL\":\"/_next/image?url=%2F_next%2Fstatic%2Fmedia%2Fcrystal5.8405affc.png&w=8&q=70\",\"blurWidth\":8,\"blurHeight\":8});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL2ltYWdlcy9jcnlzdGFscy9jcnlzdGFsNS5wbmciLCJtYXBwaW5ncyI6IjtBQUFBLCtEQUFlLENBQUMsb01BQW9NIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL2ltYWdlcy9jcnlzdGFscy9jcnlzdGFsNS5wbmc/NmY0NyJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZGVmYXVsdCB7XCJzcmNcIjpcIi9fbmV4dC9zdGF0aWMvbWVkaWEvY3J5c3RhbDUuODQwNWFmZmMucG5nXCIsXCJoZWlnaHRcIjoyNTYsXCJ3aWR0aFwiOjI1NixcImJsdXJEYXRhVVJMXCI6XCIvX25leHQvaW1hZ2U/dXJsPSUyRl9uZXh0JTJGc3RhdGljJTJGbWVkaWElMkZjcnlzdGFsNS44NDA1YWZmYy5wbmcmdz04JnE9NzBcIixcImJsdXJXaWR0aFwiOjgsXCJibHVySGVpZ2h0XCI6OH07Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./images/crystals/crystal5.png\n"));

/***/ }),

/***/ "(app-pages-browser)/./images/crystals/crystal6.png":
/*!**************************************!*\
  !*** ./images/crystals/crystal6.png ***!
  \**************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\"src\":\"/_next/static/media/crystal6.c65e013d.png\",\"height\":256,\"width\":256,\"blurDataURL\":\"/_next/image?url=%2F_next%2Fstatic%2Fmedia%2Fcrystal6.c65e013d.png&w=8&q=70\",\"blurWidth\":8,\"blurHeight\":8});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL2ltYWdlcy9jcnlzdGFscy9jcnlzdGFsNi5wbmciLCJtYXBwaW5ncyI6IjtBQUFBLCtEQUFlLENBQUMsb01BQW9NIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL2ltYWdlcy9jcnlzdGFscy9jcnlzdGFsNi5wbmc/YmYyNiJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZGVmYXVsdCB7XCJzcmNcIjpcIi9fbmV4dC9zdGF0aWMvbWVkaWEvY3J5c3RhbDYuYzY1ZTAxM2QucG5nXCIsXCJoZWlnaHRcIjoyNTYsXCJ3aWR0aFwiOjI1NixcImJsdXJEYXRhVVJMXCI6XCIvX25leHQvaW1hZ2U/dXJsPSUyRl9uZXh0JTJGc3RhdGljJTJGbWVkaWElMkZjcnlzdGFsNi5jNjVlMDEzZC5wbmcmdz04JnE9NzBcIixcImJsdXJXaWR0aFwiOjgsXCJibHVySGVpZ2h0XCI6OH07Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./images/crystals/crystal6.png\n"));

/***/ }),

/***/ "(app-pages-browser)/./images/crystals/crystal7.png":
/*!**************************************!*\
  !*** ./images/crystals/crystal7.png ***!
  \**************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\"src\":\"/_next/static/media/crystal7.9b42a973.png\",\"height\":256,\"width\":256,\"blurDataURL\":\"/_next/image?url=%2F_next%2Fstatic%2Fmedia%2Fcrystal7.9b42a973.png&w=8&q=70\",\"blurWidth\":8,\"blurHeight\":8});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL2ltYWdlcy9jcnlzdGFscy9jcnlzdGFsNy5wbmciLCJtYXBwaW5ncyI6IjtBQUFBLCtEQUFlLENBQUMsb01BQW9NIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL2ltYWdlcy9jcnlzdGFscy9jcnlzdGFsNy5wbmc/NTQ3YiJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZGVmYXVsdCB7XCJzcmNcIjpcIi9fbmV4dC9zdGF0aWMvbWVkaWEvY3J5c3RhbDcuOWI0MmE5NzMucG5nXCIsXCJoZWlnaHRcIjoyNTYsXCJ3aWR0aFwiOjI1NixcImJsdXJEYXRhVVJMXCI6XCIvX25leHQvaW1hZ2U/dXJsPSUyRl9uZXh0JTJGc3RhdGljJTJGbWVkaWElMkZjcnlzdGFsNy45YjQyYTk3My5wbmcmdz04JnE9NzBcIixcImJsdXJXaWR0aFwiOjgsXCJibHVySGVpZ2h0XCI6OH07Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./images/crystals/crystal7.png\n"));

/***/ }),

/***/ "(app-pages-browser)/./images/crystals/crystal8.png":
/*!**************************************!*\
  !*** ./images/crystals/crystal8.png ***!
  \**************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\"src\":\"/_next/static/media/crystal8.6d5ec4b5.png\",\"height\":256,\"width\":256,\"blurDataURL\":\"/_next/image?url=%2F_next%2Fstatic%2Fmedia%2Fcrystal8.6d5ec4b5.png&w=8&q=70\",\"blurWidth\":8,\"blurHeight\":8});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL2ltYWdlcy9jcnlzdGFscy9jcnlzdGFsOC5wbmciLCJtYXBwaW5ncyI6IjtBQUFBLCtEQUFlLENBQUMsb01BQW9NIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL2ltYWdlcy9jcnlzdGFscy9jcnlzdGFsOC5wbmc/YTNmZSJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZGVmYXVsdCB7XCJzcmNcIjpcIi9fbmV4dC9zdGF0aWMvbWVkaWEvY3J5c3RhbDguNmQ1ZWM0YjUucG5nXCIsXCJoZWlnaHRcIjoyNTYsXCJ3aWR0aFwiOjI1NixcImJsdXJEYXRhVVJMXCI6XCIvX25leHQvaW1hZ2U/dXJsPSUyRl9uZXh0JTJGc3RhdGljJTJGbWVkaWElMkZjcnlzdGFsOC42ZDVlYzRiNS5wbmcmdz04JnE9NzBcIixcImJsdXJXaWR0aFwiOjgsXCJibHVySGVpZ2h0XCI6OH07Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./images/crystals/crystal8.png\n"));

/***/ }),

/***/ "(app-pages-browser)/./images/crystals/crystal9.png":
/*!**************************************!*\
  !*** ./images/crystals/crystal9.png ***!
  \**************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\"src\":\"/_next/static/media/crystal9.2736aa89.png\",\"height\":256,\"width\":256,\"blurDataURL\":\"/_next/image?url=%2F_next%2Fstatic%2Fmedia%2Fcrystal9.2736aa89.png&w=8&q=70\",\"blurWidth\":8,\"blurHeight\":8});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL2ltYWdlcy9jcnlzdGFscy9jcnlzdGFsOS5wbmciLCJtYXBwaW5ncyI6IjtBQUFBLCtEQUFlLENBQUMsb01BQW9NIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL2ltYWdlcy9jcnlzdGFscy9jcnlzdGFsOS5wbmc/YzdiNSJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZGVmYXVsdCB7XCJzcmNcIjpcIi9fbmV4dC9zdGF0aWMvbWVkaWEvY3J5c3RhbDkuMjczNmFhODkucG5nXCIsXCJoZWlnaHRcIjoyNTYsXCJ3aWR0aFwiOjI1NixcImJsdXJEYXRhVVJMXCI6XCIvX25leHQvaW1hZ2U/dXJsPSUyRl9uZXh0JTJGc3RhdGljJTJGbWVkaWElMkZjcnlzdGFsOS4yNzM2YWE4OS5wbmcmdz04JnE9NzBcIixcImJsdXJXaWR0aFwiOjgsXCJibHVySGVpZ2h0XCI6OH07Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./images/crystals/crystal9.png\n"));

/***/ }),

/***/ "(app-pages-browser)/./images/daily-cipher.png":
/*!*********************************!*\
  !*** ./images/daily-cipher.png ***!
  \*********************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\"src\":\"/_next/static/media/daily-cipher.af3f77f7.png\",\"height\":256,\"width\":256,\"blurDataURL\":\"/_next/image?url=%2F_next%2Fstatic%2Fmedia%2Fdaily-cipher.af3f77f7.png&w=8&q=70\",\"blurWidth\":8,\"blurHeight\":8});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL2ltYWdlcy9kYWlseS1jaXBoZXIucG5nIiwibWFwcGluZ3MiOiI7QUFBQSwrREFBZSxDQUFDLDRNQUE0TSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9pbWFnZXMvZGFpbHktY2lwaGVyLnBuZz82M2UwIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBkZWZhdWx0IHtcInNyY1wiOlwiL19uZXh0L3N0YXRpYy9tZWRpYS9kYWlseS1jaXBoZXIuYWYzZjc3ZjcucG5nXCIsXCJoZWlnaHRcIjoyNTYsXCJ3aWR0aFwiOjI1NixcImJsdXJEYXRhVVJMXCI6XCIvX25leHQvaW1hZ2U/dXJsPSUyRl9uZXh0JTJGc3RhdGljJTJGbWVkaWElMkZkYWlseS1jaXBoZXIuYWYzZjc3ZjcucG5nJnc9OCZxPTcwXCIsXCJibHVyV2lkdGhcIjo4LFwiYmx1ckhlaWdodFwiOjh9OyJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./images/daily-cipher.png\n"));

/***/ }),

/***/ "(app-pages-browser)/./images/daily-combo.png":
/*!********************************!*\
  !*** ./images/daily-combo.png ***!
  \********************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\"src\":\"/_next/static/media/daily-combo.f213d826.png\",\"height\":256,\"width\":256,\"blurDataURL\":\"/_next/image?url=%2F_next%2Fstatic%2Fmedia%2Fdaily-combo.f213d826.png&w=8&q=70\",\"blurWidth\":8,\"blurHeight\":8});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL2ltYWdlcy9kYWlseS1jb21iby5wbmciLCJtYXBwaW5ncyI6IjtBQUFBLCtEQUFlLENBQUMsME1BQTBNIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL2ltYWdlcy9kYWlseS1jb21iby5wbmc/YTRkMyJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZGVmYXVsdCB7XCJzcmNcIjpcIi9fbmV4dC9zdGF0aWMvbWVkaWEvZGFpbHktY29tYm8uZjIxM2Q4MjYucG5nXCIsXCJoZWlnaHRcIjoyNTYsXCJ3aWR0aFwiOjI1NixcImJsdXJEYXRhVVJMXCI6XCIvX25leHQvaW1hZ2U/dXJsPSUyRl9uZXh0JTJGc3RhdGljJTJGbWVkaWElMkZkYWlseS1jb21iby5mMjEzZDgyNi5wbmcmdz04JnE9NzBcIixcImJsdXJXaWR0aFwiOjgsXCJibHVySGVpZ2h0XCI6OH07Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./images/daily-combo.png\n"));

/***/ }),

/***/ "(app-pages-browser)/./images/daily-reward.png":
/*!*********************************!*\
  !*** ./images/daily-reward.png ***!
  \*********************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\"src\":\"/_next/static/media/daily-reward.23bc8fb5.png\",\"height\":400,\"width\":400,\"blurDataURL\":\"/_next/image?url=%2F_next%2Fstatic%2Fmedia%2Fdaily-reward.23bc8fb5.png&w=8&q=70\",\"blurWidth\":8,\"blurHeight\":8});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL2ltYWdlcy9kYWlseS1yZXdhcmQucG5nIiwibWFwcGluZ3MiOiI7QUFBQSwrREFBZSxDQUFDLDRNQUE0TSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9pbWFnZXMvZGFpbHktcmV3YXJkLnBuZz83MWE4Il0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBkZWZhdWx0IHtcInNyY1wiOlwiL19uZXh0L3N0YXRpYy9tZWRpYS9kYWlseS1yZXdhcmQuMjNiYzhmYjUucG5nXCIsXCJoZWlnaHRcIjo0MDAsXCJ3aWR0aFwiOjQwMCxcImJsdXJEYXRhVVJMXCI6XCIvX25leHQvaW1hZ2U/dXJsPSUyRl9uZXh0JTJGc3RhdGljJTJGbWVkaWElMkZkYWlseS1yZXdhcmQuMjNiYzhmYjUucG5nJnc9OCZxPTcwXCIsXCJibHVyV2lkdGhcIjo4LFwiYmx1ckhlaWdodFwiOjh9OyJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./images/daily-reward.png\n"));

/***/ }),

/***/ "(app-pages-browser)/./images/dollar-coin.png":
/*!********************************!*\
  !*** ./images/dollar-coin.png ***!
  \********************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\"src\":\"/_next/static/media/dollar-coin.72e96de0.png\",\"height\":128,\"width\":128,\"blurDataURL\":\"/_next/image?url=%2F_next%2Fstatic%2Fmedia%2Fdollar-coin.72e96de0.png&w=8&q=70\",\"blurWidth\":8,\"blurHeight\":8});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL2ltYWdlcy9kb2xsYXItY29pbi5wbmciLCJtYXBwaW5ncyI6IjtBQUFBLCtEQUFlLENBQUMsME1BQTBNIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL2ltYWdlcy9kb2xsYXItY29pbi5wbmc/Y2ZmYSJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZGVmYXVsdCB7XCJzcmNcIjpcIi9fbmV4dC9zdGF0aWMvbWVkaWEvZG9sbGFyLWNvaW4uNzJlOTZkZTAucG5nXCIsXCJoZWlnaHRcIjoxMjgsXCJ3aWR0aFwiOjEyOCxcImJsdXJEYXRhVVJMXCI6XCIvX25leHQvaW1hZ2U/dXJsPSUyRl9uZXh0JTJGc3RhdGljJTJGbWVkaWElMkZkb2xsYXItY29pbi43MmU5NmRlMC5wbmcmdz04JnE9NzBcIixcImJsdXJXaWR0aFwiOjgsXCJibHVySGVpZ2h0XCI6OH07Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./images/dollar-coin.png\n"));

/***/ }),

/***/ "(app-pages-browser)/./images/friends.png":
/*!****************************!*\
  !*** ./images/friends.png ***!
  \****************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\"src\":\"/_next/static/media/friends.540b44f3.png\",\"height\":400,\"width\":400,\"blurDataURL\":\"/_next/image?url=%2F_next%2Fstatic%2Fmedia%2Ffriends.540b44f3.png&w=8&q=70\",\"blurWidth\":8,\"blurHeight\":8});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL2ltYWdlcy9mcmllbmRzLnBuZyIsIm1hcHBpbmdzIjoiO0FBQUEsK0RBQWUsQ0FBQyxrTUFBa00iLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vaW1hZ2VzL2ZyaWVuZHMucG5nP2I1NzkiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGRlZmF1bHQge1wic3JjXCI6XCIvX25leHQvc3RhdGljL21lZGlhL2ZyaWVuZHMuNTQwYjQ0ZjMucG5nXCIsXCJoZWlnaHRcIjo0MDAsXCJ3aWR0aFwiOjQwMCxcImJsdXJEYXRhVVJMXCI6XCIvX25leHQvaW1hZ2U/dXJsPSUyRl9uZXh0JTJGc3RhdGljJTJGbWVkaWElMkZmcmllbmRzLjU0MGI0NGYzLnBuZyZ3PTgmcT03MFwiLFwiYmx1cldpZHRoXCI6OCxcImJsdXJIZWlnaHRcIjo4fTsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./images/friends.png\n"));

/***/ }),

/***/ "(app-pages-browser)/./images/hamster-coin.png":
/*!*********************************!*\
  !*** ./images/hamster-coin.png ***!
  \*********************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\"src\":\"/_next/static/media/hamster-coin.e5007682.png\",\"height\":128,\"width\":128,\"blurDataURL\":\"/_next/image?url=%2F_next%2Fstatic%2Fmedia%2Fhamster-coin.e5007682.png&w=8&q=70\",\"blurWidth\":8,\"blurHeight\":8});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL2ltYWdlcy9oYW1zdGVyLWNvaW4ucG5nIiwibWFwcGluZ3MiOiI7QUFBQSwrREFBZSxDQUFDLDRNQUE0TSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9pbWFnZXMvaGFtc3Rlci1jb2luLnBuZz8xMDEzIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBkZWZhdWx0IHtcInNyY1wiOlwiL19uZXh0L3N0YXRpYy9tZWRpYS9oYW1zdGVyLWNvaW4uZTUwMDc2ODIucG5nXCIsXCJoZWlnaHRcIjoxMjgsXCJ3aWR0aFwiOjEyOCxcImJsdXJEYXRhVVJMXCI6XCIvX25leHQvaW1hZ2U/dXJsPSUyRl9uZXh0JTJGc3RhdGljJTJGbWVkaWElMkZoYW1zdGVyLWNvaW4uZTUwMDc2ODIucG5nJnc9OCZxPTcwXCIsXCJibHVyV2lkdGhcIjo4LFwiYmx1ckhlaWdodFwiOjh9OyJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./images/hamster-coin.png\n"));

/***/ }),

/***/ "(app-pages-browser)/./images/hamster-exchange.png":
/*!*************************************!*\
  !*** ./images/hamster-exchange.png ***!
  \*************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\"src\":\"/_next/static/media/hamster-exchange.735e0bba.png\",\"height\":229,\"width\":224,\"blurDataURL\":\"/_next/image?url=%2F_next%2Fstatic%2Fmedia%2Fhamster-exchange.735e0bba.png&w=8&q=70\",\"blurWidth\":8,\"blurHeight\":8});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL2ltYWdlcy9oYW1zdGVyLWV4Y2hhbmdlLnBuZyIsIm1hcHBpbmdzIjoiO0FBQUEsK0RBQWUsQ0FBQyxvTkFBb04iLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vaW1hZ2VzL2hhbXN0ZXItZXhjaGFuZ2UucG5nPzQ3ZmEiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGRlZmF1bHQge1wic3JjXCI6XCIvX25leHQvc3RhdGljL21lZGlhL2hhbXN0ZXItZXhjaGFuZ2UuNzM1ZTBiYmEucG5nXCIsXCJoZWlnaHRcIjoyMjksXCJ3aWR0aFwiOjIyNCxcImJsdXJEYXRhVVJMXCI6XCIvX25leHQvaW1hZ2U/dXJsPSUyRl9uZXh0JTJGc3RhdGljJTJGbWVkaWElMkZoYW1zdGVyLWV4Y2hhbmdlLjczNWUwYmJhLnBuZyZ3PTgmcT03MFwiLFwiYmx1cldpZHRoXCI6OCxcImJsdXJIZWlnaHRcIjo4fTsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./images/hamster-exchange.png\n"));

/***/ }),

/***/ "(app-pages-browser)/./images/ice-token.png":
/*!******************************!*\
  !*** ./images/ice-token.png ***!
  \******************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\"src\":\"/_next/static/media/ice-token.e6aed2dd.png\",\"height\":400,\"width\":400,\"blurDataURL\":\"/_next/image?url=%2F_next%2Fstatic%2Fmedia%2Fice-token.e6aed2dd.png&w=8&q=70\",\"blurWidth\":8,\"blurHeight\":8});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL2ltYWdlcy9pY2UtdG9rZW4ucG5nIiwibWFwcGluZ3MiOiI7QUFBQSwrREFBZSxDQUFDLHNNQUFzTSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9pbWFnZXMvaWNlLXRva2VuLnBuZz85ZmEzIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBkZWZhdWx0IHtcInNyY1wiOlwiL19uZXh0L3N0YXRpYy9tZWRpYS9pY2UtdG9rZW4uZTZhZWQyZGQucG5nXCIsXCJoZWlnaHRcIjo0MDAsXCJ3aWR0aFwiOjQwMCxcImJsdXJEYXRhVVJMXCI6XCIvX25leHQvaW1hZ2U/dXJsPSUyRl9uZXh0JTJGc3RhdGljJTJGbWVkaWElMkZpY2UtdG9rZW4uZTZhZWQyZGQucG5nJnc9OCZxPTcwXCIsXCJibHVyV2lkdGhcIjo4LFwiYmx1ckhlaWdodFwiOjh9OyJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./images/ice-token.png\n"));

/***/ }),

/***/ "(app-pages-browser)/./images/lightning.png":
/*!******************************!*\
  !*** ./images/lightning.png ***!
  \******************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\"src\":\"/_next/static/media/lightning.e8a47787.png\",\"height\":400,\"width\":400,\"blurDataURL\":\"/_next/image?url=%2F_next%2Fstatic%2Fmedia%2Flightning.e8a47787.png&w=8&q=70\",\"blurWidth\":8,\"blurHeight\":8});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL2ltYWdlcy9saWdodG5pbmcucG5nIiwibWFwcGluZ3MiOiI7QUFBQSwrREFBZSxDQUFDLHNNQUFzTSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9pbWFnZXMvbGlnaHRuaW5nLnBuZz84ZGMwIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBkZWZhdWx0IHtcInNyY1wiOlwiL19uZXh0L3N0YXRpYy9tZWRpYS9saWdodG5pbmcuZThhNDc3ODcucG5nXCIsXCJoZWlnaHRcIjo0MDAsXCJ3aWR0aFwiOjQwMCxcImJsdXJEYXRhVVJMXCI6XCIvX25leHQvaW1hZ2U/dXJsPSUyRl9uZXh0JTJGc3RhdGljJTJGbWVkaWElMkZsaWdodG5pbmcuZThhNDc3ODcucG5nJnc9OCZxPTcwXCIsXCJibHVyV2lkdGhcIjo4LFwiYmx1ckhlaWdodFwiOjh9OyJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./images/lightning.png\n"));

/***/ }),

/***/ "(app-pages-browser)/./images/main-character.png":
/*!***********************************!*\
  !*** ./images/main-character.png ***!
  \***********************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\"src\":\"/_next/static/media/main-character.5004ee06.png\",\"height\":720,\"width\":720,\"blurDataURL\":\"/_next/image?url=%2F_next%2Fstatic%2Fmedia%2Fmain-character.5004ee06.png&w=8&q=70\",\"blurWidth\":8,\"blurHeight\":8});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL2ltYWdlcy9tYWluLWNoYXJhY3Rlci5wbmciLCJtYXBwaW5ncyI6IjtBQUFBLCtEQUFlLENBQUMsZ05BQWdOIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL2ltYWdlcy9tYWluLWNoYXJhY3Rlci5wbmc/NWI3OSJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZGVmYXVsdCB7XCJzcmNcIjpcIi9fbmV4dC9zdGF0aWMvbWVkaWEvbWFpbi1jaGFyYWN0ZXIuNTAwNGVlMDYucG5nXCIsXCJoZWlnaHRcIjo3MjAsXCJ3aWR0aFwiOjcyMCxcImJsdXJEYXRhVVJMXCI6XCIvX25leHQvaW1hZ2U/dXJsPSUyRl9uZXh0JTJGc3RhdGljJTJGbWVkaWElMkZtYWluLWNoYXJhY3Rlci41MDA0ZWUwNi5wbmcmdz04JnE9NzBcIixcImJsdXJXaWR0aFwiOjgsXCJibHVySGVpZ2h0XCI6OH07Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./images/main-character.png\n"));

/***/ }),

/***/ "(app-pages-browser)/./images/multiclick.png":
/*!*******************************!*\
  !*** ./images/multiclick.png ***!
  \*******************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\"src\":\"/_next/static/media/multiclick.cfbd3313.png\",\"height\":400,\"width\":400,\"blurDataURL\":\"/_next/image?url=%2F_next%2Fstatic%2Fmedia%2Fmulticlick.cfbd3313.png&w=8&q=70\",\"blurWidth\":8,\"blurHeight\":8});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL2ltYWdlcy9tdWx0aWNsaWNrLnBuZyIsIm1hcHBpbmdzIjoiO0FBQUEsK0RBQWUsQ0FBQyx3TUFBd00iLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vaW1hZ2VzL211bHRpY2xpY2sucG5nP2FmY2EiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGRlZmF1bHQge1wic3JjXCI6XCIvX25leHQvc3RhdGljL21lZGlhL211bHRpY2xpY2suY2ZiZDMzMTMucG5nXCIsXCJoZWlnaHRcIjo0MDAsXCJ3aWR0aFwiOjQwMCxcImJsdXJEYXRhVVJMXCI6XCIvX25leHQvaW1hZ2U/dXJsPSUyRl9uZXh0JTJGc3RhdGljJTJGbWVkaWElMkZtdWx0aWNsaWNrLmNmYmQzMzEzLnBuZyZ3PTgmcT03MFwiLFwiYmx1cldpZHRoXCI6OCxcImJsdXJIZWlnaHRcIjo4fTsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./images/multiclick.png\n"));

/***/ }),

/***/ "(app-pages-browser)/./images/paid-trophy1.png":
/*!*********************************!*\
  !*** ./images/paid-trophy1.png ***!
  \*********************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\"src\":\"/_next/static/media/paid-trophy1.b1cb175a.png\",\"height\":221,\"width\":221,\"blurDataURL\":\"/_next/image?url=%2F_next%2Fstatic%2Fmedia%2Fpaid-trophy1.b1cb175a.png&w=8&q=70\",\"blurWidth\":8,\"blurHeight\":8});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL2ltYWdlcy9wYWlkLXRyb3BoeTEucG5nIiwibWFwcGluZ3MiOiI7QUFBQSwrREFBZSxDQUFDLDRNQUE0TSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9pbWFnZXMvcGFpZC10cm9waHkxLnBuZz9kYWEyIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBkZWZhdWx0IHtcInNyY1wiOlwiL19uZXh0L3N0YXRpYy9tZWRpYS9wYWlkLXRyb3BoeTEuYjFjYjE3NWEucG5nXCIsXCJoZWlnaHRcIjoyMjEsXCJ3aWR0aFwiOjIyMSxcImJsdXJEYXRhVVJMXCI6XCIvX25leHQvaW1hZ2U/dXJsPSUyRl9uZXh0JTJGc3RhdGljJTJGbWVkaWElMkZwYWlkLXRyb3BoeTEuYjFjYjE3NWEucG5nJnc9OCZxPTcwXCIsXCJibHVyV2lkdGhcIjo4LFwiYmx1ckhlaWdodFwiOjh9OyJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./images/paid-trophy1.png\n"));

/***/ }),

/***/ "(app-pages-browser)/./images/paid-trophy2.png":
/*!*********************************!*\
  !*** ./images/paid-trophy2.png ***!
  \*********************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\"src\":\"/_next/static/media/paid-trophy2.02886bcc.png\",\"height\":192,\"width\":192,\"blurDataURL\":\"/_next/image?url=%2F_next%2Fstatic%2Fmedia%2Fpaid-trophy2.02886bcc.png&w=8&q=70\",\"blurWidth\":8,\"blurHeight\":8});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL2ltYWdlcy9wYWlkLXRyb3BoeTIucG5nIiwibWFwcGluZ3MiOiI7QUFBQSwrREFBZSxDQUFDLDRNQUE0TSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9pbWFnZXMvcGFpZC10cm9waHkyLnBuZz9mZDViIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBkZWZhdWx0IHtcInNyY1wiOlwiL19uZXh0L3N0YXRpYy9tZWRpYS9wYWlkLXRyb3BoeTIuMDI4ODZiY2MucG5nXCIsXCJoZWlnaHRcIjoxOTIsXCJ3aWR0aFwiOjE5MixcImJsdXJEYXRhVVJMXCI6XCIvX25leHQvaW1hZ2U/dXJsPSUyRl9uZXh0JTJGc3RhdGljJTJGbWVkaWElMkZwYWlkLXRyb3BoeTIuMDI4ODZiY2MucG5nJnc9OCZxPTcwXCIsXCJibHVyV2lkdGhcIjo4LFwiYmx1ckhlaWdodFwiOjh9OyJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./images/paid-trophy2.png\n"));

/***/ }),

/***/ "(app-pages-browser)/./images/telegram.png":
/*!*****************************!*\
  !*** ./images/telegram.png ***!
  \*****************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\"src\":\"/_next/static/media/telegram.d70bd4ea.png\",\"height\":400,\"width\":400,\"blurDataURL\":\"/_next/image?url=%2F_next%2Fstatic%2Fmedia%2Ftelegram.d70bd4ea.png&w=8&q=70\",\"blurWidth\":8,\"blurHeight\":8});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL2ltYWdlcy90ZWxlZ3JhbS5wbmciLCJtYXBwaW5ncyI6IjtBQUFBLCtEQUFlLENBQUMsb01BQW9NIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL2ltYWdlcy90ZWxlZ3JhbS5wbmc/NzFiZCJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZGVmYXVsdCB7XCJzcmNcIjpcIi9fbmV4dC9zdGF0aWMvbWVkaWEvdGVsZWdyYW0uZDcwYmQ0ZWEucG5nXCIsXCJoZWlnaHRcIjo0MDAsXCJ3aWR0aFwiOjQwMCxcImJsdXJEYXRhVVJMXCI6XCIvX25leHQvaW1hZ2U/dXJsPSUyRl9uZXh0JTJGc3RhdGljJTJGbWVkaWElMkZ0ZWxlZ3JhbS5kNzBiZDRlYS5wbmcmdz04JnE9NzBcIixcImJsdXJXaWR0aFwiOjgsXCJibHVySGVpZ2h0XCI6OH07Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./images/telegram.png\n"));

/***/ }),

/***/ "(app-pages-browser)/./images/ton-wallet.png":
/*!*******************************!*\
  !*** ./images/ton-wallet.png ***!
  \*******************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\"src\":\"/_next/static/media/ton-wallet.c0708ac1.png\",\"height\":400,\"width\":400,\"blurDataURL\":\"/_next/image?url=%2F_next%2Fstatic%2Fmedia%2Fton-wallet.c0708ac1.png&w=8&q=70\",\"blurWidth\":8,\"blurHeight\":8});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL2ltYWdlcy90b24td2FsbGV0LnBuZyIsIm1hcHBpbmdzIjoiO0FBQUEsK0RBQWUsQ0FBQyx3TUFBd00iLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vaW1hZ2VzL3Rvbi13YWxsZXQucG5nPzMyY2YiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGRlZmF1bHQge1wic3JjXCI6XCIvX25leHQvc3RhdGljL21lZGlhL3Rvbi13YWxsZXQuYzA3MDhhYzEucG5nXCIsXCJoZWlnaHRcIjo0MDAsXCJ3aWR0aFwiOjQwMCxcImJsdXJEYXRhVVJMXCI6XCIvX25leHQvaW1hZ2U/dXJsPSUyRl9uZXh0JTJGc3RhdGljJTJGbWVkaWElMkZ0b24td2FsbGV0LmMwNzA4YWMxLnBuZyZ3PTgmcT03MFwiLFwiYmx1cldpZHRoXCI6OCxcImJsdXJIZWlnaHRcIjo4fTsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./images/ton-wallet.png\n"));

/***/ }),

/***/ "(app-pages-browser)/./images/toncoin.png":
/*!****************************!*\
  !*** ./images/toncoin.png ***!
  \****************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\"src\":\"/_next/static/media/toncoin.5d24d92d.png\",\"height\":560,\"width\":560,\"blurDataURL\":\"/_next/image?url=%2F_next%2Fstatic%2Fmedia%2Ftoncoin.5d24d92d.png&w=8&q=70\",\"blurWidth\":8,\"blurHeight\":8});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL2ltYWdlcy90b25jb2luLnBuZyIsIm1hcHBpbmdzIjoiO0FBQUEsK0RBQWUsQ0FBQyxrTUFBa00iLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vaW1hZ2VzL3RvbmNvaW4ucG5nP2ZlYmIiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGRlZmF1bHQge1wic3JjXCI6XCIvX25leHQvc3RhdGljL21lZGlhL3RvbmNvaW4uNWQyNGQ5MmQucG5nXCIsXCJoZWlnaHRcIjo1NjAsXCJ3aWR0aFwiOjU2MCxcImJsdXJEYXRhVVJMXCI6XCIvX25leHQvaW1hZ2U/dXJsPSUyRl9uZXh0JTJGc3RhdGljJTJGbWVkaWElMkZ0b25jb2luLjVkMjRkOTJkLnBuZyZ3PTgmcT03MFwiLFwiYmx1cldpZHRoXCI6OCxcImJsdXJIZWlnaHRcIjo4fTsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./images/toncoin.png\n"));

/***/ }),

/***/ "(app-pages-browser)/./images/twittter.png":
/*!*****************************!*\
  !*** ./images/twittter.png ***!
  \*****************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\"src\":\"/_next/static/media/twittter.875e5bb6.png\",\"height\":400,\"width\":400,\"blurDataURL\":\"/_next/image?url=%2F_next%2Fstatic%2Fmedia%2Ftwittter.875e5bb6.png&w=8&q=70\",\"blurWidth\":8,\"blurHeight\":8});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL2ltYWdlcy90d2l0dHRlci5wbmciLCJtYXBwaW5ncyI6IjtBQUFBLCtEQUFlLENBQUMsb01BQW9NIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL2ltYWdlcy90d2l0dHRlci5wbmc/Y2NiNSJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZGVmYXVsdCB7XCJzcmNcIjpcIi9fbmV4dC9zdGF0aWMvbWVkaWEvdHdpdHR0ZXIuODc1ZTViYjYucG5nXCIsXCJoZWlnaHRcIjo0MDAsXCJ3aWR0aFwiOjQwMCxcImJsdXJEYXRhVVJMXCI6XCIvX25leHQvaW1hZ2U/dXJsPSUyRl9uZXh0JTJGc3RhdGljJTJGbWVkaWElMkZ0d2l0dHRlci44NzVlNWJiNi5wbmcmdz04JnE9NzBcIixcImJsdXJXaWR0aFwiOjgsXCJibHVySGVpZ2h0XCI6OH07Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./images/twittter.png\n"));

/***/ }),

/***/ "(app-pages-browser)/./images/usdt.png":
/*!*************************!*\
  !*** ./images/usdt.png ***!
  \*************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\"src\":\"/_next/static/media/usdt.8dbe37d3.png\",\"height\":940,\"width\":900,\"blurDataURL\":\"/_next/image?url=%2F_next%2Fstatic%2Fmedia%2Fusdt.8dbe37d3.png&w=8&q=70\",\"blurWidth\":8,\"blurHeight\":8});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL2ltYWdlcy91c2R0LnBuZyIsIm1hcHBpbmdzIjoiO0FBQUEsK0RBQWUsQ0FBQyw0TEFBNEwiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vaW1hZ2VzL3VzZHQucG5nPzg3M2MiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGRlZmF1bHQge1wic3JjXCI6XCIvX25leHQvc3RhdGljL21lZGlhL3VzZHQuOGRiZTM3ZDMucG5nXCIsXCJoZWlnaHRcIjo5NDAsXCJ3aWR0aFwiOjkwMCxcImJsdXJEYXRhVVJMXCI6XCIvX25leHQvaW1hZ2U/dXJsPSUyRl9uZXh0JTJGc3RhdGljJTJGbWVkaWElMkZ1c2R0LjhkYmUzN2QzLnBuZyZ3PTgmcT03MFwiLFwiYmx1cldpZHRoXCI6OCxcImJsdXJIZWlnaHRcIjo4fTsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./images/usdt.png\n"));

/***/ }),

/***/ "(app-pages-browser)/./images/youtube.png":
/*!****************************!*\
  !*** ./images/youtube.png ***!
  \****************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\"src\":\"/_next/static/media/youtube.6cd3c9a8.png\",\"height\":400,\"width\":400,\"blurDataURL\":\"/_next/image?url=%2F_next%2Fstatic%2Fmedia%2Fyoutube.6cd3c9a8.png&w=8&q=70\",\"blurWidth\":8,\"blurHeight\":8});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL2ltYWdlcy95b3V0dWJlLnBuZyIsIm1hcHBpbmdzIjoiO0FBQUEsK0RBQWUsQ0FBQyxrTUFBa00iLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vaW1hZ2VzL3lvdXR1YmUucG5nPzYyMGMiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGRlZmF1bHQge1wic3JjXCI6XCIvX25leHQvc3RhdGljL21lZGlhL3lvdXR1YmUuNmNkM2M5YTgucG5nXCIsXCJoZWlnaHRcIjo0MDAsXCJ3aWR0aFwiOjQwMCxcImJsdXJEYXRhVVJMXCI6XCIvX25leHQvaW1hZ2U/dXJsPSUyRl9uZXh0JTJGc3RhdGljJTJGbWVkaWElMkZ5b3V0dWJlLjZjZDNjOWE4LnBuZyZ3PTgmcT03MFwiLFwiYmx1cldpZHRoXCI6OCxcImJsdXJIZWlnaHRcIjo4fTsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./images/youtube.png\n"));

/***/ }),

/***/ "(app-pages-browser)/./app/clicker/layout.tsx":
/*!********************************!*\
  !*** ./app/clicker/layout.tsx ***!
  \********************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ MyApp; }\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var _utils_consts__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/utils/consts */ \"(app-pages-browser)/./utils/consts.ts\");\n/* harmony import */ var _tonconnect_ui_react__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @tonconnect/ui-react */ \"(app-pages-browser)/./node_modules/@tonconnect/ui-react/lib/index.mjs\");\n// app/clicker/layout.tsx\n/**\n * This project was developed by Nikandr Surkov.\n * You may not use this code if you purchased it from any source other than the official website https://nikandr.com.\n * If you purchased it from the official website, you may use it for your own projects,\n * but you may not resell it or publish it publicly.\n * \n * Website: https://nikandr.com\n * YouTube: https://www.youtube.com/@NikandrSurkov\n * Telegram: https://t.me/nikandr_s\n * Telegram channel for news/updates: https://t.me/clicker_game_news\n * GitHub: https://github.com/nikandr-surkov\n */ /* __next_internal_client_entry_do_not_use__ default auto */ \n\n\nfunction MyApp(param) {\n    let { children } = param;\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_tonconnect_ui_react__WEBPACK_IMPORTED_MODULE_2__.TonConnectUIProvider, {\n        manifestUrl: _utils_consts__WEBPACK_IMPORTED_MODULE_1__.WALLET_MANIFEST_URL,\n        children: children\n    }, void 0, false, {\n        fileName: \"F:\\\\Downloads\\\\ckliker-main\\\\ckliker-main\\\\app\\\\clicker\\\\layout.tsx\",\n        lineNumber: 27,\n        columnNumber: 9\n    }, this);\n}\n_c = MyApp;\nvar _c;\n$RefreshReg$(_c, \"MyApp\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL2FwcC9jbGlja2VyL2xheW91dC50c3giLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBLHlCQUF5QjtBQUV6Qjs7Ozs7Ozs7Ozs7Q0FXQztBQUlvRDtBQUNPO0FBRTdDLFNBQVNFLE1BQU0sS0FJNUI7UUFKNEIsRUFDMUJDLFFBQVEsRUFHVixHQUo0QjtJQUsxQixxQkFDSSw4REFBQ0Ysc0VBQW9CQTtRQUFDRyxhQUFhSiw4REFBbUJBO2tCQUNqREc7Ozs7OztBQUdiO0tBVndCRCIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9hcHAvY2xpY2tlci9sYXlvdXQudHN4PzE2NjkiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gYXBwL2NsaWNrZXIvbGF5b3V0LnRzeFxuXG4vKipcbiAqIFRoaXMgcHJvamVjdCB3YXMgZGV2ZWxvcGVkIGJ5IE5pa2FuZHIgU3Vya292LlxuICogWW91IG1heSBub3QgdXNlIHRoaXMgY29kZSBpZiB5b3UgcHVyY2hhc2VkIGl0IGZyb20gYW55IHNvdXJjZSBvdGhlciB0aGFuIHRoZSBvZmZpY2lhbCB3ZWJzaXRlIGh0dHBzOi8vbmlrYW5kci5jb20uXG4gKiBJZiB5b3UgcHVyY2hhc2VkIGl0IGZyb20gdGhlIG9mZmljaWFsIHdlYnNpdGUsIHlvdSBtYXkgdXNlIGl0IGZvciB5b3VyIG93biBwcm9qZWN0cyxcbiAqIGJ1dCB5b3UgbWF5IG5vdCByZXNlbGwgaXQgb3IgcHVibGlzaCBpdCBwdWJsaWNseS5cbiAqIFxuICogV2Vic2l0ZTogaHR0cHM6Ly9uaWthbmRyLmNvbVxuICogWW91VHViZTogaHR0cHM6Ly93d3cueW91dHViZS5jb20vQE5pa2FuZHJTdXJrb3ZcbiAqIFRlbGVncmFtOiBodHRwczovL3QubWUvbmlrYW5kcl9zXG4gKiBUZWxlZ3JhbSBjaGFubmVsIGZvciBuZXdzL3VwZGF0ZXM6IGh0dHBzOi8vdC5tZS9jbGlja2VyX2dhbWVfbmV3c1xuICogR2l0SHViOiBodHRwczovL2dpdGh1Yi5jb20vbmlrYW5kci1zdXJrb3ZcbiAqL1xuXG4ndXNlIGNsaWVudCdcblxuaW1wb3J0IHsgV0FMTEVUX01BTklGRVNUX1VSTCB9IGZyb20gJ0AvdXRpbHMvY29uc3RzJztcbmltcG9ydCB7IFRvbkNvbm5lY3RVSVByb3ZpZGVyIH0gZnJvbSAnQHRvbmNvbm5lY3QvdWktcmVhY3QnO1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBNeUFwcCh7XG4gICAgY2hpbGRyZW4sXG59OiBSZWFkb25seTx7XG4gICAgY2hpbGRyZW46IFJlYWN0LlJlYWN0Tm9kZTtcbn0+KSB7XG4gICAgcmV0dXJuIChcbiAgICAgICAgPFRvbkNvbm5lY3RVSVByb3ZpZGVyIG1hbmlmZXN0VXJsPXtXQUxMRVRfTUFOSUZFU1RfVVJMfT5cbiAgICAgICAgICAgIHtjaGlsZHJlbn1cbiAgICAgICAgPC9Ub25Db25uZWN0VUlQcm92aWRlcj5cbiAgICApO1xufSJdLCJuYW1lcyI6WyJXQUxMRVRfTUFOSUZFU1RfVVJMIiwiVG9uQ29ubmVjdFVJUHJvdmlkZXIiLCJNeUFwcCIsImNoaWxkcmVuIiwibWFuaWZlc3RVcmwiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./app/clicker/layout.tsx\n"));

/***/ }),

/***/ "(app-pages-browser)/./images/index.ts":
/*!*************************!*\
  !*** ./images/index.ts ***!
  \*************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   baseGift: function() { return /* reexport safe */ _base_gift_png__WEBPACK_IMPORTED_MODULE_12__[\"default\"]; },\n/* harmony export */   battery: function() { return /* reexport safe */ _battery_png__WEBPACK_IMPORTED_MODULE_10__[\"default\"]; },\n/* harmony export */   bigGift: function() { return /* reexport safe */ _big_gift_png__WEBPACK_IMPORTED_MODULE_13__[\"default\"]; },\n/* harmony export */   binanceLogo: function() { return /* reexport safe */ _binance_logo_png__WEBPACK_IMPORTED_MODULE_1__[\"default\"]; },\n/* harmony export */   botUrlQr: function() { return /* reexport safe */ _bot_url_qr_png__WEBPACK_IMPORTED_MODULE_30__[\"default\"]; },\n/* harmony export */   crystal1: function() { return /* reexport safe */ _crystals_crystal1_png__WEBPACK_IMPORTED_MODULE_19__[\"default\"]; },\n/* harmony export */   crystal2: function() { return /* reexport safe */ _crystals_crystal2_png__WEBPACK_IMPORTED_MODULE_20__[\"default\"]; },\n/* harmony export */   crystal3: function() { return /* reexport safe */ _crystals_crystal3_png__WEBPACK_IMPORTED_MODULE_21__[\"default\"]; },\n/* harmony export */   crystal4: function() { return /* reexport safe */ _crystals_crystal4_png__WEBPACK_IMPORTED_MODULE_22__[\"default\"]; },\n/* harmony export */   crystal5: function() { return /* reexport safe */ _crystals_crystal5_png__WEBPACK_IMPORTED_MODULE_23__[\"default\"]; },\n/* harmony export */   crystal6: function() { return /* reexport safe */ _crystals_crystal6_png__WEBPACK_IMPORTED_MODULE_24__[\"default\"]; },\n/* harmony export */   crystal7: function() { return /* reexport safe */ _crystals_crystal7_png__WEBPACK_IMPORTED_MODULE_25__[\"default\"]; },\n/* harmony export */   crystal8: function() { return /* reexport safe */ _crystals_crystal8_png__WEBPACK_IMPORTED_MODULE_26__[\"default\"]; },\n/* harmony export */   crystal9: function() { return /* reexport safe */ _crystals_crystal9_png__WEBPACK_IMPORTED_MODULE_27__[\"default\"]; },\n/* harmony export */   dailyCipher: function() { return /* reexport safe */ _daily_cipher_png__WEBPACK_IMPORTED_MODULE_4__[\"default\"]; },\n/* harmony export */   dailyCombo: function() { return /* reexport safe */ _daily_combo_png__WEBPACK_IMPORTED_MODULE_5__[\"default\"]; },\n/* harmony export */   dailyReward: function() { return /* reexport safe */ _daily_reward_png__WEBPACK_IMPORTED_MODULE_3__[\"default\"]; },\n/* harmony export */   dollarCoin: function() { return /* reexport safe */ _dollar_coin_png__WEBPACK_IMPORTED_MODULE_2__[\"default\"]; },\n/* harmony export */   friends: function() { return /* reexport safe */ _friends_png__WEBPACK_IMPORTED_MODULE_17__[\"default\"]; },\n/* harmony export */   hamsterCoin: function() { return /* reexport safe */ _hamster_coin_png__WEBPACK_IMPORTED_MODULE_7__[\"default\"]; },\n/* harmony export */   hamsterExchange: function() { return /* reexport safe */ _hamster_exchange_png__WEBPACK_IMPORTED_MODULE_0__[\"default\"]; },\n/* harmony export */   iceToken: function() { return /* reexport safe */ _ice_token_png__WEBPACK_IMPORTED_MODULE_8__[\"default\"]; },\n/* harmony export */   imageMap: function() { return /* binding */ imageMap; },\n/* harmony export */   lightning: function() { return /* reexport safe */ _lightning_png__WEBPACK_IMPORTED_MODULE_9__[\"default\"]; },\n/* harmony export */   mainCharacter: function() { return /* reexport safe */ _main_character_png__WEBPACK_IMPORTED_MODULE_6__[\"default\"]; },\n/* harmony export */   multiclick: function() { return /* reexport safe */ _multiclick_png__WEBPACK_IMPORTED_MODULE_11__[\"default\"]; },\n/* harmony export */   paidTrophy1: function() { return /* reexport safe */ _paid_trophy1_png__WEBPACK_IMPORTED_MODULE_28__[\"default\"]; },\n/* harmony export */   paidTrophy2: function() { return /* reexport safe */ _paid_trophy2_png__WEBPACK_IMPORTED_MODULE_29__[\"default\"]; },\n/* harmony export */   telegram: function() { return /* reexport safe */ _telegram_png__WEBPACK_IMPORTED_MODULE_15__[\"default\"]; },\n/* harmony export */   tonWallet: function() { return /* reexport safe */ _ton_wallet_png__WEBPACK_IMPORTED_MODULE_18__[\"default\"]; },\n/* harmony export */   toncoin: function() { return /* reexport safe */ _toncoin_png__WEBPACK_IMPORTED_MODULE_31__[\"default\"]; },\n/* harmony export */   twitter: function() { return /* reexport safe */ _twittter_png__WEBPACK_IMPORTED_MODULE_16__[\"default\"]; },\n/* harmony export */   usdt: function() { return /* reexport safe */ _usdt_png__WEBPACK_IMPORTED_MODULE_32__[\"default\"]; },\n/* harmony export */   youtube: function() { return /* reexport safe */ _youtube_png__WEBPACK_IMPORTED_MODULE_14__[\"default\"]; }\n/* harmony export */ });\n/* harmony import */ var _hamster_exchange_png__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./hamster-exchange.png */ \"(app-pages-browser)/./images/hamster-exchange.png\");\n/* harmony import */ var _binance_logo_png__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./binance-logo.png */ \"(app-pages-browser)/./images/binance-logo.png\");\n/* harmony import */ var _dollar_coin_png__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./dollar-coin.png */ \"(app-pages-browser)/./images/dollar-coin.png\");\n/* harmony import */ var _daily_reward_png__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./daily-reward.png */ \"(app-pages-browser)/./images/daily-reward.png\");\n/* harmony import */ var _daily_cipher_png__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./daily-cipher.png */ \"(app-pages-browser)/./images/daily-cipher.png\");\n/* harmony import */ var _daily_combo_png__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./daily-combo.png */ \"(app-pages-browser)/./images/daily-combo.png\");\n/* harmony import */ var _main_character_png__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./main-character.png */ \"(app-pages-browser)/./images/main-character.png\");\n/* harmony import */ var _hamster_coin_png__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./hamster-coin.png */ \"(app-pages-browser)/./images/hamster-coin.png\");\n/* harmony import */ var _ice_token_png__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./ice-token.png */ \"(app-pages-browser)/./images/ice-token.png\");\n/* harmony import */ var _lightning_png__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./lightning.png */ \"(app-pages-browser)/./images/lightning.png\");\n/* harmony import */ var _battery_png__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./battery.png */ \"(app-pages-browser)/./images/battery.png\");\n/* harmony import */ var _multiclick_png__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./multiclick.png */ \"(app-pages-browser)/./images/multiclick.png\");\n/* harmony import */ var _base_gift_png__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./base-gift.png */ \"(app-pages-browser)/./images/base-gift.png\");\n/* harmony import */ var _big_gift_png__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./big-gift.png */ \"(app-pages-browser)/./images/big-gift.png\");\n/* harmony import */ var _youtube_png__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./youtube.png */ \"(app-pages-browser)/./images/youtube.png\");\n/* harmony import */ var _telegram_png__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./telegram.png */ \"(app-pages-browser)/./images/telegram.png\");\n/* harmony import */ var _twittter_png__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./twittter.png */ \"(app-pages-browser)/./images/twittter.png\");\n/* harmony import */ var _friends_png__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./friends.png */ \"(app-pages-browser)/./images/friends.png\");\n/* harmony import */ var _ton_wallet_png__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./ton-wallet.png */ \"(app-pages-browser)/./images/ton-wallet.png\");\n/* harmony import */ var _crystals_crystal1_png__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./crystals/crystal1.png */ \"(app-pages-browser)/./images/crystals/crystal1.png\");\n/* harmony import */ var _crystals_crystal2_png__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ./crystals/crystal2.png */ \"(app-pages-browser)/./images/crystals/crystal2.png\");\n/* harmony import */ var _crystals_crystal3_png__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ./crystals/crystal3.png */ \"(app-pages-browser)/./images/crystals/crystal3.png\");\n/* harmony import */ var _crystals_crystal4_png__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ./crystals/crystal4.png */ \"(app-pages-browser)/./images/crystals/crystal4.png\");\n/* harmony import */ var _crystals_crystal5_png__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! ./crystals/crystal5.png */ \"(app-pages-browser)/./images/crystals/crystal5.png\");\n/* harmony import */ var _crystals_crystal6_png__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! ./crystals/crystal6.png */ \"(app-pages-browser)/./images/crystals/crystal6.png\");\n/* harmony import */ var _crystals_crystal7_png__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! ./crystals/crystal7.png */ \"(app-pages-browser)/./images/crystals/crystal7.png\");\n/* harmony import */ var _crystals_crystal8_png__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! ./crystals/crystal8.png */ \"(app-pages-browser)/./images/crystals/crystal8.png\");\n/* harmony import */ var _crystals_crystal9_png__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(/*! ./crystals/crystal9.png */ \"(app-pages-browser)/./images/crystals/crystal9.png\");\n/* harmony import */ var _paid_trophy1_png__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(/*! ./paid-trophy1.png */ \"(app-pages-browser)/./images/paid-trophy1.png\");\n/* harmony import */ var _paid_trophy2_png__WEBPACK_IMPORTED_MODULE_29__ = __webpack_require__(/*! ./paid-trophy2.png */ \"(app-pages-browser)/./images/paid-trophy2.png\");\n/* harmony import */ var _bot_url_qr_png__WEBPACK_IMPORTED_MODULE_30__ = __webpack_require__(/*! ./bot-url-qr.png */ \"(app-pages-browser)/./images/bot-url-qr.png\");\n/* harmony import */ var _toncoin_png__WEBPACK_IMPORTED_MODULE_31__ = __webpack_require__(/*! ./toncoin.png */ \"(app-pages-browser)/./images/toncoin.png\");\n/* harmony import */ var _usdt_png__WEBPACK_IMPORTED_MODULE_32__ = __webpack_require__(/*! ./usdt.png */ \"(app-pages-browser)/./images/usdt.png\");\n// images/index.ts\n/**\n * This project was developed by Nikandr Surkov.\n * You may not use this code if you purchased it from any source other than the official website https://nikandr.com.\n * If you purchased it from the official website, you may use it for your own projects,\n * but you may not resell it or publish it publicly.\n * \n * Website: https://nikandr.com\n * YouTube: https://www.youtube.com/@NikandrSurkov\n * Telegram: https://t.me/nikandr_s\n * Telegram channel for news/updates: https://t.me/clicker_game_news\n * GitHub: https://github.com/nikandr-surkov\n */ \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n // Добавьте этот экспорт\n // Добавьте этот экспорт\n\nconst imageMap = {\n    youtube: _youtube_png__WEBPACK_IMPORTED_MODULE_14__[\"default\"],\n    telegram: _telegram_png__WEBPACK_IMPORTED_MODULE_15__[\"default\"],\n    twitter: _twittter_png__WEBPACK_IMPORTED_MODULE_16__[\"default\"],\n    friends: _friends_png__WEBPACK_IMPORTED_MODULE_17__[\"default\"]\n};\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL2ltYWdlcy9pbmRleC50cyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUEsa0JBQWtCO0FBRWxCOzs7Ozs7Ozs7OztDQVdDLEdBRW9EO0FBQ1I7QUFDRjtBQUNFO0FBQ0E7QUFDRjtBQUNNO0FBQ0o7QUFDTjtBQUNDO0FBQ0o7QUFDTTtBQUNIO0FBQ0Y7QUFDRDtBQUNFO0FBQ0Q7QUFDRDtBQUNLO0FBQ007QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Y7QUFDQTtBQUNMO0FBQ1csQ0FBQyx3QkFBd0I7QUFDL0IsQ0FBQyx3QkFBd0I7QUFtQ3BFO0FBRUssTUFBTWtDLFdBQWdDO0lBQ3pDcEIsT0FBT0EsdURBQUFBO0lBQ1BDLFFBQVFBLHdEQUFBQTtJQUNSQyxPQUFPQSx3REFBQUE7SUFDUEMsT0FBT0EsdURBQUFBO0FBQ1gsRUFBRSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9pbWFnZXMvaW5kZXgudHM/MmJjMSJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBpbWFnZXMvaW5kZXgudHNcblxuLyoqXG4gKiBUaGlzIHByb2plY3Qgd2FzIGRldmVsb3BlZCBieSBOaWthbmRyIFN1cmtvdi5cbiAqIFlvdSBtYXkgbm90IHVzZSB0aGlzIGNvZGUgaWYgeW91IHB1cmNoYXNlZCBpdCBmcm9tIGFueSBzb3VyY2Ugb3RoZXIgdGhhbiB0aGUgb2ZmaWNpYWwgd2Vic2l0ZSBodHRwczovL25pa2FuZHIuY29tLlxuICogSWYgeW91IHB1cmNoYXNlZCBpdCBmcm9tIHRoZSBvZmZpY2lhbCB3ZWJzaXRlLCB5b3UgbWF5IHVzZSBpdCBmb3IgeW91ciBvd24gcHJvamVjdHMsXG4gKiBidXQgeW91IG1heSBub3QgcmVzZWxsIGl0IG9yIHB1Ymxpc2ggaXQgcHVibGljbHkuXG4gKiBcbiAqIFdlYnNpdGU6IGh0dHBzOi8vbmlrYW5kci5jb21cbiAqIFlvdVR1YmU6IGh0dHBzOi8vd3d3LnlvdXR1YmUuY29tL0BOaWthbmRyU3Vya292XG4gKiBUZWxlZ3JhbTogaHR0cHM6Ly90Lm1lL25pa2FuZHJfc1xuICogVGVsZWdyYW0gY2hhbm5lbCBmb3IgbmV3cy91cGRhdGVzOiBodHRwczovL3QubWUvY2xpY2tlcl9nYW1lX25ld3NcbiAqIEdpdEh1YjogaHR0cHM6Ly9naXRodWIuY29tL25pa2FuZHItc3Vya292XG4gKi9cblxuaW1wb3J0IGhhbXN0ZXJFeGNoYW5nZSBmcm9tIFwiLi9oYW1zdGVyLWV4Y2hhbmdlLnBuZ1wiO1xuaW1wb3J0IGJpbmFuY2VMb2dvIGZyb20gXCIuL2JpbmFuY2UtbG9nby5wbmdcIjtcbmltcG9ydCBkb2xsYXJDb2luIGZyb20gXCIuL2RvbGxhci1jb2luLnBuZ1wiO1xuaW1wb3J0IGRhaWx5UmV3YXJkIGZyb20gXCIuL2RhaWx5LXJld2FyZC5wbmdcIjtcbmltcG9ydCBkYWlseUNpcGhlciBmcm9tIFwiLi9kYWlseS1jaXBoZXIucG5nXCI7XG5pbXBvcnQgZGFpbHlDb21ibyBmcm9tIFwiLi9kYWlseS1jb21iby5wbmdcIjtcbmltcG9ydCBtYWluQ2hhcmFjdGVyIGZyb20gXCIuL21haW4tY2hhcmFjdGVyLnBuZ1wiO1xuaW1wb3J0IGhhbXN0ZXJDb2luIGZyb20gXCIuL2hhbXN0ZXItY29pbi5wbmdcIjtcbmltcG9ydCBpY2VUb2tlbiBmcm9tIFwiLi9pY2UtdG9rZW4ucG5nXCI7XG5pbXBvcnQgbGlnaHRuaW5nIGZyb20gXCIuL2xpZ2h0bmluZy5wbmdcIjtcbmltcG9ydCBiYXR0ZXJ5IGZyb20gXCIuL2JhdHRlcnkucG5nXCI7XG5pbXBvcnQgbXVsdGljbGljayBmcm9tIFwiLi9tdWx0aWNsaWNrLnBuZ1wiO1xuaW1wb3J0IGJhc2VHaWZ0IGZyb20gXCIuL2Jhc2UtZ2lmdC5wbmdcIjtcbmltcG9ydCBiaWdHaWZ0IGZyb20gXCIuL2JpZy1naWZ0LnBuZ1wiO1xuaW1wb3J0IHlvdXR1YmUgZnJvbSBcIi4veW91dHViZS5wbmdcIjtcbmltcG9ydCB0ZWxlZ3JhbSBmcm9tIFwiLi90ZWxlZ3JhbS5wbmdcIjtcbmltcG9ydCB0d2l0dGVyIGZyb20gXCIuL3R3aXR0dGVyLnBuZ1wiO1xuaW1wb3J0IGZyaWVuZHMgZnJvbSBcIi4vZnJpZW5kcy5wbmdcIjtcbmltcG9ydCB0b25XYWxsZXQgZnJvbSBcIi4vdG9uLXdhbGxldC5wbmdcIjtcbmltcG9ydCBjcnlzdGFsMSBmcm9tIFwiLi9jcnlzdGFscy9jcnlzdGFsMS5wbmdcIjtcbmltcG9ydCBjcnlzdGFsMiBmcm9tIFwiLi9jcnlzdGFscy9jcnlzdGFsMi5wbmdcIjtcbmltcG9ydCBjcnlzdGFsMyBmcm9tIFwiLi9jcnlzdGFscy9jcnlzdGFsMy5wbmdcIjtcbmltcG9ydCBjcnlzdGFsNCBmcm9tIFwiLi9jcnlzdGFscy9jcnlzdGFsNC5wbmdcIjtcbmltcG9ydCBjcnlzdGFsNSBmcm9tIFwiLi9jcnlzdGFscy9jcnlzdGFsNS5wbmdcIjtcbmltcG9ydCBjcnlzdGFsNiBmcm9tIFwiLi9jcnlzdGFscy9jcnlzdGFsNi5wbmdcIjtcbmltcG9ydCBjcnlzdGFsNyBmcm9tIFwiLi9jcnlzdGFscy9jcnlzdGFsNy5wbmdcIjtcbmltcG9ydCBjcnlzdGFsOCBmcm9tIFwiLi9jcnlzdGFscy9jcnlzdGFsOC5wbmdcIjtcbmltcG9ydCBjcnlzdGFsOSBmcm9tIFwiLi9jcnlzdGFscy9jcnlzdGFsOS5wbmdcIjtcbmltcG9ydCBwYWlkVHJvcGh5MSBmcm9tIFwiLi9wYWlkLXRyb3BoeTEucG5nXCI7XG5pbXBvcnQgcGFpZFRyb3BoeTIgZnJvbSBcIi4vcGFpZC10cm9waHkyLnBuZ1wiO1xuaW1wb3J0IGJvdFVybFFyIGZyb20gXCIuL2JvdC11cmwtcXIucG5nXCI7XG5leHBvcnQgeyBkZWZhdWx0IGFzIHRvbmNvaW4gfSBmcm9tICcuL3RvbmNvaW4ucG5nJzsgLy8g0JTQvtCx0LDQstGM0YLQtSDRjdGC0L7RgiDRjdC60YHQv9C+0YDRglxuZXhwb3J0IHsgZGVmYXVsdCBhcyB1c2R0IH0gZnJvbSAnLi91c2R0LnBuZyc7IC8vINCU0L7QsdCw0LLRjNGC0LUg0Y3RgtC+0YIg0Y3QutGB0L/QvtGA0YJcblxuXG5leHBvcnQge1xuICAgIGhhbXN0ZXJFeGNoYW5nZSxcbiAgICBiaW5hbmNlTG9nbyxcbiAgICBkb2xsYXJDb2luLFxuICAgIGRhaWx5UmV3YXJkLFxuICAgIGRhaWx5Q2lwaGVyLFxuICAgIGRhaWx5Q29tYm8sXG4gICAgbWFpbkNoYXJhY3RlcixcbiAgICBoYW1zdGVyQ29pbixcbiAgICBpY2VUb2tlbixcbiAgICBsaWdodG5pbmcsXG4gICAgYmF0dGVyeSxcbiAgICBtdWx0aWNsaWNrLFxuICAgIGJhc2VHaWZ0LFxuICAgIGJpZ0dpZnQsXG4gICAgeW91dHViZSxcbiAgICB0ZWxlZ3JhbSxcbiAgICB0d2l0dGVyLFxuICAgIGZyaWVuZHMsXG4gICAgdG9uV2FsbGV0LFxuICAgIGNyeXN0YWwxLFxuICAgIGNyeXN0YWwyLFxuICAgIGNyeXN0YWwzLFxuICAgIGNyeXN0YWw0LFxuICAgIGNyeXN0YWw1LFxuICAgIGNyeXN0YWw2LFxuICAgIGNyeXN0YWw3LFxuICAgIGNyeXN0YWw4LFxuICAgIGNyeXN0YWw5LFxuICAgIHBhaWRUcm9waHkxLFxuICAgIHBhaWRUcm9waHkyLFxuICAgIGJvdFVybFFyXG59O1xuXG5leHBvcnQgY29uc3QgaW1hZ2VNYXA6IFJlY29yZDxzdHJpbmcsIGFueT4gPSB7XG4gICAgeW91dHViZSxcbiAgICB0ZWxlZ3JhbSxcbiAgICB0d2l0dGVyLFxuICAgIGZyaWVuZHNcbn07Il0sIm5hbWVzIjpbImhhbXN0ZXJFeGNoYW5nZSIsImJpbmFuY2VMb2dvIiwiZG9sbGFyQ29pbiIsImRhaWx5UmV3YXJkIiwiZGFpbHlDaXBoZXIiLCJkYWlseUNvbWJvIiwibWFpbkNoYXJhY3RlciIsImhhbXN0ZXJDb2luIiwiaWNlVG9rZW4iLCJsaWdodG5pbmciLCJiYXR0ZXJ5IiwibXVsdGljbGljayIsImJhc2VHaWZ0IiwiYmlnR2lmdCIsInlvdXR1YmUiLCJ0ZWxlZ3JhbSIsInR3aXR0ZXIiLCJmcmllbmRzIiwidG9uV2FsbGV0IiwiY3J5c3RhbDEiLCJjcnlzdGFsMiIsImNyeXN0YWwzIiwiY3J5c3RhbDQiLCJjcnlzdGFsNSIsImNyeXN0YWw2IiwiY3J5c3RhbDciLCJjcnlzdGFsOCIsImNyeXN0YWw5IiwicGFpZFRyb3BoeTEiLCJwYWlkVHJvcGh5MiIsImJvdFVybFFyIiwiZGVmYXVsdCIsInRvbmNvaW4iLCJ1c2R0IiwiaW1hZ2VNYXAiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./images/index.ts\n"));

/***/ }),

/***/ "(app-pages-browser)/./utils/consts.ts":
/*!*************************!*\
  !*** ./utils/consts.ts ***!
  \*************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ALLOW_ALL_DEVICES: function() { return /* binding */ ALLOW_ALL_DEVICES; },\n/* harmony export */   DAILY_REWARDS: function() { return /* binding */ DAILY_REWARDS; },\n/* harmony export */   ENERGY_REFILL_COOLDOWN: function() { return /* binding */ ENERGY_REFILL_COOLDOWN; },\n/* harmony export */   LEVELS: function() { return /* binding */ LEVELS; },\n/* harmony export */   MAXIMUM_INACTIVE_TIME_FOR_MINE: function() { return /* binding */ MAXIMUM_INACTIVE_TIME_FOR_MINE; },\n/* harmony export */   MAX_ENERGY_REFILLS_PER_DAY: function() { return /* binding */ MAX_ENERGY_REFILLS_PER_DAY; },\n/* harmony export */   REFERRAL_BONUS_BASE: function() { return /* binding */ REFERRAL_BONUS_BASE; },\n/* harmony export */   REFERRAL_BONUS_PREMIUM: function() { return /* binding */ REFERRAL_BONUS_PREMIUM; },\n/* harmony export */   TASK_WAIT_TIME: function() { return /* binding */ TASK_WAIT_TIME; },\n/* harmony export */   WALLET_MANIFEST_URL: function() { return /* binding */ WALLET_MANIFEST_URL; },\n/* harmony export */   energyUpgradeBaseBenefit: function() { return /* binding */ energyUpgradeBaseBenefit; },\n/* harmony export */   energyUpgradeBasePrice: function() { return /* binding */ energyUpgradeBasePrice; },\n/* harmony export */   energyUpgradeBenefitCoefficient: function() { return /* binding */ energyUpgradeBenefitCoefficient; },\n/* harmony export */   energyUpgradeCostCoefficient: function() { return /* binding */ energyUpgradeCostCoefficient; },\n/* harmony export */   mineUpgradeBaseBenefit: function() { return /* binding */ mineUpgradeBaseBenefit; },\n/* harmony export */   mineUpgradeBasePrice: function() { return /* binding */ mineUpgradeBasePrice; },\n/* harmony export */   mineUpgradeBenefitCoefficient: function() { return /* binding */ mineUpgradeBenefitCoefficient; },\n/* harmony export */   mineUpgradeCostCoefficient: function() { return /* binding */ mineUpgradeCostCoefficient; },\n/* harmony export */   multitapUpgradeBaseBenefit: function() { return /* binding */ multitapUpgradeBaseBenefit; },\n/* harmony export */   multitapUpgradeBasePrice: function() { return /* binding */ multitapUpgradeBasePrice; },\n/* harmony export */   multitapUpgradeBenefitCoefficient: function() { return /* binding */ multitapUpgradeBenefitCoefficient; },\n/* harmony export */   multitapUpgradeCostCoefficient: function() { return /* binding */ multitapUpgradeCostCoefficient; }\n/* harmony export */ });\n/* harmony import */ var _images__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @/images */ \"(app-pages-browser)/./images/index.ts\");\n// utils/consts.ts\n/**\n * This project was developed by Nikandr Surkov.\n * You may not use this code if you purchased it from any source other than the official website https://nikandr.com.\n * If you purchased it from the official website, you may use it for your own projects,\n * but you may not resell it or publish it publicly.\n * \n * Website: https://nikandr.com\n * YouTube: https://www.youtube.com/@NikandrSurkov\n * Telegram: https://t.me/nikandr_s\n * Telegram channel for news/updates: https://t.me/clicker_game_news\n * GitHub: https://github.com/nikandr-surkov\n */ \nconst ALLOW_ALL_DEVICES = true;\nconst WALLET_MANIFEST_URL = \"https://violet-traditional-rabbit-103.mypinata.cloud/ipfs/QmcFgnfXoiNtp8dvy25xA9hMEjz5AzugTuPQNTHQMTw9Tf\";\nconst LEVELS = [\n    {\n        name: \"Ice Cube Intern\",\n        minPoints: 0,\n        bigImage: _images__WEBPACK_IMPORTED_MODULE_0__.mainCharacter,\n        smallImage: _images__WEBPACK_IMPORTED_MODULE_0__.crystal1,\n        color: \"#2adaf8\",\n        friendBonus: 0,\n        friendBonusPremium: 0\n    },\n    {\n        name: \"Frosty Freelancer\",\n        minPoints: 5000,\n        bigImage: _images__WEBPACK_IMPORTED_MODULE_0__.mainCharacter,\n        smallImage: _images__WEBPACK_IMPORTED_MODULE_0__.crystal2,\n        color: \"#d64767\",\n        friendBonus: 20000,\n        friendBonusPremium: 25000\n    },\n    {\n        name: \"Chilly Consultant\",\n        minPoints: 25000,\n        bigImage: _images__WEBPACK_IMPORTED_MODULE_0__.mainCharacter,\n        smallImage: _images__WEBPACK_IMPORTED_MODULE_0__.crystal3,\n        color: \"#e9c970\",\n        friendBonus: 30000,\n        friendBonusPremium: 50000\n    },\n    {\n        name: \"Glacial Manager\",\n        minPoints: 100000,\n        bigImage: _images__WEBPACK_IMPORTED_MODULE_0__.mainCharacter,\n        smallImage: _images__WEBPACK_IMPORTED_MODULE_0__.crystal4,\n        color: \"#73e94b\",\n        friendBonus: 40000,\n        friendBonusPremium: 75000\n    },\n    {\n        name: \"Subzero Supervisor\",\n        minPoints: 1000000,\n        bigImage: _images__WEBPACK_IMPORTED_MODULE_0__.mainCharacter,\n        smallImage: _images__WEBPACK_IMPORTED_MODULE_0__.crystal5,\n        color: \"#4ef0ba\",\n        friendBonus: 60000,\n        friendBonusPremium: 100000\n    },\n    {\n        name: \"Arctic Executive\",\n        minPoints: 2000000,\n        bigImage: _images__WEBPACK_IMPORTED_MODULE_0__.mainCharacter,\n        smallImage: _images__WEBPACK_IMPORTED_MODULE_0__.crystal6,\n        color: \"#1a3ae8\",\n        friendBonus: 100000,\n        friendBonusPremium: 150000\n    },\n    {\n        name: \"Polar CEO\",\n        minPoints: 10000000,\n        bigImage: _images__WEBPACK_IMPORTED_MODULE_0__.mainCharacter,\n        smallImage: _images__WEBPACK_IMPORTED_MODULE_0__.crystal7,\n        color: \"#902bc9\",\n        friendBonus: 250000,\n        friendBonusPremium: 500000\n    },\n    {\n        name: \"Tundra Tycoon\",\n        minPoints: 50000000,\n        bigImage: _images__WEBPACK_IMPORTED_MODULE_0__.mainCharacter,\n        smallImage: _images__WEBPACK_IMPORTED_MODULE_0__.crystal8,\n        color: \"#fb8bee\",\n        friendBonus: 500000,\n        friendBonusPremium: 1000000\n    },\n    {\n        name: \"Iceberg Mogul\",\n        minPoints: 100000000,\n        bigImage: _images__WEBPACK_IMPORTED_MODULE_0__.mainCharacter,\n        smallImage: _images__WEBPACK_IMPORTED_MODULE_0__.crystal9,\n        color: \"#e04e92\",\n        friendBonus: 1000000,\n        friendBonusPremium: 2000000\n    }\n];\nconst DAILY_REWARDS = [\n    500,\n    1000,\n    2500,\n    5000,\n    15000,\n    25000,\n    100000,\n    500000,\n    1000000,\n    5000000\n];\nconst MAXIMUM_INACTIVE_TIME_FOR_MINE = 3 * 60 * 60 * 1000; // 3 hours in milliseconds\nconst MAX_ENERGY_REFILLS_PER_DAY = 6;\nconst ENERGY_REFILL_COOLDOWN = 60 * 60 * 1000; // 1 hour in milliseconds\nconst TASK_WAIT_TIME = 60 * 60 * 1000; // 1 hour in milliseconds\nconst REFERRAL_BONUS_BASE = 5000;\nconst REFERRAL_BONUS_PREMIUM = 25000;\n// Multitap\nconst multitapUpgradeBasePrice = 1000;\nconst multitapUpgradeCostCoefficient = 2;\nconst multitapUpgradeBaseBenefit = 1;\nconst multitapUpgradeBenefitCoefficient = 1;\n// Energy\nconst energyUpgradeBasePrice = 1000;\nconst energyUpgradeCostCoefficient = 2;\nconst energyUpgradeBaseBenefit = 500;\nconst energyUpgradeBenefitCoefficient = 1;\n// Mine (profit per hour)\nconst mineUpgradeBasePrice = 1000;\nconst mineUpgradeCostCoefficient = 1.5;\nconst mineUpgradeBaseBenefit = 100;\nconst mineUpgradeBenefitCoefficient = 1.2;\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./utils/consts.ts\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next/dist/compiled/react/cjs/react-jsx-dev-runtime.development.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/next/dist/compiled/react/cjs/react-jsx-dev-runtime.development.js ***!
  \****************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/**\n * @license React\n * react-jsx-dev-runtime.development.js\n *\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\n\nif (true) {\n  (function() {\n'use strict';\n\nvar React = __webpack_require__(/*! next/dist/compiled/react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n\n// ATTENTION\n// When adding new symbols to this file,\n// Please consider also adding to 'react-devtools-shared/src/backend/ReactSymbols'\n// The Symbol used to tag the ReactElement-like types.\nvar REACT_ELEMENT_TYPE = Symbol.for('react.element');\nvar REACT_PORTAL_TYPE = Symbol.for('react.portal');\nvar REACT_FRAGMENT_TYPE = Symbol.for('react.fragment');\nvar REACT_STRICT_MODE_TYPE = Symbol.for('react.strict_mode');\nvar REACT_PROFILER_TYPE = Symbol.for('react.profiler');\nvar REACT_PROVIDER_TYPE = Symbol.for('react.provider'); // TODO: Delete with enableRenderableContext\n\nvar REACT_CONSUMER_TYPE = Symbol.for('react.consumer');\nvar REACT_CONTEXT_TYPE = Symbol.for('react.context');\nvar REACT_FORWARD_REF_TYPE = Symbol.for('react.forward_ref');\nvar REACT_SUSPENSE_TYPE = Symbol.for('react.suspense');\nvar REACT_SUSPENSE_LIST_TYPE = Symbol.for('react.suspense_list');\nvar REACT_MEMO_TYPE = Symbol.for('react.memo');\nvar REACT_LAZY_TYPE = Symbol.for('react.lazy');\nvar REACT_OFFSCREEN_TYPE = Symbol.for('react.offscreen');\nvar REACT_CACHE_TYPE = Symbol.for('react.cache');\nvar MAYBE_ITERATOR_SYMBOL = Symbol.iterator;\nvar FAUX_ITERATOR_SYMBOL = '@@iterator';\nfunction getIteratorFn(maybeIterable) {\n  if (maybeIterable === null || typeof maybeIterable !== 'object') {\n    return null;\n  }\n\n  var maybeIterator = MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL];\n\n  if (typeof maybeIterator === 'function') {\n    return maybeIterator;\n  }\n\n  return null;\n}\n\nvar ReactSharedInternals = React.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\n\nfunction error(format) {\n  {\n    {\n      for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n        args[_key2 - 1] = arguments[_key2];\n      }\n\n      printWarning('error', format, args);\n    }\n  }\n}\n\nfunction printWarning(level, format, args) {\n  // When changing this logic, you might want to also\n  // update consoleWithStackDev.www.js as well.\n  {\n    var ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;\n    var stack = ReactDebugCurrentFrame.getStackAddendum();\n\n    if (stack !== '') {\n      format += '%s';\n      args = args.concat([stack]);\n    } // eslint-disable-next-line react-internal/safe-string-coercion\n\n\n    var argsWithFormat = args.map(function (item) {\n      return String(item);\n    }); // Careful: RN currently depends on this prefix\n\n    argsWithFormat.unshift('Warning: ' + format); // We intentionally don't use spread (or .apply) directly because it\n    // breaks IE9: https://github.com/facebook/react/issues/13610\n    // eslint-disable-next-line react-internal/no-production-logging\n\n    Function.prototype.apply.call(console[level], console, argsWithFormat);\n  }\n}\n\n// -----------------------------------------------------------------------------\n\nvar enableScopeAPI = false; // Experimental Create Event Handle API.\nvar enableCacheElement = false;\nvar enableTransitionTracing = false; // No known bugs, but needs performance testing\n\nvar enableLegacyHidden = false; // Enables unstable_avoidThisFallback feature in Fiber\nvar enableRenderableContext = false;\n// stuff. Intended to enable React core members to more easily debug scheduling\n// issues in DEV builds.\n\nvar enableDebugTracing = false;\n\nfunction getWrappedName(outerType, innerType, wrapperName) {\n  var displayName = outerType.displayName;\n\n  if (displayName) {\n    return displayName;\n  }\n\n  var functionName = innerType.displayName || innerType.name || '';\n  return functionName !== '' ? wrapperName + \"(\" + functionName + \")\" : wrapperName;\n} // Keep in sync with react-reconciler/getComponentNameFromFiber\n\n\nfunction getContextName(type) {\n  return type.displayName || 'Context';\n}\n\nvar REACT_CLIENT_REFERENCE$2 = Symbol.for('react.client.reference'); // Note that the reconciler package should generally prefer to use getComponentNameFromFiber() instead.\n\nfunction getComponentNameFromType(type) {\n  if (type == null) {\n    // Host root, text node or just invalid type.\n    return null;\n  }\n\n  if (typeof type === 'function') {\n    if (type.$$typeof === REACT_CLIENT_REFERENCE$2) {\n      // TODO: Create a convention for naming client references with debug info.\n      return null;\n    }\n\n    return type.displayName || type.name || null;\n  }\n\n  if (typeof type === 'string') {\n    return type;\n  }\n\n  switch (type) {\n    case REACT_FRAGMENT_TYPE:\n      return 'Fragment';\n\n    case REACT_PORTAL_TYPE:\n      return 'Portal';\n\n    case REACT_PROFILER_TYPE:\n      return 'Profiler';\n\n    case REACT_STRICT_MODE_TYPE:\n      return 'StrictMode';\n\n    case REACT_SUSPENSE_TYPE:\n      return 'Suspense';\n\n    case REACT_SUSPENSE_LIST_TYPE:\n      return 'SuspenseList';\n\n    case REACT_CACHE_TYPE:\n      {\n        return 'Cache';\n      }\n\n  }\n\n  if (typeof type === 'object') {\n    {\n      if (typeof type.tag === 'number') {\n        error('Received an unexpected object in getComponentNameFromType(). ' + 'This is likely a bug in React. Please file an issue.');\n      }\n    }\n\n    switch (type.$$typeof) {\n      case REACT_PROVIDER_TYPE:\n        {\n          var provider = type;\n          return getContextName(provider._context) + '.Provider';\n        }\n\n      case REACT_CONTEXT_TYPE:\n        var context = type;\n\n        {\n          return getContextName(context) + '.Consumer';\n        }\n\n      case REACT_CONSUMER_TYPE:\n        {\n          return null;\n        }\n\n      case REACT_FORWARD_REF_TYPE:\n        return getWrappedName(type, type.render, 'ForwardRef');\n\n      case REACT_MEMO_TYPE:\n        var outerName = type.displayName || null;\n\n        if (outerName !== null) {\n          return outerName;\n        }\n\n        return getComponentNameFromType(type.type) || 'Memo';\n\n      case REACT_LAZY_TYPE:\n        {\n          var lazyComponent = type;\n          var payload = lazyComponent._payload;\n          var init = lazyComponent._init;\n\n          try {\n            return getComponentNameFromType(init(payload));\n          } catch (x) {\n            return null;\n          }\n        }\n    }\n  }\n\n  return null;\n}\n\n// $FlowFixMe[method-unbinding]\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\nvar assign = Object.assign;\n\n/*\n * The `'' + value` pattern (used in perf-sensitive code) throws for Symbol\n * and Temporal.* types. See https://github.com/facebook/react/pull/22064.\n *\n * The functions in this module will throw an easier-to-understand,\n * easier-to-debug exception with a clear errors message message explaining the\n * problem. (Instead of a confusing exception thrown inside the implementation\n * of the `value` object).\n */\n// $FlowFixMe[incompatible-return] only called in DEV, so void return is not possible.\nfunction typeName(value) {\n  {\n    // toStringTag is needed for namespaced types like Temporal.Instant\n    var hasToStringTag = typeof Symbol === 'function' && Symbol.toStringTag;\n    var type = hasToStringTag && value[Symbol.toStringTag] || value.constructor.name || 'Object'; // $FlowFixMe[incompatible-return]\n\n    return type;\n  }\n} // $FlowFixMe[incompatible-return] only called in DEV, so void return is not possible.\n\n\nfunction willCoercionThrow(value) {\n  {\n    try {\n      testStringCoercion(value);\n      return false;\n    } catch (e) {\n      return true;\n    }\n  }\n}\n\nfunction testStringCoercion(value) {\n  // If you ended up here by following an exception call stack, here's what's\n  // happened: you supplied an object or symbol value to React (as a prop, key,\n  // DOM attribute, CSS property, string ref, etc.) and when React tried to\n  // coerce it to a string using `'' + value`, an exception was thrown.\n  //\n  // The most common types that will cause this exception are `Symbol` instances\n  // and Temporal objects like `Temporal.Instant`. But any object that has a\n  // `valueOf` or `[Symbol.toPrimitive]` method that throws will also cause this\n  // exception. (Library authors do this to prevent users from using built-in\n  // numeric operators like `+` or comparison operators like `>=` because custom\n  // methods are needed to perform accurate arithmetic or comparison.)\n  //\n  // To fix the problem, coerce this object or symbol value to a string before\n  // passing it to React. The most reliable way is usually `String(value)`.\n  //\n  // To find which value is throwing, check the browser or debugger console.\n  // Before this exception was thrown, there should be `console.error` output\n  // that shows the type (Symbol, Temporal.PlainDate, etc.) that caused the\n  // problem and how that type was used: key, atrribute, input value prop, etc.\n  // In most cases, this console output also shows the component and its\n  // ancestor components where the exception happened.\n  //\n  // eslint-disable-next-line react-internal/safe-string-coercion\n  return '' + value;\n}\nfunction checkKeyStringCoercion(value) {\n  {\n    if (willCoercionThrow(value)) {\n      error('The provided key is an unsupported type %s.' + ' This value must be coerced to a string before using it here.', typeName(value));\n\n      return testStringCoercion(value); // throw (to help callers find troubleshooting comments)\n    }\n  }\n}\n\nvar REACT_CLIENT_REFERENCE$1 = Symbol.for('react.client.reference');\nfunction isValidElementType(type) {\n  if (typeof type === 'string' || typeof type === 'function') {\n    return true;\n  } // Note: typeof might be other than 'symbol' or 'number' (e.g. if it's a polyfill).\n\n\n  if (type === REACT_FRAGMENT_TYPE || type === REACT_PROFILER_TYPE || enableDebugTracing  || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || enableLegacyHidden  || type === REACT_OFFSCREEN_TYPE || enableScopeAPI  || enableCacheElement  || enableTransitionTracing ) {\n    return true;\n  }\n\n  if (typeof type === 'object' && type !== null) {\n    if (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || enableRenderableContext  || type.$$typeof === REACT_FORWARD_REF_TYPE || // This needs to include all possible module reference object\n    // types supported by any Flight configuration anywhere since\n    // we don't know which Flight build this will end up being used\n    // with.\n    type.$$typeof === REACT_CLIENT_REFERENCE$1 || type.getModuleId !== undefined) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nvar isArrayImpl = Array.isArray; // eslint-disable-next-line no-redeclare\n\nfunction isArray(a) {\n  return isArrayImpl(a);\n}\n\n// Helpers to patch console.logs to avoid logging during side-effect free\n// replaying on render function. This currently only patches the object\n// lazily which won't cover if the log function was extracted eagerly.\n// We could also eagerly patch the method.\nvar disabledDepth = 0;\nvar prevLog;\nvar prevInfo;\nvar prevWarn;\nvar prevError;\nvar prevGroup;\nvar prevGroupCollapsed;\nvar prevGroupEnd;\n\nfunction disabledLog() {}\n\ndisabledLog.__reactDisabledLog = true;\nfunction disableLogs() {\n  {\n    if (disabledDepth === 0) {\n      /* eslint-disable react-internal/no-production-logging */\n      prevLog = console.log;\n      prevInfo = console.info;\n      prevWarn = console.warn;\n      prevError = console.error;\n      prevGroup = console.group;\n      prevGroupCollapsed = console.groupCollapsed;\n      prevGroupEnd = console.groupEnd; // https://github.com/facebook/react/issues/19099\n\n      var props = {\n        configurable: true,\n        enumerable: true,\n        value: disabledLog,\n        writable: true\n      }; // $FlowFixMe[cannot-write] Flow thinks console is immutable.\n\n      Object.defineProperties(console, {\n        info: props,\n        log: props,\n        warn: props,\n        error: props,\n        group: props,\n        groupCollapsed: props,\n        groupEnd: props\n      });\n      /* eslint-enable react-internal/no-production-logging */\n    }\n\n    disabledDepth++;\n  }\n}\nfunction reenableLogs() {\n  {\n    disabledDepth--;\n\n    if (disabledDepth === 0) {\n      /* eslint-disable react-internal/no-production-logging */\n      var props = {\n        configurable: true,\n        enumerable: true,\n        writable: true\n      }; // $FlowFixMe[cannot-write] Flow thinks console is immutable.\n\n      Object.defineProperties(console, {\n        log: assign({}, props, {\n          value: prevLog\n        }),\n        info: assign({}, props, {\n          value: prevInfo\n        }),\n        warn: assign({}, props, {\n          value: prevWarn\n        }),\n        error: assign({}, props, {\n          value: prevError\n        }),\n        group: assign({}, props, {\n          value: prevGroup\n        }),\n        groupCollapsed: assign({}, props, {\n          value: prevGroupCollapsed\n        }),\n        groupEnd: assign({}, props, {\n          value: prevGroupEnd\n        })\n      });\n      /* eslint-enable react-internal/no-production-logging */\n    }\n\n    if (disabledDepth < 0) {\n      error('disabledDepth fell below zero. ' + 'This is a bug in React. Please file an issue.');\n    }\n  }\n}\n\nvar ReactCurrentDispatcher = ReactSharedInternals.ReactCurrentDispatcher;\nvar prefix;\nfunction describeBuiltInComponentFrame(name, ownerFn) {\n  {\n    if (prefix === undefined) {\n      // Extract the VM specific prefix used by each line.\n      try {\n        throw Error();\n      } catch (x) {\n        var match = x.stack.trim().match(/\\n( *(at )?)/);\n        prefix = match && match[1] || '';\n      }\n    } // We use the prefix to ensure our stacks line up with native stack frames.\n\n\n    return '\\n' + prefix + name;\n  }\n}\nvar reentry = false;\nvar componentFrameCache;\n\n{\n  var PossiblyWeakMap = typeof WeakMap === 'function' ? WeakMap : Map;\n  componentFrameCache = new PossiblyWeakMap();\n}\n/**\n * Leverages native browser/VM stack frames to get proper details (e.g.\n * filename, line + col number) for a single component in a component stack. We\n * do this by:\n *   (1) throwing and catching an error in the function - this will be our\n *       control error.\n *   (2) calling the component which will eventually throw an error that we'll\n *       catch - this will be our sample error.\n *   (3) diffing the control and sample error stacks to find the stack frame\n *       which represents our component.\n */\n\n\nfunction describeNativeComponentFrame(fn, construct) {\n  // If something asked for a stack inside a fake render, it should get ignored.\n  if (!fn || reentry) {\n    return '';\n  }\n\n  {\n    var frame = componentFrameCache.get(fn);\n\n    if (frame !== undefined) {\n      return frame;\n    }\n  }\n\n  reentry = true;\n  var previousPrepareStackTrace = Error.prepareStackTrace; // $FlowFixMe[incompatible-type] It does accept undefined.\n\n  Error.prepareStackTrace = undefined;\n  var previousDispatcher;\n\n  {\n    previousDispatcher = ReactCurrentDispatcher.current; // Set the dispatcher in DEV because this might be call in the render function\n    // for warnings.\n\n    ReactCurrentDispatcher.current = null;\n    disableLogs();\n  }\n  /**\n   * Finding a common stack frame between sample and control errors can be\n   * tricky given the different types and levels of stack trace truncation from\n   * different JS VMs. So instead we'll attempt to control what that common\n   * frame should be through this object method:\n   * Having both the sample and control errors be in the function under the\n   * `DescribeNativeComponentFrameRoot` property, + setting the `name` and\n   * `displayName` properties of the function ensures that a stack\n   * frame exists that has the method name `DescribeNativeComponentFrameRoot` in\n   * it for both control and sample stacks.\n   */\n\n\n  var RunInRootFrame = {\n    DetermineComponentFrameRoot: function () {\n      var control;\n\n      try {\n        // This should throw.\n        if (construct) {\n          // Something should be setting the props in the constructor.\n          var Fake = function () {\n            throw Error();\n          }; // $FlowFixMe[prop-missing]\n\n\n          Object.defineProperty(Fake.prototype, 'props', {\n            set: function () {\n              // We use a throwing setter instead of frozen or non-writable props\n              // because that won't throw in a non-strict mode function.\n              throw Error();\n            }\n          });\n\n          if (typeof Reflect === 'object' && Reflect.construct) {\n            // We construct a different control for this case to include any extra\n            // frames added by the construct call.\n            try {\n              Reflect.construct(Fake, []);\n            } catch (x) {\n              control = x;\n            }\n\n            Reflect.construct(fn, [], Fake);\n          } else {\n            try {\n              Fake.call();\n            } catch (x) {\n              control = x;\n            } // $FlowFixMe[prop-missing] found when upgrading Flow\n\n\n            fn.call(Fake.prototype);\n          }\n        } else {\n          try {\n            throw Error();\n          } catch (x) {\n            control = x;\n          } // TODO(luna): This will currently only throw if the function component\n          // tries to access React/ReactDOM/props. We should probably make this throw\n          // in simple components too\n\n\n          var maybePromise = fn(); // If the function component returns a promise, it's likely an async\n          // component, which we don't yet support. Attach a noop catch handler to\n          // silence the error.\n          // TODO: Implement component stacks for async client components?\n\n          if (maybePromise && typeof maybePromise.catch === 'function') {\n            maybePromise.catch(function () {});\n          }\n        }\n      } catch (sample) {\n        // This is inlined manually because closure doesn't do it for us.\n        if (sample && control && typeof sample.stack === 'string') {\n          return [sample.stack, control.stack];\n        }\n      }\n\n      return [null, null];\n    }\n  }; // $FlowFixMe[prop-missing]\n\n  RunInRootFrame.DetermineComponentFrameRoot.displayName = 'DetermineComponentFrameRoot';\n  var namePropDescriptor = Object.getOwnPropertyDescriptor(RunInRootFrame.DetermineComponentFrameRoot, 'name'); // Before ES6, the `name` property was not configurable.\n\n  if (namePropDescriptor && namePropDescriptor.configurable) {\n    // V8 utilizes a function's `name` property when generating a stack trace.\n    Object.defineProperty(RunInRootFrame.DetermineComponentFrameRoot, // Configurable properties can be updated even if its writable descriptor\n    // is set to `false`.\n    // $FlowFixMe[cannot-write]\n    'name', {\n      value: 'DetermineComponentFrameRoot'\n    });\n  }\n\n  try {\n    var _RunInRootFrame$Deter = RunInRootFrame.DetermineComponentFrameRoot(),\n        sampleStack = _RunInRootFrame$Deter[0],\n        controlStack = _RunInRootFrame$Deter[1];\n\n    if (sampleStack && controlStack) {\n      // This extracts the first frame from the sample that isn't also in the control.\n      // Skipping one frame that we assume is the frame that calls the two.\n      var sampleLines = sampleStack.split('\\n');\n      var controlLines = controlStack.split('\\n');\n      var s = 0;\n      var c = 0;\n\n      while (s < sampleLines.length && !sampleLines[s].includes('DetermineComponentFrameRoot')) {\n        s++;\n      }\n\n      while (c < controlLines.length && !controlLines[c].includes('DetermineComponentFrameRoot')) {\n        c++;\n      } // We couldn't find our intentionally injected common root frame, attempt\n      // to find another common root frame by search from the bottom of the\n      // control stack...\n\n\n      if (s === sampleLines.length || c === controlLines.length) {\n        s = sampleLines.length - 1;\n        c = controlLines.length - 1;\n\n        while (s >= 1 && c >= 0 && sampleLines[s] !== controlLines[c]) {\n          // We expect at least one stack frame to be shared.\n          // Typically this will be the root most one. However, stack frames may be\n          // cut off due to maximum stack limits. In this case, one maybe cut off\n          // earlier than the other. We assume that the sample is longer or the same\n          // and there for cut off earlier. So we should find the root most frame in\n          // the sample somewhere in the control.\n          c--;\n        }\n      }\n\n      for (; s >= 1 && c >= 0; s--, c--) {\n        // Next we find the first one that isn't the same which should be the\n        // frame that called our sample function and the control.\n        if (sampleLines[s] !== controlLines[c]) {\n          // In V8, the first line is describing the message but other VMs don't.\n          // If we're about to return the first line, and the control is also on the same\n          // line, that's a pretty good indicator that our sample threw at same line as\n          // the control. I.e. before we entered the sample frame. So we ignore this result.\n          // This can happen if you passed a class to function component, or non-function.\n          if (s !== 1 || c !== 1) {\n            do {\n              s--;\n              c--; // We may still have similar intermediate frames from the construct call.\n              // The next one that isn't the same should be our match though.\n\n              if (c < 0 || sampleLines[s] !== controlLines[c]) {\n                // V8 adds a \"new\" prefix for native classes. Let's remove it to make it prettier.\n                var _frame = '\\n' + sampleLines[s].replace(' at new ', ' at '); // If our component frame is labeled \"<anonymous>\"\n                // but we have a user-provided \"displayName\"\n                // splice it in to make the stack more readable.\n\n\n                if (fn.displayName && _frame.includes('<anonymous>')) {\n                  _frame = _frame.replace('<anonymous>', fn.displayName);\n                }\n\n                if (true) {\n                  if (typeof fn === 'function') {\n                    componentFrameCache.set(fn, _frame);\n                  }\n                } // Return the line we found.\n\n\n                return _frame;\n              }\n            } while (s >= 1 && c >= 0);\n          }\n\n          break;\n        }\n      }\n    }\n  } finally {\n    reentry = false;\n\n    {\n      ReactCurrentDispatcher.current = previousDispatcher;\n      reenableLogs();\n    }\n\n    Error.prepareStackTrace = previousPrepareStackTrace;\n  } // Fallback to just using the name if we couldn't make it throw.\n\n\n  var name = fn ? fn.displayName || fn.name : '';\n  var syntheticFrame = name ? describeBuiltInComponentFrame(name) : '';\n\n  {\n    if (typeof fn === 'function') {\n      componentFrameCache.set(fn, syntheticFrame);\n    }\n  }\n\n  return syntheticFrame;\n}\nfunction describeFunctionComponentFrame(fn, ownerFn) {\n  {\n    return describeNativeComponentFrame(fn, false);\n  }\n}\n\nfunction shouldConstruct(Component) {\n  var prototype = Component.prototype;\n  return !!(prototype && prototype.isReactComponent);\n}\n\nfunction describeUnknownElementTypeFrameInDEV(type, ownerFn) {\n\n  if (type == null) {\n    return '';\n  }\n\n  if (typeof type === 'function') {\n    {\n      return describeNativeComponentFrame(type, shouldConstruct(type));\n    }\n  }\n\n  if (typeof type === 'string') {\n    return describeBuiltInComponentFrame(type);\n  }\n\n  switch (type) {\n    case REACT_SUSPENSE_TYPE:\n      return describeBuiltInComponentFrame('Suspense');\n\n    case REACT_SUSPENSE_LIST_TYPE:\n      return describeBuiltInComponentFrame('SuspenseList');\n  }\n\n  if (typeof type === 'object') {\n    switch (type.$$typeof) {\n      case REACT_FORWARD_REF_TYPE:\n        return describeFunctionComponentFrame(type.render);\n\n      case REACT_MEMO_TYPE:\n        // Memo may contain any component type so we recursively resolve it.\n        return describeUnknownElementTypeFrameInDEV(type.type, ownerFn);\n\n      case REACT_LAZY_TYPE:\n        {\n          var lazyComponent = type;\n          var payload = lazyComponent._payload;\n          var init = lazyComponent._init;\n\n          try {\n            // Lazy may contain any component type so we recursively resolve it.\n            return describeUnknownElementTypeFrameInDEV(init(payload), ownerFn);\n          } catch (x) {}\n        }\n    }\n  }\n\n  return '';\n}\n\nvar ReactCurrentOwner = ReactSharedInternals.ReactCurrentOwner;\nvar ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;\nvar REACT_CLIENT_REFERENCE = Symbol.for('react.client.reference');\nvar specialPropKeyWarningShown;\nvar specialPropRefWarningShown;\nvar didWarnAboutStringRefs;\n\n{\n  didWarnAboutStringRefs = {};\n}\n\nfunction hasValidRef(config) {\n  {\n    if (hasOwnProperty.call(config, 'ref')) {\n      var getter = Object.getOwnPropertyDescriptor(config, 'ref').get;\n\n      if (getter && getter.isReactWarning) {\n        return false;\n      }\n    }\n  }\n\n  return config.ref !== undefined;\n}\n\nfunction hasValidKey(config) {\n  {\n    if (hasOwnProperty.call(config, 'key')) {\n      var getter = Object.getOwnPropertyDescriptor(config, 'key').get;\n\n      if (getter && getter.isReactWarning) {\n        return false;\n      }\n    }\n  }\n\n  return config.key !== undefined;\n}\n\nfunction warnIfStringRefCannotBeAutoConverted(config, self) {\n  {\n    if (typeof config.ref === 'string' && ReactCurrentOwner.current && self && ReactCurrentOwner.current.stateNode !== self) {\n      var componentName = getComponentNameFromType(ReactCurrentOwner.current.type);\n\n      if (!didWarnAboutStringRefs[componentName]) {\n        error('Component \"%s\" contains the string ref \"%s\". ' + 'Support for string refs will be removed in a future major release. ' + 'This case cannot be automatically converted to an arrow function. ' + 'We ask you to manually fix this case by using useRef() or createRef() instead. ' + 'Learn more about using refs safely here: ' + 'https://reactjs.org/link/strict-mode-string-ref', getComponentNameFromType(ReactCurrentOwner.current.type), config.ref);\n\n        didWarnAboutStringRefs[componentName] = true;\n      }\n    }\n  }\n}\n\nfunction defineKeyPropWarningGetter(props, displayName) {\n  {\n    var warnAboutAccessingKey = function () {\n      if (!specialPropKeyWarningShown) {\n        specialPropKeyWarningShown = true;\n\n        error('%s: `key` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://reactjs.org/link/special-props)', displayName);\n      }\n    };\n\n    warnAboutAccessingKey.isReactWarning = true;\n    Object.defineProperty(props, 'key', {\n      get: warnAboutAccessingKey,\n      configurable: true\n    });\n  }\n}\n\nfunction defineRefPropWarningGetter(props, displayName) {\n  {\n    {\n      var warnAboutAccessingRef = function () {\n        if (!specialPropRefWarningShown) {\n          specialPropRefWarningShown = true;\n\n          error('%s: `ref` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://reactjs.org/link/special-props)', displayName);\n        }\n      };\n\n      warnAboutAccessingRef.isReactWarning = true;\n      Object.defineProperty(props, 'ref', {\n        get: warnAboutAccessingRef,\n        configurable: true\n      });\n    }\n  }\n}\n/**\n * Factory method to create a new React element. This no longer adheres to\n * the class pattern, so do not use new to call it. Also, instanceof check\n * will not work. Instead test $$typeof field against Symbol.for('react.element') to check\n * if something is a React Element.\n *\n * @param {*} type\n * @param {*} props\n * @param {*} key\n * @param {string|object} ref\n * @param {*} owner\n * @param {*} self A *temporary* helper to detect places where `this` is\n * different from the `owner` when React.createElement is called, so that we\n * can warn. We want to get rid of owner and replace string `ref`s with arrow\n * functions, and as long as `this` and owner are the same, there will be no\n * change in behavior.\n * @param {*} source An annotation object (added by a transpiler or otherwise)\n * indicating filename, line number, and/or other information.\n * @internal\n */\n\n\nfunction ReactElement(type, key, _ref, self, source, owner, props) {\n  var ref;\n\n  {\n    ref = _ref;\n  }\n\n  var element;\n\n  {\n    // In prod, `ref` is a regular property. It will be removed in a\n    // future release.\n    element = {\n      // This tag allows us to uniquely identify this as a React Element\n      $$typeof: REACT_ELEMENT_TYPE,\n      // Built-in properties that belong on the element\n      type: type,\n      key: key,\n      ref: ref,\n      props: props,\n      // Record the component responsible for creating this element.\n      _owner: owner\n    };\n  }\n\n  {\n    // The validation flag is currently mutative. We put it on\n    // an external backing store so that we can freeze the whole object.\n    // This can be replaced with a WeakMap once they are implemented in\n    // commonly used development environments.\n    element._store = {}; // To make comparing ReactElements easier for testing purposes, we make\n    // the validation flag non-enumerable (where possible, which should\n    // include every environment we run tests in), so the test framework\n    // ignores it.\n\n    Object.defineProperty(element._store, 'validated', {\n      configurable: false,\n      enumerable: false,\n      writable: true,\n      value: false\n    }); // debugInfo contains Server Component debug information.\n\n    Object.defineProperty(element, '_debugInfo', {\n      configurable: false,\n      enumerable: false,\n      writable: true,\n      value: null\n    });\n\n    if (Object.freeze) {\n      Object.freeze(element.props);\n      Object.freeze(element);\n    }\n  }\n\n  return element;\n}\nvar didWarnAboutKeySpread = {};\n/**\n * https://github.com/reactjs/rfcs/pull/107\n * @param {*} type\n * @param {object} props\n * @param {string} key\n */\n\nfunction jsxDEV$1(type, config, maybeKey, isStaticChildren, source, self) {\n  {\n    if (!isValidElementType(type)) {\n      // This is an invalid element type.\n      //\n      // We warn in this case but don't throw. We expect the element creation to\n      // succeed and there will likely be errors in render.\n      var info = '';\n\n      if (type === undefined || typeof type === 'object' && type !== null && Object.keys(type).length === 0) {\n        info += ' You likely forgot to export your component from the file ' + \"it's defined in, or you might have mixed up default and named imports.\";\n      }\n\n      var typeString;\n\n      if (type === null) {\n        typeString = 'null';\n      } else if (isArray(type)) {\n        typeString = 'array';\n      } else if (type !== undefined && type.$$typeof === REACT_ELEMENT_TYPE) {\n        typeString = \"<\" + (getComponentNameFromType(type.type) || 'Unknown') + \" />\";\n        info = ' Did you accidentally export a JSX literal instead of a component?';\n      } else {\n        typeString = typeof type;\n      }\n\n      error('React.jsx: type is invalid -- expected a string (for ' + 'built-in components) or a class/function (for composite ' + 'components) but got: %s.%s', typeString, info);\n    } else {\n      // This is a valid element type.\n      // Skip key warning if the type isn't valid since our key validation logic\n      // doesn't expect a non-string/function type and can throw confusing\n      // errors. We don't want exception behavior to differ between dev and\n      // prod. (Rendering will throw with a helpful message and as soon as the\n      // type is fixed, the key warnings will appear.)\n      var children = config.children;\n\n      if (children !== undefined) {\n        if (isStaticChildren) {\n          if (isArray(children)) {\n            for (var i = 0; i < children.length; i++) {\n              validateChildKeys(children[i], type);\n            }\n\n            if (Object.freeze) {\n              Object.freeze(children);\n            }\n          } else {\n            error('React.jsx: Static children should always be an array. ' + 'You are likely explicitly calling React.jsxs or React.jsxDEV. ' + 'Use the Babel transform instead.');\n          }\n        } else {\n          validateChildKeys(children, type);\n        }\n      }\n    } // Warn about key spread regardless of whether the type is valid.\n\n\n    if (hasOwnProperty.call(config, 'key')) {\n      var componentName = getComponentNameFromType(type);\n      var keys = Object.keys(config).filter(function (k) {\n        return k !== 'key';\n      });\n      var beforeExample = keys.length > 0 ? '{key: someKey, ' + keys.join(': ..., ') + ': ...}' : '{key: someKey}';\n\n      if (!didWarnAboutKeySpread[componentName + beforeExample]) {\n        var afterExample = keys.length > 0 ? '{' + keys.join(': ..., ') + ': ...}' : '{}';\n\n        error('A props object containing a \"key\" prop is being spread into JSX:\\n' + '  let props = %s;\\n' + '  <%s {...props} />\\n' + 'React keys must be passed directly to JSX without using spread:\\n' + '  let props = %s;\\n' + '  <%s key={someKey} {...props} />', beforeExample, componentName, afterExample, componentName);\n\n        didWarnAboutKeySpread[componentName + beforeExample] = true;\n      }\n    }\n\n    var propName; // Reserved names are extracted\n\n    var props = {};\n    var key = null;\n    var ref = null; // Currently, key can be spread in as a prop. This causes a potential\n    // issue if key is also explicitly declared (ie. <div {...props} key=\"Hi\" />\n    // or <div key=\"Hi\" {...props} /> ). We want to deprecate key spread,\n    // but as an intermediary step, we will use jsxDEV for everything except\n    // <div {...props} key=\"Hi\" />, because we aren't currently able to tell if\n    // key is explicitly declared to be undefined or not.\n\n    if (maybeKey !== undefined) {\n      {\n        checkKeyStringCoercion(maybeKey);\n      }\n\n      key = '' + maybeKey;\n    }\n\n    if (hasValidKey(config)) {\n      {\n        checkKeyStringCoercion(config.key);\n      }\n\n      key = '' + config.key;\n    }\n\n    if (hasValidRef(config)) {\n      {\n        ref = config.ref;\n      }\n\n      warnIfStringRefCannotBeAutoConverted(config, self);\n    } // Remaining properties are added to a new props object\n\n\n    for (propName in config) {\n      if (hasOwnProperty.call(config, propName) && // Skip over reserved prop names\n      propName !== 'key' && (propName !== 'ref')) {\n        props[propName] = config[propName];\n      }\n    } // Resolve default props\n\n\n    if (type && type.defaultProps) {\n      var defaultProps = type.defaultProps;\n\n      for (propName in defaultProps) {\n        if (props[propName] === undefined) {\n          props[propName] = defaultProps[propName];\n        }\n      }\n    }\n\n    if (key || ref) {\n      var displayName = typeof type === 'function' ? type.displayName || type.name || 'Unknown' : type;\n\n      if (key) {\n        defineKeyPropWarningGetter(props, displayName);\n      }\n\n      if (ref) {\n        defineRefPropWarningGetter(props, displayName);\n      }\n    }\n\n    var element = ReactElement(type, key, ref, self, source, ReactCurrentOwner.current, props);\n\n    if (type === REACT_FRAGMENT_TYPE) {\n      validateFragmentProps(element);\n    }\n\n    return element;\n  }\n}\n\nfunction getDeclarationErrorAddendum() {\n  {\n    if (ReactCurrentOwner.current) {\n      var name = getComponentNameFromType(ReactCurrentOwner.current.type);\n\n      if (name) {\n        return '\\n\\nCheck the render method of `' + name + '`.';\n      }\n    }\n\n    return '';\n  }\n}\n/**\n * Ensure that every element either is passed in a static location, in an\n * array with an explicit keys property defined, or in an object literal\n * with valid key property.\n *\n * @internal\n * @param {ReactNode} node Statically passed child of any type.\n * @param {*} parentType node's parent's type.\n */\n\n\nfunction validateChildKeys(node, parentType) {\n  {\n    if (typeof node !== 'object' || !node) {\n      return;\n    }\n\n    if (node.$$typeof === REACT_CLIENT_REFERENCE) ; else if (isArray(node)) {\n      for (var i = 0; i < node.length; i++) {\n        var child = node[i];\n\n        if (isValidElement(child)) {\n          validateExplicitKey(child, parentType);\n        }\n      }\n    } else if (isValidElement(node)) {\n      // This element was passed in a valid location.\n      if (node._store) {\n        node._store.validated = true;\n      }\n    } else {\n      var iteratorFn = getIteratorFn(node);\n\n      if (typeof iteratorFn === 'function') {\n        // Entry iterators used to provide implicit keys,\n        // but now we print a separate warning for them later.\n        if (iteratorFn !== node.entries) {\n          var iterator = iteratorFn.call(node);\n          var step;\n\n          while (!(step = iterator.next()).done) {\n            if (isValidElement(step.value)) {\n              validateExplicitKey(step.value, parentType);\n            }\n          }\n        }\n      }\n    }\n  }\n}\n/**\n * Verifies the object is a ReactElement.\n * See https://reactjs.org/docs/react-api.html#isvalidelement\n * @param {?object} object\n * @return {boolean} True if `object` is a ReactElement.\n * @final\n */\n\n\nfunction isValidElement(object) {\n  return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;\n}\nvar ownerHasKeyUseWarning = {};\n/**\n * Warn if the element doesn't have an explicit key assigned to it.\n * This element is in an array. The array could grow and shrink or be\n * reordered. All children that haven't already been validated are required to\n * have a \"key\" property assigned to it. Error statuses are cached so a warning\n * will only be shown once.\n *\n * @internal\n * @param {ReactElement} element Element that requires a key.\n * @param {*} parentType element's parent's type.\n */\n\nfunction validateExplicitKey(element, parentType) {\n  {\n    if (!element._store || element._store.validated || element.key != null) {\n      return;\n    }\n\n    element._store.validated = true;\n    var currentComponentErrorInfo = getCurrentComponentErrorInfo(parentType);\n\n    if (ownerHasKeyUseWarning[currentComponentErrorInfo]) {\n      return;\n    }\n\n    ownerHasKeyUseWarning[currentComponentErrorInfo] = true; // Usually the current owner is the offender, but if it accepts children as a\n    // property, it may be the creator of the child that's responsible for\n    // assigning it a key.\n\n    var childOwner = '';\n\n    if (element && element._owner && element._owner !== ReactCurrentOwner.current) {\n      // Give the component that originally created this child.\n      childOwner = \" It was passed a child from \" + getComponentNameFromType(element._owner.type) + \".\";\n    }\n\n    setCurrentlyValidatingElement(element);\n\n    error('Each child in a list should have a unique \"key\" prop.' + '%s%s See https://reactjs.org/link/warning-keys for more information.', currentComponentErrorInfo, childOwner);\n\n    setCurrentlyValidatingElement(null);\n  }\n}\n\nfunction setCurrentlyValidatingElement(element) {\n  {\n    if (element) {\n      var owner = element._owner;\n      var stack = describeUnknownElementTypeFrameInDEV(element.type, owner ? owner.type : null);\n      ReactDebugCurrentFrame.setExtraStackFrame(stack);\n    } else {\n      ReactDebugCurrentFrame.setExtraStackFrame(null);\n    }\n  }\n}\n\nfunction getCurrentComponentErrorInfo(parentType) {\n  {\n    var info = getDeclarationErrorAddendum();\n\n    if (!info) {\n      var parentName = getComponentNameFromType(parentType);\n\n      if (parentName) {\n        info = \"\\n\\nCheck the top-level render call using <\" + parentName + \">.\";\n      }\n    }\n\n    return info;\n  }\n}\n/**\n * Given a fragment, validate that it can only be provided with fragment props\n * @param {ReactElement} fragment\n */\n\n\nfunction validateFragmentProps(fragment) {\n  // TODO: Move this to render phase instead of at element creation.\n  {\n    var keys = Object.keys(fragment.props);\n\n    for (var i = 0; i < keys.length; i++) {\n      var key = keys[i];\n\n      if (key !== 'children' && key !== 'key') {\n        setCurrentlyValidatingElement(fragment);\n\n        error('Invalid prop `%s` supplied to `React.Fragment`. ' + 'React.Fragment can only have `key` and `children` props.', key);\n\n        setCurrentlyValidatingElement(null);\n        break;\n      }\n    }\n\n    if (fragment.ref !== null) {\n      setCurrentlyValidatingElement(fragment);\n\n      error('Invalid attribute `ref` supplied to `React.Fragment`.');\n\n      setCurrentlyValidatingElement(null);\n    }\n  }\n}\n\nvar jsxDEV = jsxDEV$1 ;\n\nexports.Fragment = REACT_FRAGMENT_TYPE;\nexports.jsxDEV = jsxDEV;\n  })();\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/compiled/react/cjs/react-jsx-dev-runtime.development.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js":
/*!******************************************************************!*\
  !*** ./node_modules/next/dist/compiled/react/jsx-dev-runtime.js ***!
  \******************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n\nif (false) {} else {\n  module.exports = __webpack_require__(/*! ./cjs/react-jsx-dev-runtime.development.js */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/cjs/react-jsx-dev-runtime.development.js\");\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvY29tcGlsZWQvcmVhY3QvanN4LWRldi1ydW50aW1lLmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViLElBQUksS0FBcUMsRUFBRSxFQUUxQyxDQUFDO0FBQ0YsRUFBRSw4TEFBc0U7QUFDeEUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9jb21waWxlZC9yZWFjdC9qc3gtZGV2LXJ1bnRpbWUuanM/MDAwZCJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gJ3Byb2R1Y3Rpb24nKSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvcmVhY3QtanN4LWRldi1ydW50aW1lLnByb2R1Y3Rpb24ubWluLmpzJyk7XG59IGVsc2Uge1xuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vY2pzL3JlYWN0LWpzeC1kZXYtcnVudGltZS5kZXZlbG9wbWVudC5qcycpO1xufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/classnames/index.js":
/*!******************************************!*\
  !*** ./node_modules/classnames/index.js ***!
  \******************************************/
/***/ (function(module, exports, __webpack_require__) {

eval(__webpack_require__.ts("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*!\n\tCopyright (c) 2018 Jed Watson.\n\tLicensed under the MIT License (MIT), see\n\thttp://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar hasOwn = {}.hasOwnProperty;\n\n\tfunction classNames () {\n\t\tvar classes = '';\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (arg) {\n\t\t\t\tclasses = appendClass(classes, parseValue(arg));\n\t\t\t}\n\t\t}\n\n\t\treturn classes;\n\t}\n\n\tfunction parseValue (arg) {\n\t\tif (typeof arg === 'string' || typeof arg === 'number') {\n\t\t\treturn arg;\n\t\t}\n\n\t\tif (typeof arg !== 'object') {\n\t\t\treturn '';\n\t\t}\n\n\t\tif (Array.isArray(arg)) {\n\t\t\treturn classNames.apply(null, arg);\n\t\t}\n\n\t\tif (arg.toString !== Object.prototype.toString && !arg.toString.toString().includes('[native code]')) {\n\t\t\treturn arg.toString();\n\t\t}\n\n\t\tvar classes = '';\n\n\t\tfor (var key in arg) {\n\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\tclasses = appendClass(classes, key);\n\t\t\t}\n\t\t}\n\n\t\treturn classes;\n\t}\n\n\tfunction appendClass (value, newClass) {\n\t\tif (!newClass) {\n\t\t\treturn value;\n\t\t}\n\t\n\t\tif (value) {\n\t\t\treturn value + ' ' + newClass;\n\t\t}\n\t\n\t\treturn value + newClass;\n\t}\n\n\tif ( true && module.exports) {\n\t\tclassNames.default = classNames;\n\t\tmodule.exports = classNames;\n\t} else if (true) {\n\t\t// register as 'classnames', consistent with npm package name\n\t\t!(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = (function () {\n\t\t\treturn classNames;\n\t\t}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t} else {}\n}());\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9jbGFzc25hbWVzL2luZGV4LmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBLGdCQUFnQjs7QUFFaEI7QUFDQTs7QUFFQSxrQkFBa0Isc0JBQXNCO0FBQ3hDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxLQUFLLEtBQTZCO0FBQ2xDO0FBQ0E7QUFDQSxHQUFHLFNBQVMsSUFBNEU7QUFDeEY7QUFDQSxFQUFFLGlDQUFxQixFQUFFLG1DQUFFO0FBQzNCO0FBQ0EsR0FBRztBQUFBLGtHQUFDO0FBQ0osR0FBRyxLQUFLLEVBRU47QUFDRixDQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9jbGFzc25hbWVzL2luZGV4LmpzP2FlMWIiXSwic291cmNlc0NvbnRlbnQiOlsiLyohXG5cdENvcHlyaWdodCAoYykgMjAxOCBKZWQgV2F0c29uLlxuXHRMaWNlbnNlZCB1bmRlciB0aGUgTUlUIExpY2Vuc2UgKE1JVCksIHNlZVxuXHRodHRwOi8vamVkd2F0c29uLmdpdGh1Yi5pby9jbGFzc25hbWVzXG4qL1xuLyogZ2xvYmFsIGRlZmluZSAqL1xuXG4oZnVuY3Rpb24gKCkge1xuXHQndXNlIHN0cmljdCc7XG5cblx0dmFyIGhhc093biA9IHt9Lmhhc093blByb3BlcnR5O1xuXG5cdGZ1bmN0aW9uIGNsYXNzTmFtZXMgKCkge1xuXHRcdHZhciBjbGFzc2VzID0gJyc7XG5cblx0XHRmb3IgKHZhciBpID0gMDsgaSA8IGFyZ3VtZW50cy5sZW5ndGg7IGkrKykge1xuXHRcdFx0dmFyIGFyZyA9IGFyZ3VtZW50c1tpXTtcblx0XHRcdGlmIChhcmcpIHtcblx0XHRcdFx0Y2xhc3NlcyA9IGFwcGVuZENsYXNzKGNsYXNzZXMsIHBhcnNlVmFsdWUoYXJnKSk7XG5cdFx0XHR9XG5cdFx0fVxuXG5cdFx0cmV0dXJuIGNsYXNzZXM7XG5cdH1cblxuXHRmdW5jdGlvbiBwYXJzZVZhbHVlIChhcmcpIHtcblx0XHRpZiAodHlwZW9mIGFyZyA9PT0gJ3N0cmluZycgfHwgdHlwZW9mIGFyZyA9PT0gJ251bWJlcicpIHtcblx0XHRcdHJldHVybiBhcmc7XG5cdFx0fVxuXG5cdFx0aWYgKHR5cGVvZiBhcmcgIT09ICdvYmplY3QnKSB7XG5cdFx0XHRyZXR1cm4gJyc7XG5cdFx0fVxuXG5cdFx0aWYgKEFycmF5LmlzQXJyYXkoYXJnKSkge1xuXHRcdFx0cmV0dXJuIGNsYXNzTmFtZXMuYXBwbHkobnVsbCwgYXJnKTtcblx0XHR9XG5cblx0XHRpZiAoYXJnLnRvU3RyaW5nICE9PSBPYmplY3QucHJvdG90eXBlLnRvU3RyaW5nICYmICFhcmcudG9TdHJpbmcudG9TdHJpbmcoKS5pbmNsdWRlcygnW25hdGl2ZSBjb2RlXScpKSB7XG5cdFx0XHRyZXR1cm4gYXJnLnRvU3RyaW5nKCk7XG5cdFx0fVxuXG5cdFx0dmFyIGNsYXNzZXMgPSAnJztcblxuXHRcdGZvciAodmFyIGtleSBpbiBhcmcpIHtcblx0XHRcdGlmIChoYXNPd24uY2FsbChhcmcsIGtleSkgJiYgYXJnW2tleV0pIHtcblx0XHRcdFx0Y2xhc3NlcyA9IGFwcGVuZENsYXNzKGNsYXNzZXMsIGtleSk7XG5cdFx0XHR9XG5cdFx0fVxuXG5cdFx0cmV0dXJuIGNsYXNzZXM7XG5cdH1cblxuXHRmdW5jdGlvbiBhcHBlbmRDbGFzcyAodmFsdWUsIG5ld0NsYXNzKSB7XG5cdFx0aWYgKCFuZXdDbGFzcykge1xuXHRcdFx0cmV0dXJuIHZhbHVlO1xuXHRcdH1cblx0XG5cdFx0aWYgKHZhbHVlKSB7XG5cdFx0XHRyZXR1cm4gdmFsdWUgKyAnICcgKyBuZXdDbGFzcztcblx0XHR9XG5cdFxuXHRcdHJldHVybiB2YWx1ZSArIG5ld0NsYXNzO1xuXHR9XG5cblx0aWYgKHR5cGVvZiBtb2R1bGUgIT09ICd1bmRlZmluZWQnICYmIG1vZHVsZS5leHBvcnRzKSB7XG5cdFx0Y2xhc3NOYW1lcy5kZWZhdWx0ID0gY2xhc3NOYW1lcztcblx0XHRtb2R1bGUuZXhwb3J0cyA9IGNsYXNzTmFtZXM7XG5cdH0gZWxzZSBpZiAodHlwZW9mIGRlZmluZSA9PT0gJ2Z1bmN0aW9uJyAmJiB0eXBlb2YgZGVmaW5lLmFtZCA9PT0gJ29iamVjdCcgJiYgZGVmaW5lLmFtZCkge1xuXHRcdC8vIHJlZ2lzdGVyIGFzICdjbGFzc25hbWVzJywgY29uc2lzdGVudCB3aXRoIG5wbSBwYWNrYWdlIG5hbWVcblx0XHRkZWZpbmUoJ2NsYXNzbmFtZXMnLCBbXSwgZnVuY3Rpb24gKCkge1xuXHRcdFx0cmV0dXJuIGNsYXNzTmFtZXM7XG5cdFx0fSk7XG5cdH0gZWxzZSB7XG5cdFx0d2luZG93LmNsYXNzTmFtZXMgPSBjbGFzc05hbWVzO1xuXHR9XG59KCkpO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/classnames/index.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@tonconnect/protocol/lib/esm/index.mjs":
/*!*************************************************************!*\
  !*** ./node_modules/@tonconnect/protocol/lib/esm/index.mjs ***!
  \*************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Base64: function() { return /* binding */ Base64; },\n/* harmony export */   CHAIN: function() { return /* binding */ CHAIN; },\n/* harmony export */   CONNECT_EVENT_ERROR_CODES: function() { return /* binding */ CONNECT_EVENT_ERROR_CODES; },\n/* harmony export */   CONNECT_ITEM_ERROR_CODES: function() { return /* binding */ CONNECT_ITEM_ERROR_CODES; },\n/* harmony export */   DISCONNECT_ERROR_CODES: function() { return /* binding */ DISCONNECT_ERROR_CODES; },\n/* harmony export */   SEND_TRANSACTION_ERROR_CODES: function() { return /* binding */ SEND_TRANSACTION_ERROR_CODES; },\n/* harmony export */   SIGN_DATA_ERROR_CODES: function() { return /* binding */ SIGN_DATA_ERROR_CODES; },\n/* harmony export */   SessionCrypto: function() { return /* binding */ SessionCrypto; },\n/* harmony export */   concatUint8Arrays: function() { return /* binding */ concatUint8Arrays; },\n/* harmony export */   hexToByteArray: function() { return /* binding */ hexToByteArray; },\n/* harmony export */   isNode: function() { return /* binding */ isNode; },\n/* harmony export */   splitToUint8Arrays: function() { return /* binding */ splitToUint8Arrays; },\n/* harmony export */   toHexString: function() { return /* binding */ toHexString; }\n/* harmony export */ });\n/* harmony import */ var tweetnacl_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tweetnacl-util */ \"(app-pages-browser)/./node_modules/tweetnacl-util/nacl-util.js\");\n/* harmony import */ var tweetnacl__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! tweetnacl */ \"(app-pages-browser)/./node_modules/tweetnacl/nacl-fast.js\");\n/* provided dependency */ var process = __webpack_require__(/*! process */ \"(app-pages-browser)/./node_modules/next/dist/build/polyfills/process.js\");\n\n\n\nvar CONNECT_EVENT_ERROR_CODES;\n(function (CONNECT_EVENT_ERROR_CODES) {\n    CONNECT_EVENT_ERROR_CODES[CONNECT_EVENT_ERROR_CODES[\"UNKNOWN_ERROR\"] = 0] = \"UNKNOWN_ERROR\";\n    CONNECT_EVENT_ERROR_CODES[CONNECT_EVENT_ERROR_CODES[\"BAD_REQUEST_ERROR\"] = 1] = \"BAD_REQUEST_ERROR\";\n    CONNECT_EVENT_ERROR_CODES[CONNECT_EVENT_ERROR_CODES[\"MANIFEST_NOT_FOUND_ERROR\"] = 2] = \"MANIFEST_NOT_FOUND_ERROR\";\n    CONNECT_EVENT_ERROR_CODES[CONNECT_EVENT_ERROR_CODES[\"MANIFEST_CONTENT_ERROR\"] = 3] = \"MANIFEST_CONTENT_ERROR\";\n    CONNECT_EVENT_ERROR_CODES[CONNECT_EVENT_ERROR_CODES[\"UNKNOWN_APP_ERROR\"] = 100] = \"UNKNOWN_APP_ERROR\";\n    CONNECT_EVENT_ERROR_CODES[CONNECT_EVENT_ERROR_CODES[\"USER_REJECTS_ERROR\"] = 300] = \"USER_REJECTS_ERROR\";\n    CONNECT_EVENT_ERROR_CODES[CONNECT_EVENT_ERROR_CODES[\"METHOD_NOT_SUPPORTED\"] = 400] = \"METHOD_NOT_SUPPORTED\";\n})(CONNECT_EVENT_ERROR_CODES || (CONNECT_EVENT_ERROR_CODES = {}));\nvar CONNECT_ITEM_ERROR_CODES;\n(function (CONNECT_ITEM_ERROR_CODES) {\n    CONNECT_ITEM_ERROR_CODES[CONNECT_ITEM_ERROR_CODES[\"UNKNOWN_ERROR\"] = 0] = \"UNKNOWN_ERROR\";\n    CONNECT_ITEM_ERROR_CODES[CONNECT_ITEM_ERROR_CODES[\"METHOD_NOT_SUPPORTED\"] = 400] = \"METHOD_NOT_SUPPORTED\";\n})(CONNECT_ITEM_ERROR_CODES || (CONNECT_ITEM_ERROR_CODES = {}));\n\nvar SEND_TRANSACTION_ERROR_CODES;\n(function (SEND_TRANSACTION_ERROR_CODES) {\n    SEND_TRANSACTION_ERROR_CODES[SEND_TRANSACTION_ERROR_CODES[\"UNKNOWN_ERROR\"] = 0] = \"UNKNOWN_ERROR\";\n    SEND_TRANSACTION_ERROR_CODES[SEND_TRANSACTION_ERROR_CODES[\"BAD_REQUEST_ERROR\"] = 1] = \"BAD_REQUEST_ERROR\";\n    SEND_TRANSACTION_ERROR_CODES[SEND_TRANSACTION_ERROR_CODES[\"UNKNOWN_APP_ERROR\"] = 100] = \"UNKNOWN_APP_ERROR\";\n    SEND_TRANSACTION_ERROR_CODES[SEND_TRANSACTION_ERROR_CODES[\"USER_REJECTS_ERROR\"] = 300] = \"USER_REJECTS_ERROR\";\n    SEND_TRANSACTION_ERROR_CODES[SEND_TRANSACTION_ERROR_CODES[\"METHOD_NOT_SUPPORTED\"] = 400] = \"METHOD_NOT_SUPPORTED\";\n})(SEND_TRANSACTION_ERROR_CODES || (SEND_TRANSACTION_ERROR_CODES = {}));\n\nvar SIGN_DATA_ERROR_CODES;\n(function (SIGN_DATA_ERROR_CODES) {\n    SIGN_DATA_ERROR_CODES[SIGN_DATA_ERROR_CODES[\"UNKNOWN_ERROR\"] = 0] = \"UNKNOWN_ERROR\";\n    SIGN_DATA_ERROR_CODES[SIGN_DATA_ERROR_CODES[\"BAD_REQUEST_ERROR\"] = 1] = \"BAD_REQUEST_ERROR\";\n    SIGN_DATA_ERROR_CODES[SIGN_DATA_ERROR_CODES[\"UNKNOWN_APP_ERROR\"] = 100] = \"UNKNOWN_APP_ERROR\";\n    SIGN_DATA_ERROR_CODES[SIGN_DATA_ERROR_CODES[\"USER_REJECTS_ERROR\"] = 300] = \"USER_REJECTS_ERROR\";\n    SIGN_DATA_ERROR_CODES[SIGN_DATA_ERROR_CODES[\"METHOD_NOT_SUPPORTED\"] = 400] = \"METHOD_NOT_SUPPORTED\";\n})(SIGN_DATA_ERROR_CODES || (SIGN_DATA_ERROR_CODES = {}));\n\nvar DISCONNECT_ERROR_CODES;\n(function (DISCONNECT_ERROR_CODES) {\n    DISCONNECT_ERROR_CODES[DISCONNECT_ERROR_CODES[\"UNKNOWN_ERROR\"] = 0] = \"UNKNOWN_ERROR\";\n    DISCONNECT_ERROR_CODES[DISCONNECT_ERROR_CODES[\"BAD_REQUEST_ERROR\"] = 1] = \"BAD_REQUEST_ERROR\";\n    DISCONNECT_ERROR_CODES[DISCONNECT_ERROR_CODES[\"UNKNOWN_APP_ERROR\"] = 100] = \"UNKNOWN_APP_ERROR\";\n    DISCONNECT_ERROR_CODES[DISCONNECT_ERROR_CODES[\"METHOD_NOT_SUPPORTED\"] = 400] = \"METHOD_NOT_SUPPORTED\";\n})(DISCONNECT_ERROR_CODES || (DISCONNECT_ERROR_CODES = {}));\n\nvar CHAIN;\n(function (CHAIN) {\n    CHAIN[\"MAINNET\"] = \"-239\";\n    CHAIN[\"TESTNET\"] = \"-3\";\n})(CHAIN || (CHAIN = {}));\n\nfunction encodeUint8Array(value, urlSafe) {\n    const encoded = tweetnacl_util__WEBPACK_IMPORTED_MODULE_0__.encodeBase64(value);\n    if (!urlSafe) {\n        return encoded;\n    }\n    return encodeURIComponent(encoded);\n}\nfunction decodeToUint8Array(value, urlSafe) {\n    if (urlSafe) {\n        value = decodeURIComponent(value);\n    }\n    return tweetnacl_util__WEBPACK_IMPORTED_MODULE_0__.decodeBase64(value);\n}\nfunction encode(value, urlSafe = false) {\n    let uint8Array;\n    if (value instanceof Uint8Array) {\n        uint8Array = value;\n    }\n    else {\n        if (typeof value !== 'string') {\n            value = JSON.stringify(value);\n        }\n        uint8Array = tweetnacl_util__WEBPACK_IMPORTED_MODULE_0__.decodeUTF8(value);\n    }\n    return encodeUint8Array(uint8Array, urlSafe);\n}\nfunction decode(value, urlSafe = false) {\n    const decodedUint8Array = decodeToUint8Array(value, urlSafe);\n    return {\n        toString() {\n            return tweetnacl_util__WEBPACK_IMPORTED_MODULE_0__.encodeUTF8(decodedUint8Array);\n        },\n        toObject() {\n            try {\n                return JSON.parse(tweetnacl_util__WEBPACK_IMPORTED_MODULE_0__.encodeUTF8(decodedUint8Array));\n            }\n            catch (e) {\n                return null;\n            }\n        },\n        toUint8Array() {\n            return decodedUint8Array;\n        }\n    };\n}\nconst Base64 = {\n    encode,\n    decode\n};\n\nfunction concatUint8Arrays(buffer1, buffer2) {\n    const mergedArray = new Uint8Array(buffer1.length + buffer2.length);\n    mergedArray.set(buffer1);\n    mergedArray.set(buffer2, buffer1.length);\n    return mergedArray;\n}\nfunction splitToUint8Arrays(array, index) {\n    if (index >= array.length) {\n        throw new Error('Index is out of buffer');\n    }\n    const subArray1 = array.slice(0, index);\n    const subArray2 = array.slice(index);\n    return [subArray1, subArray2];\n}\nfunction toHexString(byteArray) {\n    let hexString = '';\n    byteArray.forEach(byte => {\n        hexString += ('0' + (byte & 0xff).toString(16)).slice(-2);\n    });\n    return hexString;\n}\nfunction hexToByteArray(hexString) {\n    if (hexString.length % 2 !== 0) {\n        throw new Error(`Cannot convert ${hexString} to bytesArray`);\n    }\n    const result = new Uint8Array(hexString.length / 2);\n    for (let i = 0; i < hexString.length; i += 2) {\n        result[i / 2] = parseInt(hexString.slice(i, i + 2), 16);\n    }\n    return result;\n}\n\nfunction isNode() {\n    return (typeof process !== 'undefined' && process.versions != null && process.versions.node != null);\n}\n\nclass SessionCrypto {\n    constructor(keyPair) {\n        this.nonceLength = 24;\n        this.keyPair = keyPair ? this.createKeypairFromString(keyPair) : this.createKeypair();\n        this.sessionId = toHexString(this.keyPair.publicKey);\n    }\n    createKeypair() {\n        return tweetnacl__WEBPACK_IMPORTED_MODULE_1__.box.keyPair();\n    }\n    createKeypairFromString(keyPair) {\n        return {\n            publicKey: hexToByteArray(keyPair.publicKey),\n            secretKey: hexToByteArray(keyPair.secretKey)\n        };\n    }\n    createNonce() {\n        return tweetnacl__WEBPACK_IMPORTED_MODULE_1__.randomBytes(this.nonceLength);\n    }\n    encrypt(message, receiverPublicKey) {\n        const encodedMessage = new TextEncoder().encode(message);\n        const nonce = this.createNonce();\n        const encrypted = tweetnacl__WEBPACK_IMPORTED_MODULE_1__.box(encodedMessage, nonce, receiverPublicKey, this.keyPair.secretKey);\n        return concatUint8Arrays(nonce, encrypted);\n    }\n    decrypt(message, senderPublicKey) {\n        const [nonce, internalMessage] = splitToUint8Arrays(message, this.nonceLength);\n        const decrypted = tweetnacl__WEBPACK_IMPORTED_MODULE_1__.box.open(internalMessage, nonce, senderPublicKey, this.keyPair.secretKey);\n        if (!decrypted) {\n            throw new Error(`Decryption error: \\n message: ${message.toString()} \\n sender pubkey: ${senderPublicKey.toString()} \\n keypair pubkey: ${this.keyPair.publicKey.toString()} \\n keypair secretkey: ${this.keyPair.secretKey.toString()}`);\n        }\n        return new TextDecoder().decode(decrypted);\n    }\n    stringifyKeypair() {\n        return {\n            publicKey: toHexString(this.keyPair.publicKey),\n            secretKey: toHexString(this.keyPair.secretKey)\n        };\n    }\n}\n\n\n//# sourceMappingURL=index.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@tonconnect/protocol/lib/esm/index.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@tonconnect/sdk/lib/esm/index.mjs":
/*!********************************************************!*\
  !*** ./node_modules/@tonconnect/sdk/lib/esm/index.mjs ***!
  \********************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   BadRequestError: function() { return /* binding */ BadRequestError; },\n/* harmony export */   BrowserEventDispatcher: function() { return /* binding */ BrowserEventDispatcher; },\n/* harmony export */   CHAIN: function() { return /* reexport safe */ _tonconnect_protocol__WEBPACK_IMPORTED_MODULE_0__.CHAIN; },\n/* harmony export */   CONNECT_EVENT_ERROR_CODES: function() { return /* reexport safe */ _tonconnect_protocol__WEBPACK_IMPORTED_MODULE_0__.CONNECT_EVENT_ERROR_CODES; },\n/* harmony export */   CONNECT_ITEM_ERROR_CODES: function() { return /* reexport safe */ _tonconnect_protocol__WEBPACK_IMPORTED_MODULE_0__.CONNECT_ITEM_ERROR_CODES; },\n/* harmony export */   FetchWalletsError: function() { return /* binding */ FetchWalletsError; },\n/* harmony export */   LocalstorageNotFoundError: function() { return /* binding */ LocalstorageNotFoundError; },\n/* harmony export */   ParseHexError: function() { return /* binding */ ParseHexError; },\n/* harmony export */   SEND_TRANSACTION_ERROR_CODES: function() { return /* reexport safe */ _tonconnect_protocol__WEBPACK_IMPORTED_MODULE_0__.SEND_TRANSACTION_ERROR_CODES; },\n/* harmony export */   TonConnect: function() { return /* binding */ TonConnect; },\n/* harmony export */   TonConnectError: function() { return /* binding */ TonConnectError; },\n/* harmony export */   UnknownAppError: function() { return /* binding */ UnknownAppError; },\n/* harmony export */   UnknownError: function() { return /* binding */ UnknownError; },\n/* harmony export */   UserRejectsError: function() { return /* binding */ UserRejectsError; },\n/* harmony export */   WalletAlreadyConnectedError: function() { return /* binding */ WalletAlreadyConnectedError; },\n/* harmony export */   WalletNotConnectedError: function() { return /* binding */ WalletNotConnectedError; },\n/* harmony export */   WalletNotInjectedError: function() { return /* binding */ WalletNotInjectedError; },\n/* harmony export */   WalletsListManager: function() { return /* binding */ WalletsListManager; },\n/* harmony export */   WrongAddressError: function() { return /* binding */ WrongAddressError; },\n/* harmony export */   createConnectionCompletedEvent: function() { return /* binding */ createConnectionCompletedEvent; },\n/* harmony export */   createConnectionErrorEvent: function() { return /* binding */ createConnectionErrorEvent; },\n/* harmony export */   createConnectionRestoringCompletedEvent: function() { return /* binding */ createConnectionRestoringCompletedEvent; },\n/* harmony export */   createConnectionRestoringErrorEvent: function() { return /* binding */ createConnectionRestoringErrorEvent; },\n/* harmony export */   createConnectionRestoringStartedEvent: function() { return /* binding */ createConnectionRestoringStartedEvent; },\n/* harmony export */   createConnectionStartedEvent: function() { return /* binding */ createConnectionStartedEvent; },\n/* harmony export */   createDisconnectionEvent: function() { return /* binding */ createDisconnectionEvent; },\n/* harmony export */   createRequestVersionEvent: function() { return /* binding */ createRequestVersionEvent; },\n/* harmony export */   createResponseVersionEvent: function() { return /* binding */ createResponseVersionEvent; },\n/* harmony export */   createTransactionSentForSignatureEvent: function() { return /* binding */ createTransactionSentForSignatureEvent; },\n/* harmony export */   createTransactionSignedEvent: function() { return /* binding */ createTransactionSignedEvent; },\n/* harmony export */   createTransactionSigningFailedEvent: function() { return /* binding */ createTransactionSigningFailedEvent; },\n/* harmony export */   createVersionInfo: function() { return /* binding */ createVersionInfo; },\n/* harmony export */   \"default\": function() { return /* binding */ TonConnect; },\n/* harmony export */   encodeTelegramUrlParameters: function() { return /* binding */ encodeTelegramUrlParameters; },\n/* harmony export */   isTelegramUrl: function() { return /* binding */ isTelegramUrl; },\n/* harmony export */   isWalletInfoCurrentlyEmbedded: function() { return /* binding */ isWalletInfoCurrentlyEmbedded; },\n/* harmony export */   isWalletInfoCurrentlyInjected: function() { return /* binding */ isWalletInfoCurrentlyInjected; },\n/* harmony export */   isWalletInfoInjectable: function() { return /* binding */ isWalletInfoInjectable; },\n/* harmony export */   isWalletInfoInjected: function() { return /* binding */ isWalletInfoInjected; },\n/* harmony export */   isWalletInfoRemote: function() { return /* binding */ isWalletInfoRemote; },\n/* harmony export */   toUserFriendlyAddress: function() { return /* binding */ toUserFriendlyAddress; }\n/* harmony export */ });\n/* harmony import */ var _tonconnect_protocol__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tonconnect/protocol */ \"(app-pages-browser)/./node_modules/@tonconnect/protocol/lib/esm/index.mjs\");\n/* harmony import */ var _tonconnect_isomorphic_eventsource__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @tonconnect/isomorphic-eventsource */ \"(app-pages-browser)/./node_modules/@tonconnect/isomorphic-eventsource/browser.js\");\n/* harmony import */ var _tonconnect_isomorphic_fetch__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @tonconnect/isomorphic-fetch */ \"(app-pages-browser)/./node_modules/@tonconnect/isomorphic-fetch/browser.js\");\n/* provided dependency */ var process = __webpack_require__(/*! process */ \"(app-pages-browser)/./node_modules/next/dist/build/polyfills/process.js\");\n\n\n\n\n\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n\r\nfunction __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nfunction __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\n\n/**\n * Base class for TonConnect errors. You can check if the error was triggered by the @tonconnect/sdk using `err instanceof TonConnectError`.\n */\nclass TonConnectError extends Error {\n    constructor(message, options) {\n        super(message, options);\n        this.message = `${TonConnectError.prefix} ${this.constructor.name}${this.info ? ': ' + this.info : ''}${message ? '\\n' + message : ''}`;\n        Object.setPrototypeOf(this, TonConnectError.prototype);\n    }\n    get info() {\n        return '';\n    }\n}\nTonConnectError.prefix = '[TON_CONNECT_SDK_ERROR]';\n\n/**\n * Thrown when passed DappMetadata is in incorrect format.\n */\nclass DappMetadataError extends TonConnectError {\n    get info() {\n        return 'Passed DappMetadata is in incorrect format.';\n    }\n    constructor(...args) {\n        super(...args);\n        Object.setPrototypeOf(this, DappMetadataError.prototype);\n    }\n}\n\n/**\n * Thrown when passed manifest contains errors.\n */\nclass ManifestContentErrorError extends TonConnectError {\n    get info() {\n        return 'Passed `tonconnect-manifest.json` contains errors. Check format of your manifest. See more https://github.com/ton-connect/docs/blob/main/requests-responses.md#app-manifest';\n    }\n    constructor(...args) {\n        super(...args);\n        Object.setPrototypeOf(this, ManifestContentErrorError.prototype);\n    }\n}\n\n/**\n * Thrown when wallet can't get manifest by passed manifestUrl.\n */\nclass ManifestNotFoundError extends TonConnectError {\n    get info() {\n        return 'Manifest not found. Make sure you added `tonconnect-manifest.json` to the root of your app or passed correct manifestUrl. See more https://github.com/ton-connect/docs/blob/main/requests-responses.md#app-manifest';\n    }\n    constructor(...args) {\n        super(...args);\n        Object.setPrototypeOf(this, ManifestNotFoundError.prototype);\n    }\n}\n\n/**\n * Thrown when wallet connection called but wallet already connected. To avoid the error, disconnect the wallet before doing a new connection.\n */\nclass WalletAlreadyConnectedError extends TonConnectError {\n    get info() {\n        return 'Wallet connection called but wallet already connected. To avoid the error, disconnect the wallet before doing a new connection.';\n    }\n    constructor(...args) {\n        super(...args);\n        Object.setPrototypeOf(this, WalletAlreadyConnectedError.prototype);\n    }\n}\n\n/**\n * Thrown when send transaction or other protocol methods called while wallet is not connected.\n */\nclass WalletNotConnectedError extends TonConnectError {\n    get info() {\n        return 'Send transaction or other protocol methods called while wallet is not connected.';\n    }\n    constructor(...args) {\n        super(...args);\n        Object.setPrototypeOf(this, WalletNotConnectedError.prototype);\n    }\n}\n\nfunction isWalletConnectionSourceJS(value) {\n    return 'jsBridgeKey' in value;\n}\n\n/**\n * Thrown when user rejects the action in the wallet.\n */\nclass UserRejectsError extends TonConnectError {\n    get info() {\n        return 'User rejects the action in the wallet.';\n    }\n    constructor(...args) {\n        super(...args);\n        Object.setPrototypeOf(this, UserRejectsError.prototype);\n    }\n}\n\n/**\n * Thrown when request to the wallet contains errors.\n */\nclass BadRequestError extends TonConnectError {\n    get info() {\n        return 'Request to the wallet contains errors.';\n    }\n    constructor(...args) {\n        super(...args);\n        Object.setPrototypeOf(this, BadRequestError.prototype);\n    }\n}\n\n/**\n * Thrown when app tries to send rpc request to the injected wallet while not connected.\n */\nclass UnknownAppError extends TonConnectError {\n    get info() {\n        return 'App tries to send rpc request to the injected wallet while not connected.';\n    }\n    constructor(...args) {\n        super(...args);\n        Object.setPrototypeOf(this, UnknownAppError.prototype);\n    }\n}\n\n/**\n * Thrown when there is an attempt to connect to the injected wallet while it is not exists in the webpage.\n */\nclass WalletNotInjectedError extends TonConnectError {\n    get info() {\n        return 'There is an attempt to connect to the injected wallet while it is not exists in the webpage.';\n    }\n    constructor(...args) {\n        super(...args);\n        Object.setPrototypeOf(this, WalletNotInjectedError.prototype);\n    }\n}\n\n/**\n * Thrown when `Storage` was not specified in the `DappMetadata` and default `localStorage` was not detected in the Node.js environment.\n */\nclass LocalstorageNotFoundError extends TonConnectError {\n    get info() {\n        return 'Storage was not specified in the `DappMetadata` and default `localStorage` was not detected in the environment.';\n    }\n    constructor(...args) {\n        super(...args);\n        Object.setPrototypeOf(this, LocalstorageNotFoundError.prototype);\n    }\n}\n\n/**\n * Thrown when an error occurred while fetching the wallets list.\n */\nclass FetchWalletsError extends TonConnectError {\n    get info() {\n        return 'An error occurred while fetching the wallets list.';\n    }\n    constructor(...args) {\n        super(...args);\n        Object.setPrototypeOf(this, FetchWalletsError.prototype);\n    }\n}\n\n/**\n * Thrown when passed address is in incorrect format.\n */\nclass WrongAddressError extends TonConnectError {\n    get info() {\n        return 'Passed address is in incorrect format.';\n    }\n    constructor(...args) {\n        super(...args);\n        Object.setPrototypeOf(this, WrongAddressError.prototype);\n    }\n}\n\n/**\n * Thrown when passed hex is in incorrect format.\n */\nclass ParseHexError extends TonConnectError {\n    get info() {\n        return 'Passed hex is in incorrect format.';\n    }\n    constructor(...args) {\n        super(...args);\n        Object.setPrototypeOf(this, ParseHexError.prototype);\n    }\n}\n\n/**\n * Unhanded unknown error.\n */\nclass UnknownError extends TonConnectError {\n    constructor(...args) {\n        super(...args);\n        Object.setPrototypeOf(this, UnknownError.prototype);\n    }\n}\n\nconst connectEventErrorsCodes = {\n    [_tonconnect_protocol__WEBPACK_IMPORTED_MODULE_0__.CONNECT_EVENT_ERROR_CODES.UNKNOWN_ERROR]: UnknownError,\n    [_tonconnect_protocol__WEBPACK_IMPORTED_MODULE_0__.CONNECT_EVENT_ERROR_CODES.USER_REJECTS_ERROR]: UserRejectsError,\n    [_tonconnect_protocol__WEBPACK_IMPORTED_MODULE_0__.CONNECT_EVENT_ERROR_CODES.BAD_REQUEST_ERROR]: BadRequestError,\n    [_tonconnect_protocol__WEBPACK_IMPORTED_MODULE_0__.CONNECT_EVENT_ERROR_CODES.UNKNOWN_APP_ERROR]: UnknownAppError,\n    [_tonconnect_protocol__WEBPACK_IMPORTED_MODULE_0__.CONNECT_EVENT_ERROR_CODES.MANIFEST_NOT_FOUND_ERROR]: ManifestNotFoundError,\n    [_tonconnect_protocol__WEBPACK_IMPORTED_MODULE_0__.CONNECT_EVENT_ERROR_CODES.MANIFEST_CONTENT_ERROR]: ManifestContentErrorError\n};\nclass ConnectErrorsParser {\n    parseError(error) {\n        let ErrorConstructor = UnknownError;\n        if (error.code in connectEventErrorsCodes) {\n            ErrorConstructor = connectEventErrorsCodes[error.code] || UnknownError;\n        }\n        return new ErrorConstructor(error.message);\n    }\n}\nconst connectErrorsParser = new ConnectErrorsParser();\n\nclass RpcParser {\n    isError(response) {\n        return 'error' in response;\n    }\n}\n\nconst sendTransactionErrors = {\n    [_tonconnect_protocol__WEBPACK_IMPORTED_MODULE_0__.SEND_TRANSACTION_ERROR_CODES.UNKNOWN_ERROR]: UnknownError,\n    [_tonconnect_protocol__WEBPACK_IMPORTED_MODULE_0__.SEND_TRANSACTION_ERROR_CODES.USER_REJECTS_ERROR]: UserRejectsError,\n    [_tonconnect_protocol__WEBPACK_IMPORTED_MODULE_0__.SEND_TRANSACTION_ERROR_CODES.BAD_REQUEST_ERROR]: BadRequestError,\n    [_tonconnect_protocol__WEBPACK_IMPORTED_MODULE_0__.SEND_TRANSACTION_ERROR_CODES.UNKNOWN_APP_ERROR]: UnknownAppError\n};\nclass SendTransactionParser extends RpcParser {\n    convertToRpcRequest(request) {\n        return {\n            method: 'sendTransaction',\n            params: [JSON.stringify(request)]\n        };\n    }\n    parseAndThrowError(response) {\n        let ErrorConstructor = UnknownError;\n        if (response.error.code in sendTransactionErrors) {\n            ErrorConstructor = sendTransactionErrors[response.error.code] || UnknownError;\n        }\n        throw new ErrorConstructor(response.error.message);\n    }\n    convertFromRpcResponse(rpcResponse) {\n        return {\n            boc: rpcResponse.result\n        };\n    }\n}\nconst sendTransactionParser = new SendTransactionParser();\n\nclass HttpBridgeGatewayStorage {\n    constructor(storage, bridgeUrl) {\n        this.storage = storage;\n        this.storeKey = 'ton-connect-storage_http-bridge-gateway::' + bridgeUrl;\n    }\n    storeLastEventId(lastEventId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.storage.setItem(this.storeKey, lastEventId);\n        });\n    }\n    removeLastEventId() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.storage.removeItem(this.storeKey);\n        });\n    }\n    getLastEventId() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const stored = yield this.storage.getItem(this.storeKey);\n            if (!stored) {\n                return null;\n            }\n            return stored;\n        });\n    }\n}\n\nfunction removeUrlLastSlash(url) {\n    if (url.slice(-1) === '/') {\n        return url.slice(0, -1);\n    }\n    return url;\n}\nfunction addPathToUrl(url, path) {\n    return removeUrlLastSlash(url) + '/' + path;\n}\nfunction isTelegramUrl(link) {\n    if (!link) {\n        return false;\n    }\n    const url = new URL(link);\n    return url.protocol === 'tg:' || url.hostname === 't.me';\n}\nfunction encodeTelegramUrlParameters(parameters) {\n    return parameters\n        .replaceAll('.', '%2E')\n        .replaceAll('-', '%2D')\n        .replaceAll('_', '%5F')\n        .replaceAll('&', '-')\n        .replaceAll('=', '__')\n        .replaceAll('%', '--');\n}\n\n/**\n * Delays the execution of code for a specified number of milliseconds.\n * @param {number} timeout - The number of milliseconds to delay the execution.\n * @param {DelayOptions} [options] - Optional configuration options for the delay.\n * @return {Promise<void>} - A promise that resolves after the specified delay, or rejects if the delay is aborted.\n */\nfunction delay(timeout, options) {\n    return __awaiter(this, void 0, void 0, function* () {\n        return new Promise((resolve, reject) => {\n            var _a, _b;\n            if ((_a = options === null || options === void 0 ? void 0 : options.signal) === null || _a === void 0 ? void 0 : _a.aborted) {\n                reject(new TonConnectError('Delay aborted'));\n                return;\n            }\n            const timeoutId = setTimeout(() => resolve(), timeout);\n            (_b = options === null || options === void 0 ? void 0 : options.signal) === null || _b === void 0 ? void 0 : _b.addEventListener('abort', () => {\n                clearTimeout(timeoutId);\n                reject(new TonConnectError('Delay aborted'));\n            });\n        });\n    });\n}\n\n/**\n * Creates an AbortController instance with an optional AbortSignal.\n *\n * @param {AbortSignal} [signal] - An optional AbortSignal to use for aborting the controller.\n * @returns {AbortController} - An instance of AbortController.\n */\nfunction createAbortController(signal) {\n    const abortController = new AbortController();\n    if (signal === null || signal === void 0 ? void 0 : signal.aborted) {\n        abortController.abort();\n    }\n    else {\n        signal === null || signal === void 0 ? void 0 : signal.addEventListener('abort', () => abortController.abort(), { once: true });\n    }\n    return abortController;\n}\n\n/**\n * Function to call ton api until we get response.\n * Because ton network is pretty unstable we need to make sure response is final.\n * @param {T} fn - function to call\n * @param {CallForSuccessOptions} [options] - optional configuration options\n */\nfunction callForSuccess(fn, options) {\n    var _a, _b;\n    return __awaiter(this, void 0, void 0, function* () {\n        const attempts = (_a = options === null || options === void 0 ? void 0 : options.attempts) !== null && _a !== void 0 ? _a : 10;\n        const delayMs = (_b = options === null || options === void 0 ? void 0 : options.delayMs) !== null && _b !== void 0 ? _b : 200;\n        const abortController = createAbortController(options === null || options === void 0 ? void 0 : options.signal);\n        if (typeof fn !== 'function') {\n            throw new TonConnectError(`Expected a function, got ${typeof fn}`);\n        }\n        let i = 0;\n        let lastError;\n        while (i < attempts) {\n            if (abortController.signal.aborted) {\n                throw new TonConnectError(`Aborted after attempts ${i}`);\n            }\n            try {\n                return yield fn({ signal: abortController.signal });\n            }\n            catch (err) {\n                lastError = err;\n                i++;\n                if (i < attempts) {\n                    yield delay(delayMs);\n                }\n            }\n        }\n        throw lastError;\n    });\n}\n\nfunction logDebug(...args) {\n    {\n        try {\n            console.debug('[TON_CONNECT_SDK]', ...args);\n        }\n        catch (_a) { }\n    }\n}\nfunction logError(...args) {\n    {\n        try {\n            console.error('[TON_CONNECT_SDK]', ...args);\n        }\n        catch (_a) { }\n    }\n}\nfunction logWarning(...args) {\n    {\n        try {\n            console.warn('[TON_CONNECT_SDK]', ...args);\n        }\n        catch (_a) { }\n    }\n}\n\n/**\n * Create a resource.\n *\n * @template T - The type of the resource.\n * @template Args - The type of the arguments for creating the resource.\n *\n * @param {(...args: Args) => Promise<T>} createFn - A function that creates the resource.\n * @param {(resource: T) => Promise<void>} [disposeFn] - An optional function that disposes the resource.\n */\nfunction createResource(createFn, disposeFn) {\n    let currentResource = null;\n    let currentArgs = null;\n    let currentPromise = null;\n    let currentSignal = null;\n    let abortController = null;\n    // create a new resource\n    const create = (signal, ...args) => __awaiter(this, void 0, void 0, function* () {\n        currentSignal = signal !== null && signal !== void 0 ? signal : null;\n        abortController === null || abortController === void 0 ? void 0 : abortController.abort();\n        abortController = createAbortController(signal);\n        if (abortController.signal.aborted) {\n            throw new TonConnectError('Resource creation was aborted');\n        }\n        currentArgs = args !== null && args !== void 0 ? args : null;\n        const promise = createFn(abortController.signal, ...args);\n        currentPromise = promise;\n        const resource = yield promise;\n        if (currentPromise !== promise && resource !== currentResource) {\n            yield disposeFn(resource);\n            throw new TonConnectError('Resource creation was aborted by a new resource creation');\n        }\n        currentResource = resource;\n        return currentResource;\n    });\n    // get the current resource\n    const current = () => {\n        return currentResource !== null && currentResource !== void 0 ? currentResource : null;\n    };\n    // dispose the current resource\n    const dispose = () => __awaiter(this, void 0, void 0, function* () {\n        try {\n            const resource = currentResource;\n            currentResource = null;\n            const promise = currentPromise;\n            currentPromise = null;\n            try {\n                abortController === null || abortController === void 0 ? void 0 : abortController.abort();\n            }\n            catch (e) { }\n            yield Promise.allSettled([\n                resource ? disposeFn(resource) : Promise.resolve(),\n                promise ? disposeFn(yield promise) : Promise.resolve()\n            ]);\n        }\n        catch (e) { }\n    });\n    // recreate the current resource\n    const recreate = (delayMs) => __awaiter(this, void 0, void 0, function* () {\n        const resource = currentResource;\n        const promise = currentPromise;\n        const args = currentArgs;\n        const signal = currentSignal;\n        yield delay(delayMs);\n        if (resource === currentResource &&\n            promise === currentPromise &&\n            args === currentArgs &&\n            signal === currentSignal) {\n            return yield create(currentSignal, ...(args !== null && args !== void 0 ? args : []));\n        }\n        throw new TonConnectError('Resource recreation was aborted by a new resource creation');\n    });\n    return {\n        create,\n        current,\n        dispose,\n        recreate\n    };\n}\n\n/**\n * Executes a function and provides deferred behavior, allowing for a timeout and abort functionality.\n *\n * @param {Deferrable<T>} fn - The function to execute. It should return a promise that resolves with the desired result.\n * @param {DeferOptions} options - Optional configuration options for the defer behavior.\n * @returns {Promise<T>} - A promise that resolves with the result of the executed function, or rejects with an error if it times out or is aborted.\n */\nfunction timeout(fn, options) {\n    const timeout = options === null || options === void 0 ? void 0 : options.timeout;\n    const signal = options === null || options === void 0 ? void 0 : options.signal;\n    const abortController = createAbortController(signal);\n    return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n        if (abortController.signal.aborted) {\n            reject(new TonConnectError('Operation aborted'));\n            return;\n        }\n        let timeoutId;\n        if (typeof timeout !== 'undefined') {\n            timeoutId = setTimeout(() => {\n                abortController.abort();\n                reject(new TonConnectError(`Timeout after ${timeout}ms`));\n            }, timeout);\n        }\n        abortController.signal.addEventListener('abort', () => {\n            clearTimeout(timeoutId);\n            reject(new TonConnectError('Operation aborted'));\n        }, { once: true });\n        const deferOptions = { timeout, abort: abortController.signal };\n        yield fn((...args) => {\n            clearTimeout(timeoutId);\n            resolve(...args);\n        }, () => {\n            clearTimeout(timeoutId);\n            reject();\n        }, deferOptions);\n    }));\n}\n\nclass BridgeGateway {\n    constructor(storage, bridgeUrl, sessionId, listener, errorsListener) {\n        this.bridgeUrl = bridgeUrl;\n        this.sessionId = sessionId;\n        this.listener = listener;\n        this.errorsListener = errorsListener;\n        this.ssePath = 'events';\n        this.postPath = 'message';\n        this.heartbeatMessage = 'heartbeat';\n        this.defaultTtl = 300;\n        this.defaultReconnectDelay = 2000;\n        this.defaultResendDelay = 5000;\n        this.eventSource = createResource((signal, openingDeadlineMS) => __awaiter(this, void 0, void 0, function* () {\n            const eventSourceConfig = {\n                bridgeUrl: this.bridgeUrl,\n                ssePath: this.ssePath,\n                sessionId: this.sessionId,\n                bridgeGatewayStorage: this.bridgeGatewayStorage,\n                errorHandler: this.errorsHandler.bind(this),\n                messageHandler: this.messagesHandler.bind(this),\n                signal: signal,\n                openingDeadlineMS: openingDeadlineMS\n            };\n            return yield createEventSource(eventSourceConfig);\n        }), (resource) => __awaiter(this, void 0, void 0, function* () {\n            resource.close();\n        }));\n        this.bridgeGatewayStorage = new HttpBridgeGatewayStorage(storage, bridgeUrl);\n    }\n    get isReady() {\n        const eventSource = this.eventSource.current();\n        return (eventSource === null || eventSource === void 0 ? void 0 : eventSource.readyState) === EventSource.OPEN;\n    }\n    get isClosed() {\n        const eventSource = this.eventSource.current();\n        return (eventSource === null || eventSource === void 0 ? void 0 : eventSource.readyState) !== EventSource.OPEN;\n    }\n    get isConnecting() {\n        const eventSource = this.eventSource.current();\n        return (eventSource === null || eventSource === void 0 ? void 0 : eventSource.readyState) === EventSource.CONNECTING;\n    }\n    registerSession(options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.eventSource.create(options === null || options === void 0 ? void 0 : options.signal, options === null || options === void 0 ? void 0 : options.openingDeadlineMS);\n        });\n    }\n    send(message, receiver, topic, ttlOrOptions) {\n        var _a;\n        return __awaiter(this, void 0, void 0, function* () {\n            // TODO: remove deprecated method\n            const options = {};\n            if (typeof ttlOrOptions === 'number') {\n                options.ttl = ttlOrOptions;\n            }\n            else {\n                options.ttl = ttlOrOptions === null || ttlOrOptions === void 0 ? void 0 : ttlOrOptions.ttl;\n                options.signal = ttlOrOptions === null || ttlOrOptions === void 0 ? void 0 : ttlOrOptions.signal;\n                options.attempts = ttlOrOptions === null || ttlOrOptions === void 0 ? void 0 : ttlOrOptions.attempts;\n            }\n            const url = new URL(addPathToUrl(this.bridgeUrl, this.postPath));\n            url.searchParams.append('client_id', this.sessionId);\n            url.searchParams.append('to', receiver);\n            url.searchParams.append('ttl', ((options === null || options === void 0 ? void 0 : options.ttl) || this.defaultTtl).toString());\n            url.searchParams.append('topic', topic);\n            const body = _tonconnect_protocol__WEBPACK_IMPORTED_MODULE_0__.Base64.encode(message);\n            yield callForSuccess((options) => __awaiter(this, void 0, void 0, function* () {\n                const response = yield this.post(url, body, options.signal);\n                if (!response.ok) {\n                    throw new TonConnectError(`Bridge send failed, status ${response.status}`);\n                }\n            }), {\n                attempts: (_a = options === null || options === void 0 ? void 0 : options.attempts) !== null && _a !== void 0 ? _a : Number.MAX_SAFE_INTEGER,\n                delayMs: this.defaultResendDelay,\n                signal: options === null || options === void 0 ? void 0 : options.signal\n            });\n        });\n    }\n    pause() {\n        this.eventSource.dispose().catch(e => logError(`Bridge pause failed, ${e}`));\n    }\n    unPause() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const RECREATE_WITHOUT_DELAY = 0;\n            yield this.eventSource.recreate(RECREATE_WITHOUT_DELAY);\n        });\n    }\n    close() {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.eventSource.dispose().catch(e => logError(`Bridge close failed, ${e}`));\n        });\n    }\n    setListener(listener) {\n        this.listener = listener;\n    }\n    setErrorsListener(errorsListener) {\n        this.errorsListener = errorsListener;\n    }\n    post(url, body, signal) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const response = yield fetch(url, {\n                method: 'post',\n                body: body,\n                signal: signal\n            });\n            if (!response.ok) {\n                throw new TonConnectError(`Bridge send failed, status ${response.status}`);\n            }\n            return response;\n        });\n    }\n    errorsHandler(eventSource, e) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.isConnecting) {\n                eventSource.close();\n                throw new TonConnectError('Bridge error, failed to connect');\n            }\n            if (this.isReady) {\n                try {\n                    this.errorsListener(e);\n                }\n                catch (e) { }\n                return;\n            }\n            if (this.isClosed) {\n                eventSource.close();\n                logDebug(`Bridge reconnecting, ${this.defaultReconnectDelay}ms delay`);\n                return yield this.eventSource.recreate(this.defaultReconnectDelay);\n            }\n            throw new TonConnectError('Bridge error, unknown state');\n        });\n    }\n    messagesHandler(e) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (e.data === this.heartbeatMessage) {\n                return;\n            }\n            yield this.bridgeGatewayStorage.storeLastEventId(e.lastEventId);\n            if (this.isClosed) {\n                return;\n            }\n            let bridgeIncomingMessage;\n            try {\n                bridgeIncomingMessage = JSON.parse(e.data);\n            }\n            catch (e) {\n                throw new TonConnectError(`Bridge message parse failed, message ${e.data}`);\n            }\n            this.listener(bridgeIncomingMessage);\n        });\n    }\n}\n/**\n * Creates an event source.\n * @param {CreateEventSourceConfig} config - Configuration for creating an event source.\n */\nfunction createEventSource(config) {\n    return __awaiter(this, void 0, void 0, function* () {\n        return yield timeout((resolve, reject, deferOptions) => __awaiter(this, void 0, void 0, function* () {\n            var _a;\n            const abortController = createAbortController(deferOptions.signal);\n            const signal = abortController.signal;\n            if (signal.aborted) {\n                reject(new TonConnectError('Bridge connection aborted'));\n                return;\n            }\n            const url = new URL(addPathToUrl(config.bridgeUrl, config.ssePath));\n            url.searchParams.append('client_id', config.sessionId);\n            const lastEventId = yield config.bridgeGatewayStorage.getLastEventId();\n            if (lastEventId) {\n                url.searchParams.append('last_event_id', lastEventId);\n            }\n            if (signal.aborted) {\n                reject(new TonConnectError('Bridge connection aborted'));\n                return;\n            }\n            const eventSource = new EventSource(url.toString());\n            eventSource.onerror = (reason) => __awaiter(this, void 0, void 0, function* () {\n                if (signal.aborted) {\n                    eventSource.close();\n                    reject(new TonConnectError('Bridge connection aborted'));\n                    return;\n                }\n                try {\n                    const newInstance = yield config.errorHandler(eventSource, reason);\n                    if (newInstance !== eventSource) {\n                        eventSource.close();\n                    }\n                    if (newInstance && newInstance !== eventSource) {\n                        resolve(newInstance);\n                    }\n                }\n                catch (e) {\n                    eventSource.close();\n                    reject(e);\n                }\n            });\n            eventSource.onopen = () => {\n                if (signal.aborted) {\n                    eventSource.close();\n                    reject(new TonConnectError('Bridge connection aborted'));\n                    return;\n                }\n                resolve(eventSource);\n            };\n            eventSource.onmessage = (event) => {\n                if (signal.aborted) {\n                    eventSource.close();\n                    reject(new TonConnectError('Bridge connection aborted'));\n                    return;\n                }\n                config.messageHandler(event);\n            };\n            (_a = config.signal) === null || _a === void 0 ? void 0 : _a.addEventListener('abort', () => {\n                eventSource.close();\n                reject(new TonConnectError('Bridge connection aborted'));\n            });\n        }), { timeout: config.openingDeadlineMS, signal: config.signal });\n    });\n}\n\nfunction isPendingConnectionHttp(connection) {\n    return !('connectEvent' in connection);\n}\n\nclass BridgeConnectionStorage {\n    constructor(storage) {\n        this.storage = storage;\n        this.storeKey = 'ton-connect-storage_bridge-connection';\n    }\n    storeConnection(connection) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (connection.type === 'injected') {\n                return this.storage.setItem(this.storeKey, JSON.stringify(connection));\n            }\n            if (!isPendingConnectionHttp(connection)) {\n                const rawSession = {\n                    sessionKeyPair: connection.session.sessionCrypto.stringifyKeypair(),\n                    walletPublicKey: connection.session.walletPublicKey,\n                    bridgeUrl: connection.session.bridgeUrl\n                };\n                const rawConnection = {\n                    type: 'http',\n                    connectEvent: connection.connectEvent,\n                    session: rawSession,\n                    lastWalletEventId: connection.lastWalletEventId,\n                    nextRpcRequestId: connection.nextRpcRequestId\n                };\n                return this.storage.setItem(this.storeKey, JSON.stringify(rawConnection));\n            }\n            const rawConnection = {\n                type: 'http',\n                connectionSource: connection.connectionSource,\n                sessionCrypto: connection.sessionCrypto.stringifyKeypair()\n            };\n            return this.storage.setItem(this.storeKey, JSON.stringify(rawConnection));\n        });\n    }\n    removeConnection() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.storage.removeItem(this.storeKey);\n        });\n    }\n    getConnection() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const stored = yield this.storage.getItem(this.storeKey);\n            if (!stored) {\n                return null;\n            }\n            const connection = JSON.parse(stored);\n            if (connection.type === 'injected') {\n                return connection;\n            }\n            if ('connectEvent' in connection) {\n                const sessionCrypto = new _tonconnect_protocol__WEBPACK_IMPORTED_MODULE_0__.SessionCrypto(connection.session.sessionKeyPair);\n                return {\n                    type: 'http',\n                    connectEvent: connection.connectEvent,\n                    lastWalletEventId: connection.lastWalletEventId,\n                    nextRpcRequestId: connection.nextRpcRequestId,\n                    session: {\n                        sessionCrypto,\n                        bridgeUrl: connection.session.bridgeUrl,\n                        walletPublicKey: connection.session.walletPublicKey\n                    }\n                };\n            }\n            return {\n                type: 'http',\n                sessionCrypto: new _tonconnect_protocol__WEBPACK_IMPORTED_MODULE_0__.SessionCrypto(connection.sessionCrypto),\n                connectionSource: connection.connectionSource\n            };\n        });\n    }\n    getHttpConnection() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const connection = yield this.getConnection();\n            if (!connection) {\n                throw new TonConnectError('Trying to read HTTP connection source while nothing is stored');\n            }\n            if (connection.type === 'injected') {\n                throw new TonConnectError('Trying to read HTTP connection source while injected connection is stored');\n            }\n            return connection;\n        });\n    }\n    getHttpPendingConnection() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const connection = yield this.getConnection();\n            if (!connection) {\n                throw new TonConnectError('Trying to read HTTP connection source while nothing is stored');\n            }\n            if (connection.type === 'injected') {\n                throw new TonConnectError('Trying to read HTTP connection source while injected connection is stored');\n            }\n            if (!isPendingConnectionHttp(connection)) {\n                throw new TonConnectError('Trying to read HTTP-pending connection while http connection is stored');\n            }\n            return connection;\n        });\n    }\n    getInjectedConnection() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const connection = yield this.getConnection();\n            if (!connection) {\n                throw new TonConnectError('Trying to read Injected bridge connection source while nothing is stored');\n            }\n            if ((connection === null || connection === void 0 ? void 0 : connection.type) === 'http') {\n                throw new TonConnectError('Trying to read Injected bridge connection source while HTTP connection is stored');\n            }\n            return connection;\n        });\n    }\n    storedConnectionType() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const stored = yield this.storage.getItem(this.storeKey);\n            if (!stored) {\n                return null;\n            }\n            const connection = JSON.parse(stored);\n            return connection.type;\n        });\n    }\n    storeLastWalletEventId(id) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const connection = yield this.getConnection();\n            if (connection && connection.type === 'http' && !isPendingConnectionHttp(connection)) {\n                connection.lastWalletEventId = id;\n                return this.storeConnection(connection);\n            }\n        });\n    }\n    getLastWalletEventId() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const connection = yield this.getConnection();\n            if (connection && 'lastWalletEventId' in connection) {\n                return connection.lastWalletEventId;\n            }\n            return undefined;\n        });\n    }\n    increaseNextRpcRequestId() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const connection = yield this.getConnection();\n            if (connection && 'nextRpcRequestId' in connection) {\n                const lastId = connection.nextRpcRequestId || 0;\n                connection.nextRpcRequestId = lastId + 1;\n                return this.storeConnection(connection);\n            }\n        });\n    }\n    getNextRpcRequestId() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const connection = yield this.getConnection();\n            if (connection && 'nextRpcRequestId' in connection) {\n                return connection.nextRpcRequestId || 0;\n            }\n            return 0;\n        });\n    }\n}\n\nconst PROTOCOL_VERSION = 2;\n\nclass BridgeProvider {\n    constructor(storage, walletConnectionSource) {\n        this.storage = storage;\n        this.walletConnectionSource = walletConnectionSource;\n        this.type = 'http';\n        this.standardUniversalLink = 'tc://';\n        this.pendingRequests = new Map();\n        this.session = null;\n        this.gateway = null;\n        this.pendingGateways = [];\n        this.listeners = [];\n        this.defaultOpeningDeadlineMS = 12000;\n        this.defaultRetryTimeoutMS = 2000;\n        this.connectionStorage = new BridgeConnectionStorage(storage);\n    }\n    static fromStorage(storage) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const bridgeConnectionStorage = new BridgeConnectionStorage(storage);\n            const connection = yield bridgeConnectionStorage.getHttpConnection();\n            if (isPendingConnectionHttp(connection)) {\n                return new BridgeProvider(storage, connection.connectionSource);\n            }\n            return new BridgeProvider(storage, { bridgeUrl: connection.session.bridgeUrl });\n        });\n    }\n    connect(message, options) {\n        var _a;\n        const abortController = createAbortController(options === null || options === void 0 ? void 0 : options.signal);\n        (_a = this.abortController) === null || _a === void 0 ? void 0 : _a.abort();\n        this.abortController = abortController;\n        this.closeGateways();\n        const sessionCrypto = new _tonconnect_protocol__WEBPACK_IMPORTED_MODULE_0__.SessionCrypto();\n        this.session = {\n            sessionCrypto,\n            bridgeUrl: 'bridgeUrl' in this.walletConnectionSource\n                ? this.walletConnectionSource.bridgeUrl\n                : ''\n        };\n        this.connectionStorage\n            .storeConnection({\n            type: 'http',\n            connectionSource: this.walletConnectionSource,\n            sessionCrypto\n        })\n            .then(() => __awaiter(this, void 0, void 0, function* () {\n            if (abortController.signal.aborted) {\n                return;\n            }\n            yield callForSuccess(_options => {\n                var _a;\n                return this.openGateways(sessionCrypto, {\n                    openingDeadlineMS: (_a = options === null || options === void 0 ? void 0 : options.openingDeadlineMS) !== null && _a !== void 0 ? _a : this.defaultOpeningDeadlineMS,\n                    signal: _options === null || _options === void 0 ? void 0 : _options.signal\n                });\n            }, {\n                attempts: Number.MAX_SAFE_INTEGER,\n                delayMs: this.defaultRetryTimeoutMS,\n                signal: abortController.signal\n            });\n        }));\n        const universalLink = 'universalLink' in this.walletConnectionSource &&\n            this.walletConnectionSource.universalLink\n            ? this.walletConnectionSource.universalLink\n            : this.standardUniversalLink;\n        return this.generateUniversalLink(universalLink, message);\n    }\n    restoreConnection(options) {\n        var _a, _b;\n        return __awaiter(this, void 0, void 0, function* () {\n            const abortController = createAbortController(options === null || options === void 0 ? void 0 : options.signal);\n            (_a = this.abortController) === null || _a === void 0 ? void 0 : _a.abort();\n            this.abortController = abortController;\n            if (abortController.signal.aborted) {\n                return;\n            }\n            this.closeGateways();\n            const storedConnection = yield this.connectionStorage.getHttpConnection();\n            if (!storedConnection) {\n                return;\n            }\n            if (abortController.signal.aborted) {\n                return;\n            }\n            const openingDeadlineMS = (_b = options === null || options === void 0 ? void 0 : options.openingDeadlineMS) !== null && _b !== void 0 ? _b : this.defaultOpeningDeadlineMS;\n            if (isPendingConnectionHttp(storedConnection)) {\n                this.session = {\n                    sessionCrypto: storedConnection.sessionCrypto,\n                    bridgeUrl: 'bridgeUrl' in this.walletConnectionSource\n                        ? this.walletConnectionSource.bridgeUrl\n                        : ''\n                };\n                return yield this.openGateways(storedConnection.sessionCrypto, {\n                    openingDeadlineMS: openingDeadlineMS,\n                    signal: abortController === null || abortController === void 0 ? void 0 : abortController.signal\n                });\n            }\n            if (Array.isArray(this.walletConnectionSource)) {\n                throw new TonConnectError('Internal error. Connection source is array while WalletConnectionSourceHTTP was expected.');\n            }\n            this.session = storedConnection.session;\n            if (this.gateway) {\n                logDebug('Gateway is already opened, closing previous gateway');\n                yield this.gateway.close();\n            }\n            this.gateway = new BridgeGateway(this.storage, this.walletConnectionSource.bridgeUrl, storedConnection.session.sessionCrypto.sessionId, this.gatewayListener.bind(this), this.gatewayErrorsListener.bind(this));\n            if (abortController.signal.aborted) {\n                return;\n            }\n            // notify listeners about stored connection\n            this.listeners.forEach(listener => listener(storedConnection.connectEvent));\n            // wait for the connection to be opened\n            try {\n                yield callForSuccess(options => this.gateway.registerSession({\n                    openingDeadlineMS: openingDeadlineMS,\n                    signal: options.signal\n                }), {\n                    attempts: Number.MAX_SAFE_INTEGER,\n                    delayMs: this.defaultRetryTimeoutMS,\n                    signal: abortController.signal\n                });\n            }\n            catch (e) {\n                yield this.disconnect({ signal: abortController.signal });\n                return;\n            }\n        });\n    }\n    sendRequest(request, optionsOrOnRequestSent) {\n        // TODO: remove deprecated method\n        const options = {};\n        if (typeof optionsOrOnRequestSent === 'function') {\n            options.onRequestSent = optionsOrOnRequestSent;\n        }\n        else {\n            options.onRequestSent = optionsOrOnRequestSent === null || optionsOrOnRequestSent === void 0 ? void 0 : optionsOrOnRequestSent.onRequestSent;\n            options.signal = optionsOrOnRequestSent === null || optionsOrOnRequestSent === void 0 ? void 0 : optionsOrOnRequestSent.signal;\n            options.attempts = optionsOrOnRequestSent === null || optionsOrOnRequestSent === void 0 ? void 0 : optionsOrOnRequestSent.attempts;\n        }\n        return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n            var _a;\n            if (!this.gateway || !this.session || !('walletPublicKey' in this.session)) {\n                throw new TonConnectError('Trying to send bridge request without session');\n            }\n            const id = (yield this.connectionStorage.getNextRpcRequestId()).toString();\n            yield this.connectionStorage.increaseNextRpcRequestId();\n            logDebug('Send http-bridge request:', Object.assign(Object.assign({}, request), { id }));\n            const encodedRequest = this.session.sessionCrypto.encrypt(JSON.stringify(Object.assign(Object.assign({}, request), { id })), (0,_tonconnect_protocol__WEBPACK_IMPORTED_MODULE_0__.hexToByteArray)(this.session.walletPublicKey));\n            try {\n                yield this.gateway.send(encodedRequest, this.session.walletPublicKey, request.method, { attempts: options === null || options === void 0 ? void 0 : options.attempts, signal: options === null || options === void 0 ? void 0 : options.signal });\n                (_a = options === null || options === void 0 ? void 0 : options.onRequestSent) === null || _a === void 0 ? void 0 : _a.call(options);\n                this.pendingRequests.set(id.toString(), resolve);\n            }\n            catch (e) {\n                reject(e);\n            }\n        }));\n    }\n    closeConnection() {\n        this.closeGateways();\n        this.listeners = [];\n        this.session = null;\n        this.gateway = null;\n    }\n    disconnect(options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve) => __awaiter(this, void 0, void 0, function* () {\n                let called = false;\n                let timeoutId = null;\n                const onRequestSent = () => {\n                    if (!called) {\n                        called = true;\n                        this.removeBridgeAndSession().then(resolve);\n                    }\n                };\n                try {\n                    this.closeGateways();\n                    const abortController = createAbortController(options === null || options === void 0 ? void 0 : options.signal);\n                    timeoutId = setTimeout(() => {\n                        abortController.abort();\n                    }, this.defaultOpeningDeadlineMS);\n                    yield this.sendRequest({ method: 'disconnect', params: [] }, {\n                        onRequestSent: onRequestSent,\n                        signal: abortController.signal,\n                        attempts: 1\n                    });\n                }\n                catch (e) {\n                    logDebug('Disconnect error:', e);\n                    if (!called) {\n                        this.removeBridgeAndSession().then(resolve);\n                    }\n                }\n                finally {\n                    if (timeoutId) {\n                        clearTimeout(timeoutId);\n                    }\n                    onRequestSent();\n                }\n            }));\n        });\n    }\n    listen(callback) {\n        this.listeners.push(callback);\n        return () => (this.listeners = this.listeners.filter(listener => listener !== callback));\n    }\n    pause() {\n        var _a;\n        (_a = this.gateway) === null || _a === void 0 ? void 0 : _a.pause();\n        this.pendingGateways.forEach(bridge => bridge.pause());\n    }\n    unPause() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const promises = this.pendingGateways.map(bridge => bridge.unPause());\n            if (this.gateway) {\n                promises.push(this.gateway.unPause());\n            }\n            yield Promise.all(promises);\n        });\n    }\n    pendingGatewaysListener(gateway, bridgeUrl, bridgeIncomingMessage) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.pendingGateways.includes(gateway)) {\n                yield gateway.close();\n                return;\n            }\n            this.closeGateways({ except: gateway });\n            if (this.gateway) {\n                logDebug('Gateway is already opened, closing previous gateway');\n                yield this.gateway.close();\n            }\n            this.session.bridgeUrl = bridgeUrl;\n            this.gateway = gateway;\n            this.gateway.setErrorsListener(this.gatewayErrorsListener.bind(this));\n            this.gateway.setListener(this.gatewayListener.bind(this));\n            return this.gatewayListener(bridgeIncomingMessage);\n        });\n    }\n    gatewayListener(bridgeIncomingMessage) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const walletMessage = JSON.parse(this.session.sessionCrypto.decrypt(_tonconnect_protocol__WEBPACK_IMPORTED_MODULE_0__.Base64.decode(bridgeIncomingMessage.message).toUint8Array(), (0,_tonconnect_protocol__WEBPACK_IMPORTED_MODULE_0__.hexToByteArray)(bridgeIncomingMessage.from)));\n            logDebug('Wallet message received:', walletMessage);\n            if (!('event' in walletMessage)) {\n                const id = walletMessage.id.toString();\n                const resolve = this.pendingRequests.get(id);\n                if (!resolve) {\n                    logDebug(`Response id ${id} doesn't match any request's id`);\n                    return;\n                }\n                resolve(walletMessage);\n                this.pendingRequests.delete(id);\n                return;\n            }\n            if (walletMessage.id !== undefined) {\n                const lastId = yield this.connectionStorage.getLastWalletEventId();\n                if (lastId !== undefined && walletMessage.id <= lastId) {\n                    logError(`Received event id (=${walletMessage.id}) must be greater than stored last wallet event id (=${lastId}) `);\n                    return;\n                }\n                if (walletMessage.event !== 'connect') {\n                    yield this.connectionStorage.storeLastWalletEventId(walletMessage.id);\n                }\n            }\n            // `this.listeners` might be modified in the event handler\n            const listeners = this.listeners;\n            if (walletMessage.event === 'connect') {\n                yield this.updateSession(walletMessage, bridgeIncomingMessage.from);\n            }\n            if (walletMessage.event === 'disconnect') {\n                logDebug(`Removing bridge and session: received disconnect event`);\n                yield this.removeBridgeAndSession();\n            }\n            listeners.forEach(listener => listener(walletMessage));\n        });\n    }\n    gatewayErrorsListener(e) {\n        return __awaiter(this, void 0, void 0, function* () {\n            throw new TonConnectError(`Bridge error ${JSON.stringify(e)}`);\n        });\n    }\n    updateSession(connectEvent, walletPublicKey) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.session = Object.assign(Object.assign({}, this.session), { walletPublicKey });\n            const tonAddrItem = connectEvent.payload.items.find(item => item.name === 'ton_addr');\n            const connectEventToSave = Object.assign(Object.assign({}, connectEvent), { payload: Object.assign(Object.assign({}, connectEvent.payload), { items: [tonAddrItem] }) });\n            yield this.connectionStorage.storeConnection({\n                type: 'http',\n                session: this.session,\n                lastWalletEventId: connectEvent.id,\n                connectEvent: connectEventToSave,\n                nextRpcRequestId: 0\n            });\n        });\n    }\n    removeBridgeAndSession() {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.closeConnection();\n            yield this.connectionStorage.removeConnection();\n        });\n    }\n    generateUniversalLink(universalLink, message) {\n        if (isTelegramUrl(universalLink)) {\n            return this.generateTGUniversalLink(universalLink, message);\n        }\n        return this.generateRegularUniversalLink(universalLink, message);\n    }\n    generateRegularUniversalLink(universalLink, message) {\n        const url = new URL(universalLink);\n        url.searchParams.append('v', PROTOCOL_VERSION.toString());\n        url.searchParams.append('id', this.session.sessionCrypto.sessionId);\n        url.searchParams.append('r', JSON.stringify(message));\n        return url.toString();\n    }\n    generateTGUniversalLink(universalLink, message) {\n        const urlToWrap = this.generateRegularUniversalLink('about:blank', message);\n        const linkParams = urlToWrap.split('?')[1];\n        const startapp = 'tonconnect-' + encodeTelegramUrlParameters(linkParams);\n        // TODO: Remove this line after all dApps and the wallets-list.json have been updated\n        const updatedUniversalLink = this.convertToDirectLink(universalLink);\n        const url = new URL(updatedUniversalLink);\n        url.searchParams.append('startapp', startapp);\n        return url.toString();\n    }\n    // TODO: Remove this method after all dApps and the wallets-list.json have been updated\n    convertToDirectLink(universalLink) {\n        const url = new URL(universalLink);\n        if (url.searchParams.has('attach')) {\n            url.searchParams.delete('attach');\n            url.pathname += '/start';\n        }\n        return url.toString();\n    }\n    openGateways(sessionCrypto, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (Array.isArray(this.walletConnectionSource)) {\n                // close all gateways before opening new ones\n                this.pendingGateways.map(bridge => bridge.close().catch());\n                // open new gateways\n                this.pendingGateways = this.walletConnectionSource.map(source => {\n                    const gateway = new BridgeGateway(this.storage, source.bridgeUrl, sessionCrypto.sessionId, () => { }, () => { });\n                    gateway.setListener(message => this.pendingGatewaysListener(gateway, source.bridgeUrl, message));\n                    return gateway;\n                });\n                yield Promise.allSettled(this.pendingGateways.map(bridge => callForSuccess((_options) => {\n                    var _a;\n                    if (!this.pendingGateways.some(item => item === bridge)) {\n                        return bridge.close();\n                    }\n                    return bridge.registerSession({\n                        openingDeadlineMS: (_a = options === null || options === void 0 ? void 0 : options.openingDeadlineMS) !== null && _a !== void 0 ? _a : this.defaultOpeningDeadlineMS,\n                        signal: _options.signal\n                    });\n                }, {\n                    attempts: Number.MAX_SAFE_INTEGER,\n                    delayMs: this.defaultRetryTimeoutMS,\n                    signal: options === null || options === void 0 ? void 0 : options.signal\n                })));\n                return;\n            }\n            else {\n                if (this.gateway) {\n                    logDebug(`Gateway is already opened, closing previous gateway`);\n                    yield this.gateway.close();\n                }\n                this.gateway = new BridgeGateway(this.storage, this.walletConnectionSource.bridgeUrl, sessionCrypto.sessionId, this.gatewayListener.bind(this), this.gatewayErrorsListener.bind(this));\n                return yield this.gateway.registerSession({\n                    openingDeadlineMS: options === null || options === void 0 ? void 0 : options.openingDeadlineMS,\n                    signal: options === null || options === void 0 ? void 0 : options.signal\n                });\n            }\n        });\n    }\n    closeGateways(options) {\n        var _a;\n        (_a = this.gateway) === null || _a === void 0 ? void 0 : _a.close();\n        this.pendingGateways\n            .filter(item => item !== (options === null || options === void 0 ? void 0 : options.except))\n            .forEach(bridge => bridge.close());\n        this.pendingGateways = [];\n    }\n}\n\nfunction hasProperty(value, propertyKey) {\n    return hasProperties(value, [propertyKey]);\n}\nfunction hasProperties(value, propertyKeys) {\n    if (!value || typeof value !== 'object') {\n        return false;\n    }\n    return propertyKeys.every(propertyKey => propertyKey in value);\n}\n\nfunction isJSBridgeWithMetadata(value) {\n    try {\n        if (!hasProperty(value, 'tonconnect') || !hasProperty(value.tonconnect, 'walletInfo')) {\n            return false;\n        }\n        return hasProperties(value.tonconnect.walletInfo, [\n            'name',\n            'app_name',\n            'image',\n            'about_url',\n            'platforms'\n        ]);\n    }\n    catch (_a) {\n        return false;\n    }\n}\n\n/**\n * In memory storage like localStorage, but without persistence.\n * Uses as a fallback for localStorage in Safari's private mode.\n */\nclass InMemoryStorage {\n    constructor() {\n        this.storage = {};\n    }\n    static getInstance() {\n        if (!InMemoryStorage.instance) {\n            InMemoryStorage.instance = new InMemoryStorage();\n        }\n        return InMemoryStorage.instance;\n    }\n    get length() {\n        return Object.keys(this.storage).length;\n    }\n    clear() {\n        this.storage = {};\n    }\n    getItem(key) {\n        var _a;\n        return (_a = this.storage[key]) !== null && _a !== void 0 ? _a : null;\n    }\n    key(index) {\n        var _a;\n        const keys = Object.keys(this.storage);\n        if (index < 0 || index >= keys.length) {\n            return null;\n        }\n        return (_a = keys[index]) !== null && _a !== void 0 ? _a : null;\n    }\n    removeItem(key) {\n        delete this.storage[key];\n    }\n    setItem(key, value) {\n        this.storage[key] = value;\n    }\n}\n\nfunction getWindow() {\n    if (typeof window === 'undefined') {\n        return undefined;\n    }\n    return window;\n}\n/**\n * The function try to get window keys, if it is not available it returns empty array.\n * As an example, for Safari's private mode it returns empty array, because the browser does not allow to get window keys.\n */\nfunction tryGetWindowKeys() {\n    const window = getWindow();\n    if (!window) {\n        return [];\n    }\n    try {\n        return Object.keys(window);\n    }\n    catch (_a) {\n        return [];\n    }\n}\nfunction getDocument() {\n    if (typeof document === 'undefined') {\n        return undefined;\n    }\n    return document;\n}\nfunction getWebPageManifest() {\n    var _a;\n    const origin = (_a = getWindow()) === null || _a === void 0 ? void 0 : _a.location.origin;\n    if (origin) {\n        return origin + '/tonconnect-manifest.json';\n    }\n    return '';\n}\n/**\n * Returns `localStorage` if it is available. In Safari's private mode, it returns `InMemoryStorage`. In Node.js, it throws an error.\n */\nfunction tryGetLocalStorage() {\n    if (isLocalStorageAvailable()) {\n        return localStorage;\n    }\n    if (isNodeJs()) {\n        throw new TonConnectError('`localStorage` is unavailable, but it is required for TonConnect. For more details, see https://github.com/ton-connect/sdk/tree/main/packages/sdk#init-connector');\n    }\n    return InMemoryStorage.getInstance();\n}\n/**\n * Checks if `localStorage` is available.\n */\nfunction isLocalStorageAvailable() {\n    // We use a try/catch block because Safari's private mode throws an error when attempting to access localStorage.\n    try {\n        return typeof localStorage !== 'undefined';\n    }\n    catch (_a) {\n        return false;\n    }\n}\n/**\n * Checks if the environment is Node.js.\n */\nfunction isNodeJs() {\n    return (typeof process !== 'undefined' && process.versions != null && process.versions.node != null);\n}\n\nclass InjectedProvider {\n    constructor(storage, injectedWalletKey) {\n        this.injectedWalletKey = injectedWalletKey;\n        this.type = 'injected';\n        this.unsubscribeCallback = null;\n        this.listenSubscriptions = false;\n        this.listeners = [];\n        const window = InjectedProvider.window;\n        if (!InjectedProvider.isWindowContainsWallet(window, injectedWalletKey)) {\n            throw new WalletNotInjectedError();\n        }\n        this.connectionStorage = new BridgeConnectionStorage(storage);\n        this.injectedWallet = window[injectedWalletKey].tonconnect;\n    }\n    static fromStorage(storage) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const bridgeConnectionStorage = new BridgeConnectionStorage(storage);\n            const connection = yield bridgeConnectionStorage.getInjectedConnection();\n            return new InjectedProvider(storage, connection.jsBridgeKey);\n        });\n    }\n    static isWalletInjected(injectedWalletKey) {\n        return InjectedProvider.isWindowContainsWallet(this.window, injectedWalletKey);\n    }\n    static isInsideWalletBrowser(injectedWalletKey) {\n        if (InjectedProvider.isWindowContainsWallet(this.window, injectedWalletKey)) {\n            return this.window[injectedWalletKey].tonconnect.isWalletBrowser;\n        }\n        return false;\n    }\n    static getCurrentlyInjectedWallets() {\n        if (!this.window) {\n            return [];\n        }\n        const windowKeys = tryGetWindowKeys();\n        const wallets = windowKeys.filter(([_, value]) => isJSBridgeWithMetadata(value));\n        return wallets.map(([jsBridgeKey, wallet]) => ({\n            name: wallet.tonconnect.walletInfo.name,\n            appName: wallet.tonconnect.walletInfo.app_name,\n            aboutUrl: wallet.tonconnect.walletInfo.about_url,\n            imageUrl: wallet.tonconnect.walletInfo.image,\n            tondns: wallet.tonconnect.walletInfo.tondns,\n            jsBridgeKey,\n            injected: true,\n            embedded: wallet.tonconnect.isWalletBrowser,\n            platforms: wallet.tonconnect.walletInfo.platforms\n        }));\n    }\n    static isWindowContainsWallet(window, injectedWalletKey) {\n        return (!!window &&\n            injectedWalletKey in window &&\n            typeof window[injectedWalletKey] === 'object' &&\n            'tonconnect' in window[injectedWalletKey]);\n    }\n    connect(message) {\n        this._connect(PROTOCOL_VERSION, message);\n    }\n    restoreConnection() {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                logDebug(`Injected Provider restoring connection...`);\n                const connectEvent = yield this.injectedWallet.restoreConnection();\n                logDebug('Injected Provider restoring connection response', connectEvent);\n                if (connectEvent.event === 'connect') {\n                    this.makeSubscriptions();\n                    this.listeners.forEach(listener => listener(connectEvent));\n                }\n                else {\n                    yield this.connectionStorage.removeConnection();\n                }\n            }\n            catch (e) {\n                yield this.connectionStorage.removeConnection();\n                console.error(e);\n            }\n        });\n    }\n    closeConnection() {\n        if (this.listenSubscriptions) {\n            this.injectedWallet.disconnect();\n        }\n        this.closeAllListeners();\n    }\n    disconnect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return new Promise(resolve => {\n                const onRequestSent = () => {\n                    this.closeAllListeners();\n                    this.connectionStorage.removeConnection().then(resolve);\n                };\n                try {\n                    this.injectedWallet.disconnect();\n                    onRequestSent();\n                }\n                catch (e) {\n                    logDebug(e);\n                    this.sendRequest({\n                        method: 'disconnect',\n                        params: []\n                    }, onRequestSent);\n                }\n            });\n        });\n    }\n    closeAllListeners() {\n        var _a;\n        this.listenSubscriptions = false;\n        this.listeners = [];\n        (_a = this.unsubscribeCallback) === null || _a === void 0 ? void 0 : _a.call(this);\n    }\n    listen(eventsCallback) {\n        this.listeners.push(eventsCallback);\n        return () => (this.listeners = this.listeners.filter(listener => listener !== eventsCallback));\n    }\n    sendRequest(request, optionsOrOnRequestSent) {\n        var _a;\n        return __awaiter(this, void 0, void 0, function* () {\n            // TODO: remove deprecated method\n            const options = {};\n            if (typeof optionsOrOnRequestSent === 'function') {\n                options.onRequestSent = optionsOrOnRequestSent;\n            }\n            else {\n                options.onRequestSent = optionsOrOnRequestSent === null || optionsOrOnRequestSent === void 0 ? void 0 : optionsOrOnRequestSent.onRequestSent;\n                options.signal = optionsOrOnRequestSent === null || optionsOrOnRequestSent === void 0 ? void 0 : optionsOrOnRequestSent.signal;\n            }\n            const id = (yield this.connectionStorage.getNextRpcRequestId()).toString();\n            yield this.connectionStorage.increaseNextRpcRequestId();\n            logDebug('Send injected-bridge request:', Object.assign(Object.assign({}, request), { id }));\n            const result = this.injectedWallet.send(Object.assign(Object.assign({}, request), { id }));\n            result.then(response => logDebug('Wallet message received:', response));\n            (_a = options === null || options === void 0 ? void 0 : options.onRequestSent) === null || _a === void 0 ? void 0 : _a.call(options);\n            return result;\n        });\n    }\n    _connect(protocolVersion, message) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                logDebug(`Injected Provider connect request: protocolVersion: ${protocolVersion}, message:`, message);\n                const connectEvent = yield this.injectedWallet.connect(protocolVersion, message);\n                logDebug('Injected Provider connect response:', connectEvent);\n                if (connectEvent.event === 'connect') {\n                    yield this.updateSession();\n                    this.makeSubscriptions();\n                }\n                this.listeners.forEach(listener => listener(connectEvent));\n            }\n            catch (e) {\n                logDebug('Injected Provider connect error:', e);\n                const connectEventError = {\n                    event: 'connect_error',\n                    payload: {\n                        code: 0,\n                        message: e === null || e === void 0 ? void 0 : e.toString()\n                    }\n                };\n                this.listeners.forEach(listener => listener(connectEventError));\n            }\n        });\n    }\n    makeSubscriptions() {\n        this.listenSubscriptions = true;\n        this.unsubscribeCallback = this.injectedWallet.listen(e => {\n            logDebug('Wallet message received:', e);\n            if (this.listenSubscriptions) {\n                this.listeners.forEach(listener => listener(e));\n            }\n            if (e.event === 'disconnect') {\n                this.disconnect();\n            }\n        });\n    }\n    updateSession() {\n        return this.connectionStorage.storeConnection({\n            type: 'injected',\n            jsBridgeKey: this.injectedWalletKey,\n            nextRpcRequestId: 0\n        });\n    }\n}\nInjectedProvider.window = getWindow();\n\n/**\n * Default storage to save protocol data, uses `localStorage` if it is available. In Safari's private mode, it uses `InMemoryStorage`. In Node.js, it throws an error.\n */\nclass DefaultStorage {\n    constructor() {\n        this.localStorage = tryGetLocalStorage();\n    }\n    getItem(key) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.localStorage.getItem(key);\n        });\n    }\n    removeItem(key) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.localStorage.removeItem(key);\n        });\n    }\n    setItem(key, value) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.localStorage.setItem(key, value);\n        });\n    }\n}\n\n/**\n * Checks if `WalletInfo` is `WalletInfoInjectable` and `WalletInfo` is injected to the current webpage (`walletInfo.injected === true`).\n * @param value WalletInfo to check.\n */\nfunction isWalletInfoCurrentlyInjected(value) {\n    return isWalletInfoInjectable(value) && value.injected;\n}\n/**\n * Checks if `WalletInfo` is `WalletInfoInjectable` and dApp is opened inside this wallet's browser.\n * @param value WalletInfo to check.\n */\nfunction isWalletInfoCurrentlyEmbedded(value) {\n    return isWalletInfoCurrentlyInjected(value) && value.embedded;\n}\n/**\n * Checks if `WalletInfo` is `WalletInfoInjected`, but doesn't check if it is injected to the page or not.\n * @param value WalletInfo to check.\n */\nfunction isWalletInfoInjectable(value) {\n    return 'jsBridgeKey' in value;\n}\n/**\n * Checks if `WalletInfo` is `WalletInfoRemote`.\n * @param value WalletInfo to check.\n */\nfunction isWalletInfoRemote(value) {\n    return 'bridgeUrl' in value;\n}\n/**\n * @deprecated use `isWalletInfoInjectable` or `isWalletInfoCurrentlyInjected` instead.\n * @param value WalletInfo to check.\n */\nfunction isWalletInfoInjected(value) {\n    return 'jsBridgeKey' in value;\n}\n\nconst FALLBACK_WALLETS_LIST = [\n    {\n        app_name: 'telegram-wallet',\n        name: 'Wallet',\n        image: 'https://wallet.tg/images/logo-288.png',\n        about_url: 'https://wallet.tg/',\n        universal_url: 'https://t.me/wallet?attach=wallet',\n        bridge: [\n            {\n                type: 'sse',\n                url: 'https://bridge.ton.space/bridge'\n            }\n        ],\n        platforms: ['ios', 'android', 'macos', 'windows', 'linux']\n    },\n    {\n        app_name: 'tonkeeper',\n        name: 'Tonkeeper',\n        image: 'https://tonkeeper.com/assets/tonconnect-icon.png',\n        tondns: 'tonkeeper.ton',\n        about_url: 'https://tonkeeper.com',\n        universal_url: 'https://app.tonkeeper.com/ton-connect',\n        deepLink: 'tonkeeper-tc://',\n        bridge: [\n            {\n                type: 'sse',\n                url: 'https://bridge.tonapi.io/bridge'\n            },\n            {\n                type: 'js',\n                key: 'tonkeeper'\n            }\n        ],\n        platforms: ['ios', 'android', 'chrome', 'firefox', 'macos']\n    },\n    {\n        app_name: 'mytonwallet',\n        name: 'MyTonWallet',\n        image: 'https://static.mytonwallet.io/icon-256.png',\n        about_url: 'https://mytonwallet.io',\n        universal_url: 'https://connect.mytonwallet.org',\n        bridge: [\n            {\n                type: 'js',\n                key: 'mytonwallet'\n            },\n            {\n                type: 'sse',\n                url: 'https://tonconnectbridge.mytonwallet.org/bridge/'\n            }\n        ],\n        platforms: ['chrome', 'windows', 'macos', 'linux', 'ios', 'android', 'firefox']\n    },\n    {\n        app_name: 'openmask',\n        name: 'OpenMask',\n        image: 'https://raw.githubusercontent.com/OpenProduct/openmask-extension/main/public/openmask-logo-288.png',\n        about_url: 'https://www.openmask.app/',\n        bridge: [\n            {\n                type: 'js',\n                key: 'openmask'\n            }\n        ],\n        platforms: ['chrome']\n    },\n    {\n        app_name: 'tonhub',\n        name: 'Tonhub',\n        image: 'https://tonhub.com/tonconnect_logo.png',\n        about_url: 'https://tonhub.com',\n        universal_url: 'https://tonhub.com/ton-connect',\n        bridge: [\n            {\n                type: 'js',\n                key: 'tonhub'\n            },\n            {\n                type: 'sse',\n                url: 'https://connect.tonhubapi.com/tonconnect'\n            }\n        ],\n        platforms: ['ios', 'android']\n    },\n    {\n        app_name: 'dewallet',\n        name: 'DeWallet',\n        image: 'https://raw.githubusercontent.com/delab-team/manifests-images/main/WalletAvatar.png',\n        about_url: 'https://delabwallet.com',\n        universal_url: 'https://t.me/dewallet?attach=wallet',\n        bridge: [\n            {\n                type: 'sse',\n                url: 'https://sse-bridge.delab.team/bridge'\n            }\n        ],\n        platforms: ['ios', 'android']\n    },\n    {\n        app_name: 'xtonwallet',\n        name: 'XTONWallet',\n        image: 'https://xtonwallet.com/assets/img/icon-256-back.png',\n        about_url: 'https://xtonwallet.com',\n        bridge: [\n            {\n                type: 'js',\n                key: 'xtonwallet'\n            }\n        ],\n        platforms: ['chrome', 'firefox']\n    },\n    {\n        app_name: 'tonwallet',\n        name: 'TON Wallet',\n        image: 'https://wallet.ton.org/assets/ui/qr-logo.png',\n        about_url: 'https://chrome.google.com/webstore/detail/ton-wallet/nphplpgoakhhjchkkhmiggakijnkhfnd',\n        bridge: [\n            {\n                type: 'js',\n                key: 'tonwallet'\n            }\n        ],\n        platforms: ['chrome']\n    },\n    {\n        app_name: 'bitgetTonWallet',\n        name: 'Bitget Wallet',\n        image: 'https://raw.githubusercontent.com/bitkeepwallet/download/main/logo/png/bitget_wallet_logo_0_gas_fee.png',\n        about_url: 'https://web3.bitget.com',\n        deepLink: 'bitkeep://',\n        bridge: [\n            {\n                type: 'js',\n                key: 'bitgetTonWallet'\n            },\n            {\n                type: 'sse',\n                url: 'https://bridge.tonapi.io/bridge'\n            }\n        ],\n        platforms: ['ios', 'android', 'chrome'],\n        universal_url: 'https://bkcode.vip/ton-connect'\n    },\n    {\n        app_name: 'safepalwallet',\n        name: 'SafePal',\n        image: 'https://s.pvcliping.com/web/public_image/SafePal_x288.png',\n        tondns: '',\n        about_url: 'https://www.safepal.com',\n        universal_url: 'https://link.safepal.io/ton-connect',\n        deepLink: 'safepal-tc://',\n        bridge: [\n            {\n                type: 'sse',\n                url: 'https://ton-bridge.safepal.com/tonbridge/v1/bridge'\n            },\n            {\n                type: 'js',\n                key: 'safepalwallet'\n            }\n        ],\n        platforms: ['ios', 'android', 'chrome', 'firefox']\n    },\n    {\n        app_name: 'okxTonWallet',\n        name: 'OKX Wallet',\n        image: 'https://static.okx.com/cdn/assets/imgs/247/58E63FEA47A2B7D7.png',\n        about_url: 'https://www.okx.com/web3',\n        universal_url: 'https://www.okx.com/download?appendQuery=true&deeplink=okx://web3/wallet/tonconnect',\n        bridge: [\n            {\n                type: 'js',\n                key: 'okxTonWallet'\n            },\n            {\n                type: 'sse',\n                url: 'https://www.okx.com/tonbridge/discover/rpc/bridge'\n            }\n        ],\n        platforms: ['chrome', 'safari', 'firefox', 'ios', 'android']\n    },\n    {\n        app_name: 'okxTonWalletTr',\n        name: 'OKX TR Wallet',\n        image: 'https://static.okx.com/cdn/assets/imgs/247/587A8296F0BB640F.png',\n        about_url: 'https://tr.okx.com/web3',\n        universal_url: 'https://tr.okx.com/download?appendQuery=true&deeplink=okxtr://web3/wallet/tonconnect',\n        bridge: [\n            {\n                type: 'js',\n                key: 'okxTonWallet'\n            },\n            {\n                type: 'sse',\n                url: 'https://www.okx.com/tonbridge/discover/rpc/bridge'\n            }\n        ],\n        platforms: ['chrome', 'safari', 'firefox', 'ios', 'android']\n    }\n];\n\nclass WalletsListManager {\n    constructor(options) {\n        this.walletsListCache = null;\n        this.walletsListCacheCreationTimestamp = null;\n        this.walletsListSource = 'https://raw.githubusercontent.com/ton-blockchain/wallets-list/main/wallets-v2.json';\n        if (options === null || options === void 0 ? void 0 : options.walletsListSource) {\n            this.walletsListSource = options.walletsListSource;\n        }\n        if (options === null || options === void 0 ? void 0 : options.cacheTTLMs) {\n            this.cacheTTLMs = options.cacheTTLMs;\n        }\n    }\n    getWallets() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.cacheTTLMs &&\n                this.walletsListCacheCreationTimestamp &&\n                Date.now() > this.walletsListCacheCreationTimestamp + this.cacheTTLMs) {\n                this.walletsListCache = null;\n            }\n            if (!this.walletsListCache) {\n                this.walletsListCache = this.fetchWalletsList();\n                this.walletsListCache\n                    .then(() => {\n                    this.walletsListCacheCreationTimestamp = Date.now();\n                })\n                    .catch(() => {\n                    this.walletsListCache = null;\n                    this.walletsListCacheCreationTimestamp = null;\n                });\n            }\n            return this.walletsListCache;\n        });\n    }\n    getEmbeddedWallet() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const walletsList = yield this.getWallets();\n            const embeddedWallets = walletsList.filter(isWalletInfoCurrentlyEmbedded);\n            if (embeddedWallets.length !== 1) {\n                return null;\n            }\n            return embeddedWallets[0];\n        });\n    }\n    fetchWalletsList() {\n        return __awaiter(this, void 0, void 0, function* () {\n            let walletsList = [];\n            try {\n                const walletsResponse = yield fetch(this.walletsListSource);\n                walletsList = yield walletsResponse.json();\n                if (!Array.isArray(walletsList)) {\n                    throw new FetchWalletsError('Wrong wallets list format, wallets list must be an array.');\n                }\n                const wrongFormatWallets = walletsList.filter(wallet => !this.isCorrectWalletConfigDTO(wallet));\n                if (wrongFormatWallets.length) {\n                    logError(`Wallet(s) ${wrongFormatWallets\n                        .map(wallet => wallet.name)\n                        .join(', ')} config format is wrong. They were removed from the wallets list.`);\n                    walletsList = walletsList.filter(wallet => this.isCorrectWalletConfigDTO(wallet));\n                }\n            }\n            catch (e) {\n                logError(e);\n                walletsList = FALLBACK_WALLETS_LIST;\n            }\n            let currentlyInjectedWallets = [];\n            try {\n                currentlyInjectedWallets = InjectedProvider.getCurrentlyInjectedWallets();\n            }\n            catch (e) {\n                logError(e);\n            }\n            return this.mergeWalletsLists(this.walletConfigDTOListToWalletConfigList(walletsList), currentlyInjectedWallets);\n        });\n    }\n    walletConfigDTOListToWalletConfigList(walletConfigDTO) {\n        return walletConfigDTO.map(walletConfigDTO => {\n            const walletConfigBase = {\n                name: walletConfigDTO.name,\n                appName: walletConfigDTO.app_name,\n                imageUrl: walletConfigDTO.image,\n                aboutUrl: walletConfigDTO.about_url,\n                tondns: walletConfigDTO.tondns,\n                platforms: walletConfigDTO.platforms\n            };\n            const walletConfig = walletConfigBase;\n            walletConfigDTO.bridge.forEach(bridge => {\n                if (bridge.type === 'sse') {\n                    walletConfig.bridgeUrl = bridge.url;\n                    walletConfig.universalLink =\n                        walletConfigDTO.universal_url;\n                    walletConfig.deepLink = walletConfigDTO.deepLink;\n                }\n                if (bridge.type === 'js') {\n                    const jsBridgeKey = bridge.key;\n                    walletConfig.jsBridgeKey = jsBridgeKey;\n                    walletConfig.injected =\n                        InjectedProvider.isWalletInjected(jsBridgeKey);\n                    walletConfig.embedded =\n                        InjectedProvider.isInsideWalletBrowser(jsBridgeKey);\n                }\n            });\n            return walletConfig;\n        });\n    }\n    mergeWalletsLists(list1, list2) {\n        const names = new Set(list1.concat(list2).map(item => item.name));\n        return [...names.values()].map(name => {\n            const list1Item = list1.find(item => item.name === name);\n            const list2Item = list2.find(item => item.name === name);\n            return Object.assign(Object.assign({}, (list1Item && Object.assign({}, list1Item))), (list2Item && Object.assign({}, list2Item)));\n        });\n    }\n    // eslint-disable-next-line complexity\n    isCorrectWalletConfigDTO(value) {\n        if (!value || !(typeof value === 'object')) {\n            return false;\n        }\n        const containsName = 'name' in value;\n        const containsAppName = 'app_name' in value;\n        const containsImage = 'image' in value;\n        const containsAbout = 'about_url' in value;\n        const containsPlatforms = 'platforms' in value;\n        if (!containsName ||\n            !containsImage ||\n            !containsAbout ||\n            !containsPlatforms ||\n            !containsAppName) {\n            return false;\n        }\n        if (!value.platforms ||\n            !Array.isArray(value.platforms) ||\n            !value.platforms.length) {\n            return false;\n        }\n        if (!('bridge' in value) ||\n            !Array.isArray(value.bridge) ||\n            !value.bridge.length) {\n            return false;\n        }\n        const bridge = value.bridge;\n        if (bridge.some(item => !item || typeof item !== 'object' || !('type' in item))) {\n            return false;\n        }\n        const sseBridge = bridge.find(item => item.type === 'sse');\n        if (sseBridge) {\n            if (!('url' in sseBridge) ||\n                !sseBridge.url ||\n                !value.universal_url) {\n                return false;\n            }\n        }\n        const jsBridge = bridge.find(item => item.type === 'js');\n        if (jsBridge) {\n            if (!('key' in jsBridge) || !jsBridge.key) {\n                return false;\n            }\n        }\n        return true;\n    }\n}\n\n/**\n * Thrown when wallet doesn't support requested feature method.\n */\nclass WalletNotSupportFeatureError extends TonConnectError {\n    get info() {\n        return \"Wallet doesn't support requested feature method.\";\n    }\n    constructor(...args) {\n        super(...args);\n        Object.setPrototypeOf(this, WalletNotSupportFeatureError.prototype);\n    }\n}\n\nfunction checkSendTransactionSupport(features, options) {\n    const supportsDeprecatedSendTransactionFeature = features.includes('SendTransaction');\n    const sendTransactionFeature = features.find(feature => feature && typeof feature === 'object' && feature.name === 'SendTransaction');\n    if (!supportsDeprecatedSendTransactionFeature && !sendTransactionFeature) {\n        throw new WalletNotSupportFeatureError(\"Wallet doesn't support SendTransaction feature.\");\n    }\n    if (sendTransactionFeature && sendTransactionFeature.maxMessages !== undefined) {\n        if (sendTransactionFeature.maxMessages < options.requiredMessagesNumber) {\n            throw new WalletNotSupportFeatureError(`Wallet is not able to handle such SendTransaction request. Max support messages number is ${sendTransactionFeature.maxMessages}, but ${options.requiredMessagesNumber} is required.`);\n        }\n        return;\n    }\n    logWarning(\"Connected wallet didn't provide information about max allowed messages in the SendTransaction request. Request may be rejected by the wallet.\");\n}\n\n/**\n * Create a request version event.\n */\nfunction createRequestVersionEvent() {\n    return {\n        type: 'request-version'\n    };\n}\n/**\n * Create a response version event.\n * @param version\n */\nfunction createResponseVersionEvent(version) {\n    return {\n        type: 'response-version',\n        version: version\n    };\n}\n/**\n * Create a version info.\n * @param version\n */\nfunction createVersionInfo(version) {\n    return {\n        ton_connect_sdk_lib: version.ton_connect_sdk_lib,\n        ton_connect_ui_lib: version.ton_connect_ui_lib\n    };\n}\nfunction createConnectionInfo(version, wallet) {\n    var _a, _b, _c, _d, _e, _f, _g, _h;\n    const isTonProof = ((_a = wallet === null || wallet === void 0 ? void 0 : wallet.connectItems) === null || _a === void 0 ? void 0 : _a.tonProof) && 'proof' in wallet.connectItems.tonProof;\n    const authType = isTonProof ? 'ton_proof' : 'ton_addr';\n    return {\n        wallet_address: (_c = (_b = wallet === null || wallet === void 0 ? void 0 : wallet.account) === null || _b === void 0 ? void 0 : _b.address) !== null && _c !== void 0 ? _c : null,\n        wallet_type: (_d = wallet === null || wallet === void 0 ? void 0 : wallet.device.appName) !== null && _d !== void 0 ? _d : null,\n        wallet_version: (_e = wallet === null || wallet === void 0 ? void 0 : wallet.device.appVersion) !== null && _e !== void 0 ? _e : null,\n        auth_type: authType,\n        custom_data: Object.assign({ chain_id: (_g = (_f = wallet === null || wallet === void 0 ? void 0 : wallet.account) === null || _f === void 0 ? void 0 : _f.chain) !== null && _g !== void 0 ? _g : null, provider: (_h = wallet === null || wallet === void 0 ? void 0 : wallet.provider) !== null && _h !== void 0 ? _h : null }, createVersionInfo(version))\n    };\n}\n/**\n * Create a connection init event.\n */\nfunction createConnectionStartedEvent(version) {\n    return {\n        type: 'connection-started',\n        custom_data: createVersionInfo(version)\n    };\n}\n/**\n * Create a connection completed event.\n * @param version\n * @param wallet\n */\nfunction createConnectionCompletedEvent(version, wallet) {\n    return Object.assign({ type: 'connection-completed', is_success: true }, createConnectionInfo(version, wallet));\n}\n/**\n * Create a connection error event.\n * @param version\n * @param error_message\n * @param errorCode\n */\nfunction createConnectionErrorEvent(version, error_message, errorCode) {\n    return {\n        type: 'connection-error',\n        is_success: false,\n        error_message: error_message,\n        error_code: errorCode !== null && errorCode !== void 0 ? errorCode : null,\n        custom_data: createVersionInfo(version)\n    };\n}\n/**\n * Create a connection restoring started event.\n */\nfunction createConnectionRestoringStartedEvent(version) {\n    return {\n        type: 'connection-restoring-started',\n        custom_data: createVersionInfo(version)\n    };\n}\n/**\n * Create a connection restoring completed event.\n * @param version\n * @param wallet\n */\nfunction createConnectionRestoringCompletedEvent(version, wallet) {\n    return Object.assign({ type: 'connection-restoring-completed', is_success: true }, createConnectionInfo(version, wallet));\n}\n/**\n * Create a connection restoring error event.\n * @param version\n * @param errorMessage\n */\nfunction createConnectionRestoringErrorEvent(version, errorMessage) {\n    return {\n        type: 'connection-restoring-error',\n        is_success: false,\n        error_message: errorMessage,\n        custom_data: createVersionInfo(version)\n    };\n}\nfunction createTransactionInfo(wallet, transaction) {\n    var _a, _b, _c, _d;\n    return {\n        valid_until: (_a = String(transaction.validUntil)) !== null && _a !== void 0 ? _a : null,\n        from: (_d = (_b = transaction.from) !== null && _b !== void 0 ? _b : (_c = wallet === null || wallet === void 0 ? void 0 : wallet.account) === null || _c === void 0 ? void 0 : _c.address) !== null && _d !== void 0 ? _d : null,\n        messages: transaction.messages.map(message => {\n            var _a, _b;\n            return ({\n                address: (_a = message.address) !== null && _a !== void 0 ? _a : null,\n                amount: (_b = message.amount) !== null && _b !== void 0 ? _b : null\n            });\n        })\n    };\n}\n/**\n * Create a transaction init event.\n * @param version\n * @param wallet\n * @param transaction\n */\nfunction createTransactionSentForSignatureEvent(version, wallet, transaction) {\n    return Object.assign(Object.assign({ type: 'transaction-sent-for-signature' }, createConnectionInfo(version, wallet)), createTransactionInfo(wallet, transaction));\n}\n/**\n * Create a transaction signed event.\n * @param version\n * @param wallet\n * @param transaction\n * @param signedTransaction\n */\nfunction createTransactionSignedEvent(version, wallet, transaction, signedTransaction) {\n    return Object.assign(Object.assign({ type: 'transaction-signed', is_success: true, signed_transaction: signedTransaction.boc }, createConnectionInfo(version, wallet)), createTransactionInfo(wallet, transaction));\n}\n/**\n * Create a transaction error event.\n * @param version\n * @param wallet\n * @param transaction\n * @param errorMessage\n * @param errorCode\n */\nfunction createTransactionSigningFailedEvent(version, wallet, transaction, errorMessage, errorCode) {\n    return Object.assign(Object.assign({ type: 'transaction-signing-failed', is_success: false, error_message: errorMessage, error_code: errorCode !== null && errorCode !== void 0 ? errorCode : null }, createConnectionInfo(version, wallet)), createTransactionInfo(wallet, transaction));\n}\n/**\n * Create a disconnect event.\n * @param version\n * @param wallet\n * @param scope\n * @returns\n */\nfunction createDisconnectionEvent(version, wallet, scope) {\n    return Object.assign({ type: 'disconnection', scope: scope }, createConnectionInfo(version, wallet));\n}\n\n/**\n * A concrete implementation of EventDispatcher that dispatches events to the browser window.\n */\nclass BrowserEventDispatcher {\n    constructor() {\n        /**\n         * The window object, possibly undefined in a server environment.\n         * @private\n         */\n        this.window = getWindow();\n    }\n    /**\n     * Dispatches an event with the given name and details to the browser window.\n     * @param eventName - The name of the event to dispatch.\n     * @param eventDetails - The details of the event to dispatch.\n     * @returns A promise that resolves when the event has been dispatched.\n     */\n    dispatchEvent(eventName, eventDetails) {\n        var _a;\n        return __awaiter(this, void 0, void 0, function* () {\n            const event = new CustomEvent(eventName, { detail: eventDetails });\n            (_a = this.window) === null || _a === void 0 ? void 0 : _a.dispatchEvent(event);\n        });\n    }\n    /**\n     * Adds an event listener to the browser window.\n     * @param eventName - The name of the event to listen for.\n     * @param listener - The listener to add.\n     * @param options - The options for the listener.\n     * @returns A function that removes the listener.\n     */\n    addEventListener(eventName, listener, options) {\n        var _a;\n        return __awaiter(this, void 0, void 0, function* () {\n            (_a = this.window) === null || _a === void 0 ? void 0 : _a.addEventListener(eventName, listener, options);\n            return () => {\n                var _a;\n                return (_a = this.window) === null || _a === void 0 ? void 0 : _a.removeEventListener(eventName, listener);\n            };\n        });\n    }\n}\n\n/**\n * Tracker for TonConnect user actions, such as transaction signing, connection, etc.\n *\n * List of events:\n *  * `connection-started`: when a user starts connecting a wallet.\n *  * `connection-completed`: when a user successfully connected a wallet.\n *  * `connection-error`: when a user cancels a connection or there is an error during the connection process.\n *  * `connection-restoring-started`: when the dApp starts restoring a connection.\n *  * `connection-restoring-completed`: when the dApp successfully restores a connection.\n *  * `connection-restoring-error`: when the dApp fails to restore a connection.\n *  * `disconnection`: when a user starts disconnecting a wallet.\n *  * `transaction-sent-for-signature`: when a user sends a transaction for signature.\n *  * `transaction-signed`: when a user successfully signs a transaction.\n *  * `transaction-signing-failed`: when a user cancels transaction signing or there is an error during the signing process.\n *\n * If you want to track user actions, you can subscribe to the window events with prefix `ton-connect-`:\n *\n * @example\n * window.addEventListener('ton-connect-transaction-sent-for-signature', (event) => {\n *    console.log('Transaction init', event.detail);\n * });\n *\n * @internal\n */\nclass TonConnectTracker {\n    constructor(options) {\n        var _a;\n        /**\n         * Event prefix for user actions.\n         * @private\n         */\n        this.eventPrefix = 'ton-connect-';\n        /**\n         * TonConnect UI version.\n         */\n        this.tonConnectUiVersion = null;\n        this.eventDispatcher = (_a = options === null || options === void 0 ? void 0 : options.eventDispatcher) !== null && _a !== void 0 ? _a : new BrowserEventDispatcher();\n        this.tonConnectSdkVersion = options.tonConnectSdkVersion;\n        this.init().catch();\n    }\n    /**\n     * Version of the library.\n     */\n    get version() {\n        return createVersionInfo({\n            ton_connect_sdk_lib: this.tonConnectSdkVersion,\n            ton_connect_ui_lib: this.tonConnectUiVersion\n        });\n    }\n    /**\n     * Called once when the tracker is created and request version other libraries.\n     */\n    init() {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                yield this.setRequestVersionHandler();\n                this.tonConnectUiVersion = yield this.requestTonConnectUiVersion();\n            }\n            catch (e) { }\n        });\n    }\n    /**\n     * Set request version handler.\n     * @private\n     */\n    setRequestVersionHandler() {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.eventDispatcher.addEventListener('ton-connect-request-version', () => __awaiter(this, void 0, void 0, function* () {\n                yield this.eventDispatcher.dispatchEvent('ton-connect-response-version', createResponseVersionEvent(this.tonConnectSdkVersion));\n            }));\n        });\n    }\n    /**\n     * Request TonConnect UI version.\n     * @private\n     */\n    requestTonConnectUiVersion() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n                try {\n                    yield this.eventDispatcher.addEventListener('ton-connect-ui-response-version', (event) => {\n                        resolve(event.detail.version);\n                    }, { once: true });\n                    yield this.eventDispatcher.dispatchEvent('ton-connect-ui-request-version', createRequestVersionEvent());\n                }\n                catch (e) {\n                    reject(e);\n                }\n            }));\n        });\n    }\n    /**\n     * Emit user action event to the window.\n     * @param eventDetails\n     * @private\n     */\n    dispatchUserActionEvent(eventDetails) {\n        try {\n            this.eventDispatcher\n                .dispatchEvent(`${this.eventPrefix}${eventDetails.type}`, eventDetails)\n                .catch();\n        }\n        catch (e) { }\n    }\n    /**\n     * Track connection init event.\n     * @param args\n     */\n    trackConnectionStarted(...args) {\n        try {\n            const event = createConnectionStartedEvent(this.version, ...args);\n            this.dispatchUserActionEvent(event);\n        }\n        catch (e) { }\n    }\n    /**\n     * Track connection success event.\n     * @param args\n     */\n    trackConnectionCompleted(...args) {\n        try {\n            const event = createConnectionCompletedEvent(this.version, ...args);\n            this.dispatchUserActionEvent(event);\n        }\n        catch (e) { }\n    }\n    /**\n     * Track connection error event.\n     * @param args\n     */\n    trackConnectionError(...args) {\n        try {\n            const event = createConnectionErrorEvent(this.version, ...args);\n            this.dispatchUserActionEvent(event);\n        }\n        catch (e) { }\n    }\n    /**\n     * Track connection restoring init event.\n     * @param args\n     */\n    trackConnectionRestoringStarted(...args) {\n        try {\n            const event = createConnectionRestoringStartedEvent(this.version, ...args);\n            this.dispatchUserActionEvent(event);\n        }\n        catch (e) { }\n    }\n    /**\n     * Track connection restoring success event.\n     * @param args\n     */\n    trackConnectionRestoringCompleted(...args) {\n        try {\n            const event = createConnectionRestoringCompletedEvent(this.version, ...args);\n            this.dispatchUserActionEvent(event);\n        }\n        catch (e) { }\n    }\n    /**\n     * Track connection restoring error event.\n     * @param args\n     */\n    trackConnectionRestoringError(...args) {\n        try {\n            const event = createConnectionRestoringErrorEvent(this.version, ...args);\n            this.dispatchUserActionEvent(event);\n        }\n        catch (e) { }\n    }\n    /**\n     * Track disconnect event.\n     * @param args\n     */\n    trackDisconnection(...args) {\n        try {\n            const event = createDisconnectionEvent(this.version, ...args);\n            this.dispatchUserActionEvent(event);\n        }\n        catch (e) { }\n    }\n    /**\n     * Track transaction init event.\n     * @param args\n     */\n    trackTransactionSentForSignature(...args) {\n        try {\n            const event = createTransactionSentForSignatureEvent(this.version, ...args);\n            this.dispatchUserActionEvent(event);\n        }\n        catch (e) { }\n    }\n    /**\n     * Track transaction signed event.\n     * @param args\n     */\n    trackTransactionSigned(...args) {\n        try {\n            const event = createTransactionSignedEvent(this.version, ...args);\n            this.dispatchUserActionEvent(event);\n        }\n        catch (e) { }\n    }\n    /**\n     * Track transaction error event.\n     * @param args\n     */\n    trackTransactionSigningFailed(...args) {\n        try {\n            const event = createTransactionSigningFailedEvent(this.version, ...args);\n            this.dispatchUserActionEvent(event);\n        }\n        catch (e) { }\n    }\n}\n\nconst tonConnectSdkVersion = \"3.0.5\";\n\nclass TonConnect {\n    constructor(options) {\n        this.walletsList = new WalletsListManager();\n        this._wallet = null;\n        this.provider = null;\n        this.statusChangeSubscriptions = [];\n        this.statusChangeErrorSubscriptions = [];\n        this.dappSettings = {\n            manifestUrl: (options === null || options === void 0 ? void 0 : options.manifestUrl) || getWebPageManifest(),\n            storage: (options === null || options === void 0 ? void 0 : options.storage) || new DefaultStorage()\n        };\n        this.walletsList = new WalletsListManager({\n            walletsListSource: options === null || options === void 0 ? void 0 : options.walletsListSource,\n            cacheTTLMs: options === null || options === void 0 ? void 0 : options.walletsListCacheTTLMs\n        });\n        this.tracker = new TonConnectTracker({\n            eventDispatcher: options === null || options === void 0 ? void 0 : options.eventDispatcher,\n            tonConnectSdkVersion: tonConnectSdkVersion\n        });\n        if (!this.dappSettings.manifestUrl) {\n            throw new DappMetadataError('Dapp tonconnect-manifest.json must be specified if window.location.origin is undefined. See more https://github.com/ton-connect/docs/blob/main/requests-responses.md#app-manifest');\n        }\n        this.bridgeConnectionStorage = new BridgeConnectionStorage(this.dappSettings.storage);\n        if (!(options === null || options === void 0 ? void 0 : options.disableAutoPauseConnection)) {\n            this.addWindowFocusAndBlurSubscriptions();\n        }\n    }\n    /**\n     * Returns available wallets list.\n     */\n    static getWallets() {\n        return this.walletsList.getWallets();\n    }\n    /**\n     * Shows if the wallet is connected right now.\n     */\n    get connected() {\n        return this._wallet !== null;\n    }\n    /**\n     * Current connected account or null if no account is connected.\n     */\n    get account() {\n        var _a;\n        return ((_a = this._wallet) === null || _a === void 0 ? void 0 : _a.account) || null;\n    }\n    /**\n     * Current connected wallet or null if no account is connected.\n     */\n    get wallet() {\n        return this._wallet;\n    }\n    set wallet(value) {\n        this._wallet = value;\n        this.statusChangeSubscriptions.forEach(callback => callback(this._wallet));\n    }\n    /**\n     * Returns available wallets list.\n     */\n    getWallets() {\n        return this.walletsList.getWallets();\n    }\n    /**\n     * Allows to subscribe to connection status changes and handle connection errors.\n     * @param callback will be called after connections status changes with actual wallet or null.\n     * @param errorsHandler (optional) will be called with some instance of TonConnectError when connect error is received.\n     * @returns unsubscribe callback.\n     */\n    onStatusChange(callback, errorsHandler) {\n        this.statusChangeSubscriptions.push(callback);\n        if (errorsHandler) {\n            this.statusChangeErrorSubscriptions.push(errorsHandler);\n        }\n        return () => {\n            this.statusChangeSubscriptions = this.statusChangeSubscriptions.filter(item => item !== callback);\n            if (errorsHandler) {\n                this.statusChangeErrorSubscriptions = this.statusChangeErrorSubscriptions.filter(item => item !== errorsHandler);\n            }\n        };\n    }\n    connect(wallet, requestOrOptions) {\n        var _a, _b;\n        // TODO: remove deprecated method\n        const options = {};\n        if (typeof requestOrOptions === 'object' && 'tonProof' in requestOrOptions) {\n            options.request = requestOrOptions;\n        }\n        if (typeof requestOrOptions === 'object' &&\n            ('openingDeadlineMS' in requestOrOptions ||\n                'signal' in requestOrOptions ||\n                'request' in requestOrOptions)) {\n            options.request = requestOrOptions === null || requestOrOptions === void 0 ? void 0 : requestOrOptions.request;\n            options.openingDeadlineMS = requestOrOptions === null || requestOrOptions === void 0 ? void 0 : requestOrOptions.openingDeadlineMS;\n            options.signal = requestOrOptions === null || requestOrOptions === void 0 ? void 0 : requestOrOptions.signal;\n        }\n        if (this.connected) {\n            throw new WalletAlreadyConnectedError();\n        }\n        const abortController = createAbortController(options === null || options === void 0 ? void 0 : options.signal);\n        (_a = this.abortController) === null || _a === void 0 ? void 0 : _a.abort();\n        this.abortController = abortController;\n        if (abortController.signal.aborted) {\n            throw new TonConnectError('Connection was aborted');\n        }\n        (_b = this.provider) === null || _b === void 0 ? void 0 : _b.closeConnection();\n        this.provider = this.createProvider(wallet);\n        abortController.signal.addEventListener('abort', () => {\n            var _a;\n            (_a = this.provider) === null || _a === void 0 ? void 0 : _a.closeConnection();\n            this.provider = null;\n        });\n        this.tracker.trackConnectionStarted();\n        return this.provider.connect(this.createConnectRequest(options === null || options === void 0 ? void 0 : options.request), {\n            openingDeadlineMS: options === null || options === void 0 ? void 0 : options.openingDeadlineMS,\n            signal: abortController.signal\n        });\n    }\n    /**\n     * Try to restore existing session and reconnect to the corresponding wallet. Call it immediately when your app is loaded.\n     */\n    restoreConnection(options) {\n        var _a, _b;\n        return __awaiter(this, void 0, void 0, function* () {\n            this.tracker.trackConnectionRestoringStarted();\n            const abortController = createAbortController(options === null || options === void 0 ? void 0 : options.signal);\n            (_a = this.abortController) === null || _a === void 0 ? void 0 : _a.abort();\n            this.abortController = abortController;\n            if (abortController.signal.aborted) {\n                this.tracker.trackConnectionRestoringError('Connection restoring was aborted');\n                return;\n            }\n            // TODO: potentially race condition here\n            const [bridgeConnectionType, embeddedWallet] = yield Promise.all([\n                this.bridgeConnectionStorage.storedConnectionType(),\n                this.walletsList.getEmbeddedWallet()\n            ]);\n            if (abortController.signal.aborted) {\n                this.tracker.trackConnectionRestoringError('Connection restoring was aborted');\n                return;\n            }\n            let provider = null;\n            try {\n                switch (bridgeConnectionType) {\n                    case 'http':\n                        provider = yield BridgeProvider.fromStorage(this.dappSettings.storage);\n                        break;\n                    case 'injected':\n                        provider = yield InjectedProvider.fromStorage(this.dappSettings.storage);\n                        break;\n                    default:\n                        if (embeddedWallet) {\n                            provider = this.createProvider(embeddedWallet);\n                        }\n                        else {\n                            return;\n                        }\n                }\n            }\n            catch (_c) {\n                this.tracker.trackConnectionRestoringError('Provider is not restored');\n                yield this.bridgeConnectionStorage.removeConnection();\n                provider === null || provider === void 0 ? void 0 : provider.closeConnection();\n                provider = null;\n                return;\n            }\n            if (abortController.signal.aborted) {\n                provider === null || provider === void 0 ? void 0 : provider.closeConnection();\n                this.tracker.trackConnectionRestoringError('Connection restoring was aborted');\n                return;\n            }\n            if (!provider) {\n                logError('Provider is not restored');\n                this.tracker.trackConnectionRestoringError('Provider is not restored');\n                return;\n            }\n            (_b = this.provider) === null || _b === void 0 ? void 0 : _b.closeConnection();\n            this.provider = provider;\n            provider.listen(this.walletEventsListener.bind(this));\n            const onAbortRestore = () => {\n                this.tracker.trackConnectionRestoringError('Connection restoring was aborted');\n                provider === null || provider === void 0 ? void 0 : provider.closeConnection();\n                provider = null;\n            };\n            abortController.signal.addEventListener('abort', onAbortRestore);\n            const restoreConnectionTask = callForSuccess((_options) => __awaiter(this, void 0, void 0, function* () {\n                yield (provider === null || provider === void 0 ? void 0 : provider.restoreConnection({\n                    openingDeadlineMS: options === null || options === void 0 ? void 0 : options.openingDeadlineMS,\n                    signal: _options.signal\n                }));\n                abortController.signal.removeEventListener('abort', onAbortRestore);\n                if (this.connected) {\n                    this.tracker.trackConnectionRestoringCompleted(this.wallet);\n                }\n                else {\n                    this.tracker.trackConnectionRestoringError('Connection restoring failed');\n                }\n            }), {\n                attempts: Number.MAX_SAFE_INTEGER,\n                delayMs: 2000,\n                signal: options === null || options === void 0 ? void 0 : options.signal\n            });\n            const restoreConnectionTimeout = new Promise(resolve => setTimeout(() => resolve(), 12000) // connection deadline\n            );\n            return Promise.race([restoreConnectionTask, restoreConnectionTimeout]);\n        });\n    }\n    sendTransaction(transaction, optionsOrOnRequestSent) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // TODO: remove deprecated method\n            const options = {};\n            if (typeof optionsOrOnRequestSent === 'function') {\n                options.onRequestSent = optionsOrOnRequestSent;\n            }\n            else {\n                options.onRequestSent = optionsOrOnRequestSent === null || optionsOrOnRequestSent === void 0 ? void 0 : optionsOrOnRequestSent.onRequestSent;\n                options.signal = optionsOrOnRequestSent === null || optionsOrOnRequestSent === void 0 ? void 0 : optionsOrOnRequestSent.signal;\n            }\n            const abortController = createAbortController(options === null || options === void 0 ? void 0 : options.signal);\n            if (abortController.signal.aborted) {\n                throw new TonConnectError('Transaction sending was aborted');\n            }\n            this.checkConnection();\n            checkSendTransactionSupport(this.wallet.device.features, {\n                requiredMessagesNumber: transaction.messages.length\n            });\n            this.tracker.trackTransactionSentForSignature(this.wallet, transaction);\n            const { validUntil } = transaction, tx = __rest(transaction, [\"validUntil\"]);\n            const from = transaction.from || this.account.address;\n            const network = transaction.network || this.account.chain;\n            const response = yield this.provider.sendRequest(sendTransactionParser.convertToRpcRequest(Object.assign(Object.assign({}, tx), { valid_until: validUntil, from,\n                network })), { onRequestSent: options.onRequestSent, signal: abortController.signal });\n            if (sendTransactionParser.isError(response)) {\n                this.tracker.trackTransactionSigningFailed(this.wallet, transaction, response.error.message, response.error.code);\n                return sendTransactionParser.parseAndThrowError(response);\n            }\n            const result = sendTransactionParser.convertFromRpcResponse(response);\n            this.tracker.trackTransactionSigned(this.wallet, transaction, result);\n            return result;\n        });\n    }\n    /**\n     * Disconnect form thw connected wallet and drop current session.\n     */\n    disconnect(options) {\n        var _a;\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.connected) {\n                throw new WalletNotConnectedError();\n            }\n            const abortController = createAbortController(options === null || options === void 0 ? void 0 : options.signal);\n            const prevAbortController = this.abortController;\n            this.abortController = abortController;\n            if (abortController.signal.aborted) {\n                throw new TonConnectError('Disconnect was aborted');\n            }\n            this.onWalletDisconnected('dapp');\n            yield ((_a = this.provider) === null || _a === void 0 ? void 0 : _a.disconnect({\n                signal: abortController.signal\n            }));\n            prevAbortController === null || prevAbortController === void 0 ? void 0 : prevAbortController.abort();\n        });\n    }\n    /**\n     * Pause bridge HTTP connection. Might be helpful, if you want to pause connections while browser tab is unfocused,\n     * or if you use SDK with NodeJS and want to save server resources.\n     */\n    pauseConnection() {\n        var _a;\n        if (((_a = this.provider) === null || _a === void 0 ? void 0 : _a.type) !== 'http') {\n            return;\n        }\n        this.provider.pause();\n    }\n    /**\n     * Unpause bridge HTTP connection if it is paused.\n     */\n    unPauseConnection() {\n        var _a;\n        if (((_a = this.provider) === null || _a === void 0 ? void 0 : _a.type) !== 'http') {\n            return Promise.resolve();\n        }\n        return this.provider.unPause();\n    }\n    addWindowFocusAndBlurSubscriptions() {\n        const document = getDocument();\n        if (!document) {\n            return;\n        }\n        try {\n            document.addEventListener('visibilitychange', () => {\n                if (document.hidden) {\n                    this.pauseConnection();\n                }\n                else {\n                    this.unPauseConnection().catch();\n                }\n            });\n        }\n        catch (e) {\n            logError('Cannot subscribe to the document.visibilitychange: ', e);\n        }\n    }\n    createProvider(wallet) {\n        let provider;\n        if (!Array.isArray(wallet) && isWalletConnectionSourceJS(wallet)) {\n            provider = new InjectedProvider(this.dappSettings.storage, wallet.jsBridgeKey);\n        }\n        else {\n            provider = new BridgeProvider(this.dappSettings.storage, wallet);\n        }\n        provider.listen(this.walletEventsListener.bind(this));\n        return provider;\n    }\n    walletEventsListener(e) {\n        switch (e.event) {\n            case 'connect':\n                this.onWalletConnected(e.payload);\n                break;\n            case 'connect_error':\n                this.onWalletConnectError(e.payload);\n                break;\n            case 'disconnect':\n                this.onWalletDisconnected('wallet');\n        }\n    }\n    onWalletConnected(connectEvent) {\n        const tonAccountItem = connectEvent.items.find(item => item.name === 'ton_addr');\n        const tonProofItem = connectEvent.items.find(item => item.name === 'ton_proof');\n        if (!tonAccountItem) {\n            throw new TonConnectError('ton_addr connection item was not found');\n        }\n        const wallet = {\n            device: connectEvent.device,\n            provider: this.provider.type,\n            account: {\n                address: tonAccountItem.address,\n                chain: tonAccountItem.network,\n                walletStateInit: tonAccountItem.walletStateInit,\n                publicKey: tonAccountItem.publicKey\n            }\n        };\n        if (tonProofItem) {\n            wallet.connectItems = {\n                tonProof: tonProofItem\n            };\n        }\n        this.wallet = wallet;\n        this.tracker.trackConnectionCompleted(wallet);\n    }\n    onWalletConnectError(connectEventError) {\n        const error = connectErrorsParser.parseError(connectEventError);\n        this.statusChangeErrorSubscriptions.forEach(errorsHandler => errorsHandler(error));\n        logDebug(error);\n        this.tracker.trackConnectionError(connectEventError.message, connectEventError.code);\n        if (error instanceof ManifestNotFoundError || error instanceof ManifestContentErrorError) {\n            logError(error);\n            throw error;\n        }\n    }\n    onWalletDisconnected(scope) {\n        this.tracker.trackDisconnection(this.wallet, scope);\n        this.wallet = null;\n    }\n    checkConnection() {\n        if (!this.connected) {\n            throw new WalletNotConnectedError();\n        }\n    }\n    createConnectRequest(request) {\n        const items = [\n            {\n                name: 'ton_addr'\n            }\n        ];\n        if (request === null || request === void 0 ? void 0 : request.tonProof) {\n            items.push({\n                name: 'ton_proof',\n                payload: request.tonProof\n            });\n        }\n        return {\n            manifestUrl: this.dappSettings.manifestUrl,\n            items\n        };\n    }\n}\nTonConnect.walletsList = new WalletsListManager();\n/**\n * Check if specified wallet is injected and available to use with the app.\n * @param walletJSKey target wallet's js bridge key.\n */\nTonConnect.isWalletInjected = (walletJSKey) => InjectedProvider.isWalletInjected(walletJSKey);\n/**\n * Check if the app is opened inside specified wallet's browser.\n * @param walletJSKey target wallet's js bridge key.\n */\nTonConnect.isInsideWalletBrowser = (walletJSKey) => InjectedProvider.isInsideWalletBrowser(walletJSKey);\n\nconst noBounceableTag = 0x51;\nconst testOnlyTag = 0x80;\n/**\n * Converts raw TON address to no-bounceable user-friendly format. [See details]{@link https://ton.org/docs/learn/overviews/addresses#user-friendly-address}\n * @param hexAddress raw TON address formatted as \"0:<hex string without 0x>\".\n * @param [testOnly=false] convert address to test-only form. [See details]{@link https://ton.org/docs/learn/overviews/addresses#user-friendly-address}\n */\nfunction toUserFriendlyAddress(hexAddress, testOnly = false) {\n    const { wc, hex } = parseHexAddress(hexAddress);\n    let tag = noBounceableTag;\n    if (testOnly) {\n        tag |= testOnlyTag;\n    }\n    const addr = new Int8Array(34);\n    addr[0] = tag;\n    addr[1] = wc;\n    addr.set(hex, 2);\n    const addressWithChecksum = new Uint8Array(36);\n    addressWithChecksum.set(addr);\n    addressWithChecksum.set(crc16(addr), 34);\n    let addressBase64 = _tonconnect_protocol__WEBPACK_IMPORTED_MODULE_0__.Base64.encode(addressWithChecksum);\n    return addressBase64.replace(/\\+/g, '-').replace(/\\//g, '_');\n}\nfunction parseHexAddress(hexAddress) {\n    if (!hexAddress.includes(':')) {\n        throw new WrongAddressError(`Wrong address ${hexAddress}. Address must include \":\".`);\n    }\n    const parts = hexAddress.split(':');\n    if (parts.length !== 2) {\n        throw new WrongAddressError(`Wrong address ${hexAddress}. Address must include \":\" only once.`);\n    }\n    const wc = parseInt(parts[0]);\n    if (wc !== 0 && wc !== -1) {\n        throw new WrongAddressError(`Wrong address ${hexAddress}. WC must be eq 0 or -1, but ${wc} received.`);\n    }\n    const hex = parts[1];\n    if ((hex === null || hex === void 0 ? void 0 : hex.length) !== 64) {\n        throw new WrongAddressError(`Wrong address ${hexAddress}. Hex part must be 64bytes length, but ${hex === null || hex === void 0 ? void 0 : hex.length} received.`);\n    }\n    return {\n        wc,\n        hex: hexToBytes(hex)\n    };\n}\nfunction crc16(data) {\n    const poly = 0x1021;\n    let reg = 0;\n    const message = new Uint8Array(data.length + 2);\n    message.set(data);\n    for (let byte of message) {\n        let mask = 0x80;\n        while (mask > 0) {\n            reg <<= 1;\n            if (byte & mask) {\n                reg += 1;\n            }\n            mask >>= 1;\n            if (reg > 0xffff) {\n                reg &= 0xffff;\n                reg ^= poly;\n            }\n        }\n    }\n    return new Uint8Array([Math.floor(reg / 256), reg % 256]);\n}\nconst toByteMap = {};\nfor (let ord = 0; ord <= 0xff; ord++) {\n    let s = ord.toString(16);\n    if (s.length < 2) {\n        s = '0' + s;\n    }\n    toByteMap[s] = ord;\n}\nfunction hexToBytes(hex) {\n    hex = hex.toLowerCase();\n    const length2 = hex.length;\n    if (length2 % 2 !== 0) {\n        throw new ParseHexError('Hex string must have length a multiple of 2: ' + hex);\n    }\n    const length = length2 / 2;\n    const result = new Uint8Array(length);\n    for (let i = 0; i < length; i++) {\n        const doubled = i * 2;\n        const hexSubstring = hex.substring(doubled, doubled + 2);\n        if (!toByteMap.hasOwnProperty(hexSubstring)) {\n            throw new ParseHexError('Invalid hex character: ' + hexSubstring);\n        }\n        result[i] = toByteMap[hexSubstring];\n    }\n    return result;\n}\n\n\n//# sourceMappingURL=index.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@tonconnect/sdk/lib/esm/index.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@tonconnect/ui-react/lib/index.mjs":
/*!*********************************************************!*\
  !*** ./node_modules/@tonconnect/ui-react/lib/index.mjs ***!
  \*********************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   BadRequestError: function() { return /* reexport safe */ _tonconnect_ui__WEBPACK_IMPORTED_MODULE_1__.BadRequestError; },\n/* harmony export */   BrowserEventDispatcher: function() { return /* reexport safe */ _tonconnect_ui__WEBPACK_IMPORTED_MODULE_1__.BrowserEventDispatcher; },\n/* harmony export */   CHAIN: function() { return /* reexport safe */ _tonconnect_ui__WEBPACK_IMPORTED_MODULE_1__.CHAIN; },\n/* harmony export */   CONNECT_EVENT_ERROR_CODES: function() { return /* reexport safe */ _tonconnect_ui__WEBPACK_IMPORTED_MODULE_1__.CONNECT_EVENT_ERROR_CODES; },\n/* harmony export */   CONNECT_ITEM_ERROR_CODES: function() { return /* reexport safe */ _tonconnect_ui__WEBPACK_IMPORTED_MODULE_1__.CONNECT_ITEM_ERROR_CODES; },\n/* harmony export */   FetchWalletsError: function() { return /* reexport safe */ _tonconnect_ui__WEBPACK_IMPORTED_MODULE_1__.FetchWalletsError; },\n/* harmony export */   LocalstorageNotFoundError: function() { return /* reexport safe */ _tonconnect_ui__WEBPACK_IMPORTED_MODULE_1__.LocalstorageNotFoundError; },\n/* harmony export */   ParseHexError: function() { return /* reexport safe */ _tonconnect_ui__WEBPACK_IMPORTED_MODULE_1__.ParseHexError; },\n/* harmony export */   SEND_TRANSACTION_ERROR_CODES: function() { return /* reexport safe */ _tonconnect_ui__WEBPACK_IMPORTED_MODULE_1__.SEND_TRANSACTION_ERROR_CODES; },\n/* harmony export */   THEME: function() { return /* reexport safe */ _tonconnect_ui__WEBPACK_IMPORTED_MODULE_1__.THEME; },\n/* harmony export */   TonConnect: function() { return /* reexport safe */ _tonconnect_ui__WEBPACK_IMPORTED_MODULE_1__.TonConnect; },\n/* harmony export */   TonConnectButton: function() { return /* binding */ TonConnectButton$1; },\n/* harmony export */   TonConnectError: function() { return /* reexport safe */ _tonconnect_ui__WEBPACK_IMPORTED_MODULE_1__.TonConnectError; },\n/* harmony export */   TonConnectProviderNotSetError: function() { return /* binding */ TonConnectProviderNotSetError; },\n/* harmony export */   TonConnectUI: function() { return /* reexport safe */ _tonconnect_ui__WEBPACK_IMPORTED_MODULE_1__.TonConnectUI; },\n/* harmony export */   TonConnectUIContext: function() { return /* binding */ TonConnectUIContext; },\n/* harmony export */   TonConnectUIError: function() { return /* reexport safe */ _tonconnect_ui__WEBPACK_IMPORTED_MODULE_1__.TonConnectUIError; },\n/* harmony export */   TonConnectUIProvider: function() { return /* binding */ TonConnectUIProvider$1; },\n/* harmony export */   TonConnectUIReactError: function() { return /* binding */ TonConnectUIReactError; },\n/* harmony export */   UnknownAppError: function() { return /* reexport safe */ _tonconnect_ui__WEBPACK_IMPORTED_MODULE_1__.UnknownAppError; },\n/* harmony export */   UnknownError: function() { return /* reexport safe */ _tonconnect_ui__WEBPACK_IMPORTED_MODULE_1__.UnknownError; },\n/* harmony export */   UserRejectsError: function() { return /* reexport safe */ _tonconnect_ui__WEBPACK_IMPORTED_MODULE_1__.UserRejectsError; },\n/* harmony export */   WalletAlreadyConnectedError: function() { return /* reexport safe */ _tonconnect_ui__WEBPACK_IMPORTED_MODULE_1__.WalletAlreadyConnectedError; },\n/* harmony export */   WalletNotConnectedError: function() { return /* reexport safe */ _tonconnect_ui__WEBPACK_IMPORTED_MODULE_1__.WalletNotConnectedError; },\n/* harmony export */   WalletNotInjectedError: function() { return /* reexport safe */ _tonconnect_ui__WEBPACK_IMPORTED_MODULE_1__.WalletNotInjectedError; },\n/* harmony export */   WalletsListManager: function() { return /* reexport safe */ _tonconnect_ui__WEBPACK_IMPORTED_MODULE_1__.WalletsListManager; },\n/* harmony export */   WrongAddressError: function() { return /* reexport safe */ _tonconnect_ui__WEBPACK_IMPORTED_MODULE_1__.WrongAddressError; },\n/* harmony export */   createConnectionCompletedEvent: function() { return /* reexport safe */ _tonconnect_ui__WEBPACK_IMPORTED_MODULE_1__.createConnectionCompletedEvent; },\n/* harmony export */   createConnectionErrorEvent: function() { return /* reexport safe */ _tonconnect_ui__WEBPACK_IMPORTED_MODULE_1__.createConnectionErrorEvent; },\n/* harmony export */   createConnectionRestoringCompletedEvent: function() { return /* reexport safe */ _tonconnect_ui__WEBPACK_IMPORTED_MODULE_1__.createConnectionRestoringCompletedEvent; },\n/* harmony export */   createConnectionRestoringErrorEvent: function() { return /* reexport safe */ _tonconnect_ui__WEBPACK_IMPORTED_MODULE_1__.createConnectionRestoringErrorEvent; },\n/* harmony export */   createConnectionRestoringStartedEvent: function() { return /* reexport safe */ _tonconnect_ui__WEBPACK_IMPORTED_MODULE_1__.createConnectionRestoringStartedEvent; },\n/* harmony export */   createConnectionStartedEvent: function() { return /* reexport safe */ _tonconnect_ui__WEBPACK_IMPORTED_MODULE_1__.createConnectionStartedEvent; },\n/* harmony export */   createDisconnectionEvent: function() { return /* reexport safe */ _tonconnect_ui__WEBPACK_IMPORTED_MODULE_1__.createDisconnectionEvent; },\n/* harmony export */   createRequestVersionEvent: function() { return /* reexport safe */ _tonconnect_ui__WEBPACK_IMPORTED_MODULE_1__.createRequestVersionEvent; },\n/* harmony export */   createResponseVersionEvent: function() { return /* reexport safe */ _tonconnect_ui__WEBPACK_IMPORTED_MODULE_1__.createResponseVersionEvent; },\n/* harmony export */   createTransactionSentForSignatureEvent: function() { return /* reexport safe */ _tonconnect_ui__WEBPACK_IMPORTED_MODULE_1__.createTransactionSentForSignatureEvent; },\n/* harmony export */   createTransactionSignedEvent: function() { return /* reexport safe */ _tonconnect_ui__WEBPACK_IMPORTED_MODULE_1__.createTransactionSignedEvent; },\n/* harmony export */   createTransactionSigningFailedEvent: function() { return /* reexport safe */ _tonconnect_ui__WEBPACK_IMPORTED_MODULE_1__.createTransactionSigningFailedEvent; },\n/* harmony export */   createVersionInfo: function() { return /* reexport safe */ _tonconnect_ui__WEBPACK_IMPORTED_MODULE_1__.createVersionInfo; },\n/* harmony export */   encodeTelegramUrlParameters: function() { return /* reexport safe */ _tonconnect_ui__WEBPACK_IMPORTED_MODULE_1__.encodeTelegramUrlParameters; },\n/* harmony export */   isTelegramUrl: function() { return /* reexport safe */ _tonconnect_ui__WEBPACK_IMPORTED_MODULE_1__.isTelegramUrl; },\n/* harmony export */   isWalletInfoCurrentlyEmbedded: function() { return /* reexport safe */ _tonconnect_ui__WEBPACK_IMPORTED_MODULE_1__.isWalletInfoCurrentlyEmbedded; },\n/* harmony export */   isWalletInfoCurrentlyInjected: function() { return /* reexport safe */ _tonconnect_ui__WEBPACK_IMPORTED_MODULE_1__.isWalletInfoCurrentlyInjected; },\n/* harmony export */   isWalletInfoInjectable: function() { return /* reexport safe */ _tonconnect_ui__WEBPACK_IMPORTED_MODULE_1__.isWalletInfoInjectable; },\n/* harmony export */   isWalletInfoInjected: function() { return /* reexport safe */ _tonconnect_ui__WEBPACK_IMPORTED_MODULE_1__.isWalletInfoInjected; },\n/* harmony export */   isWalletInfoRemote: function() { return /* reexport safe */ _tonconnect_ui__WEBPACK_IMPORTED_MODULE_1__.isWalletInfoRemote; },\n/* harmony export */   toUserFriendlyAddress: function() { return /* reexport safe */ _tonconnect_ui__WEBPACK_IMPORTED_MODULE_1__.toUserFriendlyAddress; },\n/* harmony export */   useIsConnectionRestored: function() { return /* binding */ useIsConnectionRestored; },\n/* harmony export */   useTonAddress: function() { return /* binding */ useTonAddress; },\n/* harmony export */   useTonConnectModal: function() { return /* binding */ useTonConnectModal; },\n/* harmony export */   useTonConnectUI: function() { return /* binding */ useTonConnectUI; },\n/* harmony export */   useTonWallet: function() { return /* binding */ useTonWallet; }\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var _tonconnect_ui__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @tonconnect/ui */ \"(app-pages-browser)/./node_modules/@tonconnect/ui/lib/index.mjs\");\nvar __defProp = Object.defineProperty;\nvar __getOwnPropSymbols = Object.getOwnPropertySymbols;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __spreadValues = (a, b) => {\n  for (var prop in b || (b = {}))\n    if (__hasOwnProp.call(b, prop))\n      __defNormalProp(a, prop, b[prop]);\n  if (__getOwnPropSymbols)\n    for (var prop of __getOwnPropSymbols(b)) {\n      if (__propIsEnum.call(b, prop))\n        __defNormalProp(a, prop, b[prop]);\n    }\n  return a;\n};\nvar __objRest = (source, exclude) => {\n  var target = {};\n  for (var prop in source)\n    if (__hasOwnProp.call(source, prop) && exclude.indexOf(prop) < 0)\n      target[prop] = source[prop];\n  if (source != null && __getOwnPropSymbols)\n    for (var prop of __getOwnPropSymbols(source)) {\n      if (exclude.indexOf(prop) < 0 && __propIsEnum.call(source, prop))\n        target[prop] = source[prop];\n    }\n  return target;\n};\n\n\n\nvar jsxRuntime = { exports: {} };\nvar reactJsxRuntime_production_min = {};\n/**\n * @license React\n * react-jsx-runtime.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nvar hasRequiredReactJsxRuntime_production_min;\nfunction requireReactJsxRuntime_production_min() {\n  if (hasRequiredReactJsxRuntime_production_min)\n    return reactJsxRuntime_production_min;\n  hasRequiredReactJsxRuntime_production_min = 1;\n  var f = react__WEBPACK_IMPORTED_MODULE_0__, k = Symbol.for(\"react.element\"), l = Symbol.for(\"react.fragment\"), m = Object.prototype.hasOwnProperty, n = f.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner, p = { key: true, ref: true, __self: true, __source: true };\n  function q(c, a, g) {\n    var b, d = {}, e = null, h = null;\n    void 0 !== g && (e = \"\" + g);\n    void 0 !== a.key && (e = \"\" + a.key);\n    void 0 !== a.ref && (h = a.ref);\n    for (b in a)\n      m.call(a, b) && !p.hasOwnProperty(b) && (d[b] = a[b]);\n    if (c && c.defaultProps)\n      for (b in a = c.defaultProps, a)\n        void 0 === d[b] && (d[b] = a[b]);\n    return { $$typeof: k, type: c, key: e, ref: h, props: d, _owner: n.current };\n  }\n  reactJsxRuntime_production_min.Fragment = l;\n  reactJsxRuntime_production_min.jsx = q;\n  reactJsxRuntime_production_min.jsxs = q;\n  return reactJsxRuntime_production_min;\n}\nvar reactJsxRuntime_development = {};\n/**\n * @license React\n * react-jsx-runtime.development.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nvar hasRequiredReactJsxRuntime_development;\nfunction requireReactJsxRuntime_development() {\n  if (hasRequiredReactJsxRuntime_development)\n    return reactJsxRuntime_development;\n  hasRequiredReactJsxRuntime_development = 1;\n  if (true) {\n    (function() {\n      var React = react__WEBPACK_IMPORTED_MODULE_0__;\n      var REACT_ELEMENT_TYPE = Symbol.for(\"react.element\");\n      var REACT_PORTAL_TYPE = Symbol.for(\"react.portal\");\n      var REACT_FRAGMENT_TYPE = Symbol.for(\"react.fragment\");\n      var REACT_STRICT_MODE_TYPE = Symbol.for(\"react.strict_mode\");\n      var REACT_PROFILER_TYPE = Symbol.for(\"react.profiler\");\n      var REACT_PROVIDER_TYPE = Symbol.for(\"react.provider\");\n      var REACT_CONTEXT_TYPE = Symbol.for(\"react.context\");\n      var REACT_FORWARD_REF_TYPE = Symbol.for(\"react.forward_ref\");\n      var REACT_SUSPENSE_TYPE = Symbol.for(\"react.suspense\");\n      var REACT_SUSPENSE_LIST_TYPE = Symbol.for(\"react.suspense_list\");\n      var REACT_MEMO_TYPE = Symbol.for(\"react.memo\");\n      var REACT_LAZY_TYPE = Symbol.for(\"react.lazy\");\n      var REACT_OFFSCREEN_TYPE = Symbol.for(\"react.offscreen\");\n      var MAYBE_ITERATOR_SYMBOL = Symbol.iterator;\n      var FAUX_ITERATOR_SYMBOL = \"@@iterator\";\n      function getIteratorFn(maybeIterable) {\n        if (maybeIterable === null || typeof maybeIterable !== \"object\") {\n          return null;\n        }\n        var maybeIterator = MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL];\n        if (typeof maybeIterator === \"function\") {\n          return maybeIterator;\n        }\n        return null;\n      }\n      var ReactSharedInternals = React.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\n      function error(format) {\n        {\n          {\n            for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n              args[_key2 - 1] = arguments[_key2];\n            }\n            printWarning(\"error\", format, args);\n          }\n        }\n      }\n      function printWarning(level, format, args) {\n        {\n          var ReactDebugCurrentFrame2 = ReactSharedInternals.ReactDebugCurrentFrame;\n          var stack = ReactDebugCurrentFrame2.getStackAddendum();\n          if (stack !== \"\") {\n            format += \"%s\";\n            args = args.concat([stack]);\n          }\n          var argsWithFormat = args.map(function(item) {\n            return String(item);\n          });\n          argsWithFormat.unshift(\"Warning: \" + format);\n          Function.prototype.apply.call(console[level], console, argsWithFormat);\n        }\n      }\n      var enableScopeAPI = false;\n      var enableCacheElement = false;\n      var enableTransitionTracing = false;\n      var enableLegacyHidden = false;\n      var enableDebugTracing = false;\n      var REACT_MODULE_REFERENCE;\n      {\n        REACT_MODULE_REFERENCE = Symbol.for(\"react.module.reference\");\n      }\n      function isValidElementType(type) {\n        if (typeof type === \"string\" || typeof type === \"function\") {\n          return true;\n        }\n        if (type === REACT_FRAGMENT_TYPE || type === REACT_PROFILER_TYPE || enableDebugTracing || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || enableLegacyHidden || type === REACT_OFFSCREEN_TYPE || enableScopeAPI || enableCacheElement || enableTransitionTracing) {\n          return true;\n        }\n        if (typeof type === \"object\" && type !== null) {\n          if (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE || type.$$typeof === REACT_MODULE_REFERENCE || type.getModuleId !== void 0) {\n            return true;\n          }\n        }\n        return false;\n      }\n      function getWrappedName(outerType, innerType, wrapperName) {\n        var displayName = outerType.displayName;\n        if (displayName) {\n          return displayName;\n        }\n        var functionName = innerType.displayName || innerType.name || \"\";\n        return functionName !== \"\" ? wrapperName + \"(\" + functionName + \")\" : wrapperName;\n      }\n      function getContextName(type) {\n        return type.displayName || \"Context\";\n      }\n      function getComponentNameFromType(type) {\n        if (type == null) {\n          return null;\n        }\n        {\n          if (typeof type.tag === \"number\") {\n            error(\"Received an unexpected object in getComponentNameFromType(). This is likely a bug in React. Please file an issue.\");\n          }\n        }\n        if (typeof type === \"function\") {\n          return type.displayName || type.name || null;\n        }\n        if (typeof type === \"string\") {\n          return type;\n        }\n        switch (type) {\n          case REACT_FRAGMENT_TYPE:\n            return \"Fragment\";\n          case REACT_PORTAL_TYPE:\n            return \"Portal\";\n          case REACT_PROFILER_TYPE:\n            return \"Profiler\";\n          case REACT_STRICT_MODE_TYPE:\n            return \"StrictMode\";\n          case REACT_SUSPENSE_TYPE:\n            return \"Suspense\";\n          case REACT_SUSPENSE_LIST_TYPE:\n            return \"SuspenseList\";\n        }\n        if (typeof type === \"object\") {\n          switch (type.$$typeof) {\n            case REACT_CONTEXT_TYPE:\n              var context = type;\n              return getContextName(context) + \".Consumer\";\n            case REACT_PROVIDER_TYPE:\n              var provider = type;\n              return getContextName(provider._context) + \".Provider\";\n            case REACT_FORWARD_REF_TYPE:\n              return getWrappedName(type, type.render, \"ForwardRef\");\n            case REACT_MEMO_TYPE:\n              var outerName = type.displayName || null;\n              if (outerName !== null) {\n                return outerName;\n              }\n              return getComponentNameFromType(type.type) || \"Memo\";\n            case REACT_LAZY_TYPE: {\n              var lazyComponent = type;\n              var payload = lazyComponent._payload;\n              var init = lazyComponent._init;\n              try {\n                return getComponentNameFromType(init(payload));\n              } catch (x) {\n                return null;\n              }\n            }\n          }\n        }\n        return null;\n      }\n      var assign = Object.assign;\n      var disabledDepth = 0;\n      var prevLog;\n      var prevInfo;\n      var prevWarn;\n      var prevError;\n      var prevGroup;\n      var prevGroupCollapsed;\n      var prevGroupEnd;\n      function disabledLog() {\n      }\n      disabledLog.__reactDisabledLog = true;\n      function disableLogs() {\n        {\n          if (disabledDepth === 0) {\n            prevLog = console.log;\n            prevInfo = console.info;\n            prevWarn = console.warn;\n            prevError = console.error;\n            prevGroup = console.group;\n            prevGroupCollapsed = console.groupCollapsed;\n            prevGroupEnd = console.groupEnd;\n            var props = {\n              configurable: true,\n              enumerable: true,\n              value: disabledLog,\n              writable: true\n            };\n            Object.defineProperties(console, {\n              info: props,\n              log: props,\n              warn: props,\n              error: props,\n              group: props,\n              groupCollapsed: props,\n              groupEnd: props\n            });\n          }\n          disabledDepth++;\n        }\n      }\n      function reenableLogs() {\n        {\n          disabledDepth--;\n          if (disabledDepth === 0) {\n            var props = {\n              configurable: true,\n              enumerable: true,\n              writable: true\n            };\n            Object.defineProperties(console, {\n              log: assign({}, props, {\n                value: prevLog\n              }),\n              info: assign({}, props, {\n                value: prevInfo\n              }),\n              warn: assign({}, props, {\n                value: prevWarn\n              }),\n              error: assign({}, props, {\n                value: prevError\n              }),\n              group: assign({}, props, {\n                value: prevGroup\n              }),\n              groupCollapsed: assign({}, props, {\n                value: prevGroupCollapsed\n              }),\n              groupEnd: assign({}, props, {\n                value: prevGroupEnd\n              })\n            });\n          }\n          if (disabledDepth < 0) {\n            error(\"disabledDepth fell below zero. This is a bug in React. Please file an issue.\");\n          }\n        }\n      }\n      var ReactCurrentDispatcher = ReactSharedInternals.ReactCurrentDispatcher;\n      var prefix;\n      function describeBuiltInComponentFrame(name, source, ownerFn) {\n        {\n          if (prefix === void 0) {\n            try {\n              throw Error();\n            } catch (x) {\n              var match = x.stack.trim().match(/\\n( *(at )?)/);\n              prefix = match && match[1] || \"\";\n            }\n          }\n          return \"\\n\" + prefix + name;\n        }\n      }\n      var reentry = false;\n      var componentFrameCache;\n      {\n        var PossiblyWeakMap = typeof WeakMap === \"function\" ? WeakMap : Map;\n        componentFrameCache = new PossiblyWeakMap();\n      }\n      function describeNativeComponentFrame(fn, construct) {\n        if (!fn || reentry) {\n          return \"\";\n        }\n        {\n          var frame = componentFrameCache.get(fn);\n          if (frame !== void 0) {\n            return frame;\n          }\n        }\n        var control;\n        reentry = true;\n        var previousPrepareStackTrace = Error.prepareStackTrace;\n        Error.prepareStackTrace = void 0;\n        var previousDispatcher;\n        {\n          previousDispatcher = ReactCurrentDispatcher.current;\n          ReactCurrentDispatcher.current = null;\n          disableLogs();\n        }\n        try {\n          if (construct) {\n            var Fake = function() {\n              throw Error();\n            };\n            Object.defineProperty(Fake.prototype, \"props\", {\n              set: function() {\n                throw Error();\n              }\n            });\n            if (typeof Reflect === \"object\" && Reflect.construct) {\n              try {\n                Reflect.construct(Fake, []);\n              } catch (x) {\n                control = x;\n              }\n              Reflect.construct(fn, [], Fake);\n            } else {\n              try {\n                Fake.call();\n              } catch (x) {\n                control = x;\n              }\n              fn.call(Fake.prototype);\n            }\n          } else {\n            try {\n              throw Error();\n            } catch (x) {\n              control = x;\n            }\n            fn();\n          }\n        } catch (sample) {\n          if (sample && control && typeof sample.stack === \"string\") {\n            var sampleLines = sample.stack.split(\"\\n\");\n            var controlLines = control.stack.split(\"\\n\");\n            var s = sampleLines.length - 1;\n            var c = controlLines.length - 1;\n            while (s >= 1 && c >= 0 && sampleLines[s] !== controlLines[c]) {\n              c--;\n            }\n            for (; s >= 1 && c >= 0; s--, c--) {\n              if (sampleLines[s] !== controlLines[c]) {\n                if (s !== 1 || c !== 1) {\n                  do {\n                    s--;\n                    c--;\n                    if (c < 0 || sampleLines[s] !== controlLines[c]) {\n                      var _frame = \"\\n\" + sampleLines[s].replace(\" at new \", \" at \");\n                      if (fn.displayName && _frame.includes(\"<anonymous>\")) {\n                        _frame = _frame.replace(\"<anonymous>\", fn.displayName);\n                      }\n                      {\n                        if (typeof fn === \"function\") {\n                          componentFrameCache.set(fn, _frame);\n                        }\n                      }\n                      return _frame;\n                    }\n                  } while (s >= 1 && c >= 0);\n                }\n                break;\n              }\n            }\n          }\n        } finally {\n          reentry = false;\n          {\n            ReactCurrentDispatcher.current = previousDispatcher;\n            reenableLogs();\n          }\n          Error.prepareStackTrace = previousPrepareStackTrace;\n        }\n        var name = fn ? fn.displayName || fn.name : \"\";\n        var syntheticFrame = name ? describeBuiltInComponentFrame(name) : \"\";\n        {\n          if (typeof fn === \"function\") {\n            componentFrameCache.set(fn, syntheticFrame);\n          }\n        }\n        return syntheticFrame;\n      }\n      function describeFunctionComponentFrame(fn, source, ownerFn) {\n        {\n          return describeNativeComponentFrame(fn, false);\n        }\n      }\n      function shouldConstruct(Component) {\n        var prototype = Component.prototype;\n        return !!(prototype && prototype.isReactComponent);\n      }\n      function describeUnknownElementTypeFrameInDEV(type, source, ownerFn) {\n        if (type == null) {\n          return \"\";\n        }\n        if (typeof type === \"function\") {\n          {\n            return describeNativeComponentFrame(type, shouldConstruct(type));\n          }\n        }\n        if (typeof type === \"string\") {\n          return describeBuiltInComponentFrame(type);\n        }\n        switch (type) {\n          case REACT_SUSPENSE_TYPE:\n            return describeBuiltInComponentFrame(\"Suspense\");\n          case REACT_SUSPENSE_LIST_TYPE:\n            return describeBuiltInComponentFrame(\"SuspenseList\");\n        }\n        if (typeof type === \"object\") {\n          switch (type.$$typeof) {\n            case REACT_FORWARD_REF_TYPE:\n              return describeFunctionComponentFrame(type.render);\n            case REACT_MEMO_TYPE:\n              return describeUnknownElementTypeFrameInDEV(type.type, source, ownerFn);\n            case REACT_LAZY_TYPE: {\n              var lazyComponent = type;\n              var payload = lazyComponent._payload;\n              var init = lazyComponent._init;\n              try {\n                return describeUnknownElementTypeFrameInDEV(init(payload), source, ownerFn);\n              } catch (x) {\n              }\n            }\n          }\n        }\n        return \"\";\n      }\n      var hasOwnProperty = Object.prototype.hasOwnProperty;\n      var loggedTypeFailures = {};\n      var ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;\n      function setCurrentlyValidatingElement(element) {\n        {\n          if (element) {\n            var owner = element._owner;\n            var stack = describeUnknownElementTypeFrameInDEV(element.type, element._source, owner ? owner.type : null);\n            ReactDebugCurrentFrame.setExtraStackFrame(stack);\n          } else {\n            ReactDebugCurrentFrame.setExtraStackFrame(null);\n          }\n        }\n      }\n      function checkPropTypes(typeSpecs, values, location, componentName, element) {\n        {\n          var has = Function.call.bind(hasOwnProperty);\n          for (var typeSpecName in typeSpecs) {\n            if (has(typeSpecs, typeSpecName)) {\n              var error$1 = void 0;\n              try {\n                if (typeof typeSpecs[typeSpecName] !== \"function\") {\n                  var err = Error((componentName || \"React class\") + \": \" + location + \" type `\" + typeSpecName + \"` is invalid; it must be a function, usually from the `prop-types` package, but received `\" + typeof typeSpecs[typeSpecName] + \"`.This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.\");\n                  err.name = \"Invariant Violation\";\n                  throw err;\n                }\n                error$1 = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, \"SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED\");\n              } catch (ex) {\n                error$1 = ex;\n              }\n              if (error$1 && !(error$1 instanceof Error)) {\n                setCurrentlyValidatingElement(element);\n                error(\"%s: type specification of %s `%s` is invalid; the type checker function must return `null` or an `Error` but returned a %s. You may have forgotten to pass an argument to the type checker creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and shape all require an argument).\", componentName || \"React class\", location, typeSpecName, typeof error$1);\n                setCurrentlyValidatingElement(null);\n              }\n              if (error$1 instanceof Error && !(error$1.message in loggedTypeFailures)) {\n                loggedTypeFailures[error$1.message] = true;\n                setCurrentlyValidatingElement(element);\n                error(\"Failed %s type: %s\", location, error$1.message);\n                setCurrentlyValidatingElement(null);\n              }\n            }\n          }\n        }\n      }\n      var isArrayImpl = Array.isArray;\n      function isArray(a) {\n        return isArrayImpl(a);\n      }\n      function typeName(value) {\n        {\n          var hasToStringTag = typeof Symbol === \"function\" && Symbol.toStringTag;\n          var type = hasToStringTag && value[Symbol.toStringTag] || value.constructor.name || \"Object\";\n          return type;\n        }\n      }\n      function willCoercionThrow(value) {\n        {\n          try {\n            testStringCoercion(value);\n            return false;\n          } catch (e) {\n            return true;\n          }\n        }\n      }\n      function testStringCoercion(value) {\n        return \"\" + value;\n      }\n      function checkKeyStringCoercion(value) {\n        {\n          if (willCoercionThrow(value)) {\n            error(\"The provided key is an unsupported type %s. This value must be coerced to a string before before using it here.\", typeName(value));\n            return testStringCoercion(value);\n          }\n        }\n      }\n      var ReactCurrentOwner = ReactSharedInternals.ReactCurrentOwner;\n      var RESERVED_PROPS = {\n        key: true,\n        ref: true,\n        __self: true,\n        __source: true\n      };\n      var specialPropKeyWarningShown;\n      var specialPropRefWarningShown;\n      var didWarnAboutStringRefs;\n      {\n        didWarnAboutStringRefs = {};\n      }\n      function hasValidRef(config) {\n        {\n          if (hasOwnProperty.call(config, \"ref\")) {\n            var getter = Object.getOwnPropertyDescriptor(config, \"ref\").get;\n            if (getter && getter.isReactWarning) {\n              return false;\n            }\n          }\n        }\n        return config.ref !== void 0;\n      }\n      function hasValidKey(config) {\n        {\n          if (hasOwnProperty.call(config, \"key\")) {\n            var getter = Object.getOwnPropertyDescriptor(config, \"key\").get;\n            if (getter && getter.isReactWarning) {\n              return false;\n            }\n          }\n        }\n        return config.key !== void 0;\n      }\n      function warnIfStringRefCannotBeAutoConverted(config, self) {\n        {\n          if (typeof config.ref === \"string\" && ReactCurrentOwner.current && self && ReactCurrentOwner.current.stateNode !== self) {\n            var componentName = getComponentNameFromType(ReactCurrentOwner.current.type);\n            if (!didWarnAboutStringRefs[componentName]) {\n              error('Component \"%s\" contains the string ref \"%s\". Support for string refs will be removed in a future major release. This case cannot be automatically converted to an arrow function. We ask you to manually fix this case by using useRef() or createRef() instead. Learn more about using refs safely here: https://reactjs.org/link/strict-mode-string-ref', getComponentNameFromType(ReactCurrentOwner.current.type), config.ref);\n              didWarnAboutStringRefs[componentName] = true;\n            }\n          }\n        }\n      }\n      function defineKeyPropWarningGetter(props, displayName) {\n        {\n          var warnAboutAccessingKey = function() {\n            if (!specialPropKeyWarningShown) {\n              specialPropKeyWarningShown = true;\n              error(\"%s: `key` is not a prop. Trying to access it will result in `undefined` being returned. If you need to access the same value within the child component, you should pass it as a different prop. (https://reactjs.org/link/special-props)\", displayName);\n            }\n          };\n          warnAboutAccessingKey.isReactWarning = true;\n          Object.defineProperty(props, \"key\", {\n            get: warnAboutAccessingKey,\n            configurable: true\n          });\n        }\n      }\n      function defineRefPropWarningGetter(props, displayName) {\n        {\n          var warnAboutAccessingRef = function() {\n            if (!specialPropRefWarningShown) {\n              specialPropRefWarningShown = true;\n              error(\"%s: `ref` is not a prop. Trying to access it will result in `undefined` being returned. If you need to access the same value within the child component, you should pass it as a different prop. (https://reactjs.org/link/special-props)\", displayName);\n            }\n          };\n          warnAboutAccessingRef.isReactWarning = true;\n          Object.defineProperty(props, \"ref\", {\n            get: warnAboutAccessingRef,\n            configurable: true\n          });\n        }\n      }\n      var ReactElement = function(type, key, ref, self, source, owner, props) {\n        var element = {\n          $$typeof: REACT_ELEMENT_TYPE,\n          type,\n          key,\n          ref,\n          props,\n          _owner: owner\n        };\n        {\n          element._store = {};\n          Object.defineProperty(element._store, \"validated\", {\n            configurable: false,\n            enumerable: false,\n            writable: true,\n            value: false\n          });\n          Object.defineProperty(element, \"_self\", {\n            configurable: false,\n            enumerable: false,\n            writable: false,\n            value: self\n          });\n          Object.defineProperty(element, \"_source\", {\n            configurable: false,\n            enumerable: false,\n            writable: false,\n            value: source\n          });\n          if (Object.freeze) {\n            Object.freeze(element.props);\n            Object.freeze(element);\n          }\n        }\n        return element;\n      };\n      function jsxDEV(type, config, maybeKey, source, self) {\n        {\n          var propName;\n          var props = {};\n          var key = null;\n          var ref = null;\n          if (maybeKey !== void 0) {\n            {\n              checkKeyStringCoercion(maybeKey);\n            }\n            key = \"\" + maybeKey;\n          }\n          if (hasValidKey(config)) {\n            {\n              checkKeyStringCoercion(config.key);\n            }\n            key = \"\" + config.key;\n          }\n          if (hasValidRef(config)) {\n            ref = config.ref;\n            warnIfStringRefCannotBeAutoConverted(config, self);\n          }\n          for (propName in config) {\n            if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {\n              props[propName] = config[propName];\n            }\n          }\n          if (type && type.defaultProps) {\n            var defaultProps = type.defaultProps;\n            for (propName in defaultProps) {\n              if (props[propName] === void 0) {\n                props[propName] = defaultProps[propName];\n              }\n            }\n          }\n          if (key || ref) {\n            var displayName = typeof type === \"function\" ? type.displayName || type.name || \"Unknown\" : type;\n            if (key) {\n              defineKeyPropWarningGetter(props, displayName);\n            }\n            if (ref) {\n              defineRefPropWarningGetter(props, displayName);\n            }\n          }\n          return ReactElement(type, key, ref, self, source, ReactCurrentOwner.current, props);\n        }\n      }\n      var ReactCurrentOwner$1 = ReactSharedInternals.ReactCurrentOwner;\n      var ReactDebugCurrentFrame$1 = ReactSharedInternals.ReactDebugCurrentFrame;\n      function setCurrentlyValidatingElement$1(element) {\n        {\n          if (element) {\n            var owner = element._owner;\n            var stack = describeUnknownElementTypeFrameInDEV(element.type, element._source, owner ? owner.type : null);\n            ReactDebugCurrentFrame$1.setExtraStackFrame(stack);\n          } else {\n            ReactDebugCurrentFrame$1.setExtraStackFrame(null);\n          }\n        }\n      }\n      var propTypesMisspellWarningShown;\n      {\n        propTypesMisspellWarningShown = false;\n      }\n      function isValidElement(object) {\n        {\n          return typeof object === \"object\" && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;\n        }\n      }\n      function getDeclarationErrorAddendum() {\n        {\n          if (ReactCurrentOwner$1.current) {\n            var name = getComponentNameFromType(ReactCurrentOwner$1.current.type);\n            if (name) {\n              return \"\\n\\nCheck the render method of `\" + name + \"`.\";\n            }\n          }\n          return \"\";\n        }\n      }\n      function getSourceInfoErrorAddendum(source) {\n        {\n          if (source !== void 0) {\n            var fileName = source.fileName.replace(/^.*[\\\\\\/]/, \"\");\n            var lineNumber = source.lineNumber;\n            return \"\\n\\nCheck your code at \" + fileName + \":\" + lineNumber + \".\";\n          }\n          return \"\";\n        }\n      }\n      var ownerHasKeyUseWarning = {};\n      function getCurrentComponentErrorInfo(parentType) {\n        {\n          var info = getDeclarationErrorAddendum();\n          if (!info) {\n            var parentName = typeof parentType === \"string\" ? parentType : parentType.displayName || parentType.name;\n            if (parentName) {\n              info = \"\\n\\nCheck the top-level render call using <\" + parentName + \">.\";\n            }\n          }\n          return info;\n        }\n      }\n      function validateExplicitKey(element, parentType) {\n        {\n          if (!element._store || element._store.validated || element.key != null) {\n            return;\n          }\n          element._store.validated = true;\n          var currentComponentErrorInfo = getCurrentComponentErrorInfo(parentType);\n          if (ownerHasKeyUseWarning[currentComponentErrorInfo]) {\n            return;\n          }\n          ownerHasKeyUseWarning[currentComponentErrorInfo] = true;\n          var childOwner = \"\";\n          if (element && element._owner && element._owner !== ReactCurrentOwner$1.current) {\n            childOwner = \" It was passed a child from \" + getComponentNameFromType(element._owner.type) + \".\";\n          }\n          setCurrentlyValidatingElement$1(element);\n          error('Each child in a list should have a unique \"key\" prop.%s%s See https://reactjs.org/link/warning-keys for more information.', currentComponentErrorInfo, childOwner);\n          setCurrentlyValidatingElement$1(null);\n        }\n      }\n      function validateChildKeys(node, parentType) {\n        {\n          if (typeof node !== \"object\") {\n            return;\n          }\n          if (isArray(node)) {\n            for (var i = 0; i < node.length; i++) {\n              var child = node[i];\n              if (isValidElement(child)) {\n                validateExplicitKey(child, parentType);\n              }\n            }\n          } else if (isValidElement(node)) {\n            if (node._store) {\n              node._store.validated = true;\n            }\n          } else if (node) {\n            var iteratorFn = getIteratorFn(node);\n            if (typeof iteratorFn === \"function\") {\n              if (iteratorFn !== node.entries) {\n                var iterator = iteratorFn.call(node);\n                var step;\n                while (!(step = iterator.next()).done) {\n                  if (isValidElement(step.value)) {\n                    validateExplicitKey(step.value, parentType);\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n      function validatePropTypes(element) {\n        {\n          var type = element.type;\n          if (type === null || type === void 0 || typeof type === \"string\") {\n            return;\n          }\n          var propTypes;\n          if (typeof type === \"function\") {\n            propTypes = type.propTypes;\n          } else if (typeof type === \"object\" && (type.$$typeof === REACT_FORWARD_REF_TYPE || type.$$typeof === REACT_MEMO_TYPE)) {\n            propTypes = type.propTypes;\n          } else {\n            return;\n          }\n          if (propTypes) {\n            var name = getComponentNameFromType(type);\n            checkPropTypes(propTypes, element.props, \"prop\", name, element);\n          } else if (type.PropTypes !== void 0 && !propTypesMisspellWarningShown) {\n            propTypesMisspellWarningShown = true;\n            var _name = getComponentNameFromType(type);\n            error(\"Component %s declared `PropTypes` instead of `propTypes`. Did you misspell the property assignment?\", _name || \"Unknown\");\n          }\n          if (typeof type.getDefaultProps === \"function\" && !type.getDefaultProps.isReactClassApproved) {\n            error(\"getDefaultProps is only used on classic React.createClass definitions. Use a static property named `defaultProps` instead.\");\n          }\n        }\n      }\n      function validateFragmentProps(fragment) {\n        {\n          var keys = Object.keys(fragment.props);\n          for (var i = 0; i < keys.length; i++) {\n            var key = keys[i];\n            if (key !== \"children\" && key !== \"key\") {\n              setCurrentlyValidatingElement$1(fragment);\n              error(\"Invalid prop `%s` supplied to `React.Fragment`. React.Fragment can only have `key` and `children` props.\", key);\n              setCurrentlyValidatingElement$1(null);\n              break;\n            }\n          }\n          if (fragment.ref !== null) {\n            setCurrentlyValidatingElement$1(fragment);\n            error(\"Invalid attribute `ref` supplied to `React.Fragment`.\");\n            setCurrentlyValidatingElement$1(null);\n          }\n        }\n      }\n      function jsxWithValidation(type, props, key, isStaticChildren, source, self) {\n        {\n          var validType = isValidElementType(type);\n          if (!validType) {\n            var info = \"\";\n            if (type === void 0 || typeof type === \"object\" && type !== null && Object.keys(type).length === 0) {\n              info += \" You likely forgot to export your component from the file it's defined in, or you might have mixed up default and named imports.\";\n            }\n            var sourceInfo = getSourceInfoErrorAddendum(source);\n            if (sourceInfo) {\n              info += sourceInfo;\n            } else {\n              info += getDeclarationErrorAddendum();\n            }\n            var typeString;\n            if (type === null) {\n              typeString = \"null\";\n            } else if (isArray(type)) {\n              typeString = \"array\";\n            } else if (type !== void 0 && type.$$typeof === REACT_ELEMENT_TYPE) {\n              typeString = \"<\" + (getComponentNameFromType(type.type) || \"Unknown\") + \" />\";\n              info = \" Did you accidentally export a JSX literal instead of a component?\";\n            } else {\n              typeString = typeof type;\n            }\n            error(\"React.jsx: type is invalid -- expected a string (for built-in components) or a class/function (for composite components) but got: %s.%s\", typeString, info);\n          }\n          var element = jsxDEV(type, props, key, source, self);\n          if (element == null) {\n            return element;\n          }\n          if (validType) {\n            var children = props.children;\n            if (children !== void 0) {\n              if (isStaticChildren) {\n                if (isArray(children)) {\n                  for (var i = 0; i < children.length; i++) {\n                    validateChildKeys(children[i], type);\n                  }\n                  if (Object.freeze) {\n                    Object.freeze(children);\n                  }\n                } else {\n                  error(\"React.jsx: Static children should always be an array. You are likely explicitly calling React.jsxs or React.jsxDEV. Use the Babel transform instead.\");\n                }\n              } else {\n                validateChildKeys(children, type);\n              }\n            }\n          }\n          if (type === REACT_FRAGMENT_TYPE) {\n            validateFragmentProps(element);\n          } else {\n            validatePropTypes(element);\n          }\n          return element;\n        }\n      }\n      function jsxWithValidationStatic(type, props, key) {\n        {\n          return jsxWithValidation(type, props, key, true);\n        }\n      }\n      function jsxWithValidationDynamic(type, props, key) {\n        {\n          return jsxWithValidation(type, props, key, false);\n        }\n      }\n      var jsx2 = jsxWithValidationDynamic;\n      var jsxs = jsxWithValidationStatic;\n      reactJsxRuntime_development.Fragment = REACT_FRAGMENT_TYPE;\n      reactJsxRuntime_development.jsx = jsx2;\n      reactJsxRuntime_development.jsxs = jsxs;\n    })();\n  }\n  return reactJsxRuntime_development;\n}\n(function(module) {\n  if (false) {} else {\n    module.exports = requireReactJsxRuntime_development();\n  }\n})(jsxRuntime);\nconst jsx = jsxRuntime.exports.jsx;\nfunction isClientSide() {\n  return typeof window !== \"undefined\";\n}\nfunction isServerSide() {\n  return !isClientSide();\n}\nconst TonConnectUIContext = (0,react__WEBPACK_IMPORTED_MODULE_0__.createContext)(null);\nlet tonConnectUI = null;\nconst TonConnectUIProvider = (_a) => {\n  var _b = _a, {\n    children\n  } = _b, options = __objRest(_b, [\n    \"children\"\n  ]);\n  if (isClientSide() && !tonConnectUI) {\n    tonConnectUI = new _tonconnect_ui__WEBPACK_IMPORTED_MODULE_1__.TonConnectUI(options);\n  }\n  return /* @__PURE__ */ jsx(TonConnectUIContext.Provider, { value: tonConnectUI, children });\n};\nconst TonConnectUIProvider$1 = (0,react__WEBPACK_IMPORTED_MODULE_0__.memo)(TonConnectUIProvider);\nclass TonConnectUIReactError extends _tonconnect_ui__WEBPACK_IMPORTED_MODULE_1__.TonConnectUIError {\n  constructor(...args) {\n    super(...args);\n    Object.setPrototypeOf(this, TonConnectUIReactError.prototype);\n  }\n}\nclass TonConnectProviderNotSetError extends TonConnectUIReactError {\n  constructor(...args) {\n    super(...args);\n    Object.setPrototypeOf(this, TonConnectProviderNotSetError.prototype);\n  }\n}\nfunction checkProvider(provider) {\n  if (!provider) {\n    throw new TonConnectProviderNotSetError(\n      \"You should add <TonConnectUIProvider> on the top of the app to use TonConnect\"\n    );\n  }\n  return true;\n}\nfunction useTonConnectUI() {\n  const tonConnectUI2 = (0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(TonConnectUIContext);\n  const setOptions = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(\n    (options) => {\n      if (tonConnectUI2) {\n        tonConnectUI2.uiOptions = options;\n      }\n    },\n    [tonConnectUI2]\n  );\n  if (isServerSide()) {\n    return [null, () => {\n    }];\n  }\n  checkProvider(tonConnectUI2);\n  return [tonConnectUI2, setOptions];\n}\nconst buttonRootId = \"ton-connect-button\";\nconst TonConnectButton = ({ className, style }) => {\n  const [_, setOptions] = useTonConnectUI();\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {\n    setOptions({ buttonRootId });\n    return () => setOptions({ buttonRootId: null });\n  }, [setOptions]);\n  return /* @__PURE__ */ jsx(\n    \"div\",\n    {\n      id: buttonRootId,\n      className,\n      style: __spreadValues({ width: \"fit-content\" }, style)\n    }\n  );\n};\nconst TonConnectButton$1 = (0,react__WEBPACK_IMPORTED_MODULE_0__.memo)(TonConnectButton);\nfunction useTonWallet() {\n  const [tonConnectUI2] = useTonConnectUI();\n  const [wallet, setWallet] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(\n    (tonConnectUI2 == null ? void 0 : tonConnectUI2.wallet) || null\n  );\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {\n    if (tonConnectUI2) {\n      setWallet(tonConnectUI2.wallet);\n      return tonConnectUI2.onStatusChange((value) => {\n        setWallet(value);\n      });\n    }\n  }, [tonConnectUI2]);\n  return wallet;\n}\nfunction useTonAddress(userFriendly = true) {\n  const wallet = useTonWallet();\n  return (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(() => {\n    if (wallet) {\n      return userFriendly ? (0,_tonconnect_ui__WEBPACK_IMPORTED_MODULE_1__.toUserFriendlyAddress)(\n        wallet.account.address,\n        wallet.account.chain === _tonconnect_ui__WEBPACK_IMPORTED_MODULE_1__.CHAIN.TESTNET\n      ) : wallet.account.address;\n    } else {\n      return \"\";\n    }\n  }, [wallet, userFriendly, wallet == null ? void 0 : wallet.account.address, wallet == null ? void 0 : wallet.account.chain]);\n}\nfunction useTonConnectModal() {\n  const [tonConnectUI2] = useTonConnectUI();\n  const [state, setState] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)((tonConnectUI2 == null ? void 0 : tonConnectUI2.modal.state) || null);\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {\n    if (tonConnectUI2) {\n      setState(tonConnectUI2.modal.state);\n      return tonConnectUI2.onModalStateChange((value) => {\n        setState(value);\n      });\n    }\n  }, [tonConnectUI2]);\n  return {\n    state,\n    open: () => tonConnectUI2 == null ? void 0 : tonConnectUI2.modal.open(),\n    close: () => tonConnectUI2 == null ? void 0 : tonConnectUI2.modal.close()\n  };\n}\nfunction useIsConnectionRestored() {\n  const [restored, setRestored] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false);\n  const [tonConnectUI2] = useTonConnectUI();\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {\n    if (tonConnectUI2) {\n      tonConnectUI2.connectionRestored.then(() => setRestored(true));\n    }\n  }, [tonConnectUI2]);\n  return restored;\n}\n\n//# sourceMappingURL=index.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@tonconnect/ui-react/lib/index.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@tonconnect/ui/lib/index.mjs":
/*!***************************************************!*\
  !*** ./node_modules/@tonconnect/ui/lib/index.mjs ***!
  \***************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   BadRequestError: function() { return /* reexport safe */ _tonconnect_sdk__WEBPACK_IMPORTED_MODULE_0__.BadRequestError; },\n/* harmony export */   BrowserEventDispatcher: function() { return /* reexport safe */ _tonconnect_sdk__WEBPACK_IMPORTED_MODULE_0__.BrowserEventDispatcher; },\n/* harmony export */   CHAIN: function() { return /* reexport safe */ _tonconnect_sdk__WEBPACK_IMPORTED_MODULE_0__.CHAIN; },\n/* harmony export */   CONNECT_EVENT_ERROR_CODES: function() { return /* reexport safe */ _tonconnect_sdk__WEBPACK_IMPORTED_MODULE_0__.CONNECT_EVENT_ERROR_CODES; },\n/* harmony export */   CONNECT_ITEM_ERROR_CODES: function() { return /* reexport safe */ _tonconnect_sdk__WEBPACK_IMPORTED_MODULE_0__.CONNECT_ITEM_ERROR_CODES; },\n/* harmony export */   FetchWalletsError: function() { return /* reexport safe */ _tonconnect_sdk__WEBPACK_IMPORTED_MODULE_0__.FetchWalletsError; },\n/* harmony export */   LocalstorageNotFoundError: function() { return /* reexport safe */ _tonconnect_sdk__WEBPACK_IMPORTED_MODULE_0__.LocalstorageNotFoundError; },\n/* harmony export */   ParseHexError: function() { return /* reexport safe */ _tonconnect_sdk__WEBPACK_IMPORTED_MODULE_0__.ParseHexError; },\n/* harmony export */   SEND_TRANSACTION_ERROR_CODES: function() { return /* reexport safe */ _tonconnect_sdk__WEBPACK_IMPORTED_MODULE_0__.SEND_TRANSACTION_ERROR_CODES; },\n/* harmony export */   THEME: function() { return /* binding */ THEME; },\n/* harmony export */   TonConnect: function() { return /* reexport safe */ _tonconnect_sdk__WEBPACK_IMPORTED_MODULE_0__.TonConnect; },\n/* harmony export */   TonConnectError: function() { return /* reexport safe */ _tonconnect_sdk__WEBPACK_IMPORTED_MODULE_0__.TonConnectError; },\n/* harmony export */   TonConnectUI: function() { return /* binding */ TonConnectUI; },\n/* harmony export */   TonConnectUIError: function() { return /* binding */ TonConnectUIError; },\n/* harmony export */   UnknownAppError: function() { return /* reexport safe */ _tonconnect_sdk__WEBPACK_IMPORTED_MODULE_0__.UnknownAppError; },\n/* harmony export */   UnknownError: function() { return /* reexport safe */ _tonconnect_sdk__WEBPACK_IMPORTED_MODULE_0__.UnknownError; },\n/* harmony export */   UserRejectsError: function() { return /* reexport safe */ _tonconnect_sdk__WEBPACK_IMPORTED_MODULE_0__.UserRejectsError; },\n/* harmony export */   WalletAlreadyConnectedError: function() { return /* reexport safe */ _tonconnect_sdk__WEBPACK_IMPORTED_MODULE_0__.WalletAlreadyConnectedError; },\n/* harmony export */   WalletNotConnectedError: function() { return /* reexport safe */ _tonconnect_sdk__WEBPACK_IMPORTED_MODULE_0__.WalletNotConnectedError; },\n/* harmony export */   WalletNotInjectedError: function() { return /* reexport safe */ _tonconnect_sdk__WEBPACK_IMPORTED_MODULE_0__.WalletNotInjectedError; },\n/* harmony export */   WalletsListManager: function() { return /* reexport safe */ _tonconnect_sdk__WEBPACK_IMPORTED_MODULE_0__.WalletsListManager; },\n/* harmony export */   WrongAddressError: function() { return /* reexport safe */ _tonconnect_sdk__WEBPACK_IMPORTED_MODULE_0__.WrongAddressError; },\n/* harmony export */   createConnectionCompletedEvent: function() { return /* reexport safe */ _tonconnect_sdk__WEBPACK_IMPORTED_MODULE_0__.createConnectionCompletedEvent; },\n/* harmony export */   createConnectionErrorEvent: function() { return /* reexport safe */ _tonconnect_sdk__WEBPACK_IMPORTED_MODULE_0__.createConnectionErrorEvent; },\n/* harmony export */   createConnectionRestoringCompletedEvent: function() { return /* reexport safe */ _tonconnect_sdk__WEBPACK_IMPORTED_MODULE_0__.createConnectionRestoringCompletedEvent; },\n/* harmony export */   createConnectionRestoringErrorEvent: function() { return /* reexport safe */ _tonconnect_sdk__WEBPACK_IMPORTED_MODULE_0__.createConnectionRestoringErrorEvent; },\n/* harmony export */   createConnectionRestoringStartedEvent: function() { return /* reexport safe */ _tonconnect_sdk__WEBPACK_IMPORTED_MODULE_0__.createConnectionRestoringStartedEvent; },\n/* harmony export */   createConnectionStartedEvent: function() { return /* reexport safe */ _tonconnect_sdk__WEBPACK_IMPORTED_MODULE_0__.createConnectionStartedEvent; },\n/* harmony export */   createDisconnectionEvent: function() { return /* reexport safe */ _tonconnect_sdk__WEBPACK_IMPORTED_MODULE_0__.createDisconnectionEvent; },\n/* harmony export */   createRequestVersionEvent: function() { return /* reexport safe */ _tonconnect_sdk__WEBPACK_IMPORTED_MODULE_0__.createRequestVersionEvent; },\n/* harmony export */   createResponseVersionEvent: function() { return /* reexport safe */ _tonconnect_sdk__WEBPACK_IMPORTED_MODULE_0__.createResponseVersionEvent; },\n/* harmony export */   createTransactionSentForSignatureEvent: function() { return /* reexport safe */ _tonconnect_sdk__WEBPACK_IMPORTED_MODULE_0__.createTransactionSentForSignatureEvent; },\n/* harmony export */   createTransactionSignedEvent: function() { return /* reexport safe */ _tonconnect_sdk__WEBPACK_IMPORTED_MODULE_0__.createTransactionSignedEvent; },\n/* harmony export */   createTransactionSigningFailedEvent: function() { return /* reexport safe */ _tonconnect_sdk__WEBPACK_IMPORTED_MODULE_0__.createTransactionSigningFailedEvent; },\n/* harmony export */   createVersionInfo: function() { return /* reexport safe */ _tonconnect_sdk__WEBPACK_IMPORTED_MODULE_0__.createVersionInfo; },\n/* harmony export */   encodeTelegramUrlParameters: function() { return /* reexport safe */ _tonconnect_sdk__WEBPACK_IMPORTED_MODULE_0__.encodeTelegramUrlParameters; },\n/* harmony export */   isTelegramUrl: function() { return /* reexport safe */ _tonconnect_sdk__WEBPACK_IMPORTED_MODULE_0__.isTelegramUrl; },\n/* harmony export */   isWalletInfoCurrentlyEmbedded: function() { return /* reexport safe */ _tonconnect_sdk__WEBPACK_IMPORTED_MODULE_0__.isWalletInfoCurrentlyEmbedded; },\n/* harmony export */   isWalletInfoCurrentlyInjected: function() { return /* reexport safe */ _tonconnect_sdk__WEBPACK_IMPORTED_MODULE_0__.isWalletInfoCurrentlyInjected; },\n/* harmony export */   isWalletInfoInjectable: function() { return /* reexport safe */ _tonconnect_sdk__WEBPACK_IMPORTED_MODULE_0__.isWalletInfoInjectable; },\n/* harmony export */   isWalletInfoInjected: function() { return /* reexport safe */ _tonconnect_sdk__WEBPACK_IMPORTED_MODULE_0__.isWalletInfoInjected; },\n/* harmony export */   isWalletInfoRemote: function() { return /* reexport safe */ _tonconnect_sdk__WEBPACK_IMPORTED_MODULE_0__.isWalletInfoRemote; },\n/* harmony export */   toUserFriendlyAddress: function() { return /* reexport safe */ _tonconnect_sdk__WEBPACK_IMPORTED_MODULE_0__.toUserFriendlyAddress; }\n/* harmony export */ });\n/* harmony import */ var _tonconnect_sdk__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tonconnect/sdk */ \"(app-pages-browser)/./node_modules/@tonconnect/sdk/lib/esm/index.mjs\");\n/* harmony import */ var ua_parser_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ua-parser-js */ \"(app-pages-browser)/./node_modules/ua-parser-js/src/ua-parser.js\");\n/* harmony import */ var deepmerge__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! deepmerge */ \"(app-pages-browser)/./node_modules/deepmerge/dist/cjs.js\");\n/* harmony import */ var classnames__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! classnames */ \"(app-pages-browser)/./node_modules/classnames/index.js\");\n/* provided dependency */ var process = __webpack_require__(/*! process */ \"(app-pages-browser)/./node_modules/next/dist/build/polyfills/process.js\");\nvar __defProp = Object.defineProperty;\nvar __defProps = Object.defineProperties;\nvar __getOwnPropDescs = Object.getOwnPropertyDescriptors;\nvar __getOwnPropSymbols = Object.getOwnPropertySymbols;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __spreadValues = (a2, b) => {\n  for (var prop in b || (b = {}))\n    if (__hasOwnProp.call(b, prop))\n      __defNormalProp(a2, prop, b[prop]);\n  if (__getOwnPropSymbols)\n    for (var prop of __getOwnPropSymbols(b)) {\n      if (__propIsEnum.call(b, prop))\n        __defNormalProp(a2, prop, b[prop]);\n    }\n  return a2;\n};\nvar __spreadProps = (a2, b) => __defProps(a2, __getOwnPropDescs(b));\nvar __publicField = (obj, key, value) => {\n  __defNormalProp(obj, typeof key !== \"symbol\" ? key + \"\" : key, value);\n  return value;\n};\nvar __async = (__this, __arguments, generator) => {\n  return new Promise((resolve, reject) => {\n    var fulfilled = (value) => {\n      try {\n        step(generator.next(value));\n      } catch (e2) {\n        reject(e2);\n      }\n    };\n    var rejected = (value) => {\n      try {\n        step(generator.throw(value));\n      } catch (e2) {\n        reject(e2);\n      }\n    };\n    var step = (x) => x.done ? resolve(x.value) : Promise.resolve(x.value).then(fulfilled, rejected);\n    step((generator = generator.apply(__this, __arguments)).next());\n  });\n};\nvar _a, _b, _c, _d, _e, _f, _g, _h;\n\n\n\n\n\nconst sharedConfig = {};\nfunction setHydrateContext(context) {\n  sharedConfig.context = context;\n}\nconst equalFn = (a2, b) => a2 === b;\nconst $PROXY = Symbol(\"solid-proxy\");\nconst $TRACK = Symbol(\"solid-track\");\nconst signalOptions = {\n  equals: equalFn\n};\nlet runEffects = runQueue;\nconst STALE = 1;\nconst PENDING = 2;\nconst UNOWNED = {\n  owned: null,\n  cleanups: null,\n  context: null,\n  owner: null\n};\nconst NO_INIT = {};\nvar Owner = null;\nlet Transition$1 = null;\nlet Listener = null;\nlet Updates = null;\nlet Effects = null;\nlet ExecCount = 0;\nfunction createRoot(fn, detachedOwner) {\n  const listener = Listener, owner = Owner, unowned = fn.length === 0, root = unowned ? UNOWNED : {\n    owned: null,\n    cleanups: null,\n    context: null,\n    owner: detachedOwner === void 0 ? owner : detachedOwner\n  }, updateFn = unowned ? fn : () => fn(() => untrack(() => cleanNode(root)));\n  Owner = root;\n  Listener = null;\n  try {\n    return runUpdates(updateFn, true);\n  } finally {\n    Listener = listener;\n    Owner = owner;\n  }\n}\nfunction createSignal(value, options) {\n  options = options ? Object.assign({}, signalOptions, options) : signalOptions;\n  const s2 = {\n    value,\n    observers: null,\n    observerSlots: null,\n    comparator: options.equals || void 0\n  };\n  const setter = (value2) => {\n    if (typeof value2 === \"function\") {\n      value2 = value2(s2.value);\n    }\n    return writeSignal(s2, value2);\n  };\n  return [readSignal.bind(s2), setter];\n}\nfunction createComputed(fn, value, options) {\n  const c2 = createComputation(fn, value, true, STALE);\n  updateComputation(c2);\n}\nfunction createRenderEffect(fn, value, options) {\n  const c2 = createComputation(fn, value, false, STALE);\n  updateComputation(c2);\n}\nfunction createEffect(fn, value, options) {\n  runEffects = runUserEffects;\n  const c2 = createComputation(fn, value, false, STALE);\n  c2.user = true;\n  Effects ? Effects.push(c2) : updateComputation(c2);\n}\nfunction createMemo(fn, value, options) {\n  options = options ? Object.assign({}, signalOptions, options) : signalOptions;\n  const c2 = createComputation(fn, value, true, 0);\n  c2.observers = null;\n  c2.observerSlots = null;\n  c2.comparator = options.equals || void 0;\n  updateComputation(c2);\n  return readSignal.bind(c2);\n}\nfunction createResource(pSource, pFetcher, pOptions) {\n  let source;\n  let fetcher;\n  let options;\n  if (arguments.length === 2 && typeof pFetcher === \"object\" || arguments.length === 1) {\n    source = true;\n    fetcher = pSource;\n    options = pFetcher || {};\n  } else {\n    source = pSource;\n    fetcher = pFetcher;\n    options = pOptions || {};\n  }\n  let pr = null, initP = NO_INIT, id = null, scheduled = false, resolved = \"initialValue\" in options, dynamic = typeof source === \"function\" && createMemo(source);\n  const contexts = /* @__PURE__ */ new Set(), [value, setValue] = (options.storage || createSignal)(options.initialValue), [error, setError] = createSignal(void 0), [track, trigger] = createSignal(void 0, {\n    equals: false\n  }), [state, setState] = createSignal(resolved ? \"ready\" : \"unresolved\");\n  if (sharedConfig.context) {\n    id = `${sharedConfig.context.id}${sharedConfig.context.count++}`;\n    let v;\n    if (options.ssrLoadFrom === \"initial\")\n      initP = options.initialValue;\n    else if (sharedConfig.load && (v = sharedConfig.load(id)))\n      initP = v[0];\n  }\n  function loadEnd(p2, v, error2, key) {\n    if (pr === p2) {\n      pr = null;\n      resolved = true;\n      if ((p2 === initP || v === initP) && options.onHydrated)\n        queueMicrotask(() => options.onHydrated(key, {\n          value: v\n        }));\n      initP = NO_INIT;\n      completeLoad(v, error2);\n    }\n    return v;\n  }\n  function completeLoad(v, err) {\n    runUpdates(() => {\n      if (err === void 0)\n        setValue(() => v);\n      setState(err !== void 0 ? \"errored\" : \"ready\");\n      setError(err);\n      for (const c2 of contexts.keys())\n        c2.decrement();\n      contexts.clear();\n    }, false);\n  }\n  function read() {\n    const c2 = SuspenseContext, v = value(), err = error();\n    if (err !== void 0 && !pr)\n      throw err;\n    if (Listener && !Listener.user && c2) {\n      createComputed(() => {\n        track();\n        if (pr) {\n          if (c2.resolved)\n            ;\n          else if (!contexts.has(c2)) {\n            c2.increment();\n            contexts.add(c2);\n          }\n        }\n      });\n    }\n    return v;\n  }\n  function load(refetching = true) {\n    if (refetching !== false && scheduled)\n      return;\n    scheduled = false;\n    const lookup2 = dynamic ? dynamic() : source;\n    if (lookup2 == null || lookup2 === false) {\n      loadEnd(pr, untrack(value));\n      return;\n    }\n    const p2 = initP !== NO_INIT ? initP : untrack(() => fetcher(lookup2, {\n      value: value(),\n      refetching\n    }));\n    if (typeof p2 !== \"object\" || !(p2 && \"then\" in p2)) {\n      loadEnd(pr, p2, void 0, lookup2);\n      return p2;\n    }\n    pr = p2;\n    scheduled = true;\n    queueMicrotask(() => scheduled = false);\n    runUpdates(() => {\n      setState(resolved ? \"refreshing\" : \"pending\");\n      trigger();\n    }, false);\n    return p2.then((v) => loadEnd(p2, v, void 0, lookup2), (e2) => loadEnd(p2, void 0, castError(e2), lookup2));\n  }\n  Object.defineProperties(read, {\n    state: {\n      get: () => state()\n    },\n    error: {\n      get: () => error()\n    },\n    loading: {\n      get() {\n        const s2 = state();\n        return s2 === \"pending\" || s2 === \"refreshing\";\n      }\n    },\n    latest: {\n      get() {\n        if (!resolved)\n          return read();\n        const err = error();\n        if (err && !pr)\n          throw err;\n        return value();\n      }\n    }\n  });\n  if (dynamic)\n    createComputed(() => load(false));\n  else\n    load(false);\n  return [read, {\n    refetch: load,\n    mutate: setValue\n  }];\n}\nfunction batch(fn) {\n  return runUpdates(fn, false);\n}\nfunction untrack(fn) {\n  if (Listener === null)\n    return fn();\n  const listener = Listener;\n  Listener = null;\n  try {\n    return fn();\n  } finally {\n    Listener = listener;\n  }\n}\nfunction on(deps, fn, options) {\n  const isArray = Array.isArray(deps);\n  let prevInput;\n  let defer = options && options.defer;\n  return (prevValue) => {\n    let input;\n    if (isArray) {\n      input = Array(deps.length);\n      for (let i2 = 0; i2 < deps.length; i2++)\n        input[i2] = deps[i2]();\n    } else\n      input = deps();\n    if (defer) {\n      defer = false;\n      return void 0;\n    }\n    const result = untrack(() => fn(input, prevInput, prevValue));\n    prevInput = input;\n    return result;\n  };\n}\nfunction onMount(fn) {\n  createEffect(() => untrack(fn));\n}\nfunction onCleanup(fn) {\n  if (Owner === null)\n    ;\n  else if (Owner.cleanups === null)\n    Owner.cleanups = [fn];\n  else\n    Owner.cleanups.push(fn);\n  return fn;\n}\nfunction getListener() {\n  return Listener;\n}\nfunction getOwner() {\n  return Owner;\n}\nfunction createContext(defaultValue, options) {\n  const id = Symbol(\"context\");\n  return {\n    id,\n    Provider: createProvider(id),\n    defaultValue\n  };\n}\nfunction useContext(context) {\n  let ctx;\n  return (ctx = lookup(Owner, context.id)) !== void 0 ? ctx : context.defaultValue;\n}\nfunction children(fn) {\n  const children2 = createMemo(fn);\n  const memo = createMemo(() => resolveChildren(children2()));\n  memo.toArray = () => {\n    const c2 = memo();\n    return Array.isArray(c2) ? c2 : c2 != null ? [c2] : [];\n  };\n  return memo;\n}\nlet SuspenseContext;\nfunction readSignal() {\n  const runningTransition = Transition$1;\n  if (this.sources && (this.state || runningTransition)) {\n    if (this.state === STALE || runningTransition)\n      updateComputation(this);\n    else {\n      const updates = Updates;\n      Updates = null;\n      runUpdates(() => lookUpstream(this), false);\n      Updates = updates;\n    }\n  }\n  if (Listener) {\n    const sSlot = this.observers ? this.observers.length : 0;\n    if (!Listener.sources) {\n      Listener.sources = [this];\n      Listener.sourceSlots = [sSlot];\n    } else {\n      Listener.sources.push(this);\n      Listener.sourceSlots.push(sSlot);\n    }\n    if (!this.observers) {\n      this.observers = [Listener];\n      this.observerSlots = [Listener.sources.length - 1];\n    } else {\n      this.observers.push(Listener);\n      this.observerSlots.push(Listener.sources.length - 1);\n    }\n  }\n  return this.value;\n}\nfunction writeSignal(node, value, isComp) {\n  let current = node.value;\n  if (!node.comparator || !node.comparator(current, value)) {\n    node.value = value;\n    if (node.observers && node.observers.length) {\n      runUpdates(() => {\n        for (let i2 = 0; i2 < node.observers.length; i2 += 1) {\n          const o2 = node.observers[i2];\n          const TransitionRunning = Transition$1 && Transition$1.running;\n          if (TransitionRunning && Transition$1.disposed.has(o2))\n            ;\n          if (TransitionRunning && !o2.tState || !TransitionRunning && !o2.state) {\n            if (o2.pure)\n              Updates.push(o2);\n            else\n              Effects.push(o2);\n            if (o2.observers)\n              markDownstream(o2);\n          }\n          if (TransitionRunning)\n            ;\n          else\n            o2.state = STALE;\n        }\n        if (Updates.length > 1e6) {\n          Updates = [];\n          if (false)\n            {}\n          throw new Error();\n        }\n      }, false);\n    }\n  }\n  return value;\n}\nfunction updateComputation(node) {\n  if (!node.fn)\n    return;\n  cleanNode(node);\n  const owner = Owner, listener = Listener, time = ExecCount;\n  Listener = Owner = node;\n  runComputation(node, node.value, time);\n  Listener = listener;\n  Owner = owner;\n}\nfunction runComputation(node, value, time) {\n  let nextValue;\n  try {\n    nextValue = node.fn(value);\n  } catch (err) {\n    if (node.pure) {\n      {\n        node.state = STALE;\n        node.owned && node.owned.forEach(cleanNode);\n        node.owned = null;\n      }\n    }\n    handleError(err);\n  }\n  if (!node.updatedAt || node.updatedAt <= time) {\n    if (node.updatedAt != null && \"observers\" in node) {\n      writeSignal(node, nextValue);\n    } else\n      node.value = nextValue;\n    node.updatedAt = time;\n  }\n}\nfunction createComputation(fn, init, pure, state = STALE, options) {\n  const c2 = {\n    fn,\n    state,\n    updatedAt: null,\n    owned: null,\n    sources: null,\n    sourceSlots: null,\n    cleanups: null,\n    value: init,\n    owner: Owner,\n    context: null,\n    pure\n  };\n  if (Owner === null)\n    ;\n  else if (Owner !== UNOWNED) {\n    {\n      if (!Owner.owned)\n        Owner.owned = [c2];\n      else\n        Owner.owned.push(c2);\n    }\n  }\n  return c2;\n}\nfunction runTop(node) {\n  const runningTransition = Transition$1;\n  if (node.state === 0 || runningTransition)\n    return;\n  if (node.state === PENDING || runningTransition)\n    return lookUpstream(node);\n  if (node.suspense && untrack(node.suspense.inFallback))\n    return node.suspense.effects.push(node);\n  const ancestors = [node];\n  while ((node = node.owner) && (!node.updatedAt || node.updatedAt < ExecCount)) {\n    if (node.state || runningTransition)\n      ancestors.push(node);\n  }\n  for (let i2 = ancestors.length - 1; i2 >= 0; i2--) {\n    node = ancestors[i2];\n    if (node.state === STALE || runningTransition) {\n      updateComputation(node);\n    } else if (node.state === PENDING || runningTransition) {\n      const updates = Updates;\n      Updates = null;\n      runUpdates(() => lookUpstream(node, ancestors[0]), false);\n      Updates = updates;\n    }\n  }\n}\nfunction runUpdates(fn, init) {\n  if (Updates)\n    return fn();\n  let wait = false;\n  if (!init)\n    Updates = [];\n  if (Effects)\n    wait = true;\n  else\n    Effects = [];\n  ExecCount++;\n  try {\n    const res = fn();\n    completeUpdates(wait);\n    return res;\n  } catch (err) {\n    if (!wait)\n      Effects = null;\n    Updates = null;\n    handleError(err);\n  }\n}\nfunction completeUpdates(wait) {\n  if (Updates) {\n    runQueue(Updates);\n    Updates = null;\n  }\n  if (wait)\n    return;\n  const e2 = Effects;\n  Effects = null;\n  if (e2.length)\n    runUpdates(() => runEffects(e2), false);\n}\nfunction runQueue(queue) {\n  for (let i2 = 0; i2 < queue.length; i2++)\n    runTop(queue[i2]);\n}\nfunction runUserEffects(queue) {\n  let i2, userLength = 0;\n  for (i2 = 0; i2 < queue.length; i2++) {\n    const e2 = queue[i2];\n    if (!e2.user)\n      runTop(e2);\n    else\n      queue[userLength++] = e2;\n  }\n  if (sharedConfig.context)\n    setHydrateContext();\n  for (i2 = 0; i2 < userLength; i2++)\n    runTop(queue[i2]);\n}\nfunction lookUpstream(node, ignore) {\n  const runningTransition = Transition$1;\n  node.state = 0;\n  for (let i2 = 0; i2 < node.sources.length; i2 += 1) {\n    const source = node.sources[i2];\n    if (source.sources) {\n      if (source.state === STALE || runningTransition) {\n        if (source !== ignore)\n          runTop(source);\n      } else if (source.state === PENDING || runningTransition)\n        lookUpstream(source, ignore);\n    }\n  }\n}\nfunction markDownstream(node) {\n  const runningTransition = Transition$1;\n  for (let i2 = 0; i2 < node.observers.length; i2 += 1) {\n    const o2 = node.observers[i2];\n    if (!o2.state || runningTransition) {\n      o2.state = PENDING;\n      if (o2.pure)\n        Updates.push(o2);\n      else\n        Effects.push(o2);\n      o2.observers && markDownstream(o2);\n    }\n  }\n}\nfunction cleanNode(node) {\n  let i2;\n  if (node.sources) {\n    while (node.sources.length) {\n      const source = node.sources.pop(), index = node.sourceSlots.pop(), obs = source.observers;\n      if (obs && obs.length) {\n        const n2 = obs.pop(), s2 = source.observerSlots.pop();\n        if (index < obs.length) {\n          n2.sourceSlots[s2] = index;\n          obs[index] = n2;\n          source.observerSlots[index] = s2;\n        }\n      }\n    }\n  }\n  if (node.owned) {\n    for (i2 = 0; i2 < node.owned.length; i2++)\n      cleanNode(node.owned[i2]);\n    node.owned = null;\n  }\n  if (node.cleanups) {\n    for (i2 = 0; i2 < node.cleanups.length; i2++)\n      node.cleanups[i2]();\n    node.cleanups = null;\n  }\n  node.state = 0;\n  node.context = null;\n}\nfunction castError(err) {\n  if (err instanceof Error || typeof err === \"string\")\n    return err;\n  return new Error(\"Unknown error\");\n}\nfunction handleError(err) {\n  err = castError(err);\n  throw err;\n}\nfunction lookup(owner, key) {\n  return owner ? owner.context && owner.context[key] !== void 0 ? owner.context[key] : lookup(owner.owner, key) : void 0;\n}\nfunction resolveChildren(children2) {\n  if (typeof children2 === \"function\" && !children2.length)\n    return resolveChildren(children2());\n  if (Array.isArray(children2)) {\n    const results = [];\n    for (let i2 = 0; i2 < children2.length; i2++) {\n      const result = resolveChildren(children2[i2]);\n      Array.isArray(result) ? results.push.apply(results, result) : results.push(result);\n    }\n    return results;\n  }\n  return children2;\n}\nfunction createProvider(id, options) {\n  return function provider(props) {\n    let res;\n    createRenderEffect(() => res = untrack(() => {\n      Owner.context = {\n        [id]: props.value\n      };\n      return children(() => props.children);\n    }), void 0);\n    return res;\n  };\n}\nconst FALLBACK = Symbol(\"fallback\");\nfunction dispose(d) {\n  for (let i2 = 0; i2 < d.length; i2++)\n    d[i2]();\n}\nfunction mapArray(list, mapFn, options = {}) {\n  let items = [], mapped = [], disposers = [], len = 0, indexes = mapFn.length > 1 ? [] : null;\n  onCleanup(() => dispose(disposers));\n  return () => {\n    let newItems = list() || [], i2, j;\n    newItems[$TRACK];\n    return untrack(() => {\n      let newLen = newItems.length, newIndices, newIndicesNext, temp, tempdisposers, tempIndexes, start, end, newEnd, item;\n      if (newLen === 0) {\n        if (len !== 0) {\n          dispose(disposers);\n          disposers = [];\n          items = [];\n          mapped = [];\n          len = 0;\n          indexes && (indexes = []);\n        }\n        if (options.fallback) {\n          items = [FALLBACK];\n          mapped[0] = createRoot((disposer) => {\n            disposers[0] = disposer;\n            return options.fallback();\n          });\n          len = 1;\n        }\n      } else if (len === 0) {\n        mapped = new Array(newLen);\n        for (j = 0; j < newLen; j++) {\n          items[j] = newItems[j];\n          mapped[j] = createRoot(mapper);\n        }\n        len = newLen;\n      } else {\n        temp = new Array(newLen);\n        tempdisposers = new Array(newLen);\n        indexes && (tempIndexes = new Array(newLen));\n        for (start = 0, end = Math.min(len, newLen); start < end && items[start] === newItems[start]; start++)\n          ;\n        for (end = len - 1, newEnd = newLen - 1; end >= start && newEnd >= start && items[end] === newItems[newEnd]; end--, newEnd--) {\n          temp[newEnd] = mapped[end];\n          tempdisposers[newEnd] = disposers[end];\n          indexes && (tempIndexes[newEnd] = indexes[end]);\n        }\n        newIndices = /* @__PURE__ */ new Map();\n        newIndicesNext = new Array(newEnd + 1);\n        for (j = newEnd; j >= start; j--) {\n          item = newItems[j];\n          i2 = newIndices.get(item);\n          newIndicesNext[j] = i2 === void 0 ? -1 : i2;\n          newIndices.set(item, j);\n        }\n        for (i2 = start; i2 <= end; i2++) {\n          item = items[i2];\n          j = newIndices.get(item);\n          if (j !== void 0 && j !== -1) {\n            temp[j] = mapped[i2];\n            tempdisposers[j] = disposers[i2];\n            indexes && (tempIndexes[j] = indexes[i2]);\n            j = newIndicesNext[j];\n            newIndices.set(item, j);\n          } else\n            disposers[i2]();\n        }\n        for (j = start; j < newLen; j++) {\n          if (j in temp) {\n            mapped[j] = temp[j];\n            disposers[j] = tempdisposers[j];\n            if (indexes) {\n              indexes[j] = tempIndexes[j];\n              indexes[j](j);\n            }\n          } else\n            mapped[j] = createRoot(mapper);\n        }\n        mapped = mapped.slice(0, len = newLen);\n        items = newItems.slice(0);\n      }\n      return mapped;\n    });\n    function mapper(disposer) {\n      disposers[j] = disposer;\n      if (indexes) {\n        const [s2, set] = createSignal(j);\n        indexes[j] = set;\n        return mapFn(newItems[j], s2);\n      }\n      return mapFn(newItems[j]);\n    }\n  };\n}\nfunction createComponent(Comp, props) {\n  return untrack(() => Comp(props || {}));\n}\nfunction trueFn() {\n  return true;\n}\nconst propTraps = {\n  get(_, property, receiver) {\n    if (property === $PROXY)\n      return receiver;\n    return _.get(property);\n  },\n  has(_, property) {\n    if (property === $PROXY)\n      return true;\n    return _.has(property);\n  },\n  set: trueFn,\n  deleteProperty: trueFn,\n  getOwnPropertyDescriptor(_, property) {\n    return {\n      configurable: true,\n      enumerable: true,\n      get() {\n        return _.get(property);\n      },\n      set: trueFn,\n      deleteProperty: trueFn\n    };\n  },\n  ownKeys(_) {\n    return _.keys();\n  }\n};\nfunction resolveSource(s2) {\n  return !(s2 = typeof s2 === \"function\" ? s2() : s2) ? {} : s2;\n}\nfunction mergeProps(...sources) {\n  let proxy = false;\n  for (let i2 = 0; i2 < sources.length; i2++) {\n    const s2 = sources[i2];\n    proxy = proxy || !!s2 && $PROXY in s2;\n    sources[i2] = typeof s2 === \"function\" ? (proxy = true, createMemo(s2)) : s2;\n  }\n  if (proxy) {\n    return new Proxy({\n      get(property) {\n        for (let i2 = sources.length - 1; i2 >= 0; i2--) {\n          const v = resolveSource(sources[i2])[property];\n          if (v !== void 0)\n            return v;\n        }\n      },\n      has(property) {\n        for (let i2 = sources.length - 1; i2 >= 0; i2--) {\n          if (property in resolveSource(sources[i2]))\n            return true;\n        }\n        return false;\n      },\n      keys() {\n        const keys = [];\n        for (let i2 = 0; i2 < sources.length; i2++)\n          keys.push(...Object.keys(resolveSource(sources[i2])));\n        return [...new Set(keys)];\n      }\n    }, propTraps);\n  }\n  const target = {};\n  for (let i2 = sources.length - 1; i2 >= 0; i2--) {\n    if (sources[i2]) {\n      const descriptors = Object.getOwnPropertyDescriptors(sources[i2]);\n      for (const key in descriptors) {\n        if (key in target)\n          continue;\n        Object.defineProperty(target, key, {\n          enumerable: true,\n          get() {\n            for (let i3 = sources.length - 1; i3 >= 0; i3--) {\n              const v = (sources[i3] || {})[key];\n              if (v !== void 0)\n                return v;\n            }\n          }\n        });\n      }\n    }\n  }\n  return target;\n}\nfunction splitProps(props, ...keys) {\n  const blocked = new Set(keys.flat());\n  if ($PROXY in props) {\n    const res = keys.map((k) => {\n      return new Proxy({\n        get(property) {\n          return k.includes(property) ? props[property] : void 0;\n        },\n        has(property) {\n          return k.includes(property) && property in props;\n        },\n        keys() {\n          return k.filter((property) => property in props);\n        }\n      }, propTraps);\n    });\n    res.push(new Proxy({\n      get(property) {\n        return blocked.has(property) ? void 0 : props[property];\n      },\n      has(property) {\n        return blocked.has(property) ? false : property in props;\n      },\n      keys() {\n        return Object.keys(props).filter((k) => !blocked.has(k));\n      }\n    }, propTraps));\n    return res;\n  }\n  const descriptors = Object.getOwnPropertyDescriptors(props);\n  keys.push(Object.keys(descriptors).filter((k) => !blocked.has(k)));\n  return keys.map((k) => {\n    const clone = {};\n    for (let i2 = 0; i2 < k.length; i2++) {\n      const key = k[i2];\n      if (!(key in props))\n        continue;\n      Object.defineProperty(clone, key, descriptors[key] ? descriptors[key] : {\n        get() {\n          return props[key];\n        },\n        set() {\n          return true;\n        },\n        enumerable: true\n      });\n    }\n    return clone;\n  });\n}\nfunction For(props) {\n  const fallback = \"fallback\" in props && {\n    fallback: () => props.fallback\n  };\n  return createMemo(mapArray(() => props.each, props.children, fallback || void 0));\n}\nfunction Show(props) {\n  let strictEqual = false;\n  const keyed = props.keyed;\n  const condition = createMemo(() => props.when, void 0, {\n    equals: (a2, b) => strictEqual ? a2 === b : !a2 === !b\n  });\n  return createMemo(() => {\n    const c2 = condition();\n    if (c2) {\n      const child = props.children;\n      const fn = typeof child === \"function\" && child.length > 0;\n      strictEqual = keyed || fn;\n      return fn ? untrack(() => child(c2)) : child;\n    }\n    return props.fallback;\n  }, void 0, void 0);\n}\nfunction Switch(props) {\n  let strictEqual = false;\n  let keyed = false;\n  const equals = (a2, b) => a2[0] === b[0] && (strictEqual ? a2[1] === b[1] : !a2[1] === !b[1]) && a2[2] === b[2];\n  const conditions = children(() => props.children), evalConditions = createMemo(() => {\n    let conds = conditions();\n    if (!Array.isArray(conds))\n      conds = [conds];\n    for (let i2 = 0; i2 < conds.length; i2++) {\n      const c2 = conds[i2].when;\n      if (c2) {\n        keyed = !!conds[i2].keyed;\n        return [i2, c2, conds[i2]];\n      }\n    }\n    return [-1];\n  }, void 0, {\n    equals\n  });\n  return createMemo(() => {\n    const [index, when, cond] = evalConditions();\n    if (index < 0)\n      return props.fallback;\n    const c2 = cond.children;\n    const fn = typeof c2 === \"function\" && c2.length > 0;\n    strictEqual = keyed || fn;\n    return fn ? untrack(() => c2(when)) : c2;\n  }, void 0, void 0);\n}\nfunction Match(props) {\n  return props;\n}\nconst booleans = [\"allowfullscreen\", \"async\", \"autofocus\", \"autoplay\", \"checked\", \"controls\", \"default\", \"disabled\", \"formnovalidate\", \"hidden\", \"indeterminate\", \"ismap\", \"loop\", \"multiple\", \"muted\", \"nomodule\", \"novalidate\", \"open\", \"playsinline\", \"readonly\", \"required\", \"reversed\", \"seamless\", \"selected\"];\nconst Properties = /* @__PURE__ */ new Set([\"className\", \"value\", \"readOnly\", \"formNoValidate\", \"isMap\", \"noModule\", \"playsInline\", ...booleans]);\nconst ChildProperties = /* @__PURE__ */ new Set([\"innerHTML\", \"textContent\", \"innerText\", \"children\"]);\nconst Aliases = /* @__PURE__ */ Object.assign(/* @__PURE__ */ Object.create(null), {\n  className: \"class\",\n  htmlFor: \"for\"\n});\nconst PropAliases = /* @__PURE__ */ Object.assign(/* @__PURE__ */ Object.create(null), {\n  class: \"className\",\n  formnovalidate: \"formNoValidate\",\n  ismap: \"isMap\",\n  nomodule: \"noModule\",\n  playsinline: \"playsInline\",\n  readonly: \"readOnly\"\n});\nconst DelegatedEvents = /* @__PURE__ */ new Set([\"beforeinput\", \"click\", \"dblclick\", \"contextmenu\", \"focusin\", \"focusout\", \"input\", \"keydown\", \"keyup\", \"mousedown\", \"mousemove\", \"mouseout\", \"mouseover\", \"mouseup\", \"pointerdown\", \"pointermove\", \"pointerout\", \"pointerover\", \"pointerup\", \"touchend\", \"touchmove\", \"touchstart\"]);\nconst SVGElements = /* @__PURE__ */ new Set([\n  \"altGlyph\",\n  \"altGlyphDef\",\n  \"altGlyphItem\",\n  \"animate\",\n  \"animateColor\",\n  \"animateMotion\",\n  \"animateTransform\",\n  \"circle\",\n  \"clipPath\",\n  \"color-profile\",\n  \"cursor\",\n  \"defs\",\n  \"desc\",\n  \"ellipse\",\n  \"feBlend\",\n  \"feColorMatrix\",\n  \"feComponentTransfer\",\n  \"feComposite\",\n  \"feConvolveMatrix\",\n  \"feDiffuseLighting\",\n  \"feDisplacementMap\",\n  \"feDistantLight\",\n  \"feFlood\",\n  \"feFuncA\",\n  \"feFuncB\",\n  \"feFuncG\",\n  \"feFuncR\",\n  \"feGaussianBlur\",\n  \"feImage\",\n  \"feMerge\",\n  \"feMergeNode\",\n  \"feMorphology\",\n  \"feOffset\",\n  \"fePointLight\",\n  \"feSpecularLighting\",\n  \"feSpotLight\",\n  \"feTile\",\n  \"feTurbulence\",\n  \"filter\",\n  \"font\",\n  \"font-face\",\n  \"font-face-format\",\n  \"font-face-name\",\n  \"font-face-src\",\n  \"font-face-uri\",\n  \"foreignObject\",\n  \"g\",\n  \"glyph\",\n  \"glyphRef\",\n  \"hkern\",\n  \"image\",\n  \"line\",\n  \"linearGradient\",\n  \"marker\",\n  \"mask\",\n  \"metadata\",\n  \"missing-glyph\",\n  \"mpath\",\n  \"path\",\n  \"pattern\",\n  \"polygon\",\n  \"polyline\",\n  \"radialGradient\",\n  \"rect\",\n  \"set\",\n  \"stop\",\n  \"svg\",\n  \"switch\",\n  \"symbol\",\n  \"text\",\n  \"textPath\",\n  \"tref\",\n  \"tspan\",\n  \"use\",\n  \"view\",\n  \"vkern\"\n]);\nconst SVGNamespace = {\n  xlink: \"http://www.w3.org/1999/xlink\",\n  xml: \"http://www.w3.org/XML/1998/namespace\"\n};\nfunction reconcileArrays(parentNode, a2, b) {\n  let bLength = b.length, aEnd = a2.length, bEnd = bLength, aStart = 0, bStart = 0, after = a2[aEnd - 1].nextSibling, map = null;\n  while (aStart < aEnd || bStart < bEnd) {\n    if (a2[aStart] === b[bStart]) {\n      aStart++;\n      bStart++;\n      continue;\n    }\n    while (a2[aEnd - 1] === b[bEnd - 1]) {\n      aEnd--;\n      bEnd--;\n    }\n    if (aEnd === aStart) {\n      const node = bEnd < bLength ? bStart ? b[bStart - 1].nextSibling : b[bEnd - bStart] : after;\n      while (bStart < bEnd)\n        parentNode.insertBefore(b[bStart++], node);\n    } else if (bEnd === bStart) {\n      while (aStart < aEnd) {\n        if (!map || !map.has(a2[aStart]))\n          a2[aStart].remove();\n        aStart++;\n      }\n    } else if (a2[aStart] === b[bEnd - 1] && b[bStart] === a2[aEnd - 1]) {\n      const node = a2[--aEnd].nextSibling;\n      parentNode.insertBefore(b[bStart++], a2[aStart++].nextSibling);\n      parentNode.insertBefore(b[--bEnd], node);\n      a2[aEnd] = b[bEnd];\n    } else {\n      if (!map) {\n        map = /* @__PURE__ */ new Map();\n        let i2 = bStart;\n        while (i2 < bEnd)\n          map.set(b[i2], i2++);\n      }\n      const index = map.get(a2[aStart]);\n      if (index != null) {\n        if (bStart < index && index < bEnd) {\n          let i2 = aStart, sequence = 1, t2;\n          while (++i2 < aEnd && i2 < bEnd) {\n            if ((t2 = map.get(a2[i2])) == null || t2 !== index + sequence)\n              break;\n            sequence++;\n          }\n          if (sequence > index - bStart) {\n            const node = a2[aStart];\n            while (bStart < index)\n              parentNode.insertBefore(b[bStart++], node);\n          } else\n            parentNode.replaceChild(b[bStart++], a2[aStart++]);\n        } else\n          aStart++;\n      } else\n        a2[aStart++].remove();\n    }\n  }\n}\nconst $$EVENTS = \"_$DX_DELEGATE\";\nfunction render(code, element, init, options = {}) {\n  let disposer;\n  createRoot((dispose2) => {\n    disposer = dispose2;\n    element === document ? code() : insert(element, code(), element.firstChild ? null : void 0, init);\n  }, options.owner);\n  return () => {\n    disposer();\n    element.textContent = \"\";\n  };\n}\nfunction template$1(html, check, isSVG) {\n  if (typeof window === 'undefined') {\n    return null;\n  }\n\n  const t2 = document.createElement(\"template\");\n  t2.innerHTML = html;\n  let node = t2.content.firstChild;\n  if (isSVG)\n    node = node.firstChild;\n  return node;\n}\nfunction delegateEvents(eventNames, document2 = window.document) {\n  const e2 = document2[$$EVENTS] || (document2[$$EVENTS] = /* @__PURE__ */ new Set());\n  for (let i2 = 0, l2 = eventNames.length; i2 < l2; i2++) {\n    const name = eventNames[i2];\n    if (!e2.has(name)) {\n      e2.add(name);\n      document2.addEventListener(name, eventHandler);\n    }\n  }\n}\nfunction setAttribute(node, name, value) {\n  if (value == null)\n    node.removeAttribute(name);\n  else\n    node.setAttribute(name, value);\n}\nfunction setAttributeNS(node, namespace, name, value) {\n  if (value == null)\n    node.removeAttributeNS(namespace, name);\n  else\n    node.setAttributeNS(namespace, name, value);\n}\nfunction className(node, value) {\n  if (value == null)\n    node.removeAttribute(\"class\");\n  else\n    node.className = value;\n}\nfunction addEventListener(node, name, handler, delegate) {\n  if (delegate) {\n    if (Array.isArray(handler)) {\n      node[`$$${name}`] = handler[0];\n      node[`$$${name}Data`] = handler[1];\n    } else\n      node[`$$${name}`] = handler;\n  } else if (Array.isArray(handler)) {\n    const handlerFn = handler[0];\n    node.addEventListener(name, handler[0] = (e2) => handlerFn.call(node, handler[1], e2));\n  } else\n    node.addEventListener(name, handler);\n}\nfunction classList(node, value, prev = {}) {\n  const classKeys = Object.keys(value || {}), prevKeys = Object.keys(prev);\n  let i2, len;\n  for (i2 = 0, len = prevKeys.length; i2 < len; i2++) {\n    const key = prevKeys[i2];\n    if (!key || key === \"undefined\" || value[key])\n      continue;\n    toggleClassKey(node, key, false);\n    delete prev[key];\n  }\n  for (i2 = 0, len = classKeys.length; i2 < len; i2++) {\n    const key = classKeys[i2], classValue = !!value[key];\n    if (!key || key === \"undefined\" || prev[key] === classValue || !classValue)\n      continue;\n    toggleClassKey(node, key, true);\n    prev[key] = classValue;\n  }\n  return prev;\n}\nfunction style(node, value, prev) {\n  if (!value)\n    return prev ? setAttribute(node, \"style\") : value;\n  const nodeStyle = node.style;\n  if (typeof value === \"string\")\n    return nodeStyle.cssText = value;\n  typeof prev === \"string\" && (nodeStyle.cssText = prev = void 0);\n  prev || (prev = {});\n  value || (value = {});\n  let v, s2;\n  for (s2 in prev) {\n    value[s2] == null && nodeStyle.removeProperty(s2);\n    delete prev[s2];\n  }\n  for (s2 in value) {\n    v = value[s2];\n    if (v !== prev[s2]) {\n      nodeStyle.setProperty(s2, v);\n      prev[s2] = v;\n    }\n  }\n  return prev;\n}\nfunction spread(node, props = {}, isSVG, skipChildren) {\n  const prevProps = {};\n  if (!skipChildren) {\n    createRenderEffect(() => prevProps.children = insertExpression(node, props.children, prevProps.children));\n  }\n  createRenderEffect(() => props.ref && props.ref(node));\n  createRenderEffect(() => assign(node, props, isSVG, true, prevProps, true));\n  return prevProps;\n}\nfunction use(fn, element, arg) {\n  return untrack(() => fn(element, arg));\n}\nfunction insert(parent, accessor, marker, initial) {\n  if (marker !== void 0 && !initial)\n    initial = [];\n  if (typeof accessor !== \"function\")\n    return insertExpression(parent, accessor, initial, marker);\n  createRenderEffect((current) => insertExpression(parent, accessor(), current, marker), initial);\n}\nfunction assign(node, props, isSVG, skipChildren, prevProps = {}, skipRef = false) {\n  props || (props = {});\n  for (const prop in prevProps) {\n    if (!(prop in props)) {\n      if (prop === \"children\")\n        continue;\n      prevProps[prop] = assignProp(node, prop, null, prevProps[prop], isSVG, skipRef);\n    }\n  }\n  for (const prop in props) {\n    if (prop === \"children\") {\n      if (!skipChildren)\n        insertExpression(node, props.children);\n      continue;\n    }\n    const value = props[prop];\n    prevProps[prop] = assignProp(node, prop, value, prevProps[prop], isSVG, skipRef);\n  }\n}\nfunction getNextElement(template2) {\n  let node, key;\n  if (!sharedConfig.context || !(node = sharedConfig.registry.get(key = getHydrationKey()))) {\n    return template2.cloneNode(true);\n  }\n  if (sharedConfig.completed)\n    sharedConfig.completed.add(node);\n  sharedConfig.registry.delete(key);\n  return node;\n}\nfunction toPropertyName(name) {\n  return name.toLowerCase().replace(/-([a-z])/g, (_, w) => w.toUpperCase());\n}\nfunction toggleClassKey(node, key, value) {\n  const classNames = key.trim().split(/\\s+/);\n  for (let i2 = 0, nameLen = classNames.length; i2 < nameLen; i2++)\n    node.classList.toggle(classNames[i2], value);\n}\nfunction assignProp(node, prop, value, prev, isSVG, skipRef) {\n  let isCE, isProp, isChildProp;\n  if (prop === \"style\")\n    return style(node, value, prev);\n  if (prop === \"classList\")\n    return classList(node, value, prev);\n  if (value === prev)\n    return prev;\n  if (prop === \"ref\") {\n    if (!skipRef)\n      value(node);\n  } else if (prop.slice(0, 3) === \"on:\") {\n    const e2 = prop.slice(3);\n    prev && node.removeEventListener(e2, prev);\n    value && node.addEventListener(e2, value);\n  } else if (prop.slice(0, 10) === \"oncapture:\") {\n    const e2 = prop.slice(10);\n    prev && node.removeEventListener(e2, prev, true);\n    value && node.addEventListener(e2, value, true);\n  } else if (prop.slice(0, 2) === \"on\") {\n    const name = prop.slice(2).toLowerCase();\n    const delegate = DelegatedEvents.has(name);\n    if (!delegate && prev) {\n      const h2 = Array.isArray(prev) ? prev[0] : prev;\n      node.removeEventListener(name, h2);\n    }\n    if (delegate || value) {\n      addEventListener(node, name, value, delegate);\n      delegate && delegateEvents([name]);\n    }\n  } else if ((isChildProp = ChildProperties.has(prop)) || !isSVG && (PropAliases[prop] || (isProp = Properties.has(prop))) || (isCE = node.nodeName.includes(\"-\"))) {\n    if (prop === \"class\" || prop === \"className\")\n      className(node, value);\n    else if (isCE && !isProp && !isChildProp)\n      node[toPropertyName(prop)] = value;\n    else\n      node[PropAliases[prop] || prop] = value;\n  } else {\n    const ns = isSVG && prop.indexOf(\":\") > -1 && SVGNamespace[prop.split(\":\")[0]];\n    if (ns)\n      setAttributeNS(node, ns, prop, value);\n    else\n      setAttribute(node, Aliases[prop] || prop, value);\n  }\n  return value;\n}\nfunction eventHandler(e2) {\n  const key = `$$${e2.type}`;\n  let node = e2.composedPath && e2.composedPath()[0] || e2.target;\n  if (e2.target !== node) {\n    Object.defineProperty(e2, \"target\", {\n      configurable: true,\n      value: node\n    });\n  }\n  Object.defineProperty(e2, \"currentTarget\", {\n    configurable: true,\n    get() {\n      return node || document;\n    }\n  });\n  if (sharedConfig.registry && !sharedConfig.done) {\n    sharedConfig.done = true;\n    document.querySelectorAll(\"[id^=pl-]\").forEach((elem) => {\n      while (elem && elem.nodeType !== 8 && elem.nodeValue !== \"pl-\" + e2) {\n        let x = elem.nextSibling;\n        elem.remove();\n        elem = x;\n      }\n      elem && elem.remove();\n    });\n  }\n  while (node) {\n    const handler = node[key];\n    if (handler && !node.disabled) {\n      const data = node[`${key}Data`];\n      data !== void 0 ? handler.call(node, data, e2) : handler.call(node, e2);\n      if (e2.cancelBubble)\n        return;\n    }\n    node = node._$host || node.parentNode || node.host;\n  }\n}\nfunction insertExpression(parent, value, current, marker, unwrapArray) {\n  if (sharedConfig.context && !current)\n    current = [...parent.childNodes];\n  while (typeof current === \"function\")\n    current = current();\n  if (value === current)\n    return current;\n  const t2 = typeof value, multi = marker !== void 0;\n  parent = multi && current[0] && current[0].parentNode || parent;\n  if (t2 === \"string\" || t2 === \"number\") {\n    if (sharedConfig.context)\n      return current;\n    if (t2 === \"number\")\n      value = value.toString();\n    if (multi) {\n      let node = current[0];\n      if (node && node.nodeType === 3) {\n        node.data = value;\n      } else\n        node = document.createTextNode(value);\n      current = cleanChildren(parent, current, marker, node);\n    } else {\n      if (current !== \"\" && typeof current === \"string\") {\n        current = parent.firstChild.data = value;\n      } else\n        current = parent.textContent = value;\n    }\n  } else if (value == null || t2 === \"boolean\") {\n    if (sharedConfig.context)\n      return current;\n    current = cleanChildren(parent, current, marker);\n  } else if (t2 === \"function\") {\n    createRenderEffect(() => {\n      let v = value();\n      while (typeof v === \"function\")\n        v = v();\n      current = insertExpression(parent, v, current, marker);\n    });\n    return () => current;\n  } else if (Array.isArray(value)) {\n    const array = [];\n    const currentArray = current && Array.isArray(current);\n    if (normalizeIncomingArray(array, value, current, unwrapArray)) {\n      createRenderEffect(() => current = insertExpression(parent, array, current, marker, true));\n      return () => current;\n    }\n    if (sharedConfig.context) {\n      if (!array.length)\n        return current;\n      for (let i2 = 0; i2 < array.length; i2++) {\n        if (array[i2].parentNode)\n          return current = array;\n      }\n    }\n    if (array.length === 0) {\n      current = cleanChildren(parent, current, marker);\n      if (multi)\n        return current;\n    } else if (currentArray) {\n      if (current.length === 0) {\n        appendNodes(parent, array, marker);\n      } else\n        reconcileArrays(parent, current, array);\n    } else {\n      current && cleanChildren(parent);\n      appendNodes(parent, array);\n    }\n    current = array;\n  } else if (value instanceof Node) {\n    if (sharedConfig.context && value.parentNode)\n      return current = multi ? [value] : value;\n    if (Array.isArray(current)) {\n      if (multi)\n        return current = cleanChildren(parent, current, marker, value);\n      cleanChildren(parent, current, null, value);\n    } else if (current == null || current === \"\" || !parent.firstChild) {\n      parent.appendChild(value);\n    } else\n      parent.replaceChild(value, parent.firstChild);\n    current = value;\n  } else\n    ;\n  return current;\n}\nfunction normalizeIncomingArray(normalized, array, current, unwrap2) {\n  let dynamic = false;\n  for (let i2 = 0, len = array.length; i2 < len; i2++) {\n    let item = array[i2], prev = current && current[i2];\n    if (item instanceof Node) {\n      normalized.push(item);\n    } else if (item == null || item === true || item === false)\n      ;\n    else if (Array.isArray(item)) {\n      dynamic = normalizeIncomingArray(normalized, item, prev) || dynamic;\n    } else if (typeof item === \"function\") {\n      if (unwrap2) {\n        while (typeof item === \"function\")\n          item = item();\n        dynamic = normalizeIncomingArray(normalized, Array.isArray(item) ? item : [item], Array.isArray(prev) ? prev : [prev]) || dynamic;\n      } else {\n        normalized.push(item);\n        dynamic = true;\n      }\n    } else {\n      const value = String(item);\n      if (prev && prev.nodeType === 3 && prev.data === value) {\n        normalized.push(prev);\n      } else\n        normalized.push(document.createTextNode(value));\n    }\n  }\n  return dynamic;\n}\nfunction appendNodes(parent, array, marker = null) {\n  for (let i2 = 0, len = array.length; i2 < len; i2++)\n    parent.insertBefore(array[i2], marker);\n}\nfunction cleanChildren(parent, current, marker, replacement) {\n  if (marker === void 0)\n    return parent.textContent = \"\";\n  const node = replacement || document.createTextNode(\"\");\n  if (current.length) {\n    let inserted = false;\n    for (let i2 = current.length - 1; i2 >= 0; i2--) {\n      const el = current[i2];\n      if (node !== el) {\n        const isParent = el.parentNode === parent;\n        if (!inserted && !i2)\n          isParent ? parent.replaceChild(node, el) : parent.insertBefore(node, marker);\n        else\n          isParent && el.remove();\n      } else\n        inserted = true;\n    }\n  } else\n    parent.insertBefore(node, marker);\n  return [node];\n}\nfunction getHydrationKey() {\n  const hydrate = sharedConfig.context;\n  return `${hydrate.id}${hydrate.count++}`;\n}\nconst SVG_NAMESPACE = \"http://www.w3.org/2000/svg\";\nfunction createElement(tagName, isSVG = false) {\n  return isSVG ? document.createElementNS(SVG_NAMESPACE, tagName) : document.createElement(tagName);\n}\nfunction Portal(props) {\n  const {\n    useShadow\n  } = props, marker = document.createTextNode(\"\"), mount = props.mount || document.body;\n  function renderPortal() {\n    if (sharedConfig.context) {\n      const [s2, set] = createSignal(false);\n      queueMicrotask(() => set(true));\n      return () => s2() && props.children;\n    } else\n      return () => props.children;\n  }\n  if (mount instanceof HTMLHeadElement) {\n    const [clean, setClean] = createSignal(false);\n    const cleanup = () => setClean(true);\n    createRoot((dispose2) => insert(mount, () => !clean() ? renderPortal()() : dispose2(), null));\n    onCleanup(() => {\n      if (sharedConfig.context)\n        queueMicrotask(cleanup);\n      else\n        cleanup();\n    });\n  } else {\n    const container = createElement(props.isSVG ? \"g\" : \"div\", props.isSVG), renderRoot = useShadow && container.attachShadow ? container.attachShadow({\n      mode: \"open\"\n    }) : container;\n    Object.defineProperty(container, \"_$host\", {\n      get() {\n        return marker.parentNode;\n      },\n      configurable: true\n    });\n    insert(renderRoot, renderPortal());\n    mount.appendChild(container);\n    props.ref && props.ref(container);\n    onCleanup(() => mount.removeChild(container));\n  }\n  return marker;\n}\nfunction Dynamic(props) {\n  const [p2, others] = splitProps(props, [\"component\"]);\n  const cached = createMemo(() => p2.component);\n  return createMemo(() => {\n    const component = cached();\n    switch (typeof component) {\n      case \"function\":\n        return untrack(() => component(others));\n      case \"string\":\n        const isSvg = SVGElements.has(component);\n        const el = sharedConfig.context ? getNextElement() : createElement(component, isSvg);\n        spread(el, others, isSvg);\n        return el;\n    }\n  });\n}\nvar THEME = /* @__PURE__ */ ((THEME2) => {\n  THEME2[\"DARK\"] = \"DARK\";\n  THEME2[\"LIGHT\"] = \"LIGHT\";\n  return THEME2;\n})(THEME || {});\nlet e = { data: \"\" }, t = (t2) => \"object\" == typeof window ? ((t2 ? t2.querySelector(\"#_goober\") : window._goober) || Object.assign((t2 || document.head).appendChild(document.createElement(\"style\")), { innerHTML: \" \", id: \"_goober\" })).firstChild : t2 || e, l = /(?:([\\u0080-\\uFFFF\\w-%@]+) *:? *([^{;]+?);|([^;}{]*?) *{)|(}\\s*)/g, a = /\\/\\*[^]*?\\*\\/|  +/g, n = /\\n+/g, o = (e2, t2) => {\n  let r = \"\", l2 = \"\", a2 = \"\";\n  for (let n2 in e2) {\n    let c2 = e2[n2];\n    \"@\" == n2[0] ? \"i\" == n2[1] ? r = n2 + \" \" + c2 + \";\" : l2 += \"f\" == n2[1] ? o(c2, n2) : n2 + \"{\" + o(c2, \"k\" == n2[1] ? \"\" : t2) + \"}\" : \"object\" == typeof c2 ? l2 += o(c2, t2 ? t2.replace(/([^,])+/g, (e3) => n2.replace(/(^:.*)|([^,])+/g, (t3) => /&/.test(t3) ? t3.replace(/&/g, e3) : e3 ? e3 + \" \" + t3 : t3)) : n2) : null != c2 && (n2 = /^--/.test(n2) ? n2 : n2.replace(/[A-Z]/g, \"-$&\").toLowerCase(), a2 += o.p ? o.p(n2, c2) : n2 + \":\" + c2 + \";\");\n  }\n  return r + (t2 && a2 ? t2 + \"{\" + a2 + \"}\" : a2) + l2;\n}, c = {}, s = (e2) => {\n  if (\"object\" == typeof e2) {\n    let t2 = \"\";\n    for (let r in e2)\n      t2 += r + s(e2[r]);\n    return t2;\n  }\n  return e2;\n}, i = (e2, t2, r, i2, p2) => {\n  let u2 = s(e2), d = c[u2] || (c[u2] = ((e3) => {\n    let t3 = 0, r2 = 11;\n    for (; t3 < e3.length; )\n      r2 = 101 * r2 + e3.charCodeAt(t3++) >>> 0;\n    return \"go\" + r2;\n  })(u2));\n  if (!c[d]) {\n    let t3 = u2 !== e2 ? e2 : ((e3) => {\n      let t4, r2, o2 = [{}];\n      for (; t4 = l.exec(e3.replace(a, \"\")); )\n        t4[4] ? o2.shift() : t4[3] ? (r2 = t4[3].replace(n, \" \").trim(), o2.unshift(o2[0][r2] = o2[0][r2] || {})) : o2[0][t4[1]] = t4[2].replace(n, \" \").trim();\n      return o2[0];\n    })(e2);\n    c[d] = o(p2 ? { [\"@keyframes \" + d]: t3 } : t3, r ? \"\" : \".\" + d);\n  }\n  let f = r && c.g ? c.g : null;\n  return r && (c.g = c[d]), ((e3, t3, r2, l2) => {\n    l2 ? t3.data = t3.data.replace(l2, e3) : -1 === t3.data.indexOf(e3) && (t3.data = r2 ? e3 + t3.data : t3.data + e3);\n  })(c[d], t2, i2, f), d;\n}, p = (e2, t2, r) => e2.reduce((e3, l2, a2) => {\n  let n2 = t2[a2];\n  if (n2 && n2.call) {\n    let e4 = n2(r), t3 = e4 && e4.props && e4.props.className || /^go/.test(e4) && e4;\n    n2 = t3 ? \".\" + t3 : e4 && \"object\" == typeof e4 ? e4.props ? \"\" : o(e4, \"\") : false === e4 ? \"\" : e4;\n  }\n  return e3 + l2 + (null == n2 ? \"\" : n2);\n}, \"\");\nfunction u(e2) {\n  let r = this || {}, l2 = e2.call ? e2(r.p) : e2;\n  return i(l2.unshift ? l2.raw ? p(l2, [].slice.call(arguments, 1), r.p) : l2.reduce((e3, t2) => Object.assign(e3, t2 && t2.call ? t2(r.p) : t2), {}) : l2, t(r.target), r.g, r.o, r.k);\n}\nu.bind({ g: 1 });\nlet h = u.bind({ k: 1 });\nconst ThemeContext = createContext();\nfunction ThemeProvider(props) {\n  return createComponent(ThemeContext.Provider, {\n    value: props.theme,\n    get children() {\n      return props.children;\n    }\n  });\n}\nfunction useTheme() {\n  return useContext(ThemeContext);\n}\nfunction makeStyled(tag) {\n  let _ctx = this || {};\n  return (...args) => {\n    const Styled = (props) => {\n      const theme = useContext(ThemeContext);\n      const withTheme = mergeProps(props, { theme });\n      const clone = mergeProps(withTheme, {\n        get class() {\n          const pClass = withTheme.class, append = \"class\" in withTheme && /^go[0-9]+/.test(pClass);\n          let className2 = u.apply(\n            { target: _ctx.target, o: append, p: withTheme, g: _ctx.g },\n            args\n          );\n          return [pClass, className2].filter(Boolean).join(\" \");\n        }\n      });\n      const [local, newProps] = splitProps(clone, [\"as\", \"theme\"]);\n      const htmlProps = newProps;\n      const createTag = local.as || tag;\n      let el;\n      if (typeof createTag === \"function\") {\n        el = createTag(htmlProps);\n      } else {\n        {\n          if (_ctx.g == 1) {\n            el = document.createElement(createTag);\n            spread(el, htmlProps);\n          } else {\n            el = Dynamic(mergeProps({ component: createTag }, htmlProps));\n          }\n        }\n      }\n      return el;\n    };\n    Styled.class = (props) => {\n      return untrack(() => {\n        return u.apply({ target: _ctx.target, p: props, g: _ctx.g }, args);\n      });\n    };\n    return Styled;\n  };\n}\nconst styled = new Proxy(makeStyled, {\n  get(target, tag) {\n    return target(tag);\n  }\n});\nfunction createGlobalStyles() {\n  const fn = makeStyled.call({ g: 1 }, \"div\").apply(null, arguments);\n  return function GlobalStyles2(props) {\n    fn(props);\n    return null;\n  };\n}\nconst globalStylesTag = \"tc-root\";\nconst disableScrollClass = \"tc-disable-scroll\";\nconst usingMouseClass = \"tc-using-mouse\";\nconst GlobalStyles = () => {\n  document.body.addEventListener(\"mousedown\", () => document.body.classList.add(usingMouseClass));\n  document.body.addEventListener(\"keydown\", (event) => {\n    if (event.key === \"Tab\") {\n      document.body.classList.remove(usingMouseClass);\n    }\n  });\n  const Styles = createGlobalStyles`\n    ${globalStylesTag} * {\n        margin: 0;\n        padding: 0;\n        box-sizing: border-box;\n        \n        font-family: -apple-system, BlinkMacSystemFont, 'Roboto', 'Helvetica Neue', Arial, Tahoma, Verdana, sans-serif;\n        -webkit-font-smoothing: antialiased;\n        -moz-osx-font-smoothing: grayscale;        \n        -webkit-tap-highlight-color: transparent;\n    }\n    \n    ${globalStylesTag} img {\n      -webkit-user-select: none;\n      -webkit-touch-callout: none;\n    }   \n \n    ${globalStylesTag} *:focus {\n        outline: #08f auto 2px;\n    }\n    \n    ${globalStylesTag} li {\n        list-style: none;\n    }\n    \n    ${globalStylesTag} button {\n        outline: none;\n    }\n    \n    body.${disableScrollClass} {\n        position: fixed; \n        overflow-y: scroll;\n        right: 0;\n        left: 0;\n    }\n    \n    body.${usingMouseClass} ${globalStylesTag} *:focus {\n        outline: none;\n    }\n`;\n  return createComponent(Styles, {});\n};\nfunction hexToRgb(hex) {\n  if (hex[0] === \"#\") {\n    hex = hex.slice(1);\n  }\n  const bigint = parseInt(hex, 16);\n  const r = bigint >> 16 & 255;\n  const g = bigint >> 8 & 255;\n  const b = bigint & 255;\n  return [r, g, b].join(\",\");\n}\nfunction rgba(color, opacity) {\n  if (color[0] === \"#\") {\n    color = hexToRgb(color);\n  }\n  return `rgba(${color}, ${opacity})`;\n}\nfunction toPx(value) {\n  return value.toString() + \"px\";\n}\nconst _InMemoryStorage = class {\n  constructor() {\n    __publicField(this, \"storage\", {});\n  }\n  static getInstance() {\n    if (!_InMemoryStorage.instance) {\n      _InMemoryStorage.instance = new _InMemoryStorage();\n    }\n    return _InMemoryStorage.instance;\n  }\n  get length() {\n    return Object.keys(this.storage).length;\n  }\n  clear() {\n    this.storage = {};\n  }\n  getItem(key) {\n    var _a2;\n    return (_a2 = this.storage[key]) != null ? _a2 : null;\n  }\n  key(index) {\n    var _a2;\n    const keys = Object.keys(this.storage);\n    if (index < 0 || index >= keys.length) {\n      return null;\n    }\n    return (_a2 = keys[index]) != null ? _a2 : null;\n  }\n  removeItem(key) {\n    delete this.storage[key];\n  }\n  setItem(key, value) {\n    this.storage[key] = value;\n  }\n};\nlet InMemoryStorage = _InMemoryStorage;\n__publicField(InMemoryStorage, \"instance\");\nclass TonConnectUIError extends _tonconnect_sdk__WEBPACK_IMPORTED_MODULE_0__.TonConnectError {\n  constructor(...args) {\n    super(...args);\n    Object.setPrototypeOf(this, TonConnectUIError.prototype);\n  }\n}\nfunction logDebug(...args) {\n  {\n    try {\n      console.debug(\"[TON_CONNECT_UI]\", ...args);\n    } catch (e2) {\n    }\n  }\n}\nfunction logError(...args) {\n  {\n    try {\n      console.error(\"[TON_CONNECT_UI]\", ...args);\n    } catch (e2) {\n    }\n  }\n}\nfunction logWarning(...args) {\n  {\n    try {\n      console.warn(\"[TON_CONNECT_UI]\", ...args);\n    } catch (e2) {\n    }\n  }\n}\nfunction openLink(href, target = \"_self\") {\n  logDebug(\"openLink\", href, target);\n  window.open(href, target, \"noopener noreferrer\");\n}\nfunction openLinkBlank(href) {\n  openLink(href, \"_blank\");\n}\nfunction openDeeplinkWithFallback(href, fallback) {\n  const doFallback = () => {\n    if (isBrowser(\"safari\") || isOS(\"android\") && isBrowser(\"firefox\")) {\n      return;\n    }\n    fallback();\n  };\n  const fallbackTimeout = setTimeout(() => doFallback(), 200);\n  window.addEventListener(\"blur\", () => clearTimeout(fallbackTimeout), { once: true });\n  openLink(href, \"_self\");\n}\nfunction getSystemTheme() {\n  if (window.matchMedia && window.matchMedia(\"(prefers-color-scheme: light)\").matches) {\n    return THEME.LIGHT;\n  }\n  return THEME.DARK;\n}\nfunction subscribeToThemeChange(callback) {\n  const handler = (event) => callback(event.matches ? THEME.DARK : THEME.LIGHT);\n  window.matchMedia(\"(prefers-color-scheme: dark)\").addEventListener(\"change\", handler);\n  return () => window.matchMedia(\"(prefers-color-scheme: dark)\").removeEventListener(\"change\", handler);\n}\nfunction disableScroll() {\n  if (document.documentElement.scrollHeight === document.documentElement.clientHeight) {\n    return;\n  }\n  document.body.style.top = toPx(-document.documentElement.scrollTop);\n  document.body.classList.add(disableScrollClass);\n}\nfunction enableScroll() {\n  document.body.classList.remove(disableScrollClass);\n  document.documentElement.scrollTo({ top: -parseFloat(getComputedStyle(document.body).top) });\n  document.body.style.top = \"auto\";\n}\nfunction fixMobileSafariActiveTransition() {\n  if (!document.body.hasAttribute(\"ontouchstart\")) {\n    document.body.setAttribute(\"ontouchstart\", \"\");\n  }\n}\nfunction defineStylesRoot() {\n  customElements.define(globalStylesTag, class TcRootElement extends HTMLElement {\n  });\n}\nfunction createMacrotask(callback) {\n  return __async(this, null, function* () {\n    yield new Promise((resolve) => requestAnimationFrame(resolve));\n    callback();\n  });\n}\nfunction createMacrotaskAsync(callback) {\n  return __async(this, null, function* () {\n    yield new Promise((resolve) => requestAnimationFrame(resolve));\n    return callback();\n  });\n}\nfunction preloadImages(images) {\n  if (document.readyState !== \"complete\") {\n    window.addEventListener(\"load\", () => createMacrotask(() => preloadImages(images)), {\n      once: true\n    });\n  } else {\n    images.forEach((img) => {\n      const node = new window.Image();\n      node.src = img;\n    });\n  }\n}\nfunction getWindow$1() {\n  if (typeof window !== \"undefined\") {\n    return window;\n  }\n  return void 0;\n}\nfunction tryGetLocalStorage() {\n  if (isLocalStorageAvailable()) {\n    return localStorage;\n  }\n  if (isNodeJs()) {\n    throw new TonConnectUIError(\n      \"`localStorage` is unavailable, but it is required for TonConnect. For more details, see https://github.com/ton-connect/sdk/tree/main/packages/sdk#init-connector\"\n    );\n  }\n  return InMemoryStorage.getInstance();\n}\nfunction isLocalStorageAvailable() {\n  try {\n    return typeof localStorage !== \"undefined\";\n  } catch (e2) {\n    return false;\n  }\n}\nfunction isNodeJs() {\n  return typeof process !== \"undefined\" && process.versions != null && process.versions.node != null;\n}\nfunction getUserAgent() {\n  var _a2, _b2, _c2;\n  const results = new ua_parser_js__WEBPACK_IMPORTED_MODULE_1__().getResult();\n  const osName = (_a2 = results.os.name) == null ? void 0 : _a2.toLowerCase();\n  const deviceModel = (_b2 = results.device.model) == null ? void 0 : _b2.toLowerCase();\n  let os;\n  switch (true) {\n    case deviceModel === \"ipad\":\n      os = \"ipad\";\n      break;\n    case osName === \"ios\":\n      os = \"ios\";\n      break;\n    case osName === \"android\":\n      os = \"android\";\n      break;\n    case osName === \"mac os\":\n      os = \"macos\";\n      break;\n    case osName === \"linux\":\n      os = \"linux\";\n      break;\n    case (osName == null ? void 0 : osName.includes(\"windows\")):\n      os = \"windows\";\n      break;\n  }\n  const browserName = (_c2 = results.browser.name) == null ? void 0 : _c2.toLowerCase();\n  let browser;\n  switch (true) {\n    case browserName === \"chrome\":\n      browser = \"chrome\";\n      break;\n    case browserName === \"firefox\":\n      browser = \"firefox\";\n      break;\n    case (browserName == null ? void 0 : browserName.includes(\"safari\")):\n      browser = \"safari\";\n      break;\n    case (browserName == null ? void 0 : browserName.includes(\"opera\")):\n      browser = \"opera\";\n      break;\n  }\n  return {\n    os,\n    browser\n  };\n}\nfunction isOS(...os) {\n  return os.includes(getUserAgent().os);\n}\nfunction isBrowser(...browser) {\n  return browser.includes(getUserAgent().browser);\n}\nfunction toDeeplink(universalLink, deeplink) {\n  const url = new URL(universalLink);\n  return deeplink + url.search;\n}\nclass WalletInfoStorage {\n  constructor() {\n    __publicField(this, \"localStorage\");\n    __publicField(this, \"storageKey\", \"ton-connect-ui_wallet-info\");\n    this.localStorage = tryGetLocalStorage();\n  }\n  setWalletInfo(walletInfo) {\n    this.localStorage.setItem(this.storageKey, JSON.stringify(walletInfo));\n  }\n  getWalletInfo() {\n    const walletInfoString = this.localStorage.getItem(this.storageKey);\n    if (!walletInfoString) {\n      return null;\n    }\n    return JSON.parse(walletInfoString);\n  }\n  removeWalletInfo() {\n    this.localStorage.removeItem(this.storageKey);\n  }\n}\nclass PreferredWalletStorage {\n  constructor() {\n    __publicField(this, \"localStorage\");\n    __publicField(this, \"storageKey\", \"ton-connect-ui_preferred-wallet\");\n    this.localStorage = tryGetLocalStorage();\n  }\n  setPreferredWalletAppName(name) {\n    this.localStorage.setItem(this.storageKey, name);\n  }\n  getPreferredWalletAppName() {\n    return this.localStorage.getItem(this.storageKey) || void 0;\n  }\n}\nclass LastSelectedWalletInfoStorage {\n  constructor() {\n    __publicField(this, \"localStorage\");\n    __publicField(this, \"storageKey\", \"ton-connect-ui_last-selected-wallet-info\");\n    this.localStorage = tryGetLocalStorage();\n  }\n  setLastSelectedWalletInfo(walletInfo) {\n    this.localStorage.setItem(this.storageKey, JSON.stringify(walletInfo));\n  }\n  getLastSelectedWalletInfo() {\n    const walletInfoString = this.localStorage.getItem(this.storageKey);\n    if (!walletInfoString) {\n      return null;\n    }\n    return JSON.parse(walletInfoString);\n  }\n  removeLastSelectedWalletInfo() {\n    this.localStorage.removeItem(this.storageKey);\n  }\n}\nconst [walletsModalState, setWalletsModalState] = createSignal({\n  status: \"closed\",\n  closeReason: null\n});\nconst getWalletsModalIsOpened = createMemo(() => walletsModalState().status === \"opened\");\nconst [singleWalletModalState, setSingleWalletModalState] = createSignal({\n  status: \"closed\",\n  closeReason: null\n});\nconst getSingleWalletModalIsOpened = createMemo(\n  () => singleWalletModalState().status === \"opened\"\n);\nconst getSingleWalletModalWalletInfo = createMemo(() => {\n  const state = singleWalletModalState();\n  if (state.status === \"opened\") {\n    return state.walletInfo;\n  }\n  return null;\n});\nlet lastSelectedWalletInfoStorage = typeof window !== \"undefined\" ? new LastSelectedWalletInfoStorage() : void 0;\nconst [lastSelectedWalletInfo, _setLastSelectedWalletInfo] = createSignal((lastSelectedWalletInfoStorage == null ? void 0 : lastSelectedWalletInfoStorage.getLastSelectedWalletInfo()) || null);\nconst setLastSelectedWalletInfo = (walletInfo) => {\n  if (!lastSelectedWalletInfoStorage) {\n    lastSelectedWalletInfoStorage = new LastSelectedWalletInfoStorage();\n  }\n  if (walletInfo) {\n    lastSelectedWalletInfoStorage.setLastSelectedWalletInfo(walletInfo);\n  } else {\n    lastSelectedWalletInfoStorage.removeLastSelectedWalletInfo();\n  }\n  _setLastSelectedWalletInfo(walletInfo);\n};\nconst [action, setAction] = createSignal(null);\nconst common$1 = {\n  close: \"Close\",\n  openWallet: \"Open wallet\",\n  copyLink: \"Copy Link\",\n  linkCopied: \"Link Copied\",\n  copied: \"Copied\",\n  yourWallet: \"Your Wallet\",\n  retry: \"Retry\",\n  get: \"GET\",\n  mobile: \"Mobile\",\n  browserExtension: \"Browser Extension\",\n  desktop: \"Desktop\"\n};\nconst button$1 = {\n  connectWallet: \"Connect Wallet\",\n  dropdown: {\n    copy: \"Copy address\",\n    copied: \"Address copied!\",\n    disconnect: \"Disconnect\"\n  }\n};\nconst notifications$1 = {\n  confirm: {\n    header: \"Open {{ name }} to\\xA0confirm the\\xA0transaction.\"\n  },\n  transactionSent: {\n    header: \"Transaction sent\",\n    text: \"Your transaction\\xA0will be\\xA0processed in\\xA0a\\xA0few seconds.\"\n  },\n  transactionCanceled: {\n    header: \"Transaction canceled\",\n    text: \"There will be no changes to\\xA0your account.\"\n  }\n};\nconst walletItem$1 = {\n  walletOn: \"Wallet On\",\n  recent: \"Recent\",\n  installed: \"Installed\",\n  popular: \"Popular\"\n};\nconst walletModal$1 = {\n  loading: \"Loading wallets\",\n  wallets: \"Wallets\",\n  mobileUniversalModal: {\n    connectYourWallet: \"Connect your wallet\",\n    openWalletOnTelegramOrSelect: \"Open Wallet in Telegram or select your wallet to connect\",\n    openWalletOnTelegram: \"Open Wallet in Telegram\",\n    openLink: \"Open Link\",\n    scan: \"Scan with your mobile wallet\"\n  },\n  desktopUniversalModal: {\n    connectYourWallet: \"Connect your wallet\",\n    scan: \"Scan with your mobile wallet\",\n    availableWallets: \"Available wallets\"\n  },\n  mobileConnectionModal: {\n    showQR: \"Show QR Code\",\n    scanQR: \"Scan the\\xA0QR code below with your phone\\u2019s\\xA0or\\xA0{{ name }}\\u2019s camera\",\n    continueIn: \"Continue in {{ name }}\\u2026\",\n    connectionDeclined: \"Connection declined\"\n  },\n  desktopConnectionModal: {\n    scanQR: \"Scan the\\xA0QR code below with your phone\\u2019s\\xA0or\\xA0{{ name }}\\u2019s camera\",\n    continueInExtension: \"Continue in\\xA0{{ name }} browser extension\\u2026\",\n    dontHaveExtension: \"Seems you don't have installed {{ name }}\\xA0browser\\xA0extension\",\n    getWallet: \"Get {{ name }}\",\n    continueOnDesktop: \"Continue in\\xA0{{ name }} on desktop\\u2026\",\n    openWalletOnTelegram: \"Open Wallet in Telegram on desktop\",\n    connectionDeclined: \"Connection declined\"\n  },\n  infoModal: {\n    whatIsAWallet: \"What is a wallet\",\n    secureDigitalAssets: \"Secure digital assets storage\",\n    walletProtects: \"A wallet protects and manages your digital assets\\xA0including TON, tokens and collectables.\",\n    controlIdentity: \"Control your Web3 identity\",\n    manageIdentity: \"Manage your digital identity and access decentralized applications with ease. Maintain control over your data and engage securely in\\xA0the\\xA0blockchain ecosystem.\",\n    effortlessCryptoTransactions: \"Effortless crypto transactions\",\n    easilySend: \"Easily send, receive, monitor your cryptocurrencies.\\xA0Streamline your operations with\\xA0decentralized applications.\",\n    getAWallet: \"Get a Wallet\"\n  }\n};\nconst actionModal$1 = {\n  confirmTransaction: {\n    header: \"Confirm the\\xA0transaction in\\xA0{{ name }}\",\n    text: \"It will only take a\\xA0moment.\"\n  },\n  transactionSent: \"$notifications.transactionSent\",\n  transactionCanceled: \"$notifications.transactionCanceled\"\n};\nconst en = {\n  common: common$1,\n  button: button$1,\n  notifications: notifications$1,\n  walletItem: walletItem$1,\n  walletModal: walletModal$1,\n  actionModal: actionModal$1\n};\nconst common = {\n  close: \"\\u0417\\u0430\\u043A\\u0440\\u044B\\u0442\\u044C\",\n  openWallet: \"\\u041E\\u0442\\u043A\\u0440\\u044B\\u0442\\u044C \\u043A\\u043E\\u0448\\u0435\\u043B\\u0451\\u043A\",\n  copyLink: \"\\u041A\\u043E\\u043F\\u0438\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C \\u0441\\u0441\\u044B\\u043B\\u043A\\u0443\",\n  linkCopied: \"\\u0421\\u0441\\u044B\\u043B\\u043A\\u0430 \\u0441\\u043A\\u043E\\u043F\\u0438\\u0440\\u043E\\u0432\\u0430\\u043D\\u0430\",\n  copied: \"\\u0421\\u0441\\u044B\\u043B\\u043A\\u0430 \\u0441\\u043A\\u043E\\u043F\\u0438\\u0440\\u043E\\u0432\\u0430\\u043D\\u0430\",\n  yourWallet: \"\\u0412\\u0430\\u0448 \\u043A\\u043E\\u0448\\u0435\\u043B\\u0451\\u043A\",\n  retry: \"\\u041F\\u043E\\u0432\\u0442\\u043E\\u0440\\u0438\\u0442\\u044C\",\n  get: \"\\u0421\\u043A\\u0430\\u0447\\u0430\\u0442\\u044C\",\n  mobile: \"\\u041C\\u043E\\u0431\\u0438\\u043B\\u044C\\u043D\\u044B\\u0439\",\n  browserExtension: \"\\u0420\\u0430\\u0441\\u0448\\u0438\\u0440\\u0435\\u043D\\u0438\\u0435\",\n  desktop: \"\\u0414\\u0435\\u0441\\u043A\\u0442\\u043E\\u043F\"\n};\nconst button = {\n  connectWallet: \"\\u041F\\u043E\\u0434\\u043A\\u043B\\u044E\\u0447\\u0438\\u0442\\u044C \\u043A\\u043E\\u0448\\u0435\\u043B\\u0451\\u043A\",\n  dropdown: {\n    copy: \"\\u0421\\u043A\\u043E\\u043F\\u0438\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C \\u0430\\u0434\\u0440\\u0435\\u0441\",\n    copied: \"\\u0410\\u0434\\u0440\\u0435\\u0441 \\u0441\\u043A\\u043E\\u043F\\u0438\\u0440\\u043E\\u0432\\u0430\\u043D!\",\n    disconnect: \"\\u041E\\u0442\\u043A\\u043B\\u044E\\u0447\\u0438\\u0442\\u044C \\u043A\\u043E\\u0448\\u0435\\u043B\\u0451\\u043A\"\n  }\n};\nconst notifications = {\n  confirm: {\n    header: \"\\u041E\\u0442\\u043A\\u0440\\u043E\\u0439\\u0442\\u0435 {{ name }}, \\u0447\\u0442\\u043E\\u0431\\u044B\\xA0\\u043F\\u043E\\u0434\\u0442\\u0432\\u0435\\u0440\\u0434\\u0438\\u0442\\u044C \\u0442\\u0440\\u0430\\u043D\\u0437\\u0430\\u043A\\u0446\\u0438\\u044E.\"\n  },\n  transactionSent: {\n    header: \"\\u0422\\u0440\\u0430\\u043D\\u0437\\u0430\\u043A\\u0446\\u0438\\u044F \\u043E\\u0442\\u043F\\u0440\\u0430\\u0432\\u043B\\u0435\\u043D\\u0430\",\n    text: \"\\u0412\\u0430\\u0448\\u0430 \\u0442\\u0440\\u0430\\u043D\\u0437\\u0430\\u043A\\u0446\\u0438\\u044F\\xA0\\u0431\\u0443\\u0434\\u0435\\u0442 \\u043E\\u0431\\u0440\\u0430\\u0431\\u043E\\u0442\\u0430\\u043D\\u0430 \\u0447\\u0435\\u0440\\u0435\\u0437\\xA0\\u043D\\u0435\\u0441\\u043A\\u043E\\u043B\\u044C\\u043A\\u043E \\u0441\\u0435\\u043A\\u0443\\u043D\\u0434.\"\n  },\n  transactionCanceled: {\n    header: \"\\u0422\\u0440\\u0430\\u043D\\u0437\\u0430\\u043A\\u0446\\u0438\\u044F \\u043E\\u0442\\u043C\\u0435\\u043D\\u0435\\u043D\\u0430\",\n    text: \"\\u0421\\u043E\\u0441\\u0442\\u043E\\u044F\\u043D\\u0438\\u0435 \\u0432\\u0430\\u0448\\u0435\\u0433\\u043E \\u0441\\u0447\\u0451\\u0442\\u0430 \\u043D\\u0435\\xA0\\u0438\\u0437\\u043C\\u0435\\u043D\\u0438\\u0442\\u0441\\u044F.\"\n  }\n};\nconst walletItem = {\n  walletOn: \"Wallet \\u0432\",\n  recent: \"\\u041D\\u0435\\u0434\\u0430\\u0432\\u043D\\u0438\\u0439\",\n  installed: \"\\u0423\\u0441\\u0442\\u0430\\u043D\\u043E\\u0432\\u043B\\u0435\\u043D\",\n  popular: \"\\u041F\\u043E\\u043F\\u0443\\u043B\\u044F\\u0440\\u0435\\u043D\"\n};\nconst walletModal = {\n  loading: \"\\u041A\\u043E\\u0448\\u0435\\u043B\\u044C\\u043A\\u0438 \\u0437\\u0430\\u0433\\u0440\\u0443\\u0436\\u0430\\u044E\\u0442\\u0441\\u044F\",\n  wallets: \"\\u041A\\u043E\\u0448\\u0435\\u043B\\u044C\\u043A\\u0438\",\n  mobileUniversalModal: {\n    connectYourWallet: \"\\u041F\\u043E\\u0434\\u043A\\u043B\\u044E\\u0447\\u0438\\u0442\\u0435 \\u043A\\u043E\\u0448\\u0435\\u043B\\u0451\\u043A\",\n    openWalletOnTelegramOrSelect: \"\\u041F\\u043E\\u0434\\u043A\\u043B\\u044E\\u0447\\u0438\\u0442\\u0435 Wallet \\u0432\\xA0Telegram \\u0438\\u043B\\u0438\\xA0\\u0432\\u044B\\u0431\\u0435\\u0440\\u0435\\u0442\\u0435 \\u043A\\u043E\\u0448\\u0435\\u043B\\u0451\\u043A \\u0434\\u043B\\u044F\\xA0\\u043F\\u043E\\u0434\\u043A\\u043B\\u044E\\u0447\\u0435\\u043D\\u0438\\u044F\",\n    openWalletOnTelegram: \"\\u041E\\u0442\\u043A\\u0440\\u044B\\u0442\\u044C Wallet \\u0432 Telegram\",\n    openLink: \"\\u041E\\u0442\\u043A\\u0440\\u044B\\u0442\\u044C \\u0441\\u0441\\u044B\\u043B\\u043A\\u0443\",\n    scan: \"\\u041E\\u0442\\u0441\\u043A\\u0430\\u043D\\u0438\\u0440\\u0443\\u0439\\u0442\\u0435 \\u043A\\u0430\\u043C\\u0435\\u0440\\u043E\\u0439 \\u0432\\u0430\\u0448\\u0435\\u0433\\u043E\\xA0\\u0442\\u0435\\u043B\\u0435\\u0444\\u043E\\u043D\\u0430\"\n  },\n  desktopUniversalModal: {\n    connectYourWallet: \"\\u041F\\u043E\\u0434\\u043A\\u043B\\u044E\\u0447\\u0438\\u0442\\u0435 \\u043A\\u043E\\u0448\\u0435\\u043B\\u0451\\u043A\",\n    scan: \"\\u041E\\u0442\\u0441\\u043A\\u0430\\u043D\\u0438\\u0440\\u0443\\u0439\\u0442\\u0435 QR-\\u043A\\u043E\\u0434 \\u043A\\u0430\\u043C\\u0435\\u0440\\u043E\\u0439 \\u0432\\u0430\\u0448\\u0435\\u0433\\u043E\\xA0\\u0442\\u0435\\u043B\\u0435\\u0444\\u043E\\u043D\\u0430\",\n    availableWallets: \"\\u0414\\u043E\\u0441\\u0442\\u0443\\u043F\\u043D\\u044B\\u0435 \\u043A\\u043E\\u0448\\u0435\\u043B\\u044C\\u043A\\u0438\"\n  },\n  mobileConnectionModal: {\n    showQR: \"\\u041F\\u043E\\u043A\\u0430\\u0437\\u0430\\u0442\\u044C QR-\\u043A\\u043E\\u0434\",\n    scanQR: \"\\u041E\\u0442\\u0441\\u043A\\u0430\\u043D\\u0438\\u0440\\u0443\\u0439\\u0442\\u0435 QR-\\u043A\\u043E\\u0434 \\u043D\\u0438\\u0436\\u0435 \\u043A\\u0430\\u043C\\u0435\\u0440\\u043E\\u0439 \\u0432\\xA0\\u043F\\u0440\\u0438\\u043B\\u043E\\u0436\\u0435\\u043D\\u0438\\u0438 {{ name }}, \\u0438\\u043B\\u0438\\xA0\\u043A\\u0430\\u043C\\u0435\\u0440\\u043E\\u0439 \\u0442\\u0435\\u043B\\u0435\\u0444\\u043E\\u043D\\u0430\",\n    continueIn: \"\\u041F\\u0440\\u043E\\u0434\\u043E\\u043B\\u0436\\u0438\\u0442\\u0435 \\u0432 {{ name }}\\u2026\",\n    connectionDeclined: \"\\u041F\\u043E\\u0434\\u043A\\u043B\\u044E\\u0447\\u0435\\u043D\\u0438\\u0435 \\u043E\\u0442\\u043A\\u043B\\u043E\\u043D\\u0435\\u043D\\u043E\"\n  },\n  desktopConnectionModal: {\n    scanQR: \"\\u041E\\u0442\\u0441\\u043A\\u0430\\u043D\\u0438\\u0440\\u0443\\u0439\\u0442\\u0435 QR-\\u043A\\u043E\\u0434 \\u043D\\u0438\\u0436\\u0435 \\u043A\\u0430\\u043C\\u0435\\u0440\\u043E\\u0439 \\u0432\\xA0\\u043F\\u0440\\u0438\\u043B\\u043E\\u0436\\u0435\\u043D\\u0438\\u0438 {{ name }}, \\u0438\\u043B\\u0438\\xA0\\u043A\\u0430\\u043C\\u0435\\u0440\\u043E\\u0439 \\u0442\\u0435\\u043B\\u0435\\u0444\\u043E\\u043D\\u0430\",\n    continueInExtension: \"\\u041E\\u0442\\u043A\\u0440\\u043E\\u0439\\u0442\\u0435 \\u0431\\u0440\\u0430\\u0443\\u0437\\u0435\\u0440\\u043D\\u043E\\u0435 \\u0440\\u0430\\u0441\\u0448\\u0438\\u0440\\u0435\\u043D\\u0438\\u0435 {{ name }}\",\n    dontHaveExtension: \"\\u041F\\u043E\\u0445\\u043E\\u0436\\u0435, \\u0443 \\u0432\\u0430\\u0441 \\u043D\\u0435\\xA0\\u0443\\u0441\\u0442\\u0430\\u043D\\u043E\\u0432\\u043B\\u0435\\u043D\\u043E \\u0431\\u0440\\u0430\\u0443\\u0437\\u0435\\u0440\\u043D\\u043E\\u0435\\xA0\\u0440\\u0430\\u0441\\u0448\\u0438\\u0440\\u0435\\u043D\\u0438\\u0435\\xA0{{ name }}\",\n    getWallet: \"\\u0421\\u043A\\u0430\\u0447\\u0430\\u0442\\u044C {{ name }}\",\n    continueOnDesktop: \"\\u041E\\u0442\\u043A\\u0440\\u043E\\u0439\\u0442\\u0435 {{ name }} \\u043D\\u0430\\xA0\\u043A\\u043E\\u043C\\u043F\\u044C\\u044E\\u0442\\u0435\\u0440\\u0435\\u2026\",\n    openWalletOnTelegram: \"\\u041E\\u0442\\u043A\\u0440\\u044B\\u0442\\u044C Wallet \\u0432\\xA0Telegram\",\n    connectionDeclined: \"\\u041F\\u043E\\u0434\\u043A\\u043B\\u044E\\u0447\\u0435\\u043D\\u0438\\u0435 \\u043E\\u0442\\u043A\\u043B\\u043E\\u043D\\u0435\\u043D\\u043E\"\n  },\n  infoModal: {\n    whatIsAWallet: \"\\u0427\\u0442\\u043E \\u0442\\u0430\\u043A\\u043E\\u0435 \\u043A\\u043E\\u0448\\u0435\\u043B\\u0451\\u043A?\",\n    secureDigitalAssets: \"\\u041D\\u0430\\u0434\\u0435\\u0436\\u043D\\u043E\\u0435 \\u0445\\u0440\\u0430\\u043D\\u0438\\u043B\\u0438\\u0449\\u0435 \\u0446\\u0438\\u0444\\u0440\\u043E\\u0432\\u044B\\u0445 \\u0430\\u043A\\u0442\\u0438\\u0432\\u043E\\u0432\",\n    walletProtects: \"\\u041A\\u043E\\u0448\\u0435\\u043B\\u0451\\u043A \\u0437\\u0430\\u0449\\u0438\\u0449\\u0430\\u0435\\u0442 \\u0432\\u0430\\u0448\\u0438 \\u0446\\u0438\\u0444\\u0440\\u043E\\u0432\\u044B\\u0435 \\u0430\\u043A\\u0442\\u0438\\u0432\\u044B, \\u0432\\u043A\\u043B\\u044E\\u0447\\u0430\\u044F TON, \\u0442\\u043E\\u043A\\u0435\\u043D\\u044B \\u0438\\xA0\\u043F\\u0440\\u0435\\u0434\\u043C\\u0435\\u0442\\u044B \\u043A\\u043E\\u043B\\u043B\\u0435\\u043A\\u0446\\u0438\\u043E\\u043D\\u0438\\u0440\\u043E\\u0432\\u0430\\u043D\\u0438\\u044F, \\u0438\\xA0\\u0443\\u043F\\u0440\\u0430\\u0432\\u043B\\u044F\\u0435\\u0442 \\u0438\\u043C\\u0438.\",\n    controlIdentity: \"\\u041A\\u043E\\u043D\\u0442\\u0440\\u043E\\u043B\\u044C \\u0441\\u0432\\u043E\\u0435\\u0439 \\u043B\\u0438\\u0447\\u043D\\u043E\\u0441\\u0442\\u0438 Web3\",\n    manageIdentity: \"\\u0423\\u043F\\u0440\\u0430\\u0432\\u043B\\u044F\\u0439\\u0442\\u0435 \\u0441\\u0432\\u043E\\u0435\\u0439 \\u0446\\u0438\\u0444\\u0440\\u043E\\u0432\\u043E\\u0439 \\u0438\\u0434\\u0435\\u043D\\u0442\\u0438\\u0444\\u0438\\u043A\\u0430\\u0446\\u0438\\u0435\\u0439 \\u0438\\xA0\\u0441\\xA0\\u043B\\u0435\\u0433\\u043A\\u043E\\u0441\\u0442\\u044C\\u044E \\u043F\\u043E\\u043B\\u0443\\u0447\\u0430\\u0439\\u0442\\u0435 \\u0434\\u043E\\u0441\\u0442\\u0443\\u043F \\u043A\\xA0\\u0434\\u0435\\u0446\\u0435\\u043D\\u0442\\u0440\\u0430\\u043B\\u0438\\u0437\\u043E\\u0432\\u0430\\u043D\\u043D\\u044B\\u043C \\u043F\\u0440\\u0438\\u043B\\u043E\\u0436\\u0435\\u043D\\u0438\\u044F\\u043C. \\u0421\\u043E\\u0445\\u0440\\u0430\\u043D\\u044F\\u0439\\u0442\\u0435 \\u043A\\u043E\\u043D\\u0442\\u0440\\u043E\\u043B\\u044C \\u043D\\u0430\\u0434\\xA0\\u0441\\u0432\\u043E\\u0438\\u043C\\u0438 \\u0434\\u0430\\u043D\\u043D\\u044B\\u043C\\u0438 \\u0438\\xA0\\u0431\\u0435\\u0437\\u043E\\u043F\\u0430\\u0441\\u043D\\u043E \\u0443\\u0447\\u0430\\u0441\\u0442\\u0432\\u0443\\u0439\\u0442\\u0435 \\u0432\\xA0\\u044D\\u043A\\u043E\\u0441\\u0438\\u0441\\u0442\\u0435\\u043C\\u0435\\xA0\\u0431\\u043B\\u043E\\u043A\\u0447\\u0435\\u0439\\u043D\\u0430.\",\n    effortlessCryptoTransactions: \"\\u041F\\u0440\\u043E\\u0441\\u0442\\u044B\\u0435 \\u043A\\u0440\\u0438\\u043F\\u0442\\u043E\\u0442\\u0440\\u0430\\u043D\\u0437\\u0430\\u043A\\u0446\\u0438\\u0438\",\n    easilySend: \"\\u041B\\u0435\\u0433\\u043A\\u043E \\u043E\\u0442\\u043F\\u0440\\u0430\\u0432\\u043B\\u044F\\u0439\\u0442\\u0435, \\u043F\\u043E\\u043B\\u0443\\u0447\\u0430\\u0439\\u0442\\u0435 \\u0438\\xA0\\u043E\\u0442\\u0441\\u043B\\u0435\\u0436\\u0438\\u0432\\u0430\\u0439\\u0442\\u0435 \\u0441\\u0432\\u043E\\u0438 \\u043A\\u0440\\u0438\\u043F\\u0442\\u043E\\u0432\\u0430\\u043B\\u044E\\u0442\\u044B. \\u041E\\u043F\\u0442\\u0438\\u043C\\u0438\\u0437\\u0438\\u0440\\u0443\\u0439\\u0442\\u0435 \\u0441\\u0432\\u043E\\u0438 \\u043E\\u043F\\u0435\\u0440\\u0430\\u0446\\u0438\\u0438 \\u0441\\xA0\\u043F\\u043E\\u043C\\u043E\\u0449\\u044C\\u044E \\u0434\\u0435\\u0446\\u0435\\u043D\\u0442\\u0440\\u0430\\u043B\\u0438\\u0437\\u043E\\u0432\\u0430\\u043D\\u043D\\u044B\\u0445 \\u043F\\u0440\\u0438\\u043B\\u043E\\u0436\\u0435\\u043D\\u0438\\u0439.\",\n    getAWallet: \"\\u0421\\u043A\\u0430\\u0447\\u0430\\u0442\\u044C \\u043A\\u043E\\u0448\\u0435\\u043B\\u0451\\u043A\"\n  }\n};\nconst actionModal = {\n  confirmTransaction: {\n    header: \"\\u041F\\u043E\\u0434\\u0442\\u0432\\u0435\\u0440\\u0434\\u0438\\u0442\\u0435 \\u0434\\u0435\\u0439\\u0441\\u0442\\u0432\\u0438\\u0435 \\u0432\\xA0{{ name }}\",\n    text: \"\\u042D\\u0442\\u043E \\u0437\\u0430\\u0439\\u043C\\u0435\\u0442 \\u043F\\u0430\\u0440\\u0443 \\u0441\\u0435\\u043A\\u0443\\u043D\\u0434.\"\n  },\n  transactionSent: \"$notifications.transactionSent\",\n  transactionCanceled: \"$notifications.transactionCanceled\"\n};\nconst ru = {\n  common,\n  button,\n  notifications,\n  walletItem,\n  walletModal,\n  actionModal\n};\nconst i18nDictionary = {\n  en: parseDictionary(en),\n  ru: parseDictionary(ru)\n};\nfunction parseDictionary(dictionary) {\n  const refSymbol = \"$\";\n  const iterate = (subDictionary) => {\n    Object.entries(subDictionary).forEach(([key, value]) => {\n      if (typeof value === \"object\" && value) {\n        return iterate(value);\n      }\n      if (typeof value === \"string\") {\n        if (value[0] === refSymbol) {\n          const path = value.slice(1).split(\".\");\n          let obj = dictionary;\n          path.forEach((item) => {\n            if (item in obj) {\n              obj = obj[item];\n            } else {\n              throw new Error(\n                `Cannot parse translations: there is no property ${item} in translation`\n              );\n            }\n          });\n          subDictionary[key] = obj;\n        }\n        if (value.slice(0, 2) === `\\\\${refSymbol}`) {\n          subDictionary[key] = value.slice(1);\n        }\n      }\n    });\n  };\n  iterate(dictionary);\n  return dictionary;\n}\nconst ConnectorContext = createContext();\nconst $RAW = Symbol(\"store-raw\"), $NODE = Symbol(\"store-node\"), $NAME = Symbol(\"store-name\");\nfunction wrap$1(value, name) {\n  let p2 = value[$PROXY];\n  if (!p2) {\n    Object.defineProperty(value, $PROXY, {\n      value: p2 = new Proxy(value, proxyTraps$1)\n    });\n    if (!Array.isArray(value)) {\n      const keys = Object.keys(value), desc = Object.getOwnPropertyDescriptors(value);\n      for (let i2 = 0, l2 = keys.length; i2 < l2; i2++) {\n        const prop = keys[i2];\n        if (desc[prop].get) {\n          Object.defineProperty(value, prop, {\n            enumerable: desc[prop].enumerable,\n            get: desc[prop].get.bind(p2)\n          });\n        }\n      }\n    }\n  }\n  return p2;\n}\nfunction isWrappable(obj) {\n  let proto;\n  return obj != null && typeof obj === \"object\" && (obj[$PROXY] || !(proto = Object.getPrototypeOf(obj)) || proto === Object.prototype || Array.isArray(obj));\n}\nfunction unwrap(item, set = /* @__PURE__ */ new Set()) {\n  let result, unwrapped, v, prop;\n  if (result = item != null && item[$RAW])\n    return result;\n  if (!isWrappable(item) || set.has(item))\n    return item;\n  if (Array.isArray(item)) {\n    if (Object.isFrozen(item))\n      item = item.slice(0);\n    else\n      set.add(item);\n    for (let i2 = 0, l2 = item.length; i2 < l2; i2++) {\n      v = item[i2];\n      if ((unwrapped = unwrap(v, set)) !== v)\n        item[i2] = unwrapped;\n    }\n  } else {\n    if (Object.isFrozen(item))\n      item = Object.assign({}, item);\n    else\n      set.add(item);\n    const keys = Object.keys(item), desc = Object.getOwnPropertyDescriptors(item);\n    for (let i2 = 0, l2 = keys.length; i2 < l2; i2++) {\n      prop = keys[i2];\n      if (desc[prop].get)\n        continue;\n      v = item[prop];\n      if ((unwrapped = unwrap(v, set)) !== v)\n        item[prop] = unwrapped;\n    }\n  }\n  return item;\n}\nfunction getDataNodes(target) {\n  let nodes = target[$NODE];\n  if (!nodes)\n    Object.defineProperty(target, $NODE, {\n      value: nodes = {}\n    });\n  return nodes;\n}\nfunction getDataNode(nodes, property, value) {\n  return nodes[property] || (nodes[property] = createDataNode(value));\n}\nfunction proxyDescriptor$1(target, property) {\n  const desc = Reflect.getOwnPropertyDescriptor(target, property);\n  if (!desc || desc.get || !desc.configurable || property === $PROXY || property === $NODE || property === $NAME)\n    return desc;\n  delete desc.value;\n  delete desc.writable;\n  desc.get = () => target[$PROXY][property];\n  return desc;\n}\nfunction trackSelf(target) {\n  if (getListener()) {\n    const nodes = getDataNodes(target);\n    (nodes._ || (nodes._ = createDataNode()))();\n  }\n}\nfunction ownKeys(target) {\n  trackSelf(target);\n  return Reflect.ownKeys(target);\n}\nfunction createDataNode(value) {\n  const [s2, set] = createSignal(value, {\n    equals: false,\n    internal: true\n  });\n  s2.$ = set;\n  return s2;\n}\nconst proxyTraps$1 = {\n  get(target, property, receiver) {\n    if (property === $RAW)\n      return target;\n    if (property === $PROXY)\n      return receiver;\n    if (property === $TRACK) {\n      trackSelf(target);\n      return receiver;\n    }\n    const nodes = getDataNodes(target);\n    const tracked = nodes.hasOwnProperty(property);\n    let value = tracked ? nodes[property]() : target[property];\n    if (property === $NODE || property === \"__proto__\")\n      return value;\n    if (!tracked) {\n      const desc = Object.getOwnPropertyDescriptor(target, property);\n      if (getListener() && (typeof value !== \"function\" || target.hasOwnProperty(property)) && !(desc && desc.get))\n        value = getDataNode(nodes, property, value)();\n    }\n    return isWrappable(value) ? wrap$1(value) : value;\n  },\n  has(target, property) {\n    if (property === $RAW || property === $PROXY || property === $TRACK || property === $NODE || property === \"__proto__\")\n      return true;\n    this.get(target, property, target);\n    return property in target;\n  },\n  set() {\n    return true;\n  },\n  deleteProperty() {\n    return true;\n  },\n  ownKeys,\n  getOwnPropertyDescriptor: proxyDescriptor$1\n};\nfunction setProperty(state, property, value, deleting = false) {\n  if (!deleting && state[property] === value)\n    return;\n  const prev = state[property], len = state.length;\n  if (value === void 0)\n    delete state[property];\n  else\n    state[property] = value;\n  let nodes = getDataNodes(state), node;\n  if (node = getDataNode(nodes, property, prev))\n    node.$(() => value);\n  if (Array.isArray(state) && state.length !== len)\n    (node = getDataNode(nodes, \"length\", len)) && node.$(state.length);\n  (node = nodes._) && node.$();\n}\nfunction mergeStoreNode(state, value) {\n  const keys = Object.keys(value);\n  for (let i2 = 0; i2 < keys.length; i2 += 1) {\n    const key = keys[i2];\n    setProperty(state, key, value[key]);\n  }\n}\nfunction updateArray(current, next) {\n  if (typeof next === \"function\")\n    next = next(current);\n  next = unwrap(next);\n  if (Array.isArray(next)) {\n    if (current === next)\n      return;\n    let i2 = 0, len = next.length;\n    for (; i2 < len; i2++) {\n      const value = next[i2];\n      if (current[i2] !== value)\n        setProperty(current, i2, value);\n    }\n    setProperty(current, \"length\", len);\n  } else\n    mergeStoreNode(current, next);\n}\nfunction updatePath(current, path, traversed = []) {\n  let part, prev = current;\n  if (path.length > 1) {\n    part = path.shift();\n    const partType = typeof part, isArray = Array.isArray(current);\n    if (Array.isArray(part)) {\n      for (let i2 = 0; i2 < part.length; i2++) {\n        updatePath(current, [part[i2]].concat(path), traversed);\n      }\n      return;\n    } else if (isArray && partType === \"function\") {\n      for (let i2 = 0; i2 < current.length; i2++) {\n        if (part(current[i2], i2))\n          updatePath(current, [i2].concat(path), traversed);\n      }\n      return;\n    } else if (isArray && partType === \"object\") {\n      const {\n        from = 0,\n        to = current.length - 1,\n        by = 1\n      } = part;\n      for (let i2 = from; i2 <= to; i2 += by) {\n        updatePath(current, [i2].concat(path), traversed);\n      }\n      return;\n    } else if (path.length > 1) {\n      updatePath(current[part], path, [part].concat(traversed));\n      return;\n    }\n    prev = current[part];\n    traversed = [part].concat(traversed);\n  }\n  let value = path[0];\n  if (typeof value === \"function\") {\n    value = value(prev, traversed);\n    if (value === prev)\n      return;\n  }\n  if (part === void 0 && value == void 0)\n    return;\n  value = unwrap(value);\n  if (part === void 0 || isWrappable(prev) && isWrappable(value) && !Array.isArray(value)) {\n    mergeStoreNode(prev, value);\n  } else\n    setProperty(current, part, value);\n}\nfunction createStore(...[store, options]) {\n  const unwrappedStore = unwrap(store || {});\n  const isArray = Array.isArray(unwrappedStore);\n  const wrappedStore = wrap$1(unwrappedStore);\n  function setStore(...args) {\n    batch(() => {\n      isArray && args.length === 1 ? updateArray(unwrappedStore, args[0]) : updatePath(unwrappedStore, args);\n    });\n  }\n  return [wrappedStore, setStore];\n}\nconst defaultLightColorsSet = {\n  constant: {\n    black: \"#000000\",\n    white: \"#FFFFFF\"\n  },\n  connectButton: {\n    background: \"#0098EA\",\n    foreground: \"#FFFFFF\"\n  },\n  accent: \"#0098EA\",\n  telegramButton: \"#0098EA\",\n  icon: {\n    primary: \"#0F0F0F\",\n    secondary: \"#7A8999\",\n    tertiary: \"#C1CAD2\",\n    success: \"#29CC6A\",\n    error: \"#F5A73B\"\n  },\n  background: {\n    primary: \"#FFFFFF\",\n    secondary: \"#F1F3F5\",\n    segment: \"#FFFFFF\",\n    tint: \"#F1F3F5\",\n    qr: \"#F1F3F5\"\n  },\n  text: {\n    primary: \"#0F0F0F\",\n    secondary: \"#6A7785\"\n  }\n};\nconst defaultDarkColorsSet = {\n  constant: {\n    black: \"#000000\",\n    white: \"#FFFFFF\"\n  },\n  connectButton: {\n    background: \"#0098EA\",\n    foreground: \"#FFFFFF\"\n  },\n  accent: \"#E5E5EA\",\n  telegramButton: \"#31A6F5\",\n  icon: {\n    primary: \"#E5E5EA\",\n    secondary: \"#909099\",\n    tertiary: \"#434347\",\n    success: \"#29CC6A\",\n    error: \"#F5A73B\"\n  },\n  background: {\n    primary: \"#121214\",\n    secondary: \"#18181A\",\n    segment: \"#262629\",\n    tint: \"#222224\",\n    qr: \"#FFFFFF\"\n  },\n  text: {\n    primary: \"#E5E5EA\",\n    secondary: \"#7D7D85\"\n  }\n};\n/*!\n * is-plain-object <https://github.com/jonschlinkert/is-plain-object>\n *\n * Copyright (c) 2014-2017, Jon Schlinkert.\n * Released under the MIT License.\n */\nfunction isObject(o2) {\n  return Object.prototype.toString.call(o2) === \"[object Object]\";\n}\nfunction isPlainObject(o2) {\n  var ctor, prot;\n  if (isObject(o2) === false)\n    return false;\n  ctor = o2.constructor;\n  if (ctor === void 0)\n    return true;\n  prot = ctor.prototype;\n  if (isObject(prot) === false)\n    return false;\n  if (prot.hasOwnProperty(\"isPrototypeOf\") === false) {\n    return false;\n  }\n  return true;\n}\nfunction mergeOptions(options, defaultOptions) {\n  if (!options) {\n    return defaultOptions;\n  }\n  const overwriteMerge = (_, sourceArray, __) => sourceArray;\n  return deepmerge__WEBPACK_IMPORTED_MODULE_2__(defaultOptions, options, {\n    arrayMerge: overwriteMerge,\n    isMergeableObject: isPlainObject\n  });\n}\nconst [themeState, setThemeState] = createStore({\n  theme: THEME.LIGHT,\n  colors: defaultLightColorsSet,\n  borderRadius: \"m\"\n});\nconst themeColorsMappingDefault = {\n  [THEME.LIGHT]: defaultLightColorsSet,\n  [THEME.DARK]: defaultDarkColorsSet\n};\nconst themeCustomColors = {\n  [THEME.LIGHT]: void 0,\n  [THEME.DARK]: void 0\n};\nfunction setTheme(theme, colorsSet) {\n  if (colorsSet) {\n    themeCustomColors[THEME.DARK] = mergeOptions(\n      colorsSet[THEME.DARK],\n      themeCustomColors[THEME.DARK]\n    );\n    themeCustomColors[THEME.LIGHT] = mergeOptions(\n      colorsSet[THEME.LIGHT],\n      themeCustomColors[THEME.LIGHT]\n    );\n  }\n  setThemeState({\n    theme,\n    colors: mergeOptions(themeCustomColors[theme], themeColorsMappingDefault[theme])\n  });\n}\nfunction setBorderRadius(borderRadius) {\n  setThemeState({ borderRadius });\n}\nfunction setColors(colorsSet) {\n  themeCustomColors[THEME.DARK] = mergeOptions(\n    colorsSet[THEME.DARK],\n    themeCustomColors[THEME.DARK]\n  );\n  themeCustomColors[THEME.LIGHT] = mergeOptions(\n    colorsSet[THEME.LIGHT],\n    themeCustomColors[THEME.LIGHT]\n  );\n  setThemeState((state) => ({\n    colors: mergeOptions(\n      themeCustomColors[state.theme],\n      themeColorsMappingDefault[state.theme]\n    )\n  }));\n}\nconst ImagePlaceholder = styled.div`\n    background-color: ${(props) => props.theme.colors.background.secondary};\n`;\nconst Image = (props) => {\n  let imgRef;\n  const [image, setImage] = createSignal(null);\n  createEffect(() => {\n    const img = new window.Image();\n    img.src = props.src;\n    img.alt = props.alt || \"\";\n    img.setAttribute(\"draggable\", \"false\");\n    if (props.class) {\n      img.classList.add(props.class);\n    }\n    if (img.complete) {\n      return setImage(img);\n    }\n    img.addEventListener(\"load\", () => setImage(img));\n    return () => img.removeEventListener(\"load\", () => setImage(img));\n  });\n  return [createComponent(Show, {\n    get when() {\n      return image();\n    },\n    get children() {\n      return image();\n    }\n  }), createComponent(Show, {\n    get when() {\n      return !image();\n    },\n    get children() {\n      return createComponent(ImagePlaceholder, {\n        get [\"class\"]() {\n          return props.class;\n        },\n        ref(r$) {\n          const _ref$ = imgRef;\n          typeof _ref$ === \"function\" ? _ref$(r$) : imgRef = r$;\n        }\n      });\n    }\n  })];\n};\nlet initParams = {};\ntry {\n  let locationHash = location.hash.toString();\n  initParams = urlParseHashParams(locationHash);\n} catch (e2) {\n}\nlet tmaPlatform = \"unknown\";\nif (initParams == null ? void 0 : initParams.tgWebAppPlatform) {\n  tmaPlatform = (_a = initParams.tgWebAppPlatform) != null ? _a : \"unknown\";\n}\nif (tmaPlatform === \"unknown\") {\n  const window2 = getWindow$1();\n  tmaPlatform = (_d = (_c = (_b = window2 == null ? void 0 : window2.Telegram) == null ? void 0 : _b.WebApp) == null ? void 0 : _c.platform) != null ? _d : \"unknown\";\n}\nlet webAppVersion = \"6.0\";\nif (initParams == null ? void 0 : initParams.tgWebAppVersion) {\n  webAppVersion = initParams.tgWebAppVersion;\n}\nif (!webAppVersion) {\n  const window2 = getWindow$1();\n  webAppVersion = (_g = (_f = (_e = window2 == null ? void 0 : window2.Telegram) == null ? void 0 : _e.WebApp) == null ? void 0 : _f.version) != null ? _g : \"6.0\";\n}\nfunction isTmaPlatform(...platforms) {\n  return platforms.includes(tmaPlatform);\n}\nfunction isInTMA() {\n  var _a2;\n  return tmaPlatform !== \"unknown\" || !!((_a2 = getWindow$1()) == null ? void 0 : _a2.TelegramWebviewProxy);\n}\nfunction isInTelegramBrowser() {\n  var _a2;\n  const isTelegramWebview = !!((_a2 = getWindow$1()) == null ? void 0 : _a2.TelegramWebview);\n  return (isInTMA() || isTelegramWebview) && tmaPlatform === \"unknown\";\n}\nfunction sendExpand() {\n  postEvent(\"web_app_expand\", {});\n}\nfunction sendOpenTelegramLink(link, fallback) {\n  const url = new URL(link);\n  if (url.protocol !== \"http:\" && url.protocol !== \"https:\") {\n    if (fallback) {\n      return fallback();\n    }\n    throw new TonConnectUIError(`Url protocol is not supported: ${url}`);\n  }\n  if (url.hostname !== \"t.me\") {\n    if (fallback) {\n      return fallback();\n    }\n    throw new TonConnectUIError(`Url host is not supported: ${url}`);\n  }\n  const pathFull = url.pathname + url.search;\n  if (isIframe() || versionAtLeast(\"6.1\")) {\n    postEvent(\"web_app_open_tg_link\", { path_full: pathFull });\n  } else {\n    openLinkBlank(\"https://t.me\" + pathFull);\n  }\n}\nfunction isIframe() {\n  try {\n    const window2 = getWindow$1();\n    if (!window2) {\n      return false;\n    }\n    return window2.parent != null && window2 !== window2.parent;\n  } catch (e2) {\n    return false;\n  }\n}\nfunction postEvent(eventType, eventData) {\n  try {\n    const window2 = getWindow$1();\n    if (!window2) {\n      throw new TonConnectUIError(`Can't post event to parent window: window is not defined`);\n    }\n    if (window2.TelegramWebviewProxy !== void 0) {\n      logDebug(\"postEvent\", eventType, eventData);\n      window2.TelegramWebviewProxy.postEvent(eventType, JSON.stringify(eventData));\n    } else if (window2.external && \"notify\" in window2.external) {\n      logDebug(\"postEvent\", eventType, eventData);\n      window2.external.notify(JSON.stringify({ eventType, eventData }));\n    } else if (isIframe()) {\n      const trustedTarget = \"*\";\n      const message = JSON.stringify({ eventType, eventData });\n      logDebug(\"postEvent\", eventType, eventData);\n      window2.parent.postMessage(message, trustedTarget);\n    } else {\n      throw new TonConnectUIError(`Can't post event to TMA`);\n    }\n  } catch (e2) {\n    logError(`Can't post event to parent window: ${e2}`);\n  }\n}\nfunction urlParseHashParams(locationHash) {\n  locationHash = locationHash.replace(/^#/, \"\");\n  let params = {};\n  if (!locationHash.length) {\n    return params;\n  }\n  if (locationHash.indexOf(\"=\") < 0 && locationHash.indexOf(\"?\") < 0) {\n    params._path = urlSafeDecode(locationHash);\n    return params;\n  }\n  let qIndex = locationHash.indexOf(\"?\");\n  if (qIndex >= 0) {\n    let pathParam = locationHash.substr(0, qIndex);\n    params._path = urlSafeDecode(pathParam);\n    locationHash = locationHash.substr(qIndex + 1);\n  }\n  let query_params = urlParseQueryString(locationHash);\n  for (let k in query_params) {\n    params[k] = query_params[k];\n  }\n  return params;\n}\nfunction urlSafeDecode(urlencoded) {\n  try {\n    urlencoded = urlencoded.replace(/\\+/g, \"%20\");\n    return decodeURIComponent(urlencoded);\n  } catch (e2) {\n    return urlencoded;\n  }\n}\nfunction urlParseQueryString(queryString) {\n  let params = {};\n  if (!queryString.length) {\n    return params;\n  }\n  let queryStringParams = queryString.split(\"&\");\n  let i2, param, paramName, paramValue;\n  for (i2 = 0; i2 < queryStringParams.length; i2++) {\n    param = queryStringParams[i2].split(\"=\");\n    paramName = urlSafeDecode(param[0]);\n    paramValue = param[1] == null ? null : urlSafeDecode(param[1]);\n    params[paramName] = paramValue;\n  }\n  return params;\n}\nfunction versionCompare(v1, v2) {\n  if (typeof v1 !== \"string\")\n    v1 = \"\";\n  if (typeof v2 !== \"string\")\n    v2 = \"\";\n  let v1List = v1.replace(/^\\s+|\\s+$/g, \"\").split(\".\");\n  let v2List = v2.replace(/^\\s+|\\s+$/g, \"\").split(\".\");\n  let a2, i2, p1, p2;\n  a2 = Math.max(v1List.length, v2List.length);\n  for (i2 = 0; i2 < a2; i2++) {\n    p1 = parseInt(v1List[i2]) || 0;\n    p2 = parseInt(v2List[i2]) || 0;\n    if (p1 === p2)\n      continue;\n    if (p1 > p2)\n      return 1;\n    return -1;\n  }\n  return 0;\n}\nfunction versionAtLeast(ver) {\n  return versionCompare(webAppVersion, ver) >= 0;\n}\nconst maxWidth = {\n  mobile: 440,\n  tablet: 1020\n};\nfunction isDevice(device) {\n  const window2 = getWindow$1();\n  if (!window2) {\n    return device === \"desktop\";\n  }\n  if (isTmaPlatform(\"weba\")) {\n    return true;\n  }\n  const width = window2.innerWidth;\n  switch (device) {\n    case \"desktop\":\n      return width > maxWidth.tablet;\n    case \"tablet\":\n      return width > maxWidth.mobile;\n    default:\n    case \"mobile\":\n      return width <= maxWidth.mobile || isOS(\"ios\", \"android\", \"ipad\");\n  }\n}\nfunction media(device) {\n  switch (device) {\n    case \"mobile\":\n      return `@media (max-width: ${maxWidth.mobile}px)`;\n    case \"tablet\":\n      return `@media (max-width: ${maxWidth.tablet}px) (min-width: ${maxWidth.mobile}px)`;\n    default:\n    case \"desktop\":\n      return `@media (min-width: ${maxWidth.tablet}px)`;\n  }\n}\nconst mediaTouch = \"@media (hover: none)\";\nconst mediaNotTouch = \"@media not all and (hover: none)\";\nconst borders$5 = {\n  m: \"100vh\",\n  s: \"8px\",\n  none: \"0\"\n};\nconst scaleValues = {\n  s: 0.02,\n  m: 0.04\n};\nconst ButtonStyled$1 = styled.button`\n    display: ${(props) => props.leftIcon || props.rightIcon ? \"flex\" : \"inline-block\"};\n    gap: ${(props) => props.leftIcon || props.rightIcon ? \"6px\" : \"unset\"};\n    align-items: ${(props) => props.leftIcon || props.rightIcon ? \"center\" : \"unset\"};\n    justify-content: ${(props) => props.leftIcon || props.rightIcon ? \"space-between\" : \"unset\"};\n    background-color: ${(props) => props.appearance === \"flat\" ? \"transparent\" : props.appearance === \"secondary\" ? props.theme.colors.background.tint : rgba(props.theme.colors.accent, 0.12)};\n    color: ${(props) => props.appearance === \"secondary\" ? props.theme.colors.text.primary : props.theme.colors.accent};\n\n    padding: ${(props) => props.appearance === \"flat\" ? \"0\" : \"9px 16px\"};\n    padding-left: ${(props) => props.leftIcon && props.appearance !== \"flat\" ? \"12px\" : \"16px\"};\n    padding-right: ${(props) => props.rightIcon && props.appearance !== \"flat\" ? \"12px\" : \"16px\"};\n    border: none;\n    border-radius: ${(props) => borders$5[props.theme.borderRadius]};\n    cursor: ${(props) => props.disabled ? \"not-allowed\" : \"pointer\"};\n\n    font-size: 14px;\n    font-weight: 510;\n    line-height: 18px;\n\n    transition: transform 0.125s ease-in-out;\n\n    ${mediaNotTouch} {\n        &:hover {\n            transform: ${(props) => props.disabled ? \"unset\" : `scale(${1 + scaleValues[props.scale]})`};\n        }\n    }\n\n    &:active {\n        transform: ${(props) => props.disabled ? \"unset\" : `scale(${1 - scaleValues[props.scale]})`};\n    }\n\n    ${mediaTouch} {\n        &:active {\n            transform: ${(props) => props.disabled ? \"unset\" : `scale(${1 - scaleValues[props.scale] * 2})`};\n        }\n    }\n`;\nfunction useDataAttributes(props) {\n  const keys = untrack(() => Object.keys(props).filter((key) => key.startsWith(\"data-\")));\n  const [dataAttrs] = splitProps(props, keys);\n  return dataAttrs;\n}\nconst Button = (props) => {\n  const dataAttrs = useDataAttributes(props);\n  return createComponent(ButtonStyled$1, mergeProps({\n    get appearance() {\n      return props.appearance || \"primary\";\n    },\n    get [\"class\"]() {\n      return props.class;\n    },\n    onClick: (e2) => {\n      var _a2;\n      return (_a2 = props.onClick) == null ? void 0 : _a2.call(props, e2);\n    },\n    onMouseEnter: (e2) => {\n      var _a2;\n      return (_a2 = props.onMouseEnter) == null ? void 0 : _a2.call(props, e2);\n    },\n    onMouseLeave: (e2) => {\n      var _a2;\n      return (_a2 = props.onMouseLeave) == null ? void 0 : _a2.call(props, e2);\n    },\n    ref(r$) {\n      const _ref$ = props.ref;\n      typeof _ref$ === \"function\" ? _ref$(r$) : props.ref = r$;\n    },\n    get disabled() {\n      return props.disabled;\n    },\n    get scale() {\n      return props.scale || \"m\";\n    },\n    get leftIcon() {\n      return !!props.leftIcon;\n    },\n    get rightIcon() {\n      return !!props.rightIcon;\n    },\n    \"data-tc-button\": \"true\"\n  }, dataAttrs, {\n    get children() {\n      return [createMemo(() => props.leftIcon), createMemo(() => props.children), createMemo(() => props.rightIcon)];\n    }\n  }));\n};\nfunction nextFrame(fn) {\n  requestAnimationFrame(() => {\n    requestAnimationFrame(fn);\n  });\n}\nconst Transition = (props) => {\n  let el;\n  let first = true;\n  const [s1, set1] = createSignal();\n  const [s2, set2] = createSignal();\n  const resolved = children(() => props.children);\n  const {\n    onBeforeEnter,\n    onEnter,\n    onAfterEnter,\n    onBeforeExit,\n    onExit,\n    onAfterExit\n  } = props;\n  const classnames = createMemo(() => {\n    const name = props.name || \"s\";\n    return {\n      enterActiveClass: props.enterActiveClass || name + \"-enter-active\",\n      enterClass: props.enterClass || name + \"-enter\",\n      enterToClass: props.enterToClass || name + \"-enter-to\",\n      exitActiveClass: props.exitActiveClass || name + \"-exit-active\",\n      exitClass: props.exitClass || name + \"-exit\",\n      exitToClass: props.exitToClass || name + \"-exit-to\"\n    };\n  });\n  function enterTransition(el2, prev) {\n    if (!first || props.appear) {\n      let endTransition = function(e2) {\n        if (el2 && (!e2 || e2.target === el2)) {\n          el2.removeEventListener(\"transitionend\", endTransition);\n          el2.removeEventListener(\"animationend\", endTransition);\n          el2.classList.remove(...enterActiveClasses);\n          el2.classList.remove(...enterToClasses);\n          batch(() => {\n            s1() !== el2 && set1(el2);\n            s2() === el2 && set2(void 0);\n          });\n          onAfterEnter && onAfterEnter(el2);\n          if (props.mode === \"inout\")\n            exitTransition(el2, prev);\n        }\n      };\n      const enterClasses = classnames().enterClass.split(\" \");\n      const enterActiveClasses = classnames().enterActiveClass.split(\" \");\n      const enterToClasses = classnames().enterToClass.split(\" \");\n      onBeforeEnter && onBeforeEnter(el2);\n      el2.classList.add(...enterClasses);\n      el2.classList.add(...enterActiveClasses);\n      nextFrame(() => {\n        el2.classList.remove(...enterClasses);\n        el2.classList.add(...enterToClasses);\n        onEnter && onEnter(el2, () => endTransition());\n        if (!onEnter || onEnter.length < 2) {\n          el2.addEventListener(\"transitionend\", endTransition);\n          el2.addEventListener(\"animationend\", endTransition);\n        }\n      });\n    }\n    prev && !props.mode ? set2(el2) : set1(el2);\n  }\n  function exitTransition(el2, prev) {\n    const exitClasses = classnames().exitClass.split(\" \");\n    const exitActiveClasses = classnames().exitActiveClass.split(\" \");\n    const exitToClasses = classnames().exitToClass.split(\" \");\n    if (!prev.parentNode)\n      return endTransition();\n    onBeforeExit && onBeforeExit(prev);\n    prev.classList.add(...exitClasses);\n    prev.classList.add(...exitActiveClasses);\n    nextFrame(() => {\n      prev.classList.remove(...exitClasses);\n      prev.classList.add(...exitToClasses);\n    });\n    onExit && onExit(prev, () => endTransition());\n    if (!onExit || onExit.length < 2) {\n      prev.addEventListener(\"transitionend\", endTransition);\n      prev.addEventListener(\"animationend\", endTransition);\n    }\n    function endTransition(e2) {\n      if (!e2 || e2.target === prev) {\n        prev.removeEventListener(\"transitionend\", endTransition);\n        prev.removeEventListener(\"animationend\", endTransition);\n        prev.classList.remove(...exitActiveClasses);\n        prev.classList.remove(...exitToClasses);\n        s1() === prev && set1(void 0);\n        onAfterExit && onAfterExit(prev);\n        if (props.mode === \"outin\")\n          enterTransition(el2, prev);\n      }\n    }\n  }\n  createComputed((prev) => {\n    el = resolved();\n    while (typeof el === \"function\")\n      el = el();\n    return untrack(() => {\n      if (el && el !== prev) {\n        if (props.mode !== \"outin\")\n          enterTransition(el, prev);\n        else if (first)\n          set1(el);\n      }\n      if (prev && prev !== el && props.mode !== \"inout\")\n        exitTransition(el, prev);\n      first = false;\n      return el;\n    });\n  });\n  return [s1, s2];\n};\nfunction getRect(element) {\n  const {\n    top,\n    bottom,\n    left,\n    right,\n    width,\n    height\n  } = element.getBoundingClientRect();\n  const parentRect = element.parentNode.getBoundingClientRect();\n  return {\n    top: top - parentRect.top,\n    bottom,\n    left: left - parentRect.left,\n    right,\n    width,\n    height\n  };\n}\nconst TransitionGroup = (props) => {\n  const resolved = children(() => props.children);\n  const classnames = createMemo(() => {\n    const name = props.name || \"s\";\n    return {\n      enterActiveClass: props.enterActiveClass || name + \"-enter-active\",\n      enterClass: props.enterClass || name + \"-enter\",\n      enterToClass: props.enterToClass || name + \"-enter-to\",\n      exitActiveClass: props.exitActiveClass || name + \"-exit-active\",\n      exitClass: props.exitClass || name + \"-exit\",\n      exitToClass: props.exitToClass || name + \"-exit-to\",\n      moveClass: props.moveClass || name + \"-move\"\n    };\n  });\n  const {\n    onBeforeEnter,\n    onEnter,\n    onAfterEnter,\n    onBeforeExit,\n    onExit,\n    onAfterExit\n  } = props;\n  const [combined, setCombined] = createSignal();\n  let p2 = [];\n  let first = true;\n  createComputed(() => {\n    const c2 = resolved();\n    const comb = [...c2];\n    const next = new Set(c2);\n    const prev = new Set(p2);\n    const enterClasses = classnames().enterClass.split(\" \");\n    const enterActiveClasses = classnames().enterActiveClass.split(\" \");\n    const enterToClasses = classnames().enterToClass.split(\" \");\n    const exitClasses = classnames().exitClass.split(\" \");\n    const exitActiveClasses = classnames().exitActiveClass.split(\" \");\n    const exitToClasses = classnames().exitToClass.split(\" \");\n    for (let i2 = 0; i2 < c2.length; i2++) {\n      const el = c2[i2];\n      if (!first && !prev.has(el)) {\n        let endTransition = function(e2) {\n          if (el && (!e2 || e2.target === el)) {\n            el.removeEventListener(\"transitionend\", endTransition);\n            el.removeEventListener(\"animationend\", endTransition);\n            el.classList.remove(...enterActiveClasses);\n            el.classList.remove(...enterToClasses);\n            onAfterEnter && onAfterEnter(el);\n          }\n        };\n        onBeforeEnter && onBeforeEnter(el);\n        el.classList.add(...enterClasses);\n        el.classList.add(...enterActiveClasses);\n        nextFrame(() => {\n          el.classList.remove(...enterClasses);\n          el.classList.add(...enterToClasses);\n          onEnter && onEnter(el, () => endTransition());\n          if (!onEnter || onEnter.length < 2) {\n            el.addEventListener(\"transitionend\", endTransition);\n            el.addEventListener(\"animationend\", endTransition);\n          }\n        });\n      }\n    }\n    for (let i2 = 0; i2 < p2.length; i2++) {\n      const old = p2[i2];\n      if (!next.has(old) && old.parentNode) {\n        let endTransition = function(e2) {\n          if (!e2 || e2.target === old) {\n            old.removeEventListener(\"transitionend\", endTransition);\n            old.removeEventListener(\"animationend\", endTransition);\n            old.classList.remove(...exitActiveClasses);\n            old.classList.remove(...exitToClasses);\n            onAfterExit && onAfterExit(old);\n            p2 = p2.filter((i3) => i3 !== old);\n            setCombined(p2);\n          }\n        };\n        comb.splice(i2, 0, old);\n        onBeforeExit && onBeforeExit(old);\n        old.classList.add(...exitClasses);\n        old.classList.add(...exitActiveClasses);\n        nextFrame(() => {\n          old.classList.remove(...exitClasses);\n          old.classList.add(...exitToClasses);\n        });\n        onExit && onExit(old, () => endTransition());\n        if (!onExit || onExit.length < 2) {\n          old.addEventListener(\"transitionend\", endTransition);\n          old.addEventListener(\"animationend\", endTransition);\n        }\n      }\n    }\n    p2 = comb;\n    setCombined(comb);\n  });\n  createEffect((nodes) => {\n    const c2 = combined();\n    c2.forEach((child) => {\n      let n2;\n      if (!(n2 = nodes.get(child))) {\n        nodes.set(child, n2 = {\n          pos: getRect(child),\n          new: !first\n        });\n      } else if (n2.new) {\n        n2.new = false;\n        n2.newPos = getRect(child);\n      }\n      if (n2.new) {\n        child.addEventListener(\"transitionend\", () => {\n          n2.new = false;\n          child.parentNode && (n2.newPos = getRect(child));\n        }, {\n          once: true\n        });\n      }\n      n2.newPos && (n2.pos = n2.newPos);\n      n2.newPos = getRect(child);\n    });\n    if (first) {\n      first = false;\n      return nodes;\n    }\n    c2.forEach((child) => {\n      const c3 = nodes.get(child);\n      const oldPos = c3.pos;\n      const newPos = c3.newPos;\n      const dx = oldPos.left - newPos.left;\n      const dy = oldPos.top - newPos.top;\n      if (dx || dy) {\n        c3.moved = true;\n        const s2 = child.style;\n        s2.transform = `translate(${dx}px,${dy}px)`;\n        s2.transitionDuration = \"0s\";\n      }\n    });\n    document.body.offsetHeight;\n    c2.forEach((child) => {\n      const c3 = nodes.get(child);\n      if (c3.moved) {\n        let endTransition = function(e2) {\n          if (e2 && e2.target !== child || !child.parentNode)\n            return;\n          if (!e2 || /transform$/.test(e2.propertyName)) {\n            child.removeEventListener(\"transitionend\", endTransition);\n            child.classList.remove(...moveClasses);\n          }\n        };\n        c3.moved = false;\n        const s2 = child.style;\n        const moveClasses = classnames().moveClass.split(\" \");\n        child.classList.add(...moveClasses);\n        s2.transform = s2.transitionDuration = \"\";\n        child.addEventListener(\"transitionend\", endTransition);\n      }\n    });\n    return nodes;\n  }, /* @__PURE__ */ new Map());\n  return combined;\n};\nfunction clickOutside$1(el, accessor) {\n  const onClick = (e2) => {\n    var _a2;\n    return !el.contains(e2.target) && ((_a2 = accessor()) == null ? void 0 : _a2());\n  };\n  document.body.addEventListener(\"click\", onClick);\n  onCleanup(() => document.body.removeEventListener(\"click\", onClick));\n}\nfunction escPressed(_, accessor) {\n  const onKeyPress = (e2) => {\n    var _a2, _b2;\n    if (e2.key === \"Escape\") {\n      (_a2 = document.activeElement) == null ? void 0 : _a2.blur();\n      (_b2 = accessor()) == null ? void 0 : _b2();\n    }\n  };\n  document.body.addEventListener(\"keydown\", onKeyPress);\n  onCleanup(() => document.body.removeEventListener(\"keydown\", onKeyPress));\n}\nfunction androidBackHandler$1(_, config) {\n  const {\n    isEnabled,\n    onClose\n  } = config();\n  if (!isEnabled) {\n    return;\n  }\n  const userOSIsAndroid = getUserAgent().os === \"android\";\n  if (!userOSIsAndroid) {\n    return;\n  }\n  window.history.pushState(ROUTE_STATE, \"\");\n  const popstateHandler = (event) => {\n    event.preventDefault();\n    onClose();\n  };\n  window.addEventListener(\"popstate\", popstateHandler, {\n    once: true\n  });\n  onCleanup(() => {\n    window.removeEventListener(\"popstate\", popstateHandler);\n    createMacrotask(() => {\n      var _a2;\n      if (((_a2 = window.history.state) == null ? void 0 : _a2[ROUTE_STATE_KEY]) === true) {\n        window.history.back();\n      }\n    });\n  });\n}\nconst ROUTE_STATE_KEY = \"androidBackHandler\";\nconst ROUTE_STATE = {\n  [ROUTE_STATE_KEY]: true\n};\nconst _tmpl$$w = /* @__PURE__ */ template$1(`<svg><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M10.2122 14.3407C10.5384 14.0854 10.5959 13.614 10.3406 13.2878L6.20237 8.00003L10.3406 2.71227C10.5959 2.38607 10.5384 1.91469 10.2122 1.6594C9.88604 1.40412 9.41465 1.46161 9.15937 1.7878L4.65937 7.5378C4.44688 7.80932 4.44688 8.19074 4.65937 8.46226L9.15937 14.2123C9.41465 14.5385 9.88604 14.5959 10.2122 14.3407Z\"></path></svg>`, 4, true);\nconst rotationDegrees = {\n  left: 0,\n  top: 90,\n  right: 180,\n  bottom: 270\n};\nconst ArrowIcon = (props) => {\n  const theme = useTheme();\n  const fill = () => props.fill || theme.colors.icon.secondary;\n  const direction = () => props.direction || \"left\";\n  const Svg = styled(\"svg\")`\n        transform: rotate(${(props2) => rotationDegrees[props2.svgDirection]}deg);\n        transition: transform 0.1s ease-in-out;\n    `;\n  return createComponent(Svg, {\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: \"16\",\n    height: \"16\",\n    viewBox: \"0 0 16 16\",\n    fill: \"none\",\n    get svgDirection() {\n      return direction();\n    },\n    get children() {\n      const _el$ = _tmpl$$w.cloneNode(true);\n      createRenderEffect(() => setAttribute(_el$, \"fill\", fill()));\n      return _el$;\n    }\n  });\n};\nconst _tmpl$$v = /* @__PURE__ */ template$1(`<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"none\"><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M2.71966 2.71968C3.01255 2.42678 3.48743 2.42677 3.78032 2.71966L8.00002 6.93925L12.2197 2.71967C12.5126 2.42677 12.9874 2.42678 13.2803 2.71967C13.5732 3.01257 13.5732 3.48744 13.2803 3.78033L9.06068 7.99991L13.2803 12.2197C13.5732 12.5126 13.5732 12.9874 13.2803 13.2803C12.9874 13.5732 12.5126 13.5732 12.2197 13.2803L8.00002 9.06057L3.78033 13.2803C3.48744 13.5732 3.01257 13.5732 2.71967 13.2803C2.42678 12.9874 2.42677 12.5126 2.71967 12.2197L6.93936 7.99991L2.71968 3.78034C2.42678 3.48745 2.42677 3.01257 2.71966 2.71968Z\"></path></svg>`);\nconst CloseIcon = (props) => {\n  const theme = useTheme();\n  const fill = () => props.fill || theme.colors.icon.secondary;\n  return (() => {\n    const _el$ = _tmpl$$v.cloneNode(true), _el$2 = _el$.firstChild;\n    createRenderEffect(() => setAttribute(_el$2, \"fill\", fill()));\n    return _el$;\n  })();\n};\nconst IconButtonStyled = styled.button`\n    padding: 0;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    width: 32px;\n    height: 32px;\n    border-radius: 50%;\n    background-color: ${(props) => props.theme.colors.background.tint};\n    border: none;\n    cursor: pointer;\n\n    transition: transform 0.125s ease-in-out;\n\n    ${mediaNotTouch} {\n        &:hover {\n            transform: scale(1.04);\n        }\n    }\n\n    &:active {\n        transform: scale(0.96);\n    }\n\n    ${mediaTouch} {\n        &:active {\n            transform: scale(0.92);\n        }\n    }\n`;\nconst IconButton = (props) => {\n  const dataAttrs = useDataAttributes(props);\n  const icon = () => props.icon || \"close\";\n  return createComponent(IconButtonStyled, mergeProps({\n    get [\"class\"]() {\n      return props.class;\n    },\n    onClick: () => props.onClick(),\n    \"data-tc-icon-button\": \"true\"\n  }, dataAttrs, {\n    get children() {\n      return [createComponent(Show, {\n        get when() {\n          return !!props.children;\n        },\n        get children() {\n          return props.children;\n        }\n      }), createComponent(Show, {\n        get when() {\n          return !props.children;\n        },\n        get children() {\n          return createComponent(Switch, {\n            get children() {\n              return [createComponent(Match, {\n                get when() {\n                  return icon() === \"close\";\n                },\n                get children() {\n                  return createComponent(CloseIcon, {\n                    get fill() {\n                      return props.fill;\n                    }\n                  });\n                }\n              }), createComponent(Match, {\n                get when() {\n                  return icon() === \"arrow\";\n                },\n                get children() {\n                  return createComponent(ArrowIcon, {\n                    get fill() {\n                      return props.fill;\n                    }\n                  });\n                }\n              }), createComponent(Match, {\n                get when() {\n                  return icon() === \"question\";\n                },\n                get children() {\n                  return createComponent(QuestionIcon, {\n                    get fill() {\n                      return props.fill;\n                    }\n                  });\n                }\n              }), createComponent(Match, {\n                get when() {\n                  return typeof icon() !== \"string\";\n                },\n                get children() {\n                  return icon();\n                }\n              })];\n            }\n          });\n        }\n      })];\n    }\n  }));\n};\nconst borders$4 = {\n  m: \"24px\",\n  s: \"16px\",\n  none: \"0\"\n};\nconst ModalBackgroundStyled = styled.div`\n    display: flex;\n    position: fixed;\n    z-index: 1000;\n    left: 0;\n    top: 0;\n    width: 100%;\n    height: 100%;\n    background-color: rgba(0, 0, 0, 0.4);\n    padding: 20px 0;\n    overflow-y: auto;\n\n    ${media(\"mobile\")} {\n        padding-bottom: 0;\n    }\n`;\nconst ModalWrapperClass = u`\n    box-shadow: 0 4px 16px rgba(0, 0, 0, 0.08), 0 16px 64px rgba(0, 0, 0, 0.16);\n    width: fit-content;\n    margin: auto;\n\n    ${media(\"mobile\")} {\n        width: 100%;\n        height: fit-content;\n        margin: auto 0 0 0;\n    }\n`;\nconst ModalBodyStyled = styled.div`\n    position: relative;\n    min-height: 100px;\n    width: 416px;\n    padding: 44px 56px 24px;\n\n    box-shadow: 0 2px 8px 0 rgba(0, 0, 0, 0.04);\n\n    background-color: ${(props) => props.theme.colors.background.primary};\n    border-radius: ${(props) => borders$4[props.theme.borderRadius]};\n\n    ${media(\"mobile\")} {\n        width: 100%;\n    }\n`;\nconst CloseButtonStyled = styled(IconButton)`\n    position: absolute;\n    right: 16px;\n    top: 16px;\n`;\nconst ModalFooterStyled = styled.div`\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    padding: 16px 16px 16px 18px;\n    border-radius: 0 0 ${(props) => borders$4[props.theme.borderRadius]}\n        ${(props) => borders$4[props.theme.borderRadius]};\n`;\nconst QuestionButtonStyled = styled(IconButton)`\n    background-color: ${(props) => rgba(props.theme.colors.icon.secondary, 0.12)};\n`;\nclass AnimationTimelineNoop {\n  constructor() {\n    __publicField(this, \"currentTime\", 0);\n  }\n}\nconst _AnimationNoop = class {\n  constructor() {\n    __publicField(this, \"currentTime\", 0);\n    __publicField(this, \"playbackRate\", 1);\n    __publicField(this, \"startTime\", null);\n    __publicField(this, \"timeline\", new AnimationTimelineNoop());\n    __publicField(this, \"finished\", Promise.resolve(this));\n    __publicField(this, \"effect\", null);\n    __publicField(this, \"id\", \"\");\n    __publicField(this, \"pending\", false);\n    __publicField(this, \"playState\", \"finished\");\n    __publicField(this, \"replaceState\", \"active\");\n    __publicField(this, \"ready\", Promise.resolve(this));\n    __publicField(this, \"oncancel\", null);\n    __publicField(this, \"onfinish\", null);\n    __publicField(this, \"onremove\", null);\n  }\n  static create() {\n    if (!_AnimationNoop._instance) {\n      logWarning(\n        \"Animation is not supported in this environment: please consider using the `web-animations-js` polyfill to provide a fallback implementation of the Web Animations API.\"\n      );\n      _AnimationNoop._instance = new _AnimationNoop();\n    }\n    return _AnimationNoop._instance;\n  }\n  cancel() {\n  }\n  finish() {\n  }\n  pause() {\n  }\n  play() {\n  }\n  reverse() {\n  }\n  addEventListener(_type, _listener, _options) {\n  }\n  dispatchEvent(_event) {\n    return false;\n  }\n  removeEventListener(_type, _callback, _options) {\n  }\n  updatePlaybackRate(_playbackRate) {\n  }\n  commitStyles() {\n  }\n  persist() {\n  }\n};\nlet AnimationNoop = _AnimationNoop;\n__publicField(AnimationNoop, \"_instance\", null);\nfunction animate(element, keyframes, options) {\n  if (\"animate\" in element) {\n    return element.animate(keyframes, options);\n  }\n  return AnimationNoop.create();\n}\nconst _tmpl$$u = /* @__PURE__ */ template$1(`<div></div>`);\nconst clickOutside = clickOutside$1;\nconst keyPressed = escPressed;\nconst androidBackHandler = androidBackHandler$1;\nconst Modal = (props) => {\n  const theme = useTheme();\n  const dataAttrs = useDataAttributes(props);\n  createEffect(() => {\n    if (props.opened) {\n      disableScroll();\n    } else {\n      enableScroll();\n    }\n  });\n  return createComponent(Transition, {\n    onBeforeEnter: (el) => {\n      const duration = isDevice(\"mobile\") ? 200 : 100;\n      animate(el, [{\n        opacity: 0\n      }, {\n        opacity: 1\n      }], {\n        duration\n      });\n      if (isDevice(\"mobile\")) {\n        animate(el.firstElementChild, [{\n          transform: \"translateY(390px)\"\n        }, {\n          transform: \"translateY(0)\"\n        }], {\n          duration\n        });\n      }\n    },\n    onExit: (el, done) => {\n      const duration = isDevice(\"mobile\") ? 200 : 100;\n      const backgroundAnimation = animate(el, [{\n        opacity: 1\n      }, {\n        opacity: 0\n      }], {\n        duration\n      });\n      if (isDevice(\"mobile\")) {\n        const contentAnimation = animate(el.firstElementChild, [{\n          transform: \"translateY(0)\"\n        }, {\n          transform: \"translateY(390px)\"\n        }], {\n          duration\n        });\n        Promise.all([backgroundAnimation.finished, contentAnimation.finished]).then(done);\n      } else {\n        backgroundAnimation.finished.then(done);\n      }\n    },\n    get children() {\n      return createComponent(Show, {\n        get when() {\n          return props.opened;\n        },\n        get children() {\n          return createComponent(ModalBackgroundStyled, mergeProps({\n            \"data-tc-modal\": \"true\"\n          }, dataAttrs, {\n            get children() {\n              const _el$ = _tmpl$$u.cloneNode(true);\n              use(androidBackHandler, _el$, () => ({\n                isEnabled: props.enableAndroidBackHandler,\n                onClose: () => props.onClose()\n              }));\n              use(keyPressed, _el$, () => () => props.onClose());\n              use(clickOutside, _el$, () => () => props.onClose());\n              insert(_el$, createComponent(ModalBodyStyled, {\n                get [\"class\"]() {\n                  return props.class;\n                },\n                get children() {\n                  return [createComponent(CloseButtonStyled, {\n                    icon: \"close\",\n                    onClick: () => props.onClose()\n                  }), createMemo(() => props.children)];\n                }\n              }), null);\n              insert(_el$, createComponent(Show, {\n                get when() {\n                  return props.onClickQuestion;\n                },\n                get children() {\n                  return createComponent(ModalFooterStyled, {\n                    get children() {\n                      return [createComponent(TonConnectBrand, {}), createComponent(QuestionButtonStyled, {\n                        get onClick() {\n                          return props.onClickQuestion;\n                        },\n                        icon: \"question\"\n                      })];\n                    }\n                  });\n                }\n              }), null);\n              createRenderEffect(() => className(_el$, classnames__WEBPACK_IMPORTED_MODULE_3__(ModalWrapperClass, u`\n                                border-radius: ${borders$4[theme.borderRadius]};\n                                background-color: ${theme.colors.background.tint};\n\n                                ${media(\"mobile\")} {\n                                    border-radius: ${borders$4[theme.borderRadius]}\n                                        ${borders$4[theme.borderRadius]} 0 0;\n                                }\n                            `)));\n              return _el$;\n            }\n          }));\n        }\n      });\n    }\n  });\n};\nconst wrapperBorderRadius = {\n  m: \"22px\",\n  s: \"12px\",\n  none: \"0\"\n};\nconst sliderBorderRadius = {\n  m: \"18px\",\n  s: \"8px\",\n  none: \"0\"\n};\nconst TabBarStyled = styled.div`\n    display: grid;\n    grid-template: 1fr / 1fr 1fr;\n    width: fit-content;\n    justify-items: center;\n    gap: 4px;\n\n    position: relative;\n    padding: 4px;\n    border-radius: ${(props) => wrapperBorderRadius[props.theme.borderRadius]};\n\n    background-color: ${(props) => props.theme.colors.background.secondary};\n`;\nconst SliderStyled = styled.div`\n    position: absolute;\n    top: 4px;\n    left: 4px;\n\n    height: calc(100% - 8px);\n    width: calc(50% - 4px);\n\n    border-radius: ${(props) => sliderBorderRadius[props.theme.borderRadius]};\n    background-color: ${(props) => props.theme.colors.background.segment};\n\n    transform: ${(props) => props.right ? \"translateX(100%)\" : \"translateX(0)\"};\n\n    transition: transform 0.13s ease-in-out;\n`;\nconst InputStyled = styled.input`\n    display: none;\n`;\nconst LabelStyled = styled.label`\n    padding: 9px 12px;\n    z-index: 1;\n\n    cursor: ${(props) => props.isActive ? \"default\" : \"pointer\"};\n\n    transition: transform 0.13s ease-in-out;\n\n    &:hover {\n        transform: ${(props) => props.isActive ? \"none\" : \"scale(1.025)\"};\n    }\n\n    > * {\n        ${(props) => !props.isActive ? `color: ${props.theme.colors.text.secondary};` : \"\"}\n    }\n`;\nconst TabBar = (props) => {\n  const groupName = \"tabBar\" + Math.floor(Math.random() * 1e4);\n  return createComponent(TabBarStyled, {\n    get [\"class\"]() {\n      return props.class;\n    },\n    \"data-tc-tab-bar\": \"true\",\n    get children() {\n      return [createComponent(SliderStyled, {\n        get right() {\n          return props.selectedTabIndex === 1;\n        }\n      }), createComponent(LabelStyled, {\n        get isActive() {\n          return props.selectedTabIndex === 0;\n        },\n        get children() {\n          return [createComponent(InputStyled, {\n            type: \"radio\",\n            name: groupName,\n            get checked() {\n              return props.selectedTabIndex === 0;\n            },\n            onInput: () => {\n              var _a2;\n              return (_a2 = props.onSelectedTabIndexChange) == null ? void 0 : _a2.call(props, 0);\n            }\n          }), createMemo(() => props.tab1)];\n        }\n      }), createComponent(LabelStyled, {\n        get isActive() {\n          return props.selectedTabIndex === 1;\n        },\n        get children() {\n          return [createComponent(InputStyled, {\n            type: \"radio\",\n            get checked() {\n              return props.selectedTabIndex === 1;\n            },\n            name: groupName,\n            onInput: () => {\n              var _a2;\n              return (_a2 = props.onSelectedTabIndexChange) == null ? void 0 : _a2.call(props, 1);\n            }\n          }), createMemo(() => props.tab2)];\n        }\n      })];\n    }\n  });\n};\nconst backgroundBorders = {\n  m: \"16px\",\n  s: \"12px\",\n  none: \"0\"\n};\nconst imageBorders = {\n  m: \"12px\",\n  s: \"8px\",\n  none: \"0\"\n};\nconst qrNormalSize = 256;\nconst imgSizeDefault = 60;\nconst picSizeDefault = 48;\nconst qrPaddingTop = 24;\nconst CopyIconButton = styled.div`\n    width: 52px;\n    height: 52px;\n    background: transparent;\n    position: absolute;\n    right: 0;\n    bottom: 0;\n\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    transition: transform 0.125s ease-in-out;\n`;\nconst QrCodeBackground = styled.button`\n    display: flex;\n    align-items: center;\n    position: relative;\n    background-color: ${(props) => props.theme.colors.background.qr};\n    border-radius: ${(props) => backgroundBorders[props.theme.borderRadius]};\n    padding: ${toPx(qrPaddingTop)} 0;\n    height: ${toPx(qrNormalSize + qrPaddingTop * 2)};\n    width: 100%;\n\n    overflow: hidden;\n    cursor: pointer;\n    border: none;\n\n    ${mediaNotTouch} {\n        &:hover {\n            ${CopyIconButton.class} {\n                transform: scale(1.04);\n            }\n        }\n    }\n\n    &:active {\n        ${CopyIconButton.class} {\n            transform: scale(0.96);\n        }\n    }\n\n    ${mediaTouch} {\n        &:active {\n            ${CopyIconButton.class} {\n                transform: scale(0.92);\n            }\n        }\n    }\n`;\nconst QrCodeWrapper$2 = styled.div`\n    position: relative;\n\n    width: fit-content;\n    margin: 0 auto;\n\n    > div:first-child {\n        display: flex;\n        align-items: center;\n        justify-content: center;\n    }\n\n    rect {\n        fill: transparent;\n    }\n\n    path {\n        fill: ${(props) => props.theme.colors.constant.black};\n    }\n`;\nconst ImageBackground = styled.div`\n    position: absolute;\n    width: ${toPx(imgSizeDefault)};\n    height: ${toPx(imgSizeDefault)};\n    background: ${(props) => props.theme.colors.background.qr};\n\n    display: flex;\n    align-items: center;\n    justify-content: center;\n`;\nconst ImageStyled$3 = styled(Image)`\n    width: ${(props) => toPx(props.size)};\n    height: ${(props) => toPx(props.size)};\n    border-radius: ${(props) => imageBorders[props.theme.borderRadius]};\n    background-color: ${(props) => props.theme.colors.background.qr};\n`;\nconst CopiedBoxStyled = styled.div`\n    position: absolute;\n    bottom: 14px;\n    left: 50%;\n    transform: translate(-50%, 0);\n\n    display: flex;\n    gap: 6px;\n    align-items: center;\n    border-radius: 18px;\n    min-width: 126px;\n    padding: 9px 16px 9px 10px;\n\n    filter: drop-shadow(0px 2px 8px rgba(0, 0, 0, 0.08));\n    background-color: ${(props) => props.theme.colors.background.segment};\n`;\nvar qrcode$1 = { exports: {} };\n(function(module, exports) {\n  var qrcode2 = function() {\n    var qrcode3 = function(typeNumber, errorCorrectionLevel) {\n      var PAD0 = 236;\n      var PAD1 = 17;\n      var _typeNumber = typeNumber;\n      var _errorCorrectionLevel = QRErrorCorrectionLevel[errorCorrectionLevel];\n      var _modules = null;\n      var _moduleCount = 0;\n      var _dataCache = null;\n      var _dataList = [];\n      var _this = {};\n      var makeImpl = function(test, maskPattern) {\n        _moduleCount = _typeNumber * 4 + 17;\n        _modules = function(moduleCount) {\n          var modules = new Array(moduleCount);\n          for (var row = 0; row < moduleCount; row += 1) {\n            modules[row] = new Array(moduleCount);\n            for (var col = 0; col < moduleCount; col += 1) {\n              modules[row][col] = null;\n            }\n          }\n          return modules;\n        }(_moduleCount);\n        setupPositionProbePattern(0, 0);\n        setupPositionProbePattern(_moduleCount - 7, 0);\n        setupPositionProbePattern(0, _moduleCount - 7);\n        setupPositionAdjustPattern();\n        setupTimingPattern();\n        setupTypeInfo(test, maskPattern);\n        if (_typeNumber >= 7) {\n          setupTypeNumber(test);\n        }\n        if (_dataCache == null) {\n          _dataCache = createData(_typeNumber, _errorCorrectionLevel, _dataList);\n        }\n        mapData(_dataCache, maskPattern);\n      };\n      var setupPositionProbePattern = function(row, col) {\n        for (var r = -1; r <= 7; r += 1) {\n          if (row + r <= -1 || _moduleCount <= row + r)\n            continue;\n          for (var c2 = -1; c2 <= 7; c2 += 1) {\n            if (col + c2 <= -1 || _moduleCount <= col + c2)\n              continue;\n            if (0 <= r && r <= 6 && (c2 == 0 || c2 == 6) || 0 <= c2 && c2 <= 6 && (r == 0 || r == 6) || 2 <= r && r <= 4 && 2 <= c2 && c2 <= 4) {\n              _modules[row + r][col + c2] = true;\n            } else {\n              _modules[row + r][col + c2] = false;\n            }\n          }\n        }\n      };\n      var getBestMaskPattern = function() {\n        var minLostPoint = 0;\n        var pattern = 0;\n        for (var i2 = 0; i2 < 8; i2 += 1) {\n          makeImpl(true, i2);\n          var lostPoint = QRUtil.getLostPoint(_this);\n          if (i2 == 0 || minLostPoint > lostPoint) {\n            minLostPoint = lostPoint;\n            pattern = i2;\n          }\n        }\n        return pattern;\n      };\n      var setupTimingPattern = function() {\n        for (var r = 8; r < _moduleCount - 8; r += 1) {\n          if (_modules[r][6] != null) {\n            continue;\n          }\n          _modules[r][6] = r % 2 == 0;\n        }\n        for (var c2 = 8; c2 < _moduleCount - 8; c2 += 1) {\n          if (_modules[6][c2] != null) {\n            continue;\n          }\n          _modules[6][c2] = c2 % 2 == 0;\n        }\n      };\n      var setupPositionAdjustPattern = function() {\n        var pos = QRUtil.getPatternPosition(_typeNumber);\n        for (var i2 = 0; i2 < pos.length; i2 += 1) {\n          for (var j = 0; j < pos.length; j += 1) {\n            var row = pos[i2];\n            var col = pos[j];\n            if (_modules[row][col] != null) {\n              continue;\n            }\n            for (var r = -2; r <= 2; r += 1) {\n              for (var c2 = -2; c2 <= 2; c2 += 1) {\n                if (r == -2 || r == 2 || c2 == -2 || c2 == 2 || r == 0 && c2 == 0) {\n                  _modules[row + r][col + c2] = true;\n                } else {\n                  _modules[row + r][col + c2] = false;\n                }\n              }\n            }\n          }\n        }\n      };\n      var setupTypeNumber = function(test) {\n        var bits = QRUtil.getBCHTypeNumber(_typeNumber);\n        for (var i2 = 0; i2 < 18; i2 += 1) {\n          var mod = !test && (bits >> i2 & 1) == 1;\n          _modules[Math.floor(i2 / 3)][i2 % 3 + _moduleCount - 8 - 3] = mod;\n        }\n        for (var i2 = 0; i2 < 18; i2 += 1) {\n          var mod = !test && (bits >> i2 & 1) == 1;\n          _modules[i2 % 3 + _moduleCount - 8 - 3][Math.floor(i2 / 3)] = mod;\n        }\n      };\n      var setupTypeInfo = function(test, maskPattern) {\n        var data = _errorCorrectionLevel << 3 | maskPattern;\n        var bits = QRUtil.getBCHTypeInfo(data);\n        for (var i2 = 0; i2 < 15; i2 += 1) {\n          var mod = !test && (bits >> i2 & 1) == 1;\n          if (i2 < 6) {\n            _modules[i2][8] = mod;\n          } else if (i2 < 8) {\n            _modules[i2 + 1][8] = mod;\n          } else {\n            _modules[_moduleCount - 15 + i2][8] = mod;\n          }\n        }\n        for (var i2 = 0; i2 < 15; i2 += 1) {\n          var mod = !test && (bits >> i2 & 1) == 1;\n          if (i2 < 8) {\n            _modules[8][_moduleCount - i2 - 1] = mod;\n          } else if (i2 < 9) {\n            _modules[8][15 - i2 - 1 + 1] = mod;\n          } else {\n            _modules[8][15 - i2 - 1] = mod;\n          }\n        }\n        _modules[_moduleCount - 8][8] = !test;\n      };\n      var mapData = function(data, maskPattern) {\n        var inc = -1;\n        var row = _moduleCount - 1;\n        var bitIndex = 7;\n        var byteIndex = 0;\n        var maskFunc = QRUtil.getMaskFunction(maskPattern);\n        for (var col = _moduleCount - 1; col > 0; col -= 2) {\n          if (col == 6)\n            col -= 1;\n          while (true) {\n            for (var c2 = 0; c2 < 2; c2 += 1) {\n              if (_modules[row][col - c2] == null) {\n                var dark = false;\n                if (byteIndex < data.length) {\n                  dark = (data[byteIndex] >>> bitIndex & 1) == 1;\n                }\n                var mask = maskFunc(row, col - c2);\n                if (mask) {\n                  dark = !dark;\n                }\n                _modules[row][col - c2] = dark;\n                bitIndex -= 1;\n                if (bitIndex == -1) {\n                  byteIndex += 1;\n                  bitIndex = 7;\n                }\n              }\n            }\n            row += inc;\n            if (row < 0 || _moduleCount <= row) {\n              row -= inc;\n              inc = -inc;\n              break;\n            }\n          }\n        }\n      };\n      var createBytes = function(buffer, rsBlocks) {\n        var offset = 0;\n        var maxDcCount = 0;\n        var maxEcCount = 0;\n        var dcdata = new Array(rsBlocks.length);\n        var ecdata = new Array(rsBlocks.length);\n        for (var r = 0; r < rsBlocks.length; r += 1) {\n          var dcCount = rsBlocks[r].dataCount;\n          var ecCount = rsBlocks[r].totalCount - dcCount;\n          maxDcCount = Math.max(maxDcCount, dcCount);\n          maxEcCount = Math.max(maxEcCount, ecCount);\n          dcdata[r] = new Array(dcCount);\n          for (var i2 = 0; i2 < dcdata[r].length; i2 += 1) {\n            dcdata[r][i2] = 255 & buffer.getBuffer()[i2 + offset];\n          }\n          offset += dcCount;\n          var rsPoly = QRUtil.getErrorCorrectPolynomial(ecCount);\n          var rawPoly = qrPolynomial(dcdata[r], rsPoly.getLength() - 1);\n          var modPoly = rawPoly.mod(rsPoly);\n          ecdata[r] = new Array(rsPoly.getLength() - 1);\n          for (var i2 = 0; i2 < ecdata[r].length; i2 += 1) {\n            var modIndex = i2 + modPoly.getLength() - ecdata[r].length;\n            ecdata[r][i2] = modIndex >= 0 ? modPoly.getAt(modIndex) : 0;\n          }\n        }\n        var totalCodeCount = 0;\n        for (var i2 = 0; i2 < rsBlocks.length; i2 += 1) {\n          totalCodeCount += rsBlocks[i2].totalCount;\n        }\n        var data = new Array(totalCodeCount);\n        var index = 0;\n        for (var i2 = 0; i2 < maxDcCount; i2 += 1) {\n          for (var r = 0; r < rsBlocks.length; r += 1) {\n            if (i2 < dcdata[r].length) {\n              data[index] = dcdata[r][i2];\n              index += 1;\n            }\n          }\n        }\n        for (var i2 = 0; i2 < maxEcCount; i2 += 1) {\n          for (var r = 0; r < rsBlocks.length; r += 1) {\n            if (i2 < ecdata[r].length) {\n              data[index] = ecdata[r][i2];\n              index += 1;\n            }\n          }\n        }\n        return data;\n      };\n      var createData = function(typeNumber2, errorCorrectionLevel2, dataList) {\n        var rsBlocks = QRRSBlock.getRSBlocks(typeNumber2, errorCorrectionLevel2);\n        var buffer = qrBitBuffer();\n        for (var i2 = 0; i2 < dataList.length; i2 += 1) {\n          var data = dataList[i2];\n          buffer.put(data.getMode(), 4);\n          buffer.put(data.getLength(), QRUtil.getLengthInBits(data.getMode(), typeNumber2));\n          data.write(buffer);\n        }\n        var totalDataCount = 0;\n        for (var i2 = 0; i2 < rsBlocks.length; i2 += 1) {\n          totalDataCount += rsBlocks[i2].dataCount;\n        }\n        if (buffer.getLengthInBits() > totalDataCount * 8) {\n          throw \"code length overflow. (\" + buffer.getLengthInBits() + \">\" + totalDataCount * 8 + \")\";\n        }\n        if (buffer.getLengthInBits() + 4 <= totalDataCount * 8) {\n          buffer.put(0, 4);\n        }\n        while (buffer.getLengthInBits() % 8 != 0) {\n          buffer.putBit(false);\n        }\n        while (true) {\n          if (buffer.getLengthInBits() >= totalDataCount * 8) {\n            break;\n          }\n          buffer.put(PAD0, 8);\n          if (buffer.getLengthInBits() >= totalDataCount * 8) {\n            break;\n          }\n          buffer.put(PAD1, 8);\n        }\n        return createBytes(buffer, rsBlocks);\n      };\n      _this.addData = function(data, mode) {\n        mode = mode || \"Byte\";\n        var newData = null;\n        switch (mode) {\n          case \"Numeric\":\n            newData = qrNumber(data);\n            break;\n          case \"Alphanumeric\":\n            newData = qrAlphaNum(data);\n            break;\n          case \"Byte\":\n            newData = qr8BitByte(data);\n            break;\n          case \"Kanji\":\n            newData = qrKanji(data);\n            break;\n          default:\n            throw \"mode:\" + mode;\n        }\n        _dataList.push(newData);\n        _dataCache = null;\n      };\n      _this.isDark = function(row, col) {\n        if (row < 0 || _moduleCount <= row || col < 0 || _moduleCount <= col) {\n          throw row + \",\" + col;\n        }\n        return _modules[row][col];\n      };\n      _this.getModuleCount = function() {\n        return _moduleCount;\n      };\n      _this.make = function() {\n        if (_typeNumber < 1) {\n          var typeNumber2 = 1;\n          for (; typeNumber2 < 40; typeNumber2++) {\n            var rsBlocks = QRRSBlock.getRSBlocks(typeNumber2, _errorCorrectionLevel);\n            var buffer = qrBitBuffer();\n            for (var i2 = 0; i2 < _dataList.length; i2++) {\n              var data = _dataList[i2];\n              buffer.put(data.getMode(), 4);\n              buffer.put(data.getLength(), QRUtil.getLengthInBits(data.getMode(), typeNumber2));\n              data.write(buffer);\n            }\n            var totalDataCount = 0;\n            for (var i2 = 0; i2 < rsBlocks.length; i2++) {\n              totalDataCount += rsBlocks[i2].dataCount;\n            }\n            if (buffer.getLengthInBits() <= totalDataCount * 8) {\n              break;\n            }\n          }\n          _typeNumber = typeNumber2;\n        }\n        makeImpl(false, getBestMaskPattern());\n      };\n      _this.createTableTag = function(cellSize, margin) {\n        cellSize = cellSize || 2;\n        margin = typeof margin == \"undefined\" ? cellSize * 4 : margin;\n        var qrHtml = \"\";\n        qrHtml += '<table style=\"';\n        qrHtml += \" border-width: 0px; border-style: none;\";\n        qrHtml += \" border-collapse: collapse;\";\n        qrHtml += \" padding: 0px; margin: \" + margin + \"px;\";\n        qrHtml += '\">';\n        qrHtml += \"<tbody>\";\n        for (var r = 0; r < _this.getModuleCount(); r += 1) {\n          qrHtml += \"<tr>\";\n          for (var c2 = 0; c2 < _this.getModuleCount(); c2 += 1) {\n            qrHtml += '<td style=\"';\n            qrHtml += \" border-width: 0px; border-style: none;\";\n            qrHtml += \" border-collapse: collapse;\";\n            qrHtml += \" padding: 0px; margin: 0px;\";\n            qrHtml += \" width: \" + cellSize + \"px;\";\n            qrHtml += \" height: \" + cellSize + \"px;\";\n            qrHtml += \" background-color: \";\n            qrHtml += _this.isDark(r, c2) ? \"#000000\" : \"#ffffff\";\n            qrHtml += \";\";\n            qrHtml += '\"/>';\n          }\n          qrHtml += \"</tr>\";\n        }\n        qrHtml += \"</tbody>\";\n        qrHtml += \"</table>\";\n        return qrHtml;\n      };\n      _this.createSvgTag = function(cellSize, margin, alt, title) {\n        var opts = {};\n        if (typeof arguments[0] == \"object\") {\n          opts = arguments[0];\n          cellSize = opts.cellSize;\n          margin = opts.margin;\n          alt = opts.alt;\n          title = opts.title;\n        }\n        cellSize = cellSize || 2;\n        margin = typeof margin == \"undefined\" ? cellSize * 4 : margin;\n        alt = typeof alt === \"string\" ? { text: alt } : alt || {};\n        alt.text = alt.text || null;\n        alt.id = alt.text ? alt.id || \"qrcode-description\" : null;\n        title = typeof title === \"string\" ? { text: title } : title || {};\n        title.text = title.text || null;\n        title.id = title.text ? title.id || \"qrcode-title\" : null;\n        var size = _this.getModuleCount() * cellSize + margin * 2;\n        var c2, mc, r, mr, qrSvg = \"\", rect;\n        rect = \"l\" + cellSize + \",0 0,\" + cellSize + \" -\" + cellSize + \",0 0,-\" + cellSize + \"z \";\n        qrSvg += '<svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\"';\n        qrSvg += !opts.scalable ? ' width=\"' + size + 'px\" height=\"' + size + 'px\"' : \"\";\n        qrSvg += ' viewBox=\"0 0 ' + size + \" \" + size + '\" ';\n        qrSvg += ' preserveAspectRatio=\"xMinYMin meet\"';\n        qrSvg += title.text || alt.text ? ' role=\"img\" aria-labelledby=\"' + escapeXml([title.id, alt.id].join(\" \").trim()) + '\"' : \"\";\n        qrSvg += \">\";\n        qrSvg += title.text ? '<title id=\"' + escapeXml(title.id) + '\">' + escapeXml(title.text) + \"</title>\" : \"\";\n        qrSvg += alt.text ? '<description id=\"' + escapeXml(alt.id) + '\">' + escapeXml(alt.text) + \"</description>\" : \"\";\n        qrSvg += '<rect width=\"100%\" height=\"100%\" fill=\"white\" cx=\"0\" cy=\"0\"/>';\n        qrSvg += '<path d=\"';\n        for (r = 0; r < _this.getModuleCount(); r += 1) {\n          mr = r * cellSize + margin;\n          for (c2 = 0; c2 < _this.getModuleCount(); c2 += 1) {\n            if (_this.isDark(r, c2)) {\n              mc = c2 * cellSize + margin;\n              qrSvg += \"M\" + mc + \",\" + mr + rect;\n            }\n          }\n        }\n        qrSvg += '\" stroke=\"transparent\" fill=\"black\"/>';\n        qrSvg += \"</svg>\";\n        return qrSvg;\n      };\n      _this.createDataURL = function(cellSize, margin) {\n        cellSize = cellSize || 2;\n        margin = typeof margin == \"undefined\" ? cellSize * 4 : margin;\n        var size = _this.getModuleCount() * cellSize + margin * 2;\n        var min2 = margin;\n        var max2 = size - margin;\n        return createDataURL(size, size, function(x, y) {\n          if (min2 <= x && x < max2 && min2 <= y && y < max2) {\n            var c2 = Math.floor((x - min2) / cellSize);\n            var r = Math.floor((y - min2) / cellSize);\n            return _this.isDark(r, c2) ? 0 : 1;\n          } else {\n            return 1;\n          }\n        });\n      };\n      _this.createImgTag = function(cellSize, margin, alt) {\n        cellSize = cellSize || 2;\n        margin = typeof margin == \"undefined\" ? cellSize * 4 : margin;\n        var size = _this.getModuleCount() * cellSize + margin * 2;\n        var img = \"\";\n        img += \"<img\";\n        img += ' src=\"';\n        img += _this.createDataURL(cellSize, margin);\n        img += '\"';\n        img += ' width=\"';\n        img += size;\n        img += '\"';\n        img += ' height=\"';\n        img += size;\n        img += '\"';\n        if (alt) {\n          img += ' alt=\"';\n          img += escapeXml(alt);\n          img += '\"';\n        }\n        img += \"/>\";\n        return img;\n      };\n      var escapeXml = function(s2) {\n        var escaped = \"\";\n        for (var i2 = 0; i2 < s2.length; i2 += 1) {\n          var c2 = s2.charAt(i2);\n          switch (c2) {\n            case \"<\":\n              escaped += \"&lt;\";\n              break;\n            case \">\":\n              escaped += \"&gt;\";\n              break;\n            case \"&\":\n              escaped += \"&amp;\";\n              break;\n            case '\"':\n              escaped += \"&quot;\";\n              break;\n            default:\n              escaped += c2;\n              break;\n          }\n        }\n        return escaped;\n      };\n      var _createHalfASCII = function(margin) {\n        var cellSize = 1;\n        margin = typeof margin == \"undefined\" ? cellSize * 2 : margin;\n        var size = _this.getModuleCount() * cellSize + margin * 2;\n        var min2 = margin;\n        var max2 = size - margin;\n        var y, x, r1, r2, p2;\n        var blocks = {\n          \"\\u2588\\u2588\": \"\\u2588\",\n          \"\\u2588 \": \"\\u2580\",\n          \" \\u2588\": \"\\u2584\",\n          \"  \": \" \"\n        };\n        var blocksLastLineNoMargin = {\n          \"\\u2588\\u2588\": \"\\u2580\",\n          \"\\u2588 \": \"\\u2580\",\n          \" \\u2588\": \" \",\n          \"  \": \" \"\n        };\n        var ascii = \"\";\n        for (y = 0; y < size; y += 2) {\n          r1 = Math.floor((y - min2) / cellSize);\n          r2 = Math.floor((y + 1 - min2) / cellSize);\n          for (x = 0; x < size; x += 1) {\n            p2 = \"\\u2588\";\n            if (min2 <= x && x < max2 && min2 <= y && y < max2 && _this.isDark(r1, Math.floor((x - min2) / cellSize))) {\n              p2 = \" \";\n            }\n            if (min2 <= x && x < max2 && min2 <= y + 1 && y + 1 < max2 && _this.isDark(r2, Math.floor((x - min2) / cellSize))) {\n              p2 += \" \";\n            } else {\n              p2 += \"\\u2588\";\n            }\n            ascii += margin < 1 && y + 1 >= max2 ? blocksLastLineNoMargin[p2] : blocks[p2];\n          }\n          ascii += \"\\n\";\n        }\n        if (size % 2 && margin > 0) {\n          return ascii.substring(0, ascii.length - size - 1) + Array(size + 1).join(\"\\u2580\");\n        }\n        return ascii.substring(0, ascii.length - 1);\n      };\n      _this.createASCII = function(cellSize, margin) {\n        cellSize = cellSize || 1;\n        if (cellSize < 2) {\n          return _createHalfASCII(margin);\n        }\n        cellSize -= 1;\n        margin = typeof margin == \"undefined\" ? cellSize * 2 : margin;\n        var size = _this.getModuleCount() * cellSize + margin * 2;\n        var min2 = margin;\n        var max2 = size - margin;\n        var y, x, r, p2;\n        var white = Array(cellSize + 1).join(\"\\u2588\\u2588\");\n        var black = Array(cellSize + 1).join(\"  \");\n        var ascii = \"\";\n        var line = \"\";\n        for (y = 0; y < size; y += 1) {\n          r = Math.floor((y - min2) / cellSize);\n          line = \"\";\n          for (x = 0; x < size; x += 1) {\n            p2 = 1;\n            if (min2 <= x && x < max2 && min2 <= y && y < max2 && _this.isDark(r, Math.floor((x - min2) / cellSize))) {\n              p2 = 0;\n            }\n            line += p2 ? white : black;\n          }\n          for (r = 0; r < cellSize; r += 1) {\n            ascii += line + \"\\n\";\n          }\n        }\n        return ascii.substring(0, ascii.length - 1);\n      };\n      _this.renderTo2dContext = function(context, cellSize) {\n        cellSize = cellSize || 2;\n        var length = _this.getModuleCount();\n        for (var row = 0; row < length; row++) {\n          for (var col = 0; col < length; col++) {\n            context.fillStyle = _this.isDark(row, col) ? \"black\" : \"white\";\n            context.fillRect(row * cellSize, col * cellSize, cellSize, cellSize);\n          }\n        }\n      };\n      return _this;\n    };\n    qrcode3.stringToBytesFuncs = {\n      \"default\": function(s2) {\n        var bytes = [];\n        for (var i2 = 0; i2 < s2.length; i2 += 1) {\n          var c2 = s2.charCodeAt(i2);\n          bytes.push(c2 & 255);\n        }\n        return bytes;\n      }\n    };\n    qrcode3.stringToBytes = qrcode3.stringToBytesFuncs[\"default\"];\n    qrcode3.createStringToBytes = function(unicodeData, numChars) {\n      var unicodeMap = function() {\n        var bin = base64DecodeInputStream(unicodeData);\n        var read = function() {\n          var b = bin.read();\n          if (b == -1)\n            throw \"eof\";\n          return b;\n        };\n        var count = 0;\n        var unicodeMap2 = {};\n        while (true) {\n          var b0 = bin.read();\n          if (b0 == -1)\n            break;\n          var b1 = read();\n          var b2 = read();\n          var b3 = read();\n          var k = String.fromCharCode(b0 << 8 | b1);\n          var v = b2 << 8 | b3;\n          unicodeMap2[k] = v;\n          count += 1;\n        }\n        if (count != numChars) {\n          throw count + \" != \" + numChars;\n        }\n        return unicodeMap2;\n      }();\n      var unknownChar = \"?\".charCodeAt(0);\n      return function(s2) {\n        var bytes = [];\n        for (var i2 = 0; i2 < s2.length; i2 += 1) {\n          var c2 = s2.charCodeAt(i2);\n          if (c2 < 128) {\n            bytes.push(c2);\n          } else {\n            var b = unicodeMap[s2.charAt(i2)];\n            if (typeof b == \"number\") {\n              if ((b & 255) == b) {\n                bytes.push(b);\n              } else {\n                bytes.push(b >>> 8);\n                bytes.push(b & 255);\n              }\n            } else {\n              bytes.push(unknownChar);\n            }\n          }\n        }\n        return bytes;\n      };\n    };\n    var QRMode = {\n      MODE_NUMBER: 1 << 0,\n      MODE_ALPHA_NUM: 1 << 1,\n      MODE_8BIT_BYTE: 1 << 2,\n      MODE_KANJI: 1 << 3\n    };\n    var QRErrorCorrectionLevel = {\n      L: 1,\n      M: 0,\n      Q: 3,\n      H: 2\n    };\n    var QRMaskPattern = {\n      PATTERN000: 0,\n      PATTERN001: 1,\n      PATTERN010: 2,\n      PATTERN011: 3,\n      PATTERN100: 4,\n      PATTERN101: 5,\n      PATTERN110: 6,\n      PATTERN111: 7\n    };\n    var QRUtil = function() {\n      var PATTERN_POSITION_TABLE = [\n        [],\n        [6, 18],\n        [6, 22],\n        [6, 26],\n        [6, 30],\n        [6, 34],\n        [6, 22, 38],\n        [6, 24, 42],\n        [6, 26, 46],\n        [6, 28, 50],\n        [6, 30, 54],\n        [6, 32, 58],\n        [6, 34, 62],\n        [6, 26, 46, 66],\n        [6, 26, 48, 70],\n        [6, 26, 50, 74],\n        [6, 30, 54, 78],\n        [6, 30, 56, 82],\n        [6, 30, 58, 86],\n        [6, 34, 62, 90],\n        [6, 28, 50, 72, 94],\n        [6, 26, 50, 74, 98],\n        [6, 30, 54, 78, 102],\n        [6, 28, 54, 80, 106],\n        [6, 32, 58, 84, 110],\n        [6, 30, 58, 86, 114],\n        [6, 34, 62, 90, 118],\n        [6, 26, 50, 74, 98, 122],\n        [6, 30, 54, 78, 102, 126],\n        [6, 26, 52, 78, 104, 130],\n        [6, 30, 56, 82, 108, 134],\n        [6, 34, 60, 86, 112, 138],\n        [6, 30, 58, 86, 114, 142],\n        [6, 34, 62, 90, 118, 146],\n        [6, 30, 54, 78, 102, 126, 150],\n        [6, 24, 50, 76, 102, 128, 154],\n        [6, 28, 54, 80, 106, 132, 158],\n        [6, 32, 58, 84, 110, 136, 162],\n        [6, 26, 54, 82, 110, 138, 166],\n        [6, 30, 58, 86, 114, 142, 170]\n      ];\n      var G15 = 1 << 10 | 1 << 8 | 1 << 5 | 1 << 4 | 1 << 2 | 1 << 1 | 1 << 0;\n      var G18 = 1 << 12 | 1 << 11 | 1 << 10 | 1 << 9 | 1 << 8 | 1 << 5 | 1 << 2 | 1 << 0;\n      var G15_MASK = 1 << 14 | 1 << 12 | 1 << 10 | 1 << 4 | 1 << 1;\n      var _this = {};\n      var getBCHDigit = function(data) {\n        var digit = 0;\n        while (data != 0) {\n          digit += 1;\n          data >>>= 1;\n        }\n        return digit;\n      };\n      _this.getBCHTypeInfo = function(data) {\n        var d = data << 10;\n        while (getBCHDigit(d) - getBCHDigit(G15) >= 0) {\n          d ^= G15 << getBCHDigit(d) - getBCHDigit(G15);\n        }\n        return (data << 10 | d) ^ G15_MASK;\n      };\n      _this.getBCHTypeNumber = function(data) {\n        var d = data << 12;\n        while (getBCHDigit(d) - getBCHDigit(G18) >= 0) {\n          d ^= G18 << getBCHDigit(d) - getBCHDigit(G18);\n        }\n        return data << 12 | d;\n      };\n      _this.getPatternPosition = function(typeNumber) {\n        return PATTERN_POSITION_TABLE[typeNumber - 1];\n      };\n      _this.getMaskFunction = function(maskPattern) {\n        switch (maskPattern) {\n          case QRMaskPattern.PATTERN000:\n            return function(i2, j) {\n              return (i2 + j) % 2 == 0;\n            };\n          case QRMaskPattern.PATTERN001:\n            return function(i2, j) {\n              return i2 % 2 == 0;\n            };\n          case QRMaskPattern.PATTERN010:\n            return function(i2, j) {\n              return j % 3 == 0;\n            };\n          case QRMaskPattern.PATTERN011:\n            return function(i2, j) {\n              return (i2 + j) % 3 == 0;\n            };\n          case QRMaskPattern.PATTERN100:\n            return function(i2, j) {\n              return (Math.floor(i2 / 2) + Math.floor(j / 3)) % 2 == 0;\n            };\n          case QRMaskPattern.PATTERN101:\n            return function(i2, j) {\n              return i2 * j % 2 + i2 * j % 3 == 0;\n            };\n          case QRMaskPattern.PATTERN110:\n            return function(i2, j) {\n              return (i2 * j % 2 + i2 * j % 3) % 2 == 0;\n            };\n          case QRMaskPattern.PATTERN111:\n            return function(i2, j) {\n              return (i2 * j % 3 + (i2 + j) % 2) % 2 == 0;\n            };\n          default:\n            throw \"bad maskPattern:\" + maskPattern;\n        }\n      };\n      _this.getErrorCorrectPolynomial = function(errorCorrectLength) {\n        var a2 = qrPolynomial([1], 0);\n        for (var i2 = 0; i2 < errorCorrectLength; i2 += 1) {\n          a2 = a2.multiply(qrPolynomial([1, QRMath.gexp(i2)], 0));\n        }\n        return a2;\n      };\n      _this.getLengthInBits = function(mode, type) {\n        if (1 <= type && type < 10) {\n          switch (mode) {\n            case QRMode.MODE_NUMBER:\n              return 10;\n            case QRMode.MODE_ALPHA_NUM:\n              return 9;\n            case QRMode.MODE_8BIT_BYTE:\n              return 8;\n            case QRMode.MODE_KANJI:\n              return 8;\n            default:\n              throw \"mode:\" + mode;\n          }\n        } else if (type < 27) {\n          switch (mode) {\n            case QRMode.MODE_NUMBER:\n              return 12;\n            case QRMode.MODE_ALPHA_NUM:\n              return 11;\n            case QRMode.MODE_8BIT_BYTE:\n              return 16;\n            case QRMode.MODE_KANJI:\n              return 10;\n            default:\n              throw \"mode:\" + mode;\n          }\n        } else if (type < 41) {\n          switch (mode) {\n            case QRMode.MODE_NUMBER:\n              return 14;\n            case QRMode.MODE_ALPHA_NUM:\n              return 13;\n            case QRMode.MODE_8BIT_BYTE:\n              return 16;\n            case QRMode.MODE_KANJI:\n              return 12;\n            default:\n              throw \"mode:\" + mode;\n          }\n        } else {\n          throw \"type:\" + type;\n        }\n      };\n      _this.getLostPoint = function(qrcode4) {\n        var moduleCount = qrcode4.getModuleCount();\n        var lostPoint = 0;\n        for (var row = 0; row < moduleCount; row += 1) {\n          for (var col = 0; col < moduleCount; col += 1) {\n            var sameCount = 0;\n            var dark = qrcode4.isDark(row, col);\n            for (var r = -1; r <= 1; r += 1) {\n              if (row + r < 0 || moduleCount <= row + r) {\n                continue;\n              }\n              for (var c2 = -1; c2 <= 1; c2 += 1) {\n                if (col + c2 < 0 || moduleCount <= col + c2) {\n                  continue;\n                }\n                if (r == 0 && c2 == 0) {\n                  continue;\n                }\n                if (dark == qrcode4.isDark(row + r, col + c2)) {\n                  sameCount += 1;\n                }\n              }\n            }\n            if (sameCount > 5) {\n              lostPoint += 3 + sameCount - 5;\n            }\n          }\n        }\n        for (var row = 0; row < moduleCount - 1; row += 1) {\n          for (var col = 0; col < moduleCount - 1; col += 1) {\n            var count = 0;\n            if (qrcode4.isDark(row, col))\n              count += 1;\n            if (qrcode4.isDark(row + 1, col))\n              count += 1;\n            if (qrcode4.isDark(row, col + 1))\n              count += 1;\n            if (qrcode4.isDark(row + 1, col + 1))\n              count += 1;\n            if (count == 0 || count == 4) {\n              lostPoint += 3;\n            }\n          }\n        }\n        for (var row = 0; row < moduleCount; row += 1) {\n          for (var col = 0; col < moduleCount - 6; col += 1) {\n            if (qrcode4.isDark(row, col) && !qrcode4.isDark(row, col + 1) && qrcode4.isDark(row, col + 2) && qrcode4.isDark(row, col + 3) && qrcode4.isDark(row, col + 4) && !qrcode4.isDark(row, col + 5) && qrcode4.isDark(row, col + 6)) {\n              lostPoint += 40;\n            }\n          }\n        }\n        for (var col = 0; col < moduleCount; col += 1) {\n          for (var row = 0; row < moduleCount - 6; row += 1) {\n            if (qrcode4.isDark(row, col) && !qrcode4.isDark(row + 1, col) && qrcode4.isDark(row + 2, col) && qrcode4.isDark(row + 3, col) && qrcode4.isDark(row + 4, col) && !qrcode4.isDark(row + 5, col) && qrcode4.isDark(row + 6, col)) {\n              lostPoint += 40;\n            }\n          }\n        }\n        var darkCount = 0;\n        for (var col = 0; col < moduleCount; col += 1) {\n          for (var row = 0; row < moduleCount; row += 1) {\n            if (qrcode4.isDark(row, col)) {\n              darkCount += 1;\n            }\n          }\n        }\n        var ratio = Math.abs(100 * darkCount / moduleCount / moduleCount - 50) / 5;\n        lostPoint += ratio * 10;\n        return lostPoint;\n      };\n      return _this;\n    }();\n    var QRMath = function() {\n      var EXP_TABLE = new Array(256);\n      var LOG_TABLE = new Array(256);\n      for (var i2 = 0; i2 < 8; i2 += 1) {\n        EXP_TABLE[i2] = 1 << i2;\n      }\n      for (var i2 = 8; i2 < 256; i2 += 1) {\n        EXP_TABLE[i2] = EXP_TABLE[i2 - 4] ^ EXP_TABLE[i2 - 5] ^ EXP_TABLE[i2 - 6] ^ EXP_TABLE[i2 - 8];\n      }\n      for (var i2 = 0; i2 < 255; i2 += 1) {\n        LOG_TABLE[EXP_TABLE[i2]] = i2;\n      }\n      var _this = {};\n      _this.glog = function(n2) {\n        if (n2 < 1) {\n          throw \"glog(\" + n2 + \")\";\n        }\n        return LOG_TABLE[n2];\n      };\n      _this.gexp = function(n2) {\n        while (n2 < 0) {\n          n2 += 255;\n        }\n        while (n2 >= 256) {\n          n2 -= 255;\n        }\n        return EXP_TABLE[n2];\n      };\n      return _this;\n    }();\n    function qrPolynomial(num, shift) {\n      if (typeof num.length == \"undefined\") {\n        throw num.length + \"/\" + shift;\n      }\n      var _num = function() {\n        var offset = 0;\n        while (offset < num.length && num[offset] == 0) {\n          offset += 1;\n        }\n        var _num2 = new Array(num.length - offset + shift);\n        for (var i2 = 0; i2 < num.length - offset; i2 += 1) {\n          _num2[i2] = num[i2 + offset];\n        }\n        return _num2;\n      }();\n      var _this = {};\n      _this.getAt = function(index) {\n        return _num[index];\n      };\n      _this.getLength = function() {\n        return _num.length;\n      };\n      _this.multiply = function(e2) {\n        var num2 = new Array(_this.getLength() + e2.getLength() - 1);\n        for (var i2 = 0; i2 < _this.getLength(); i2 += 1) {\n          for (var j = 0; j < e2.getLength(); j += 1) {\n            num2[i2 + j] ^= QRMath.gexp(QRMath.glog(_this.getAt(i2)) + QRMath.glog(e2.getAt(j)));\n          }\n        }\n        return qrPolynomial(num2, 0);\n      };\n      _this.mod = function(e2) {\n        if (_this.getLength() - e2.getLength() < 0) {\n          return _this;\n        }\n        var ratio = QRMath.glog(_this.getAt(0)) - QRMath.glog(e2.getAt(0));\n        var num2 = new Array(_this.getLength());\n        for (var i2 = 0; i2 < _this.getLength(); i2 += 1) {\n          num2[i2] = _this.getAt(i2);\n        }\n        for (var i2 = 0; i2 < e2.getLength(); i2 += 1) {\n          num2[i2] ^= QRMath.gexp(QRMath.glog(e2.getAt(i2)) + ratio);\n        }\n        return qrPolynomial(num2, 0).mod(e2);\n      };\n      return _this;\n    }\n    var QRRSBlock = function() {\n      var RS_BLOCK_TABLE = [\n        [1, 26, 19],\n        [1, 26, 16],\n        [1, 26, 13],\n        [1, 26, 9],\n        [1, 44, 34],\n        [1, 44, 28],\n        [1, 44, 22],\n        [1, 44, 16],\n        [1, 70, 55],\n        [1, 70, 44],\n        [2, 35, 17],\n        [2, 35, 13],\n        [1, 100, 80],\n        [2, 50, 32],\n        [2, 50, 24],\n        [4, 25, 9],\n        [1, 134, 108],\n        [2, 67, 43],\n        [2, 33, 15, 2, 34, 16],\n        [2, 33, 11, 2, 34, 12],\n        [2, 86, 68],\n        [4, 43, 27],\n        [4, 43, 19],\n        [4, 43, 15],\n        [2, 98, 78],\n        [4, 49, 31],\n        [2, 32, 14, 4, 33, 15],\n        [4, 39, 13, 1, 40, 14],\n        [2, 121, 97],\n        [2, 60, 38, 2, 61, 39],\n        [4, 40, 18, 2, 41, 19],\n        [4, 40, 14, 2, 41, 15],\n        [2, 146, 116],\n        [3, 58, 36, 2, 59, 37],\n        [4, 36, 16, 4, 37, 17],\n        [4, 36, 12, 4, 37, 13],\n        [2, 86, 68, 2, 87, 69],\n        [4, 69, 43, 1, 70, 44],\n        [6, 43, 19, 2, 44, 20],\n        [6, 43, 15, 2, 44, 16],\n        [4, 101, 81],\n        [1, 80, 50, 4, 81, 51],\n        [4, 50, 22, 4, 51, 23],\n        [3, 36, 12, 8, 37, 13],\n        [2, 116, 92, 2, 117, 93],\n        [6, 58, 36, 2, 59, 37],\n        [4, 46, 20, 6, 47, 21],\n        [7, 42, 14, 4, 43, 15],\n        [4, 133, 107],\n        [8, 59, 37, 1, 60, 38],\n        [8, 44, 20, 4, 45, 21],\n        [12, 33, 11, 4, 34, 12],\n        [3, 145, 115, 1, 146, 116],\n        [4, 64, 40, 5, 65, 41],\n        [11, 36, 16, 5, 37, 17],\n        [11, 36, 12, 5, 37, 13],\n        [5, 109, 87, 1, 110, 88],\n        [5, 65, 41, 5, 66, 42],\n        [5, 54, 24, 7, 55, 25],\n        [11, 36, 12, 7, 37, 13],\n        [5, 122, 98, 1, 123, 99],\n        [7, 73, 45, 3, 74, 46],\n        [15, 43, 19, 2, 44, 20],\n        [3, 45, 15, 13, 46, 16],\n        [1, 135, 107, 5, 136, 108],\n        [10, 74, 46, 1, 75, 47],\n        [1, 50, 22, 15, 51, 23],\n        [2, 42, 14, 17, 43, 15],\n        [5, 150, 120, 1, 151, 121],\n        [9, 69, 43, 4, 70, 44],\n        [17, 50, 22, 1, 51, 23],\n        [2, 42, 14, 19, 43, 15],\n        [3, 141, 113, 4, 142, 114],\n        [3, 70, 44, 11, 71, 45],\n        [17, 47, 21, 4, 48, 22],\n        [9, 39, 13, 16, 40, 14],\n        [3, 135, 107, 5, 136, 108],\n        [3, 67, 41, 13, 68, 42],\n        [15, 54, 24, 5, 55, 25],\n        [15, 43, 15, 10, 44, 16],\n        [4, 144, 116, 4, 145, 117],\n        [17, 68, 42],\n        [17, 50, 22, 6, 51, 23],\n        [19, 46, 16, 6, 47, 17],\n        [2, 139, 111, 7, 140, 112],\n        [17, 74, 46],\n        [7, 54, 24, 16, 55, 25],\n        [34, 37, 13],\n        [4, 151, 121, 5, 152, 122],\n        [4, 75, 47, 14, 76, 48],\n        [11, 54, 24, 14, 55, 25],\n        [16, 45, 15, 14, 46, 16],\n        [6, 147, 117, 4, 148, 118],\n        [6, 73, 45, 14, 74, 46],\n        [11, 54, 24, 16, 55, 25],\n        [30, 46, 16, 2, 47, 17],\n        [8, 132, 106, 4, 133, 107],\n        [8, 75, 47, 13, 76, 48],\n        [7, 54, 24, 22, 55, 25],\n        [22, 45, 15, 13, 46, 16],\n        [10, 142, 114, 2, 143, 115],\n        [19, 74, 46, 4, 75, 47],\n        [28, 50, 22, 6, 51, 23],\n        [33, 46, 16, 4, 47, 17],\n        [8, 152, 122, 4, 153, 123],\n        [22, 73, 45, 3, 74, 46],\n        [8, 53, 23, 26, 54, 24],\n        [12, 45, 15, 28, 46, 16],\n        [3, 147, 117, 10, 148, 118],\n        [3, 73, 45, 23, 74, 46],\n        [4, 54, 24, 31, 55, 25],\n        [11, 45, 15, 31, 46, 16],\n        [7, 146, 116, 7, 147, 117],\n        [21, 73, 45, 7, 74, 46],\n        [1, 53, 23, 37, 54, 24],\n        [19, 45, 15, 26, 46, 16],\n        [5, 145, 115, 10, 146, 116],\n        [19, 75, 47, 10, 76, 48],\n        [15, 54, 24, 25, 55, 25],\n        [23, 45, 15, 25, 46, 16],\n        [13, 145, 115, 3, 146, 116],\n        [2, 74, 46, 29, 75, 47],\n        [42, 54, 24, 1, 55, 25],\n        [23, 45, 15, 28, 46, 16],\n        [17, 145, 115],\n        [10, 74, 46, 23, 75, 47],\n        [10, 54, 24, 35, 55, 25],\n        [19, 45, 15, 35, 46, 16],\n        [17, 145, 115, 1, 146, 116],\n        [14, 74, 46, 21, 75, 47],\n        [29, 54, 24, 19, 55, 25],\n        [11, 45, 15, 46, 46, 16],\n        [13, 145, 115, 6, 146, 116],\n        [14, 74, 46, 23, 75, 47],\n        [44, 54, 24, 7, 55, 25],\n        [59, 46, 16, 1, 47, 17],\n        [12, 151, 121, 7, 152, 122],\n        [12, 75, 47, 26, 76, 48],\n        [39, 54, 24, 14, 55, 25],\n        [22, 45, 15, 41, 46, 16],\n        [6, 151, 121, 14, 152, 122],\n        [6, 75, 47, 34, 76, 48],\n        [46, 54, 24, 10, 55, 25],\n        [2, 45, 15, 64, 46, 16],\n        [17, 152, 122, 4, 153, 123],\n        [29, 74, 46, 14, 75, 47],\n        [49, 54, 24, 10, 55, 25],\n        [24, 45, 15, 46, 46, 16],\n        [4, 152, 122, 18, 153, 123],\n        [13, 74, 46, 32, 75, 47],\n        [48, 54, 24, 14, 55, 25],\n        [42, 45, 15, 32, 46, 16],\n        [20, 147, 117, 4, 148, 118],\n        [40, 75, 47, 7, 76, 48],\n        [43, 54, 24, 22, 55, 25],\n        [10, 45, 15, 67, 46, 16],\n        [19, 148, 118, 6, 149, 119],\n        [18, 75, 47, 31, 76, 48],\n        [34, 54, 24, 34, 55, 25],\n        [20, 45, 15, 61, 46, 16]\n      ];\n      var qrRSBlock = function(totalCount, dataCount) {\n        var _this2 = {};\n        _this2.totalCount = totalCount;\n        _this2.dataCount = dataCount;\n        return _this2;\n      };\n      var _this = {};\n      var getRsBlockTable = function(typeNumber, errorCorrectionLevel) {\n        switch (errorCorrectionLevel) {\n          case QRErrorCorrectionLevel.L:\n            return RS_BLOCK_TABLE[(typeNumber - 1) * 4 + 0];\n          case QRErrorCorrectionLevel.M:\n            return RS_BLOCK_TABLE[(typeNumber - 1) * 4 + 1];\n          case QRErrorCorrectionLevel.Q:\n            return RS_BLOCK_TABLE[(typeNumber - 1) * 4 + 2];\n          case QRErrorCorrectionLevel.H:\n            return RS_BLOCK_TABLE[(typeNumber - 1) * 4 + 3];\n          default:\n            return void 0;\n        }\n      };\n      _this.getRSBlocks = function(typeNumber, errorCorrectionLevel) {\n        var rsBlock = getRsBlockTable(typeNumber, errorCorrectionLevel);\n        if (typeof rsBlock == \"undefined\") {\n          throw \"bad rs block @ typeNumber:\" + typeNumber + \"/errorCorrectionLevel:\" + errorCorrectionLevel;\n        }\n        var length = rsBlock.length / 3;\n        var list = [];\n        for (var i2 = 0; i2 < length; i2 += 1) {\n          var count = rsBlock[i2 * 3 + 0];\n          var totalCount = rsBlock[i2 * 3 + 1];\n          var dataCount = rsBlock[i2 * 3 + 2];\n          for (var j = 0; j < count; j += 1) {\n            list.push(qrRSBlock(totalCount, dataCount));\n          }\n        }\n        return list;\n      };\n      return _this;\n    }();\n    var qrBitBuffer = function() {\n      var _buffer = [];\n      var _length = 0;\n      var _this = {};\n      _this.getBuffer = function() {\n        return _buffer;\n      };\n      _this.getAt = function(index) {\n        var bufIndex = Math.floor(index / 8);\n        return (_buffer[bufIndex] >>> 7 - index % 8 & 1) == 1;\n      };\n      _this.put = function(num, length) {\n        for (var i2 = 0; i2 < length; i2 += 1) {\n          _this.putBit((num >>> length - i2 - 1 & 1) == 1);\n        }\n      };\n      _this.getLengthInBits = function() {\n        return _length;\n      };\n      _this.putBit = function(bit) {\n        var bufIndex = Math.floor(_length / 8);\n        if (_buffer.length <= bufIndex) {\n          _buffer.push(0);\n        }\n        if (bit) {\n          _buffer[bufIndex] |= 128 >>> _length % 8;\n        }\n        _length += 1;\n      };\n      return _this;\n    };\n    var qrNumber = function(data) {\n      var _mode = QRMode.MODE_NUMBER;\n      var _data = data;\n      var _this = {};\n      _this.getMode = function() {\n        return _mode;\n      };\n      _this.getLength = function(buffer) {\n        return _data.length;\n      };\n      _this.write = function(buffer) {\n        var data2 = _data;\n        var i2 = 0;\n        while (i2 + 2 < data2.length) {\n          buffer.put(strToNum(data2.substring(i2, i2 + 3)), 10);\n          i2 += 3;\n        }\n        if (i2 < data2.length) {\n          if (data2.length - i2 == 1) {\n            buffer.put(strToNum(data2.substring(i2, i2 + 1)), 4);\n          } else if (data2.length - i2 == 2) {\n            buffer.put(strToNum(data2.substring(i2, i2 + 2)), 7);\n          }\n        }\n      };\n      var strToNum = function(s2) {\n        var num = 0;\n        for (var i2 = 0; i2 < s2.length; i2 += 1) {\n          num = num * 10 + chatToNum(s2.charAt(i2));\n        }\n        return num;\n      };\n      var chatToNum = function(c2) {\n        if (\"0\" <= c2 && c2 <= \"9\") {\n          return c2.charCodeAt(0) - \"0\".charCodeAt(0);\n        }\n        throw \"illegal char :\" + c2;\n      };\n      return _this;\n    };\n    var qrAlphaNum = function(data) {\n      var _mode = QRMode.MODE_ALPHA_NUM;\n      var _data = data;\n      var _this = {};\n      _this.getMode = function() {\n        return _mode;\n      };\n      _this.getLength = function(buffer) {\n        return _data.length;\n      };\n      _this.write = function(buffer) {\n        var s2 = _data;\n        var i2 = 0;\n        while (i2 + 1 < s2.length) {\n          buffer.put(\n            getCode(s2.charAt(i2)) * 45 + getCode(s2.charAt(i2 + 1)),\n            11\n          );\n          i2 += 2;\n        }\n        if (i2 < s2.length) {\n          buffer.put(getCode(s2.charAt(i2)), 6);\n        }\n      };\n      var getCode = function(c2) {\n        if (\"0\" <= c2 && c2 <= \"9\") {\n          return c2.charCodeAt(0) - \"0\".charCodeAt(0);\n        } else if (\"A\" <= c2 && c2 <= \"Z\") {\n          return c2.charCodeAt(0) - \"A\".charCodeAt(0) + 10;\n        } else {\n          switch (c2) {\n            case \" \":\n              return 36;\n            case \"$\":\n              return 37;\n            case \"%\":\n              return 38;\n            case \"*\":\n              return 39;\n            case \"+\":\n              return 40;\n            case \"-\":\n              return 41;\n            case \".\":\n              return 42;\n            case \"/\":\n              return 43;\n            case \":\":\n              return 44;\n            default:\n              throw \"illegal char :\" + c2;\n          }\n        }\n      };\n      return _this;\n    };\n    var qr8BitByte = function(data) {\n      var _mode = QRMode.MODE_8BIT_BYTE;\n      var _bytes = qrcode3.stringToBytes(data);\n      var _this = {};\n      _this.getMode = function() {\n        return _mode;\n      };\n      _this.getLength = function(buffer) {\n        return _bytes.length;\n      };\n      _this.write = function(buffer) {\n        for (var i2 = 0; i2 < _bytes.length; i2 += 1) {\n          buffer.put(_bytes[i2], 8);\n        }\n      };\n      return _this;\n    };\n    var qrKanji = function(data) {\n      var _mode = QRMode.MODE_KANJI;\n      var stringToBytes = qrcode3.stringToBytesFuncs[\"SJIS\"];\n      if (!stringToBytes) {\n        throw \"sjis not supported.\";\n      }\n      !function(c2, code) {\n        var test = stringToBytes(c2);\n        if (test.length != 2 || (test[0] << 8 | test[1]) != code) {\n          throw \"sjis not supported.\";\n        }\n      }(\"\\u53CB\", 38726);\n      var _bytes = stringToBytes(data);\n      var _this = {};\n      _this.getMode = function() {\n        return _mode;\n      };\n      _this.getLength = function(buffer) {\n        return ~~(_bytes.length / 2);\n      };\n      _this.write = function(buffer) {\n        var data2 = _bytes;\n        var i2 = 0;\n        while (i2 + 1 < data2.length) {\n          var c2 = (255 & data2[i2]) << 8 | 255 & data2[i2 + 1];\n          if (33088 <= c2 && c2 <= 40956) {\n            c2 -= 33088;\n          } else if (57408 <= c2 && c2 <= 60351) {\n            c2 -= 49472;\n          } else {\n            throw \"illegal char at \" + (i2 + 1) + \"/\" + c2;\n          }\n          c2 = (c2 >>> 8 & 255) * 192 + (c2 & 255);\n          buffer.put(c2, 13);\n          i2 += 2;\n        }\n        if (i2 < data2.length) {\n          throw \"illegal char at \" + (i2 + 1);\n        }\n      };\n      return _this;\n    };\n    var byteArrayOutputStream = function() {\n      var _bytes = [];\n      var _this = {};\n      _this.writeByte = function(b) {\n        _bytes.push(b & 255);\n      };\n      _this.writeShort = function(i2) {\n        _this.writeByte(i2);\n        _this.writeByte(i2 >>> 8);\n      };\n      _this.writeBytes = function(b, off, len) {\n        off = off || 0;\n        len = len || b.length;\n        for (var i2 = 0; i2 < len; i2 += 1) {\n          _this.writeByte(b[i2 + off]);\n        }\n      };\n      _this.writeString = function(s2) {\n        for (var i2 = 0; i2 < s2.length; i2 += 1) {\n          _this.writeByte(s2.charCodeAt(i2));\n        }\n      };\n      _this.toByteArray = function() {\n        return _bytes;\n      };\n      _this.toString = function() {\n        var s2 = \"\";\n        s2 += \"[\";\n        for (var i2 = 0; i2 < _bytes.length; i2 += 1) {\n          if (i2 > 0) {\n            s2 += \",\";\n          }\n          s2 += _bytes[i2];\n        }\n        s2 += \"]\";\n        return s2;\n      };\n      return _this;\n    };\n    var base64EncodeOutputStream = function() {\n      var _buffer = 0;\n      var _buflen = 0;\n      var _length = 0;\n      var _base64 = \"\";\n      var _this = {};\n      var writeEncoded = function(b) {\n        _base64 += String.fromCharCode(encode(b & 63));\n      };\n      var encode = function(n2) {\n        if (n2 < 0)\n          ;\n        else if (n2 < 26) {\n          return 65 + n2;\n        } else if (n2 < 52) {\n          return 97 + (n2 - 26);\n        } else if (n2 < 62) {\n          return 48 + (n2 - 52);\n        } else if (n2 == 62) {\n          return 43;\n        } else if (n2 == 63) {\n          return 47;\n        }\n        throw \"n:\" + n2;\n      };\n      _this.writeByte = function(n2) {\n        _buffer = _buffer << 8 | n2 & 255;\n        _buflen += 8;\n        _length += 1;\n        while (_buflen >= 6) {\n          writeEncoded(_buffer >>> _buflen - 6);\n          _buflen -= 6;\n        }\n      };\n      _this.flush = function() {\n        if (_buflen > 0) {\n          writeEncoded(_buffer << 6 - _buflen);\n          _buffer = 0;\n          _buflen = 0;\n        }\n        if (_length % 3 != 0) {\n          var padlen = 3 - _length % 3;\n          for (var i2 = 0; i2 < padlen; i2 += 1) {\n            _base64 += \"=\";\n          }\n        }\n      };\n      _this.toString = function() {\n        return _base64;\n      };\n      return _this;\n    };\n    var base64DecodeInputStream = function(str) {\n      var _str = str;\n      var _pos = 0;\n      var _buffer = 0;\n      var _buflen = 0;\n      var _this = {};\n      _this.read = function() {\n        while (_buflen < 8) {\n          if (_pos >= _str.length) {\n            if (_buflen == 0) {\n              return -1;\n            }\n            throw \"unexpected end of file./\" + _buflen;\n          }\n          var c2 = _str.charAt(_pos);\n          _pos += 1;\n          if (c2 == \"=\") {\n            _buflen = 0;\n            return -1;\n          } else if (c2.match(/^\\s$/)) {\n            continue;\n          }\n          _buffer = _buffer << 6 | decode(c2.charCodeAt(0));\n          _buflen += 6;\n        }\n        var n2 = _buffer >>> _buflen - 8 & 255;\n        _buflen -= 8;\n        return n2;\n      };\n      var decode = function(c2) {\n        if (65 <= c2 && c2 <= 90) {\n          return c2 - 65;\n        } else if (97 <= c2 && c2 <= 122) {\n          return c2 - 97 + 26;\n        } else if (48 <= c2 && c2 <= 57) {\n          return c2 - 48 + 52;\n        } else if (c2 == 43) {\n          return 62;\n        } else if (c2 == 47) {\n          return 63;\n        } else {\n          throw \"c:\" + c2;\n        }\n      };\n      return _this;\n    };\n    var gifImage = function(width, height) {\n      var _width = width;\n      var _height = height;\n      var _data = new Array(width * height);\n      var _this = {};\n      _this.setPixel = function(x, y, pixel) {\n        _data[y * _width + x] = pixel;\n      };\n      _this.write = function(out) {\n        out.writeString(\"GIF87a\");\n        out.writeShort(_width);\n        out.writeShort(_height);\n        out.writeByte(128);\n        out.writeByte(0);\n        out.writeByte(0);\n        out.writeByte(0);\n        out.writeByte(0);\n        out.writeByte(0);\n        out.writeByte(255);\n        out.writeByte(255);\n        out.writeByte(255);\n        out.writeString(\",\");\n        out.writeShort(0);\n        out.writeShort(0);\n        out.writeShort(_width);\n        out.writeShort(_height);\n        out.writeByte(0);\n        var lzwMinCodeSize = 2;\n        var raster = getLZWRaster(lzwMinCodeSize);\n        out.writeByte(lzwMinCodeSize);\n        var offset = 0;\n        while (raster.length - offset > 255) {\n          out.writeByte(255);\n          out.writeBytes(raster, offset, 255);\n          offset += 255;\n        }\n        out.writeByte(raster.length - offset);\n        out.writeBytes(raster, offset, raster.length - offset);\n        out.writeByte(0);\n        out.writeString(\";\");\n      };\n      var bitOutputStream = function(out) {\n        var _out = out;\n        var _bitLength = 0;\n        var _bitBuffer = 0;\n        var _this2 = {};\n        _this2.write = function(data, length) {\n          if (data >>> length != 0) {\n            throw \"length over\";\n          }\n          while (_bitLength + length >= 8) {\n            _out.writeByte(255 & (data << _bitLength | _bitBuffer));\n            length -= 8 - _bitLength;\n            data >>>= 8 - _bitLength;\n            _bitBuffer = 0;\n            _bitLength = 0;\n          }\n          _bitBuffer = data << _bitLength | _bitBuffer;\n          _bitLength = _bitLength + length;\n        };\n        _this2.flush = function() {\n          if (_bitLength > 0) {\n            _out.writeByte(_bitBuffer);\n          }\n        };\n        return _this2;\n      };\n      var getLZWRaster = function(lzwMinCodeSize) {\n        var clearCode = 1 << lzwMinCodeSize;\n        var endCode = (1 << lzwMinCodeSize) + 1;\n        var bitLength = lzwMinCodeSize + 1;\n        var table = lzwTable();\n        for (var i2 = 0; i2 < clearCode; i2 += 1) {\n          table.add(String.fromCharCode(i2));\n        }\n        table.add(String.fromCharCode(clearCode));\n        table.add(String.fromCharCode(endCode));\n        var byteOut = byteArrayOutputStream();\n        var bitOut = bitOutputStream(byteOut);\n        bitOut.write(clearCode, bitLength);\n        var dataIndex = 0;\n        var s2 = String.fromCharCode(_data[dataIndex]);\n        dataIndex += 1;\n        while (dataIndex < _data.length) {\n          var c2 = String.fromCharCode(_data[dataIndex]);\n          dataIndex += 1;\n          if (table.contains(s2 + c2)) {\n            s2 = s2 + c2;\n          } else {\n            bitOut.write(table.indexOf(s2), bitLength);\n            if (table.size() < 4095) {\n              if (table.size() == 1 << bitLength) {\n                bitLength += 1;\n              }\n              table.add(s2 + c2);\n            }\n            s2 = c2;\n          }\n        }\n        bitOut.write(table.indexOf(s2), bitLength);\n        bitOut.write(endCode, bitLength);\n        bitOut.flush();\n        return byteOut.toByteArray();\n      };\n      var lzwTable = function() {\n        var _map = {};\n        var _size = 0;\n        var _this2 = {};\n        _this2.add = function(key) {\n          if (_this2.contains(key)) {\n            throw \"dup key:\" + key;\n          }\n          _map[key] = _size;\n          _size += 1;\n        };\n        _this2.size = function() {\n          return _size;\n        };\n        _this2.indexOf = function(key) {\n          return _map[key];\n        };\n        _this2.contains = function(key) {\n          return typeof _map[key] != \"undefined\";\n        };\n        return _this2;\n      };\n      return _this;\n    };\n    var createDataURL = function(width, height, getPixel) {\n      var gif = gifImage(width, height);\n      for (var y = 0; y < height; y += 1) {\n        for (var x = 0; x < width; x += 1) {\n          gif.setPixel(x, y, getPixel(x, y));\n        }\n      }\n      var b = byteArrayOutputStream();\n      gif.write(b);\n      var base64 = base64EncodeOutputStream();\n      var bytes = b.toByteArray();\n      for (var i2 = 0; i2 < bytes.length; i2 += 1) {\n        base64.writeByte(bytes[i2]);\n      }\n      base64.flush();\n      return \"data:image/gif;base64,\" + base64;\n    };\n    return qrcode3;\n  }();\n  !function() {\n    qrcode2.stringToBytesFuncs[\"UTF-8\"] = function(s2) {\n      function toUTF8Array(str) {\n        var utf8 = [];\n        for (var i2 = 0; i2 < str.length; i2++) {\n          var charcode = str.charCodeAt(i2);\n          if (charcode < 128)\n            utf8.push(charcode);\n          else if (charcode < 2048) {\n            utf8.push(\n              192 | charcode >> 6,\n              128 | charcode & 63\n            );\n          } else if (charcode < 55296 || charcode >= 57344) {\n            utf8.push(\n              224 | charcode >> 12,\n              128 | charcode >> 6 & 63,\n              128 | charcode & 63\n            );\n          } else {\n            i2++;\n            charcode = 65536 + ((charcode & 1023) << 10 | str.charCodeAt(i2) & 1023);\n            utf8.push(\n              240 | charcode >> 18,\n              128 | charcode >> 12 & 63,\n              128 | charcode >> 6 & 63,\n              128 | charcode & 63\n            );\n          }\n        }\n        return utf8;\n      }\n      return toUTF8Array(s2);\n    };\n  }();\n  (function(factory) {\n    {\n      module.exports = factory();\n    }\n  })(function() {\n    return qrcode2;\n  });\n})(qrcode$1);\nconst qrcode = qrcode$1.exports;\nfunction copyToClipboard(text) {\n  return __async(this, null, function* () {\n    try {\n      if (!(navigator == null ? void 0 : navigator.clipboard)) {\n        throw new TonConnectUIError(\"Clipboard API not available\");\n      }\n      return yield navigator.clipboard.writeText(text);\n    } catch (e2) {\n    }\n    fallbackCopyTextToClipboard(text);\n  });\n}\nfunction fallbackCopyTextToClipboard(text) {\n  const textArea = document.createElement(\"textarea\");\n  textArea.value = text;\n  textArea.style.top = \"0\";\n  textArea.style.left = \"0\";\n  textArea.style.position = \"fixed\";\n  document.body.appendChild(textArea);\n  textArea.focus();\n  textArea.select();\n  try {\n    document.execCommand(\"copy\");\n  } finally {\n    document.body.removeChild(textArea);\n  }\n}\nconst _tmpl$$t = /* @__PURE__ */ template$1(`<div></div>`);\nconst QRCode = (props) => {\n  let qrCodeCanvasRef;\n  let qrCodeWrapperRef;\n  let imageRef;\n  const [copyButtonOpened, setCopyButtonOpened] = createSignal(false);\n  const [picSize, setPicSize] = createSignal(picSizeDefault);\n  createEffect(() => {\n    const errorCorrectionLevel = \"L\";\n    const cellSize = 4;\n    const qr = qrcode(0, errorCorrectionLevel);\n    qr.addData(props.sourceUrl);\n    qr.make();\n    qrCodeCanvasRef.innerHTML = qr.createSvgTag(cellSize, 0);\n    const qrSize = qrCodeCanvasRef.firstElementChild.clientWidth;\n    const scale = Math.round(qrNormalSize / qrSize * 1e5) / 1e5;\n    if (imageRef) {\n      const imgSize = Math.ceil(imgSizeDefault / (scale * cellSize)) * cellSize;\n      const imgOffset = toPx(Math.ceil((qrSize - imgSize) / (2 * cellSize)) * cellSize);\n      imageRef.style.top = imgOffset;\n      imageRef.style.left = imgOffset;\n      imageRef.style.height = toPx(imgSize);\n      imageRef.style.width = toPx(imgSize);\n      setPicSize(Math.round(picSizeDefault / scale));\n    }\n    qrCodeWrapperRef.style.transform = `scale(${scale})`;\n  });\n  let timeoutId = null;\n  const onCopyClick = () => {\n    setCopyButtonOpened(true);\n    copyToClipboard(props.sourceUrl);\n    if (timeoutId != null) {\n      clearTimeout(timeoutId);\n    }\n    timeoutId = setTimeout(() => setCopyButtonOpened(false), 1500);\n  };\n  return createComponent(QrCodeBackground, {\n    get [\"class\"]() {\n      return props.class;\n    },\n    onClick: onCopyClick,\n    get children() {\n      return [createComponent(QrCodeWrapper$2, {\n        ref(r$) {\n          const _ref$ = qrCodeWrapperRef;\n          typeof _ref$ === \"function\" ? _ref$(r$) : qrCodeWrapperRef = r$;\n        },\n        get children() {\n          return [(() => {\n            const _el$ = _tmpl$$t.cloneNode(true);\n            const _ref$2 = qrCodeCanvasRef;\n            typeof _ref$2 === \"function\" ? use(_ref$2, _el$) : qrCodeCanvasRef = _el$;\n            return _el$;\n          })(), createComponent(Show, {\n            get when() {\n              return props.imageUrl;\n            },\n            get children() {\n              return createComponent(ImageBackground, {\n                ref(r$) {\n                  const _ref$3 = imageRef;\n                  typeof _ref$3 === \"function\" ? _ref$3(r$) : imageRef = r$;\n                },\n                get children() {\n                  return createComponent(ImageStyled$3, {\n                    get src() {\n                      return props.imageUrl;\n                    },\n                    alt: \"\",\n                    get size() {\n                      return picSize();\n                    }\n                  });\n                }\n              });\n            }\n          })];\n        }\n      }), createComponent(Transition, {\n        onBeforeEnter: (el) => {\n          animate(el, [{\n            opacity: 0,\n            transform: \"translate(-50%, 44px)\"\n          }, {\n            opacity: 1,\n            transform: \"translate(-50%, 0)\"\n          }], {\n            duration: 150,\n            easing: \"ease-out\"\n          });\n        },\n        onExit: (el, done) => {\n          animate(el, [{\n            opacity: 1,\n            transform: \"translate(-50%, 0)\"\n          }, {\n            opacity: 0,\n            transform: \"translate(-50%, 44px)\"\n          }], {\n            duration: 150,\n            easing: \"ease-out\"\n          }).finished.then(() => {\n            done();\n          });\n        },\n        get children() {\n          return createComponent(Show, {\n            get when() {\n              return copyButtonOpened() && !props.disableCopy;\n            },\n            get children() {\n              return createComponent(CopiedBoxStyled, {\n                get children() {\n                  return [createComponent(SuccessIcon, {\n                    size: \"xs\"\n                  }), createComponent(Text, {\n                    translationKey: \"common.linkCopied\",\n                    children: \"Link Copied\"\n                  })];\n                }\n              });\n            }\n          });\n        }\n      }), createComponent(Show, {\n        get when() {\n          return !props.disableCopy;\n        },\n        get children() {\n          return createComponent(CopyIconButton, {\n            get children() {\n              return createComponent(CopyLightIcon, {});\n            }\n          });\n        }\n      })];\n    }\n  });\n};\nvar deepReadObject = (obj, path, defaultValue) => {\n  const value = path.trim().split(\".\").reduce((a2, b) => a2 ? a2[b] : void 0, obj);\n  return value !== void 0 ? value : defaultValue;\n};\nvar template = (str, params, reg = /{{(.*?)}}/g) => str.replace(reg, (_, key) => deepReadObject(params, key, \"\"));\nvar createI18nContext = (init = {}, lang = navigator.language in init ? navigator.language : Object.keys(init)[0]) => {\n  const [locale, setLocale] = createSignal(lang);\n  const [dict, setDict] = createStore(init);\n  const translate = (key, params, defaultValue) => {\n    const val = deepReadObject(dict[locale()], key, defaultValue || \"\");\n    if (typeof val === \"function\")\n      return val(params);\n    if (typeof val === \"string\")\n      return template(val, params || {});\n    return val;\n  };\n  const actions = {\n    add(lang2, table) {\n      setDict(lang2, (t2) => Object.assign(t2 || {}, table));\n    },\n    locale: (lang2) => lang2 ? setLocale(lang2) : locale(),\n    dict: (lang2) => deepReadObject(dict, lang2)\n  };\n  return [translate, actions];\n};\nvar I18nContext = createContext({});\nvar useI18n = () => useContext(I18nContext);\nconst TextStyled$3 = styled.div`\n    font-style: normal;\n    font-weight: ${(props) => props.fontWeight};\n    font-size: ${(props) => props.fontSize};\n    line-height: ${(props) => props.lineHeight};\n\n    color: ${(props) => props.color};\n`;\nconst Text = (inputs) => {\n  const theme = useTheme();\n  const [t2] = useI18n();\n  let textRef;\n  const color = () => inputs.color || theme.colors.text.primary;\n  const props = mergeProps({\n    fontSize: \"14px\",\n    fontWeight: \"510\",\n    lineHeight: \"130%\"\n  }, inputs);\n  createEffect(() => {\n    if (!textRef) {\n      return;\n    }\n    if (props.cursor === \"unset\") {\n      return;\n    }\n    if (getComputedStyle(textRef).cursor !== \"pointer\") {\n      textRef.style.cursor = \"default\";\n    }\n  });\n  return createComponent(TextStyled$3, {\n    get fontSize() {\n      return props.fontSize;\n    },\n    get fontWeight() {\n      return props.fontWeight;\n    },\n    get lineHeight() {\n      return props.lineHeight;\n    },\n    get color() {\n      return color();\n    },\n    get [\"class\"]() {\n      return props.class;\n    },\n    ref(r$) {\n      const _ref$ = textRef;\n      typeof _ref$ === \"function\" ? _ref$(r$) : textRef = r$;\n    },\n    \"data-tc-text\": \"true\",\n    get children() {\n      var _a2;\n      return createMemo(() => !!props.translationKey)() ? t2(props.translationKey, props.translationValues, (_a2 = props.children) == null ? void 0 : _a2.toString()) : props.children;\n    }\n  });\n};\nconst ImageContainer = styled.div`\n    position: relative;\n\n    &::after {\n        content: '';\n        display: block;\n        position: absolute;\n        top: 0;\n        bottom: 0;\n        left: 0;\n        right: 0;\n        border: 0.5px solid rgba(0, 0, 0, 0.08);\n\n        border-radius: inherit;\n    }\n`;\nconst ImageStyled$2 = styled(Image)`\n    width: 100%;\n    height: 100%;\n    border-radius: inherit;\n`;\nconst WalletImage = (props) => {\n  return createComponent(ImageContainer, {\n    get [\"class\"]() {\n      return props.class;\n    },\n    get children() {\n      return createComponent(ImageStyled$2, {\n        get src() {\n          return props.src;\n        }\n      });\n    }\n  });\n};\nconst borders$3 = {\n  m: \"16px\",\n  s: \"12px\",\n  none: \"0\"\n};\nconst badgeBorders = {\n  m: \"6px\",\n  s: \"6px\",\n  none: \"0\"\n};\nconst WalletItemStyled = styled.button`\n    position: relative;\n    cursor: pointer;\n    border: none;\n    background-color: unset;\n    padding: 8px 4px;\n    width: 92px;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n\n    transition: transform 0.125s ease-in-out;\n\n    ${mediaNotTouch} {\n        &:hover {\n            transform: scale(1.04);\n        }\n    }\n\n    &:active {\n        transform: scale(0.96);\n    }\n\n    ${media(\"mobile\")} {\n        padding: 8px 4px;\n        width: 82px;\n    }\n\n    ${mediaTouch} {\n        &:active {\n            transform: scale(0.92);\n        }\n    }\n`;\nconst ImageStyled$1 = styled(WalletImage)`\n    width: 60px;\n    height: 60px;\n    border-radius: ${(props) => borders$3[props.theme.borderRadius]};\n\n    margin-bottom: 8px;\n`;\nconst BadgeStyled = styled(Image)`\n    position: absolute;\n    right: 10px;\n    top: 50px;\n    width: 24px;\n    height: 24px;\n    border-radius: ${(props) => badgeBorders[props.theme.borderRadius]};\n    box-shadow: 0 2px 8px 0 rgba(0, 0, 0, 0.08);\n`;\nconst StyledText = styled(Text)`\n    max-width: 90px;\n    font-weight: 510;\n    white-space: nowrap;\n    text-overflow: ellipsis;\n    overflow: hidden;\n\n    ${media(\"mobile\")} {\n        max-width: 80px;\n    }\n`;\nconst StyledSecondLine = styled(Text)`\n    font-weight: ${(props) => props.colorPrimary ? \"510\" : \"400\"};\n    max-width: 90px;\n    white-space: nowrap;\n    text-overflow: ellipsis;\n    overflow: hidden;\n    color: ${(props) => props.colorPrimary ? props.theme.colors.text.primary : props.theme.colors.text.secondary};\n\n    ${media(\"mobile\")} {\n        max-width: 80px;\n    }\n`;\nconst _tmpl$$s = /* @__PURE__ */ template$1(`<div></div>`);\nconst WalletItem = (props) => {\n  let ctxRef = null;\n  const adjustLetterSpacing = () => {\n    const name = ctxRef == null ? void 0 : ctxRef.querySelector(\"div\");\n    if (name && name.scrollWidth > name.clientWidth) {\n      let spacing = 0;\n      const minSpacing = -0.4;\n      const step = 0.05;\n      while (name.scrollWidth > name.clientWidth && spacing >= minSpacing) {\n        spacing -= step;\n        name.style.letterSpacing = `${spacing}px`;\n      }\n      if (spacing !== 0) {\n        spacing -= step;\n        name.style.letterSpacing = `${spacing}px`;\n      }\n    }\n  };\n  onMount(() => adjustLetterSpacing());\n  createEffect(() => {\n    adjustLetterSpacing();\n  });\n  return createComponent(WalletItemStyled, {\n    get [\"class\"]() {\n      return props.class;\n    },\n    onClick: () => props.onClick(),\n    \"data-tc-wallet-item\": \"true\",\n    get children() {\n      return [createMemo(() => createMemo(() => typeof props.icon === \"string\")() ? createComponent(ImageStyled$1, {\n        get src() {\n          return props.icon;\n        }\n      }) : props.icon), createMemo(() => createMemo(() => !!props.badgeUrl)() && createComponent(BadgeStyled, {\n        get src() {\n          return props.badgeUrl;\n        }\n      })), (() => {\n        const _el$ = _tmpl$$s.cloneNode(true);\n        use((el) => ctxRef = el, _el$);\n        insert(_el$, createComponent(StyledText, {\n          get children() {\n            return props.name;\n          }\n        }));\n        return _el$;\n      })(), createMemo(() => createMemo(() => !!props.secondLine)() && createComponent(StyledSecondLine, {\n        get colorPrimary() {\n          var _a2;\n          return (_a2 = props.secondLineColorPrimary) != null ? _a2 : true;\n        },\n        get children() {\n          return props.secondLine;\n        }\n      }))];\n    }\n  });\n};\nconst H1Styled$9 = styled.h1`\n    font-style: normal;\n    font-weight: 590;\n    font-size: 20px;\n    line-height: 28px;\n\n    text-align: center;\n\n    color: ${(props) => props.theme.colors.text.primary};\n\n    margin-top: 0;\n    margin-bottom: 0;\n\n    cursor: default;\n`;\nconst H1 = (props) => {\n  const [t2] = useI18n();\n  return createComponent(H1Styled$9, {\n    get [\"class\"]() {\n      return props.class;\n    },\n    \"data-tc-h1\": \"true\",\n    get children() {\n      var _a2;\n      return createMemo(() => !!props.translationKey)() ? t2(props.translationKey, props.translationValues, (_a2 = props.children) == null ? void 0 : _a2.toString()) : props.children;\n    }\n  });\n};\nconst H2Styled$5 = styled.h2`\n    font-style: normal;\n    font-weight: 400;\n    font-size: 16px;\n    line-height: 22px;\n\n    text-align: center;\n\n    color: ${(props) => props.theme.colors.text.secondary};\n\n    margin-top: 0;\n    margin-bottom: 32px;\n\n    cursor: default;\n`;\nconst H2 = (props) => {\n  const [t2] = useI18n();\n  return createComponent(H2Styled$5, {\n    get [\"class\"]() {\n      return props.class;\n    },\n    \"data-tc-h2\": \"true\",\n    get children() {\n      var _a2;\n      return createMemo(() => !!props.translationKey)() ? t2(props.translationKey, props.translationValues, (_a2 = props.children) == null ? void 0 : _a2.toString()) : props.children;\n    }\n  });\n};\nconst H3Styled$1 = styled.h3`\n    font-style: normal;\n    font-weight: 510;\n    font-size: 16px;\n    line-height: 20px;\n\n    color: ${(props) => props.theme.colors.text.primary};\n\n    margin-top: 0;\n    margin-bottom: 0;\n\n    cursor: default;\n`;\nconst H3 = (props) => {\n  const [t2] = useI18n();\n  return createComponent(H3Styled$1, {\n    \"data-tc-h3\": \"true\",\n    get [\"class\"]() {\n      return props.class;\n    },\n    get children() {\n      var _a2;\n      return createMemo(() => !!props.translationKey)() ? t2(props.translationKey, props.translationValues, (_a2 = props.children) == null ? void 0 : _a2.toString()) : props.children;\n    }\n  });\n};\nconst _tmpl$$r = /* @__PURE__ */ template$1(`<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"28\" height=\"28\" viewBox=\"0 0 28 28\"><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M9.75 7.5C9.33579 7.5 9 7.16421 9 6.75C9 6.33579 9.33579 6 9.75 6H21.25C21.6642 6 22 6.33579 22 6.75V18.25C22 18.6642 21.6642 19 21.25 19C20.8358 19 20.5 18.6642 20.5 18.25V8.56066L6.28033 22.7803C5.98744 23.0732 5.51256 23.0732 5.21967 22.7803C4.92678 22.4874 4.92678 22.0126 5.21967 21.7197L19.4393 7.5H9.75Z\"></path></svg>`);\nconst LongArrowIcon = (props) => {\n  const theme = useTheme();\n  const fill = () => props.fill || theme.colors.icon.secondary;\n  return (() => {\n    const _el$ = _tmpl$$r.cloneNode(true), _el$2 = _el$.firstChild;\n    createRenderEffect((_p$) => {\n      const _v$ = fill(), _v$2 = fill();\n      _v$ !== _p$._v$ && setAttribute(_el$, \"fill\", _p$._v$ = _v$);\n      _v$2 !== _p$._v$2 && setAttribute(_el$2, \"fill\", _p$._v$2 = _v$2);\n      return _p$;\n    }, {\n      _v$: void 0,\n      _v$2: void 0\n    });\n    return _el$;\n  })();\n};\nconst _tmpl$$q = /* @__PURE__ */ template$1(`<svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M14.1839 17.7069C13.6405 18.6507 13.3688 19.1226 13.0591 19.348C12.4278 19.8074 11.5723 19.8074 10.941 19.348C10.6312 19.1226 10.3595 18.6507 9.81613 17.7069L5.52066 10.2464C4.76864 8.94024 4.39263 8.28717 4.33762 7.75894C4.2255 6.68236 4.81894 5.65591 5.80788 5.21589C6.29309 5 7.04667 5 8.55383 5H15.4462C16.9534 5 17.7069 5 18.1922 5.21589C19.1811 5.65591 19.7745 6.68236 19.6624 7.75894C19.6074 8.28717 19.2314 8.94024 18.4794 10.2464L14.1839 17.7069ZM11.1 16.3412L6.56139 8.48002C6.31995 8.06185 6.19924 7.85276 6.18146 7.68365C6.14523 7.33896 6.33507 7.01015 6.65169 6.86919C6.80703 6.80002 7.04847 6.80002 7.53133 6.80002H7.53134L11.1 6.80002V16.3412ZM12.9 16.3412L17.4387 8.48002C17.6801 8.06185 17.8008 7.85276 17.8186 7.68365C17.8548 7.33896 17.665 7.01015 17.3484 6.86919C17.193 6.80002 16.9516 6.80002 16.4687 6.80002L12.9 6.80002V16.3412Z\"></path></svg>`);\nconst TonIcon = (props) => {\n  const theme = useTheme();\n  const fill = () => props.fill || theme.colors.icon.primary;\n  return (() => {\n    const _el$ = _tmpl$$q.cloneNode(true), _el$2 = _el$.firstChild;\n    createRenderEffect(() => setAttribute(_el$2, \"fill\", fill()));\n    return _el$;\n  })();\n};\nconst _tmpl$$p = /* @__PURE__ */ template$1(`<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"none\"><g clip-path=\"url(#clip0_3783_2045)\"><circle cx=\"8\" cy=\"8.00098\" r=\"8\"></circle><path d=\"M4.75 8.50098L7 10.751L11.75 6.00098\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path></g><defs><clipPath id=\"clip0_3783_2045\"><rect width=\"16\" height=\"16\" fill=\"white\" transform=\"translate(0 0.000976562)\"></rect></clipPath></defs></svg>`), _tmpl$2$3 = /* @__PURE__ */ template$1(`<svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><circle cx=\"12\" cy=\"12\" r=\"11\"></circle><path d=\"M17.1364 9.6364C17.4879 9.28493 17.4879 8.71508 17.1364 8.36361C16.7849 8.01214 16.2151 8.01214 15.8636 8.36361L10 14.2272L8.1364 12.3636C7.78493 12.0121 7.21508 12.0121 6.86361 12.3636C6.51214 12.7151 6.51214 13.2849 6.86361 13.6364L9.36361 16.1364C9.71508 16.4879 10.2849 16.4879 10.6364 16.1364L17.1364 9.6364Z\"></path></svg>`), _tmpl$3$2 = /* @__PURE__ */ template$1(`<svg width=\"72\" height=\"72\" viewBox=\"0 0 72 72\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><circle cx=\"36\" cy=\"36\" r=\"33\"></circle><path d=\"M50.9142 28.4142C51.6953 27.6332 51.6953 26.3668 50.9142 25.5858C50.1332 24.8047 48.8668 24.8047 48.0858 25.5858L30 43.6716L23.9142 37.5858C23.1332 36.8047 21.8668 36.8047 21.0858 37.5858C20.3047 38.3668 20.3047 39.6332 21.0858 40.4142L28.5858 47.9142C29.3668 48.6953 30.6332 48.6953 31.4142 47.9142L50.9142 28.4142Z\"></path></svg>`);\nconst SuccessIcon = (props) => {\n  const theme = useTheme();\n  const size = () => props.size || \"s\";\n  const fill = () => props.fill || theme.colors.icon.success;\n  return createMemo((() => {\n    const _c$ = createMemo(() => size() === \"xs\");\n    return () => _c$() ? (() => {\n      const _el$ = _tmpl$$p.cloneNode(true), _el$2 = _el$.firstChild, _el$3 = _el$2.firstChild, _el$4 = _el$3.nextSibling;\n      createRenderEffect((_p$) => {\n        const _v$ = props.class, _v$2 = fill(), _v$3 = theme.colors.constant.white;\n        _v$ !== _p$._v$ && setAttribute(_el$, \"class\", _p$._v$ = _v$);\n        _v$2 !== _p$._v$2 && setAttribute(_el$3, \"fill\", _p$._v$2 = _v$2);\n        _v$3 !== _p$._v$3 && setAttribute(_el$4, \"stroke\", _p$._v$3 = _v$3);\n        return _p$;\n      }, {\n        _v$: void 0,\n        _v$2: void 0,\n        _v$3: void 0\n      });\n      return _el$;\n    })() : (() => {\n      const _c$2 = createMemo(() => size() === \"s\");\n      return () => _c$2() ? (() => {\n        const _el$5 = _tmpl$2$3.cloneNode(true), _el$6 = _el$5.firstChild, _el$7 = _el$6.nextSibling;\n        createRenderEffect((_p$) => {\n          const _v$4 = props.class, _v$5 = fill(), _v$6 = theme.colors.constant.white;\n          _v$4 !== _p$._v$4 && setAttribute(_el$5, \"class\", _p$._v$4 = _v$4);\n          _v$5 !== _p$._v$5 && setAttribute(_el$6, \"fill\", _p$._v$5 = _v$5);\n          _v$6 !== _p$._v$6 && setAttribute(_el$7, \"fill\", _p$._v$6 = _v$6);\n          return _p$;\n        }, {\n          _v$4: void 0,\n          _v$5: void 0,\n          _v$6: void 0\n        });\n        return _el$5;\n      })() : (() => {\n        const _el$8 = _tmpl$3$2.cloneNode(true), _el$9 = _el$8.firstChild, _el$10 = _el$9.nextSibling;\n        createRenderEffect((_p$) => {\n          const _v$7 = props.class, _v$8 = fill(), _v$9 = theme.colors.constant.white;\n          _v$7 !== _p$._v$7 && setAttribute(_el$8, \"class\", _p$._v$7 = _v$7);\n          _v$8 !== _p$._v$8 && setAttribute(_el$9, \"fill\", _p$._v$8 = _v$8);\n          _v$9 !== _p$._v$9 && setAttribute(_el$10, \"fill\", _p$._v$9 = _v$9);\n          return _p$;\n        }, {\n          _v$7: void 0,\n          _v$8: void 0,\n          _v$9: void 0\n        });\n        return _el$8;\n      })();\n    })();\n  })());\n};\nconst _tmpl$$o = /* @__PURE__ */ template$1(`<svg width=\"72\" height=\"72\" viewBox=\"0 0 72 72\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><circle cx=\"36\" cy=\"36\" r=\"33\"></circle><path d=\"M24.0858 26.9142C23.3047 26.1332 23.3047 24.8668 24.0858 24.0858C24.8668 23.3047 26.1332 23.3047 26.9142 24.0858L36 33.1716L45.0858 24.0858C45.8668 23.3047 47.1332 23.3047 47.9142 24.0858C48.6953 24.8668 48.6953 26.1332 47.9142 26.9142L38.8284 36L47.9142 45.0858C48.6953 45.8668 48.6953 47.1332 47.9142 47.9142C47.1332 48.6953 45.8668 48.6953 45.0858 47.9142L36 38.8284L26.9142 47.9142C26.1332 48.6953 24.8668 48.6953 24.0858 47.9142C23.3047 47.1332 23.3047 45.8668 24.0858 45.0858L33.1716 36L24.0858 26.9142Z\"></path></svg>`), _tmpl$2$2 = /* @__PURE__ */ template$1(`<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"48\" height=\"48\" viewBox=\"0 0 48 48\" fill=\"none\"><circle cx=\"24\" cy=\"24.001\" r=\"22\"></circle><path d=\"M24 24.001L31.5 16.501M24 24.001L16.5 16.501M24 24.001L16.5 31.501M24 24.001L31.5 31.501\" stroke-width=\"3\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path></svg>`), _tmpl$3$1 = /* @__PURE__ */ template$1(`<svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><circle cx=\"12\" cy=\"12\" r=\"11\"></circle><path d=\"M7.86361 9.1364C7.51214 8.78493 7.51214 8.21508 7.86361 7.86361C8.21508 7.51214 8.78493 7.51214 9.1364 7.86361L12 10.7272L14.8636 7.86361C15.2151 7.51214 15.7849 7.51214 16.1364 7.86361C16.4879 8.21508 16.4879 8.78493 16.1364 9.1364L13.2728 12L16.1364 14.8636C16.4879 15.2151 16.4879 15.7849 16.1364 16.1364C15.7849 16.4879 15.2151 16.4879 14.8636 16.1364L12 13.2728L9.1364 16.1364C8.78493 16.4879 8.21508 16.4879 7.86361 16.1364C7.51214 15.7849 7.51214 15.2151 7.86361 14.8636L10.7272 12L7.86361 9.1364Z\"></path></svg>`);\nconst ErrorIcon = (props) => {\n  const theme = useTheme();\n  const size = () => props.size || \"m\";\n  const fill = () => props.fill || theme.colors.icon.error;\n  return createMemo((() => {\n    const _c$ = createMemo(() => size() === \"m\");\n    return () => _c$() ? (() => {\n      const _el$ = _tmpl$$o.cloneNode(true), _el$2 = _el$.firstChild, _el$3 = _el$2.nextSibling;\n      createRenderEffect((_p$) => {\n        const _v$ = props.class, _v$2 = fill(), _v$3 = theme.colors.constant.white;\n        _v$ !== _p$._v$ && setAttribute(_el$, \"class\", _p$._v$ = _v$);\n        _v$2 !== _p$._v$2 && setAttribute(_el$2, \"fill\", _p$._v$2 = _v$2);\n        _v$3 !== _p$._v$3 && setAttribute(_el$3, \"fill\", _p$._v$3 = _v$3);\n        return _p$;\n      }, {\n        _v$: void 0,\n        _v$2: void 0,\n        _v$3: void 0\n      });\n      return _el$;\n    })() : (() => {\n      const _c$2 = createMemo(() => size() === \"s\");\n      return () => _c$2() ? (() => {\n        const _el$4 = _tmpl$2$2.cloneNode(true), _el$5 = _el$4.firstChild, _el$6 = _el$5.nextSibling;\n        createRenderEffect((_p$) => {\n          const _v$4 = props.class, _v$5 = fill(), _v$6 = theme.colors.constant.white;\n          _v$4 !== _p$._v$4 && setAttribute(_el$4, \"class\", _p$._v$4 = _v$4);\n          _v$5 !== _p$._v$5 && setAttribute(_el$5, \"fill\", _p$._v$5 = _v$5);\n          _v$6 !== _p$._v$6 && setAttribute(_el$6, \"stroke\", _p$._v$6 = _v$6);\n          return _p$;\n        }, {\n          _v$4: void 0,\n          _v$5: void 0,\n          _v$6: void 0\n        });\n        return _el$4;\n      })() : (() => {\n        const _el$7 = _tmpl$3$1.cloneNode(true), _el$8 = _el$7.firstChild, _el$9 = _el$8.nextSibling;\n        createRenderEffect((_p$) => {\n          const _v$7 = props.class, _v$8 = fill(), _v$9 = theme.colors.constant.white;\n          _v$7 !== _p$._v$7 && setAttribute(_el$7, \"class\", _p$._v$7 = _v$7);\n          _v$8 !== _p$._v$8 && setAttribute(_el$8, \"fill\", _p$._v$8 = _v$8);\n          _v$9 !== _p$._v$9 && setAttribute(_el$9, \"fill\", _p$._v$9 = _v$9);\n          return _p$;\n        }, {\n          _v$7: void 0,\n          _v$8: void 0,\n          _v$9: void 0\n        });\n        return _el$7;\n      })();\n    })();\n  })());\n};\nconst _tmpl$$n = /* @__PURE__ */ template$1(`<svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M15.55 5.85123C18.9459 7.81184 20.1094 12.1541 18.1488 15.55C16.1882 18.9459 11.8459 20.1094 8.44998 18.1488C8.01952 17.9003 7.46909 18.0478 7.22056 18.4782C6.97203 18.9087 7.11952 19.4591 7.54998 19.7076C11.8068 22.1653 17.2499 20.7068 19.7076 16.45C22.1653 12.1932 20.7068 6.75005 16.45 4.29239C12.1932 1.83472 6.75003 3.29321 4.29236 7.55001C4.04383 7.98047 4.19132 8.53091 4.62178 8.77943C5.05224 9.02796 5.60268 8.88048 5.8512 8.45001C7.81181 5.05413 12.1541 3.89062 15.55 5.85123Z\"></path></svg>`), _tmpl$2$1 = /* @__PURE__ */ template$1(`<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"44\" height=\"44\" viewBox=\"0 0 44 44\" fill=\"none\"><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M22 2.99951C11.5066 2.99951 3 11.5061 3 21.9995C3 32.4929 11.5066 40.9995 22 40.9995C22.8284 40.9995 23.5 41.6711 23.5 42.4995C23.5 43.3279 22.8284 43.9995 22 43.9995C9.84974 43.9995 0 34.1498 0 21.9995C0 9.84925 9.84974 -0.000488281 22 -0.000488281C34.1503 -0.000488281 44 9.84925 44 21.9995C44 22.8279 43.3284 23.4995 42.5 23.4995C41.6716 23.4995 41 22.8279 41 21.9995C41 11.5061 32.4934 2.99951 22 2.99951Z\"></path></svg>`), _tmpl$3 = /* @__PURE__ */ template$1(`<svg width=\"72\" height=\"72\" viewBox=\"0 0 72 72\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M24 56.7846C35.479 63.412 50.1572 59.479 56.7846 47.9999C63.412 36.5209 59.479 21.8427 48 15.2153C36.521 8.58791 21.8428 12.5209 15.2154 23.9999\" stroke-width=\"4\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path></svg>`);\nconst LoaderIcon = (props) => {\n  const theme = useTheme();\n  const size = () => props.size || \"xs\";\n  const fill = () => props.fill || theme.colors.icon.tertiary;\n  const rotateAnimation = h`\n        0% {\n          transform: rotate(0deg);\n        }\n        100% {\n          transform: rotate(360deg);\n        }\n    `;\n  const svgClass = u`\n        animation: ${rotateAnimation} 1s linear infinite;\n    `;\n  return createMemo((() => {\n    const _c$ = createMemo(() => size() === \"xs\");\n    return () => _c$() ? (() => {\n      const _el$ = _tmpl$$n.cloneNode(true), _el$2 = _el$.firstChild;\n      createRenderEffect((_p$) => {\n        const _v$ = classnames__WEBPACK_IMPORTED_MODULE_3__(svgClass, props.class), _v$2 = fill();\n        _v$ !== _p$._v$ && setAttribute(_el$, \"class\", _p$._v$ = _v$);\n        _v$2 !== _p$._v$2 && setAttribute(_el$2, \"fill\", _p$._v$2 = _v$2);\n        return _p$;\n      }, {\n        _v$: void 0,\n        _v$2: void 0\n      });\n      return _el$;\n    })() : (() => {\n      const _c$2 = createMemo(() => size() === \"s\");\n      return () => _c$2() ? (() => {\n        const _el$3 = _tmpl$2$1.cloneNode(true), _el$4 = _el$3.firstChild;\n        createRenderEffect((_p$) => {\n          const _v$3 = classnames__WEBPACK_IMPORTED_MODULE_3__(svgClass, props.class), _v$4 = fill();\n          _v$3 !== _p$._v$3 && setAttribute(_el$3, \"class\", _p$._v$3 = _v$3);\n          _v$4 !== _p$._v$4 && setAttribute(_el$4, \"fill\", _p$._v$4 = _v$4);\n          return _p$;\n        }, {\n          _v$3: void 0,\n          _v$4: void 0\n        });\n        return _el$3;\n      })() : (() => {\n        const _el$5 = _tmpl$3.cloneNode(true), _el$6 = _el$5.firstChild;\n        createRenderEffect((_p$) => {\n          const _v$5 = classnames__WEBPACK_IMPORTED_MODULE_3__(svgClass, props.class), _v$6 = fill();\n          _v$5 !== _p$._v$5 && setAttribute(_el$5, \"class\", _p$._v$5 = _v$5);\n          _v$6 !== _p$._v$6 && setAttribute(_el$6, \"stroke\", _p$._v$6 = _v$6);\n          return _p$;\n        }, {\n          _v$5: void 0,\n          _v$6: void 0\n        });\n        return _el$5;\n      })();\n    })();\n  })());\n};\nconst _tmpl$$m = /* @__PURE__ */ template$1(`<svg width=\"158\" height=\"28\" viewBox=\"0 0 158 28\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M28 14.001C28 21.733 21.732 28.001 14 28.001C6.26801 28.001 0 21.733 0 14.001C0 6.26899 6.26801 0.000976562 14 0.000976562C21.732 0.000976562 28 6.26899 28 14.001ZM9.21931 8.00098H18.7801H18.7813C20.538 8.00098 21.6522 9.89966 20.7691 11.4302L14.8672 21.6576C14.4822 22.3254 13.5172 22.3254 13.1322 21.6576L7.23158 11.4302C6.34721 9.89726 7.4614 8.00098 9.21931 8.00098ZM13.1262 18.5882V9.74806H9.21811C8.78976 9.74806 8.53708 10.2029 8.74163 10.5578L11.8423 16.1035L13.1262 18.5882ZM16.1559 16.1047L19.2554 10.5566C19.4599 10.2017 19.2073 9.74685 18.7789 9.74685H14.8709V18.5906L16.1559 16.1047Z\" fill=\"#0098EA\"></path><path d=\"M18.7802 8.00098H9.21936C7.46145 8.00098 6.34727 9.89726 7.23164 11.4302L13.1322 21.6576C13.5173 22.3254 14.4823 22.3254 14.8673 21.6576L20.7691 11.4302C21.6523 9.89966 20.5381 8.00098 18.7814 8.00098H18.7802ZM13.1274 18.5906L11.8424 16.1035L8.74168 10.5578C8.53714 10.2029 8.78981 9.74806 9.21816 9.74806H13.1262V18.5918L13.1274 18.5906ZM19.2555 10.5566L16.156 16.1047L14.8709 18.5906V9.74685H18.779C19.2073 9.74685 19.46 10.2017 19.2555 10.5566Z\" fill=\"white\"></path><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M51.7483 22.1967C55.7182 22.1967 58.9609 18.954 58.9609 14.9841C58.9609 11.0142 55.7182 7.77148 51.7483 7.77148C47.7588 7.77148 44.5357 11.0142 44.5357 14.9841C44.5357 18.954 47.7588 22.1967 51.7483 22.1967ZM51.7483 19.1702C49.4686 19.1702 47.6802 17.2442 47.6802 14.9841C47.6802 12.724 49.4686 10.798 51.7483 10.798C54.0084 10.798 55.7968 12.724 55.7968 14.9841C55.7968 17.2442 54.0084 19.1702 51.7483 19.1702ZM37.0698 21.9609H40.2142V10.9946H44.2843V8.00732H33V10.9946H37.0698V21.9609ZM69.9379 8.00732H73.0823V21.9609H70.3899L63.59 13.3333V21.9609H60.4652V8.00732H63.1576L69.9379 16.6153V8.00732ZM79.2259 14.9887C79.2259 10.9202 82.351 7.77539 86.4982 7.77539C89.8592 7.77539 92.5519 9.95709 93.2202 12.6891H90.7437C90.154 11.0971 88.4637 9.9964 86.4982 9.9964C83.5893 9.9964 81.5452 12.1781 81.5452 14.9887C81.5452 17.7994 83.5893 19.9811 86.4982 19.9811C88.4637 19.9811 90.154 18.8804 90.7437 17.2884H93.2202C92.5519 20.0204 89.8592 22.2021 86.4982 22.2021C82.351 22.2021 79.2259 19.0573 79.2259 14.9887ZM104.584 17.0525C104.584 19.9025 102.343 22.1628 99.4342 22.1628C96.5253 22.1628 94.2846 19.9025 94.2846 17.0525C94.2846 14.2025 96.5253 11.9422 99.4342 11.9422C102.343 11.9422 104.584 14.2025 104.584 17.0525ZM96.4663 17.0525C96.4663 18.8018 97.6849 20.158 99.4342 20.158C101.164 20.158 102.382 18.8018 102.382 17.0525C102.382 15.3032 101.164 13.947 99.4342 13.947C97.6849 13.947 96.4663 15.3032 96.4663 17.0525ZM108.626 12.1388H106.463V21.9662H108.626V17.1311C108.626 15.0281 109.726 13.9077 111.161 13.9077C112.419 13.9077 113.205 14.8512 113.205 16.4039V21.9662H115.367V16.0501C115.367 13.5539 113.893 11.9422 111.613 11.9422C110.335 11.9422 109.215 12.4926 108.626 13.4753V12.1388ZM117.839 12.1388H120.001V13.4753C120.59 12.4926 121.711 11.9422 122.988 11.9422C125.268 11.9422 126.742 13.5539 126.742 16.0501V21.9662H124.58V16.4039C124.58 14.8512 123.794 13.9077 122.536 13.9077C121.101 13.9077 120.001 15.0281 120.001 17.1311V21.9662H117.839V12.1388ZM133.558 22.1628C136.054 22.1628 137.823 20.728 138.373 18.8804H136.113C135.661 19.8238 134.717 20.2563 133.636 20.2563C131.887 20.2563 130.747 19.077 130.668 17.5832H138.491C138.688 14.2419 136.585 11.9422 133.577 11.9422C130.551 11.9422 128.526 14.1436 128.526 17.0525C128.526 20.0007 130.629 22.1628 133.558 22.1628ZM130.747 16.0501C131.042 14.5367 132.162 13.7505 133.518 13.7505C134.717 13.7505 135.838 14.4581 136.172 16.0501H130.747ZM149.851 18.3694C149.32 20.5511 147.453 22.1628 144.859 22.1628C141.871 22.1628 139.709 19.8828 139.709 17.0525C139.709 14.2222 141.871 11.9422 144.859 11.9422C147.453 11.9422 149.32 13.5539 149.851 15.7356H147.571C147.178 14.6743 146.215 13.9077 144.859 13.9077C143.109 13.9077 141.91 15.2246 141.91 17.0525C141.91 18.8804 143.109 20.1973 144.859 20.1973C146.215 20.1973 147.178 19.4307 147.571 18.3694H149.851ZM155.75 22.0645C156.418 22.0645 156.929 21.9859 157.362 21.8483V19.9221C157.047 20.0401 156.615 20.1187 156.202 20.1187C155.082 20.1187 154.551 19.6666 154.551 18.448V14.065H157.362V12.1388H154.551V9.40675H152.389V12.1388H150.345V14.065H152.389V18.8018C152.389 21.0228 153.863 22.0645 155.75 22.0645Z\"></path></svg>`);\nconst TonConnectBrand = () => {\n  const theme = useTheme();\n  const fill = () => theme.theme === THEME.DARK ? theme.colors.constant.white : theme.colors.constant.black;\n  return (() => {\n    const _el$ = _tmpl$$m.cloneNode(true), _el$2 = _el$.firstChild, _el$3 = _el$2.nextSibling, _el$4 = _el$3.nextSibling;\n    createRenderEffect(() => setAttribute(_el$4, \"fill\", fill()));\n    return _el$;\n  })();\n};\nconst _tmpl$$l = /* @__PURE__ */ template$1(`<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"none\"><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M5.56608 4.42584C5.82527 3.32158 6.8176 2.5 8.00001 2.5C9.38072 2.5 10.5 3.61929 10.5 5C10.5 5.63026 10.3391 6.0386 10.1264 6.34455C9.90018 6.66993 9.58561 6.92478 9.18864 7.20877C9.12579 7.25372 9.05873 7.30025 8.9887 7.34883C8.27392 7.84472 7.25001 8.55507 7.25001 10V10.25C7.25001 10.6642 7.5858 11 8.00001 11C8.41422 11 8.75001 10.6642 8.75001 10.25V10C8.75001 9.36502 9.10777 9.1096 9.94554 8.51149L10.0614 8.42873C10.4769 8.13147 10.9748 7.75194 11.358 7.20076C11.7547 6.63015 12 5.91973 12 5C12 2.79086 10.2091 1 8.00001 1C6.10564 1 4.5205 2.31615 4.10577 4.08308C4.01112 4.48634 4.26129 4.88997 4.66454 4.98462C5.0678 5.07927 5.47143 4.8291 5.56608 4.42584ZM8.00001 15C8.60752 15 9.10001 14.5075 9.10001 13.9C9.10001 13.2925 8.60752 12.8 8.00001 12.8C7.39249 12.8 6.90001 13.2925 6.90001 13.9C6.90001 14.5075 7.39249 15 8.00001 15Z\"></path></svg>`);\nconst QuestionIcon = (props) => {\n  const theme = useTheme();\n  const fill = () => props.fill || theme.colors.icon.secondary;\n  return (() => {\n    const _el$ = _tmpl$$l.cloneNode(true), _el$2 = _el$.firstChild;\n    createRenderEffect(() => setAttribute(_el$2, \"fill\", fill()));\n    return _el$;\n  })();\n};\nconst _tmpl$$k = /* @__PURE__ */ template$1(`<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"none\"><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M9.98156 8.75C9.84854 11.4328 9.01206 13.5 8 13.5C6.98794 13.5 6.15146 11.4328 6.01844 8.75H9.98156ZM11.4832 8.75C11.4217 10.1155 11.1929 11.3869 10.8239 12.4017C10.7734 12.5405 10.7188 12.6789 10.6595 12.8154C12.1454 11.993 13.2103 10.5029 13.4493 8.75H11.4832ZM13.4493 7.25H11.4832C11.4217 5.88453 11.1929 4.61314 10.8239 3.5983C10.7734 3.4595 10.7188 3.32111 10.6595 3.18459C12.1454 4.00697 13.2103 5.49709 13.4493 7.25ZM9.98156 7.25H6.01844C6.15144 4.56764 6.98769 2.50062 7.99955 2.5H8C9.01206 2.5 9.84854 4.56724 9.98156 7.25ZM4.51678 7.25C4.57826 5.88453 4.80706 4.61314 5.1761 3.5983C5.22657 3.4595 5.28124 3.32111 5.3405 3.18459C3.85463 4.00697 2.78972 5.49709 2.55071 7.25H4.51678ZM2.55071 8.75C2.78972 10.5029 3.85463 11.993 5.3405 12.8154C5.28124 12.6789 5.22657 12.5405 5.1761 12.4017C4.80706 11.3869 4.57826 10.1155 4.51678 8.75H2.55071ZM15 8C15 11.866 11.866 15 8 15C4.13401 15 1 11.866 1 8C1 4.13401 4.13401 1 8 1C11.866 1 15 4.13401 15 8Z\"></path></svg>`);\nconst BrowserIcon = (props) => {\n  const theme = useTheme();\n  const fill = () => props.fill || theme.colors.icon.primary;\n  return (() => {\n    const _el$ = _tmpl$$k.cloneNode(true), _el$2 = _el$.firstChild;\n    createRenderEffect(() => setAttribute(_el$2, \"fill\", fill()));\n    return _el$;\n  })();\n};\nconst _tmpl$$j = /* @__PURE__ */ template$1(`<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"none\"><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M2.5 4.8C2.5 3.11984 2.5 2.27976 2.82698 1.63803C3.1146 1.07354 3.57354 0.614601 4.13803 0.32698C4.77976 0 5.61984 0 7.3 0H8.7C10.3802 0 11.2202 0 11.862 0.32698C12.4265 0.614601 12.8854 1.07354 13.173 1.63803C13.5 2.27976 13.5 3.11984 13.5 4.8V11.2C13.5 12.8802 13.5 13.7202 13.173 14.362C12.8854 14.9265 12.4265 15.3854 11.862 15.673C11.2202 16 10.3802 16 8.7 16H7.3C5.61984 16 4.77976 16 4.13803 15.673C3.57354 15.3854 3.1146 14.9265 2.82698 14.362C2.5 13.7202 2.5 12.8802 2.5 11.2V4.8ZM4 3.9C4 3.05992 4 2.63988 4.16349 2.31901C4.3073 2.03677 4.53677 1.8073 4.81901 1.66349C5.13988 1.5 5.55992 1.5 6.4 1.5H9.6C10.4401 1.5 10.8601 1.5 11.181 1.66349C11.4632 1.8073 11.6927 2.03677 11.8365 2.31901C12 2.63988 12 3.05992 12 3.9V12.1C12 12.9401 12 13.3601 11.8365 13.681C11.6927 13.9632 11.4632 14.1927 11.181 14.3365C10.8601 14.5 10.4401 14.5 9.6 14.5H6.4C5.55992 14.5 5.13988 14.5 4.81901 14.3365C4.53677 14.1927 4.3073 13.9632 4.16349 13.681C4 13.3601 4 12.9401 4 12.1V3.9ZM7 2.5C6.58579 2.5 6.25 2.83579 6.25 3.25C6.25 3.66421 6.58579 4 7 4H9C9.41421 4 9.75 3.66421 9.75 3.25C9.75 2.83579 9.41421 2.5 9 2.5H7Z\"></path></svg>`);\nconst MobileIcon = (props) => {\n  const theme = useTheme();\n  const fill = () => props.fill || theme.colors.icon.primary;\n  return (() => {\n    const _el$ = _tmpl$$j.cloneNode(true), _el$2 = _el$.firstChild;\n    createRenderEffect(() => setAttribute(_el$2, \"fill\", fill()));\n    return _el$;\n  })();\n};\nconst _tmpl$$i = /* @__PURE__ */ template$1(`<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"none\"><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M1.5 6.8C1.5 5.11984 1.5 4.27976 1.82698 3.63803C2.1146 3.07354 2.57354 2.6146 3.13803 2.32698C3.77976 2 4.61984 2 6.3 2H9.7C11.3802 2 12.2202 2 12.862 2.32698C13.4265 2.6146 13.8854 3.07354 14.173 3.63803C14.5 4.27976 14.5 5.11984 14.5 6.8V11.5H15.25C15.6642 11.5 16 11.8358 16 12.25C16 12.6642 15.6642 13 15.25 13H0.75C0.335786 13 0 12.6642 0 12.25C0 11.8358 0.335786 11.5 0.75 11.5H1.5V6.8ZM3 11.5H13V5.9C13 5.05992 13 4.63988 12.8365 4.31901C12.6927 4.03677 12.4632 3.8073 12.181 3.66349C11.8601 3.5 11.4401 3.5 10.6 3.5H5.4C4.55992 3.5 4.13988 3.5 3.81901 3.66349C3.53677 3.8073 3.3073 4.03677 3.16349 4.31901C3 4.63988 3 5.05992 3 5.9V11.5Z\"></path></svg>`);\nconst DesktopIcon = (props) => {\n  const theme = useTheme();\n  const fill = () => props.fill || theme.colors.icon.primary;\n  return (() => {\n    const _el$ = _tmpl$$i.cloneNode(true), _el$2 = _el$.firstChild;\n    createRenderEffect(() => setAttribute(_el$2, \"fill\", fill()));\n    return _el$;\n  })();\n};\nconst _tmpl$$h = /* @__PURE__ */ template$1(`<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"17\" height=\"16\" viewBox=\"0 0 17 16\" fill=\"none\"><g clip-path=\"url(#clip0_3676_1603)\"><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M15.5 1.25049C15.5 0.836275 15.1642 0.500488 14.75 0.500488C14.3358 0.500488 14 0.836275 14 1.25049V3.67012C12.7187 2.04487 10.7318 1.00049 8.5 1.00049C4.63401 1.00049 1.5 4.1345 1.5 8.00049C1.5 11.8665 4.63401 15.0005 8.5 15.0005C11.6844 15.0005 14.3703 12.8748 15.2199 9.96661C15.3361 9.56902 15.1079 9.15254 14.7103 9.03638C14.3127 8.92023 13.8962 9.14838 13.7801 9.54597C13.1123 11.8319 11 13.5005 8.5 13.5005C5.46243 13.5005 3 11.0381 3 8.00049C3 4.96292 5.46243 2.50049 8.5 2.50049C10.321 2.50049 11.9363 3.3855 12.9377 4.75049H10.5C10.0858 4.75049 9.75 5.08627 9.75 5.50049C9.75 5.9147 10.0858 6.25049 10.5 6.25049H14.75C15.1642 6.25049 15.5 5.9147 15.5 5.50049V1.25049Z\"></path></g><defs><clipPath id=\"clip0_3676_1603\"><rect width=\"16\" height=\"16\" fill=\"white\" transform=\"translate(0.5 0.000488281)\"></rect></clipPath></defs></svg>`);\nconst RetryIcon = (props) => {\n  const theme = useTheme();\n  const fill = () => props.fill || theme.colors.accent;\n  return (() => {\n    const _el$ = _tmpl$$h.cloneNode(true), _el$2 = _el$.firstChild, _el$3 = _el$2.firstChild;\n    createRenderEffect(() => setAttribute(_el$3, \"fill\", fill()));\n    return _el$;\n  })();\n};\nconst _tmpl$$g = /* @__PURE__ */ template$1(`<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"none\"><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M13 4.06119V6.75053C13 7.16474 13.3358 7.50053 13.75 7.50053C14.1642 7.50053 14.5 7.16474 14.5 6.75053V2.75053L14.5 2.72807C14.5001 2.63191 14.5003 2.49627 14.4842 2.37627C14.4638 2.22503 14.4063 1.99261 14.2071 1.79342C14.0079 1.59423 13.7755 1.5367 13.6243 1.51637C13.5043 1.50023 13.3686 1.50039 13.2725 1.50051L13.25 1.50053H9.25C8.83579 1.50053 8.5 1.83631 8.5 2.25053C8.5 2.66474 8.83579 3.00053 9.25 3.00053H11.9393L7.21967 7.7202C6.92678 8.01309 6.92678 8.48796 7.21967 8.78086C7.51256 9.07375 7.98744 9.07375 8.28033 8.78086L13 4.06119ZM5.85 1.50053H5.81903H5.81899C5.21528 1.50052 4.71702 1.50051 4.31113 1.53367C3.88956 1.56812 3.50203 1.64204 3.13803 1.82751C2.57354 2.11513 2.1146 2.57407 1.82698 3.13856C1.64151 3.50256 1.56759 3.89009 1.53315 4.31166C1.49998 4.71755 1.49999 5.21581 1.5 5.81953V5.81955V5.85053V10.1505V10.1815V10.1815C1.49999 10.7852 1.49998 11.2835 1.53315 11.6894C1.56759 12.111 1.64151 12.4985 1.82698 12.8625C2.1146 13.427 2.57354 13.8859 3.13803 14.1735C3.50203 14.359 3.88956 14.4329 4.31113 14.4674C4.71702 14.5005 5.21527 14.5005 5.81897 14.5005H5.81901H5.85H10.15H10.181H10.181C10.7847 14.5005 11.283 14.5005 11.6889 14.4674C12.1104 14.4329 12.498 14.359 12.862 14.1735C13.4265 13.8859 13.8854 13.427 14.173 12.8625C14.3585 12.4985 14.4324 12.111 14.4669 11.6894C14.5 11.2835 14.5 10.7853 14.5 10.1816V10.1815V10.1505V9.75053C14.5 9.33631 14.1642 9.00053 13.75 9.00053C13.3358 9.00053 13 9.33631 13 9.75053V10.1505C13 10.793 12.9994 11.2297 12.9718 11.5672C12.945 11.8961 12.8963 12.0642 12.8365 12.1815C12.6927 12.4638 12.4632 12.6932 12.181 12.837C12.0637 12.8968 11.8955 12.9455 11.5667 12.9724C11.2292 12.9999 10.7924 13.0005 10.15 13.0005H5.85C5.20757 13.0005 4.77085 12.9999 4.43328 12.9724C4.10447 12.9455 3.93632 12.8968 3.81902 12.837C3.53677 12.6932 3.3073 12.4638 3.16349 12.1815C3.10372 12.0642 3.05503 11.8961 3.02816 11.5672C3.00058 11.2297 3 10.793 3 10.1505V5.85053C3 5.20809 3.00058 4.77137 3.02816 4.43381C3.05503 4.10499 3.10372 3.93684 3.16349 3.81954C3.3073 3.5373 3.53677 3.30783 3.81902 3.16402C3.93632 3.10425 4.10447 3.05556 4.43328 3.02869C4.77085 3.00111 5.20757 3.00053 5.85 3.00053H6.25C6.66422 3.00053 7 2.66474 7 2.25053C7 1.83631 6.66422 1.50053 6.25 1.50053H5.85Z\"></path></svg>`);\nconst LinkIcon = (props) => {\n  const theme = useTheme();\n  const fill = () => props.fill || theme.colors.accent;\n  return (() => {\n    const _el$ = _tmpl$$g.cloneNode(true), _el$2 = _el$.firstChild;\n    createRenderEffect(() => setAttribute(_el$2, \"fill\", fill()));\n    return _el$;\n  })();\n};\nconst _tmpl$$f = /* @__PURE__ */ template$1(`<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"17\" height=\"16\" viewBox=\"0 0 17 16\" fill=\"none\"><g clip-path=\"url(#clip0_3676_1274)\"><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M1.82698 2.63901C1.5 3.28074 1.5 4.12082 1.5 5.80098V8.80098V9.00098V10.201C1.5 11.8811 1.5 12.7212 1.82698 13.3629C2.1146 13.9274 2.57354 14.3864 3.13803 14.674C3.77976 15.001 4.61984 15.001 6.3 15.001H11.7C13.3802 15.001 14.2202 15.001 14.862 14.674C15.4265 14.3864 15.8854 13.9274 16.173 13.3629C16.5 12.7212 16.5 11.8811 16.5 10.201V8.80098C16.5 7.12082 16.5 6.28074 16.173 5.63901C15.8854 5.07452 15.4265 4.61558 14.862 4.32796C14.743 4.26733 14.6172 4.21795 14.4805 4.17772C14.4501 3.49449 14.3722 3.02994 14.173 2.63901C13.8854 2.07452 13.4265 1.61558 12.862 1.32796C12.2202 1.00098 11.3802 1.00098 9.7 1.00098H6.3C4.61984 1.00098 3.77976 1.00098 3.13803 1.32796C2.57354 1.61558 2.1146 2.07452 1.82698 2.63901ZM12.9861 4.00942C12.9684 3.7108 12.9281 3.49982 12.8365 3.31999C12.6927 3.03775 12.4632 2.80828 12.181 2.66447C11.8601 2.50098 11.4401 2.50098 10.6 2.50098H5.4C4.55992 2.50098 4.13988 2.50098 3.81901 2.66447C3.53677 2.80828 3.3073 3.03775 3.16349 3.31999C3.03615 3.56991 3.00799 3.88 3.00177 4.40188C3.04646 4.37612 3.09189 4.35146 3.13803 4.32796C3.77976 4.00098 4.61984 4.00098 6.3 4.00098H11.7C12.1966 4.00098 12.6197 4.00098 12.9861 4.00942ZM3 7.90098V8.10098C3 8.47468 3 8.76527 3.01439 9.00098H3V11.101C3 11.9411 3 12.3611 3.16349 12.682C3.3073 12.9642 3.53677 13.1937 3.81901 13.3375C4.13988 13.501 4.55992 13.501 5.4 13.501H12.6C13.4401 13.501 13.8601 13.501 14.181 13.3375C14.4632 13.1937 14.6927 12.9642 14.8365 12.682C15 12.3611 15 11.9411 15 11.101V7.90098C15 7.0609 15 6.64086 14.8365 6.31999C14.6927 6.03775 14.4632 5.80828 14.181 5.66447C13.8601 5.50098 13.4401 5.50098 12.6 5.50098H5.4C4.55992 5.50098 4.13988 5.50098 3.81901 5.66447C3.53677 5.80828 3.3073 6.03775 3.16349 6.31999C3 6.64086 3 7.0609 3 7.90098ZM10.5 9.75098C10.5 9.33676 10.8358 9.00098 11.25 9.00098H12.75C13.1642 9.00098 13.5 9.33676 13.5 9.75098C13.5 10.1652 13.1642 10.501 12.75 10.501H11.25C10.8358 10.501 10.5 10.1652 10.5 9.75098Z\"></path></g><defs><clipPath id=\"clip0_3676_1274\"><rect width=\"16\" height=\"16\" fill=\"white\" transform=\"translate(0.5 0.000976562)\"></rect></clipPath></defs></svg>`);\nconst WalletIcon = (props) => {\n  const theme = useTheme();\n  const fill = () => props.fill || theme.colors.accent;\n  return (() => {\n    const _el$ = _tmpl$$f.cloneNode(true), _el$2 = _el$.firstChild, _el$3 = _el$2.firstChild;\n    createRenderEffect(() => setAttribute(_el$3, \"fill\", fill()));\n    return _el$;\n  })();\n};\nconst _tmpl$$e = /* @__PURE__ */ template$1(`<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"48\" height=\"48\" viewBox=\"0 0 48 48\" fill=\"none\"><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M39.6319 16.8719C38.3212 16.2041 36.7002 16.0478 34 16.0112V11C34 5.47715 29.5228 1 24 1C18.4772 1 14 5.47715 14 11V16.0112C11.2998 16.0478 9.6788 16.2041 8.36808 16.8719C6.86278 17.6389 5.63893 18.8628 4.87195 20.3681C4 22.0794 4 24.3196 4 28.8V32.2C4 36.6804 4 38.9206 4.87195 40.6319C5.63893 42.1372 6.86278 43.3611 8.36808 44.1281C10.0794 45 12.3196 45 16.8 45H31.2C35.6804 45 37.9206 45 39.6319 44.1281C41.1372 43.3611 42.3611 42.1372 43.1281 40.6319C44 38.9206 44 36.6804 44 32.2V28.8C44 24.3196 44 22.0794 43.1281 20.3681C42.3611 18.8628 41.1372 17.6389 39.6319 16.8719ZM31 11V16H17V11C17 7.13401 20.134 4 24 4C27.866 4 31 7.13401 31 11ZM7.54497 21.73C7 22.7996 7 24.1997 7 27V34C7 36.8003 7 38.2004 7.54497 39.27C8.02433 40.2108 8.78924 40.9757 9.73005 41.455C10.7996 42 12.1997 42 15 42H33C35.8003 42 37.2004 42 38.27 41.455C39.2108 40.9757 39.9757 40.2108 40.455 39.27C41 38.2004 41 36.8003 41 34V27C41 24.1997 41 22.7996 40.455 21.73C39.9757 20.7892 39.2108 20.0243 38.27 19.545C37.2004 19 35.8003 19 33 19H15C12.1997 19 10.7996 19 9.73005 19.545C8.78924 20.0243 8.02433 20.7892 7.54497 21.73ZM24 24C23.1716 24 22.5 24.6716 22.5 25.5V29.5C22.5 30.3284 23.1716 31 24 31C24.8284 31 25.5 30.3284 25.5 29.5V25.5C25.5 24.6716 24.8284 24 24 24Z\"></path></svg>`);\nconst SecurityIcon = (props) => {\n  const theme = useTheme();\n  const fill = () => props.fill || theme.colors.icon.secondary;\n  return (() => {\n    const _el$ = _tmpl$$e.cloneNode(true), _el$2 = _el$.firstChild;\n    createRenderEffect((_p$) => {\n      const _v$ = props.class, _v$2 = fill();\n      _v$ !== _p$._v$ && setAttribute(_el$, \"class\", _p$._v$ = _v$);\n      _v$2 !== _p$._v$2 && setAttribute(_el$2, \"fill\", _p$._v$2 = _v$2);\n      return _p$;\n    }, {\n      _v$: void 0,\n      _v$2: void 0\n    });\n    return _el$;\n  })();\n};\nconst _tmpl$$d = /* @__PURE__ */ template$1(`<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"48\" height=\"48\" viewBox=\"0 0 48 48\" fill=\"none\"><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M37.485 37.3849C40.894 33.9506 43 29.2212 43 24C43 13.5066 34.4934 5 24 5C13.5066 5 5 13.5066 5 24C5 29.2213 7.1061 33.9507 10.5151 37.385C13.3583 32.9438 18.3354 30 24.0001 30C29.6647 30 34.6418 32.9437 37.485 37.3849ZM35.1809 39.3635C32.9143 35.5532 28.7554 33 24.0001 33C19.2448 33 15.0858 35.5533 12.8193 39.3636C15.9564 41.6506 19.8206 43 24 43C28.1795 43 32.0437 41.6505 35.1809 39.3635ZM24 46C36.1503 46 46 36.1503 46 24C46 11.8497 36.1503 2 24 2C11.8497 2 2 11.8497 2 24C2 36.1503 11.8497 46 24 46ZM24 24C26.7614 24 29 21.7614 29 19C29 16.2386 26.7614 14 24 14C21.2386 14 19 16.2386 19 19C19 21.7614 21.2386 24 24 24ZM24 27C28.4183 27 32 23.4183 32 19C32 14.5817 28.4183 11 24 11C19.5817 11 16 14.5817 16 19C16 23.4183 19.5817 27 24 27Z\"></path></svg>`);\nconst PersonalityIcon = (props) => {\n  const theme = useTheme();\n  const fill = () => props.fill || theme.colors.icon.secondary;\n  return (() => {\n    const _el$ = _tmpl$$d.cloneNode(true), _el$2 = _el$.firstChild;\n    createRenderEffect((_p$) => {\n      const _v$ = props.class, _v$2 = fill();\n      _v$ !== _p$._v$ && setAttribute(_el$, \"class\", _p$._v$ = _v$);\n      _v$2 !== _p$._v$2 && setAttribute(_el$2, \"fill\", _p$._v$2 = _v$2);\n      return _p$;\n    }, {\n      _v$: void 0,\n      _v$2: void 0\n    });\n    return _el$;\n  })();\n};\nconst _tmpl$$c = /* @__PURE__ */ template$1(`<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"48\" height=\"48\" viewBox=\"0 0 48 48\" fill=\"none\"><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M34.5607 4.43934C33.9749 3.85355 33.0251 3.85355 32.4393 4.43934C31.8536 5.02513 31.8536 5.97487 32.4393 6.56066L37.8787 12H10.5C9.67157 12 9 12.6716 9 13.5C9 14.3284 9.67157 15 10.5 15H37.8787L32.4393 20.4393C31.8536 21.0251 31.8536 21.9749 32.4393 22.5607C33.0251 23.1464 33.9749 23.1464 34.5607 22.5607L42.5607 14.5607C43.1464 13.9749 43.1464 13.0251 42.5607 12.4393L34.5607 4.43934ZM13.4393 25.4393C14.0251 24.8536 14.9749 24.8536 15.5607 25.4393C16.1464 26.0251 16.1464 26.9749 15.5607 27.5607L10.1213 33H37.5C38.3284 33 39 33.6716 39 34.5C39 35.3284 38.3284 36 37.5 36H10.1213L15.5607 41.4393C16.1464 42.0251 16.1464 42.9749 15.5607 43.5607C14.9749 44.1464 14.0251 44.1464 13.4393 43.5607L5.43934 35.5607C4.85355 34.9749 4.85355 34.0251 5.43934 33.4393L13.4393 25.4393Z\"></path></svg>`);\nconst SwapIcon = (props) => {\n  const theme = useTheme();\n  const fill = () => props.fill || theme.colors.icon.secondary;\n  return (() => {\n    const _el$ = _tmpl$$c.cloneNode(true), _el$2 = _el$.firstChild;\n    createRenderEffect((_p$) => {\n      const _v$ = props.class, _v$2 = fill();\n      _v$ !== _p$._v$ && setAttribute(_el$, \"class\", _p$._v$ = _v$);\n      _v$2 !== _p$._v$2 && setAttribute(_el$2, \"fill\", _p$._v$2 = _v$2);\n      return _p$;\n    }, {\n      _v$: void 0,\n      _v$2: void 0\n    });\n    return _el$;\n  })();\n};\nconst _tmpl$$b = /* @__PURE__ */ template$1(`<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"28\" height=\"29\" viewBox=\"0 0 28 29\" fill=\"none\"><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M1.75 12.002C1.75 9.20169 1.75 7.80156 2.29497 6.732C2.77433 5.79119 3.53924 5.02629 4.48005 4.54692C5.54961 4.00195 6.94974 4.00195 9.75 4.00195H17.25C20.0503 4.00195 21.4504 4.00195 22.52 4.54692C23.4608 5.02629 24.2257 5.79119 24.705 6.732C24.8256 6.96861 24.9195 7.2214 24.9926 7.50195H21.5C19.6377 7.50195 18.7065 7.50195 17.9609 7.77334C16.711 8.22828 15.7263 9.21291 15.2714 10.4629C15 11.2085 15 12.1396 15 14.002C15 15.8643 15 16.7954 15.2714 17.541C15.7263 18.791 16.711 19.7756 17.9609 20.2306C18.7065 20.502 19.6377 20.502 21.5 20.502H24.9926C24.9195 20.7825 24.8256 21.0353 24.705 21.2719C24.2257 22.2127 23.4608 22.9776 22.52 23.457C21.4504 24.002 20.0503 24.002 17.25 24.002H9.75C6.94974 24.002 5.54961 24.002 4.48005 23.457C3.53924 22.9776 2.77433 22.2127 2.29497 21.2719C1.75 20.2023 1.75 18.8022 1.75 16.002V12.002ZM16.4999 13.802C16.4999 12.1218 16.4999 11.2817 16.8269 10.64C17.1145 10.0755 17.5735 9.61656 18.138 9.32894C18.7797 9.00196 19.6198 9.00196 21.2999 9.00196H23.1999C24.8801 9.00196 25.7202 9.00196 26.3619 9.32894C26.9264 9.61656 27.3853 10.0755 27.673 10.64C27.9999 11.2817 27.9999 12.1218 27.9999 13.802V14.202C27.9999 15.8821 27.9999 16.7222 27.673 17.3639C27.3853 17.9284 26.9264 18.3874 26.3619 18.675C25.7202 19.002 24.8801 19.002 23.1999 19.002H21.2999C19.6198 19.002 18.7797 19.002 18.138 18.675C17.5735 18.3874 17.1145 17.9284 16.8269 17.3639C16.4999 16.7222 16.4999 15.8821 16.4999 14.202V13.802ZM22.4999 14.002C22.4999 14.9685 21.7164 15.752 20.7499 15.752C19.7834 15.752 18.9999 14.9685 18.9999 14.002C18.9999 13.0355 19.7834 12.252 20.7499 12.252C21.7164 12.252 22.4999 13.0355 22.4999 14.002Z\"></path></svg>`);\nconst AtWalletIcon = (props) => {\n  const theme = useTheme();\n  const fill = () => props.fill || theme.colors.constant.white;\n  return (() => {\n    const _el$ = _tmpl$$b.cloneNode(true), _el$2 = _el$.firstChild;\n    createRenderEffect((_p$) => {\n      const _v$ = props.class, _v$2 = fill();\n      _v$ !== _p$._v$ && setAttribute(_el$, \"class\", _p$._v$ = _v$);\n      _v$2 !== _p$._v$2 && setAttribute(_el$2, \"fill\", _p$._v$2 = _v$2);\n      return _p$;\n    }, {\n      _v$: void 0,\n      _v$2: void 0\n    });\n    return _el$;\n  })();\n};\nconst _tmpl$$a = /* @__PURE__ */ template$1(`<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"28\" height=\"28\" viewBox=\"0 0 28 28\" fill=\"none\"><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M24.7803 7.21967C25.0732 7.51256 25.0732 7.98744 24.7803 8.28033L11.5303 21.5303C11.2374 21.8232 10.7626 21.8232 10.4697 21.5303L4.21967 15.2803C3.92678 14.9874 3.92678 14.5126 4.21967 14.2197C4.51256 13.9268 4.98744 13.9268 5.28033 14.2197L11 19.9393L23.7197 7.21967C24.0126 6.92678 24.4874 6.92678 24.7803 7.21967Z\"></path></svg>`);\nconst DoneIcon = (props) => {\n  const theme = useTheme();\n  const fill = () => props.fill || theme.colors.icon.secondary;\n  return (() => {\n    const _el$ = _tmpl$$a.cloneNode(true), _el$2 = _el$.firstChild;\n    createRenderEffect((_p$) => {\n      const _v$ = props.class, _v$2 = fill();\n      _v$ !== _p$._v$ && setAttribute(_el$, \"class\", _p$._v$ = _v$);\n      _v$2 !== _p$._v$2 && setAttribute(_el$2, \"fill\", _p$._v$2 = _v$2);\n      return _p$;\n    }, {\n      _v$: void 0,\n      _v$2: void 0\n    });\n    return _el$;\n  })();\n};\nconst _tmpl$$9 = /* @__PURE__ */ template$1(`<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"28\" height=\"28\" viewBox=\"0 0 28 28\"><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M10.0001 10.0001C10.0016 8.02333 10.0267 6.98719 10.436 6.18404C10.8195 5.43139 11.4314 4.81947 12.184 4.43597C13.0397 4 14.1598 4 16.4 4H17.6C19.8402 4 20.9603 4 21.816 4.43597C22.5686 4.81947 23.1805 5.43139 23.564 6.18404C24 7.03969 24 8.15979 24 10.4V11.6C24 13.8402 24 14.9603 23.564 15.816C23.1805 16.5686 22.5686 17.1805 21.816 17.564C21.0128 17.9733 19.9767 17.9984 17.9999 17.9999C17.9984 19.9767 17.9733 21.0128 17.564 21.816C17.1805 22.5686 16.5686 23.1805 15.816 23.564C14.9603 24 13.8402 24 11.6 24H10.4C8.15979 24 7.03969 24 6.18404 23.564C5.43139 23.1805 4.81947 22.5686 4.43597 21.816C4 20.9603 4 19.8402 4 17.6V16.4C4 14.1598 4 13.0397 4.43597 12.184C4.81947 11.4314 5.43139 10.8195 6.18404 10.436C6.98719 10.0267 8.02333 10.0016 10.0001 10.0001ZM10 11.5H9.5C8.09987 11.5 7.3998 11.5 6.86502 11.7725C6.39462 12.0122 6.01217 12.3946 5.77248 12.865C5.5 13.3998 5.5 14.0999 5.5 15.5V18.5C5.5 19.9001 5.5 20.6002 5.77248 21.135C6.01217 21.6054 6.39462 21.9878 6.86502 22.2275C7.3998 22.5 8.09987 22.5 9.5 22.5H12.5C13.9001 22.5 14.6002 22.5 15.135 22.2275C15.6054 21.9878 15.9878 21.6054 16.2275 21.135C16.5 20.6002 16.5 19.9001 16.5 18.5V18H16.4C14.1598 18 13.0397 18 12.184 17.564C11.4314 17.1805 10.8195 16.5686 10.436 15.816C10 14.9603 10 13.8402 10 11.6V11.5ZM11.5 9.5C11.5 8.09987 11.5 7.3998 11.7725 6.86502C12.0122 6.39462 12.3946 6.01217 12.865 5.77248C13.3998 5.5 14.0999 5.5 15.5 5.5H18.5C19.9001 5.5 20.6002 5.5 21.135 5.77248C21.6054 6.01217 21.9878 6.39462 22.2275 6.86502C22.5 7.3998 22.5 8.09987 22.5 9.5V12.5C22.5 13.9001 22.5 14.6002 22.2275 15.135C21.9878 15.6054 21.6054 15.9878 21.135 16.2275C20.6002 16.5 19.9001 16.5 18.5 16.5H15.5C14.0999 16.5 13.3998 16.5 12.865 16.2275C12.3946 15.9878 12.0122 15.6054 11.7725 15.135C11.5 14.6002 11.5 13.9001 11.5 12.5V9.5Z\"></path></svg>`);\nconst CopyLightIcon = (props) => {\n  const theme = useTheme();\n  const fill = () => props.fill || theme.colors.icon.secondary;\n  return (() => {\n    const _el$ = _tmpl$$9.cloneNode(true), _el$2 = _el$.firstChild;\n    createRenderEffect((_p$) => {\n      const _v$ = fill(), _v$2 = fill();\n      _v$ !== _p$._v$ && setAttribute(_el$, \"fill\", _p$._v$ = _v$);\n      _v$2 !== _p$._v$2 && setAttribute(_el$2, \"fill\", _p$._v$2 = _v$2);\n      return _p$;\n    }, {\n      _v$: void 0,\n      _v$2: void 0\n    });\n    return _el$;\n  })();\n};\nconst _tmpl$$8 = /* @__PURE__ */ template$1(`<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"17\" viewBox=\"0 0 16 17\" fill=\"none\"><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M1 4.12695C1 3.07754 1 2.55284 1.19202 2.14684C1.38986 1.72856 1.7266 1.39181 2.14489 1.19397C2.55088 1.00195 3.07559 1.00195 4.125 1.00195C5.17441 1.00195 5.69912 1.00195 6.10511 1.19397C6.5234 1.39181 6.86014 1.72856 7.05798 2.14684C7.25 2.55284 7.25 3.07754 7.25 4.12695C7.25 5.17636 7.25 5.70107 7.05798 6.10706C6.86014 6.52535 6.5234 6.8621 6.10511 7.05993C5.69912 7.25195 5.17441 7.25195 4.125 7.25195C3.07559 7.25195 2.55088 7.25195 2.14489 7.05993C1.7266 6.8621 1.38986 6.52535 1.19202 6.10706C1 5.70107 1 5.17636 1 4.12695ZM2.5 3.30195C2.5 3.02193 2.5 2.88191 2.5545 2.77496C2.60243 2.68088 2.67892 2.60439 2.773 2.55645C2.87996 2.50195 3.01997 2.50195 3.3 2.50195H4.95C5.23003 2.50195 5.37004 2.50195 5.477 2.55645C5.57108 2.60439 5.64757 2.68088 5.6955 2.77496C5.75 2.88191 5.75 3.02193 5.75 3.30195V4.95195C5.75 5.23198 5.75 5.37199 5.6955 5.47895C5.64757 5.57303 5.57108 5.64952 5.477 5.69746C5.37004 5.75195 5.23003 5.75195 4.95 5.75195H3.3C3.01997 5.75195 2.87996 5.75195 2.773 5.69746C2.67892 5.64952 2.60243 5.57303 2.5545 5.47895C2.5 5.37199 2.5 5.23198 2.5 4.95195V3.30195ZM1 11.877C1 10.8275 1 10.3028 1.19202 9.89684C1.38986 9.47856 1.7266 9.14181 2.14489 8.94397C2.55088 8.75195 3.07559 8.75195 4.125 8.75195C5.17441 8.75195 5.69912 8.75195 6.10511 8.94397C6.5234 9.14181 6.86014 9.47856 7.05798 9.89684C7.25 10.3028 7.25 10.8275 7.25 11.877C7.25 12.9264 7.25 13.4511 7.05798 13.8571C6.86014 14.2753 6.5234 14.6121 6.10511 14.8099C5.69912 15.002 5.17441 15.002 4.125 15.002C3.07559 15.002 2.55088 15.002 2.14489 14.8099C1.7266 14.6121 1.38986 14.2753 1.19202 13.8571C1 13.4511 1 12.9264 1 11.877ZM2.5 11.052C2.5 10.7719 2.5 10.6319 2.5545 10.525C2.60243 10.4309 2.67892 10.3544 2.773 10.3064C2.87996 10.252 3.01997 10.252 3.3 10.252H4.95C5.23003 10.252 5.37004 10.252 5.477 10.3064C5.57108 10.3544 5.64757 10.4309 5.6955 10.525C5.75 10.6319 5.75 10.7719 5.75 11.052V12.702C5.75 12.982 5.75 13.122 5.6955 13.2289C5.64757 13.323 5.57108 13.3995 5.477 13.4475C5.37004 13.502 5.23003 13.502 4.95 13.502H3.3C3.01997 13.502 2.87996 13.502 2.773 13.4475C2.67892 13.3995 2.60243 13.323 2.5545 13.2289C2.5 13.122 2.5 12.982 2.5 12.702V11.052ZM8.94202 2.14684C8.75 2.55284 8.75 3.07754 8.75 4.12695C8.75 5.17636 8.75 5.70107 8.94202 6.10706C9.13986 6.52535 9.4766 6.8621 9.89489 7.05993C10.3009 7.25195 10.8256 7.25195 11.875 7.25195C12.9244 7.25195 13.4491 7.25195 13.8551 7.05993C14.2734 6.8621 14.6101 6.52535 14.808 6.10706C15 5.70107 15 5.17636 15 4.12695C15 3.07754 15 2.55284 14.808 2.14684C14.6101 1.72856 14.2734 1.39181 13.8551 1.19397C13.4491 1.00195 12.9244 1.00195 11.875 1.00195C10.8256 1.00195 10.3009 1.00195 9.89489 1.19397C9.4766 1.39181 9.13986 1.72856 8.94202 2.14684ZM10.3045 2.77496C10.25 2.88191 10.25 3.02193 10.25 3.30195V4.95195C10.25 5.23198 10.25 5.37199 10.3045 5.47895C10.3524 5.57303 10.4289 5.64952 10.523 5.69746C10.63 5.75195 10.77 5.75195 11.05 5.75195H12.7C12.98 5.75195 13.12 5.75195 13.227 5.69746C13.3211 5.64952 13.3976 5.57303 13.4455 5.47895C13.5 5.37199 13.5 5.23198 13.5 4.95195V3.30195C13.5 3.02193 13.5 2.88191 13.4455 2.77496C13.3976 2.68088 13.3211 2.60439 13.227 2.55645C13.12 2.50195 12.98 2.50195 12.7 2.50195H11.05C10.77 2.50195 10.63 2.50195 10.523 2.55645C10.4289 2.60439 10.3524 2.68088 10.3045 2.77496ZM8.80727 9.13518C8.75 9.26242 8.75 9.4256 8.75 9.75195C8.75 10.0783 8.75 10.2415 8.80727 10.3687C8.87245 10.5136 8.9884 10.6295 9.13323 10.6947C9.26047 10.752 9.42365 10.752 9.75 10.752C10.0764 10.752 10.2395 10.752 10.3668 10.6947C10.5116 10.6295 10.6276 10.5136 10.6927 10.3687C10.75 10.2415 10.75 10.0783 10.75 9.75195C10.75 9.4256 10.75 9.26242 10.6927 9.13518C10.6276 8.99035 10.5116 8.8744 10.3668 8.80922C10.2395 8.75195 10.0764 8.75195 9.75 8.75195C9.42365 8.75195 9.26047 8.75195 9.13323 8.80922C8.9884 8.8744 8.87245 8.99035 8.80727 9.13518ZM10.87 11.8771C10.87 11.546 10.87 11.3805 10.9289 11.2517C10.9938 11.1098 11.1077 10.9959 11.2497 10.931C11.3784 10.8721 11.5439 10.8721 11.875 10.8721C12.2061 10.8721 12.3716 10.8721 12.5003 10.931C12.6423 10.9959 12.7562 11.1098 12.8211 11.2517C12.88 11.3805 12.88 11.546 12.88 11.8771C12.88 12.2081 12.88 12.3737 12.8211 12.5024C12.7562 12.6444 12.6423 12.7583 12.5003 12.8232C12.3716 12.8821 12.2061 12.8821 11.875 12.8821C11.5439 12.8821 11.3784 12.8821 11.2497 12.8232C11.1077 12.7583 10.9938 12.6444 10.9289 12.5024C10.87 12.3737 10.87 12.2081 10.87 11.8771ZM8.80727 13.3852C8.75 13.5124 8.75 13.6756 8.75 14.002C8.75 14.3283 8.75 14.4915 8.80727 14.6187C8.87245 14.7636 8.9884 14.8795 9.13323 14.9447C9.26047 15.002 9.42365 15.002 9.75 15.002C10.0764 15.002 10.2395 15.002 10.3668 14.9447C10.5116 14.8795 10.6276 14.7636 10.6927 14.6187C10.75 14.4915 10.75 14.3283 10.75 14.002C10.75 13.6756 10.75 13.5124 10.6927 13.3852C10.6276 13.2404 10.5116 13.1244 10.3668 13.0592C10.2395 13.002 10.0764 13.002 9.75 13.002C9.42365 13.002 9.26047 13.002 9.13323 13.0592C8.9884 13.1244 8.87245 13.2404 8.80727 13.3852ZM13 9.75195C13 9.4256 13 9.26242 13.0573 9.13518C13.1224 8.99035 13.2384 8.8744 13.3832 8.80922C13.5105 8.75195 13.6736 8.75195 14 8.75195C14.3264 8.75195 14.4895 8.75195 14.6168 8.80922C14.7616 8.8744 14.8776 8.99035 14.9427 9.13518C15 9.26242 15 9.4256 15 9.75195C15 10.0783 15 10.2415 14.9427 10.3687C14.8776 10.5136 14.7616 10.6295 14.6168 10.6947C14.4895 10.752 14.3264 10.752 14 10.752C13.6736 10.752 13.5105 10.752 13.3832 10.6947C13.2384 10.6295 13.1224 10.5136 13.0573 10.3687C13 10.2415 13 10.0783 13 9.75195ZM13.0573 13.3852C13 13.5124 13 13.6756 13 14.002C13 14.3283 13 14.4915 13.0573 14.6187C13.1224 14.7636 13.2384 14.8795 13.3832 14.9447C13.5105 15.002 13.6736 15.002 14 15.002C14.3264 15.002 14.4895 15.002 14.6168 14.9447C14.7616 14.8795 14.8776 14.7636 14.9427 14.6187C15 14.4915 15 14.3283 15 14.002C15 13.6756 15 13.5124 14.9427 13.3852C14.8776 13.2404 14.7616 13.1244 14.6168 13.0592C14.4895 13.002 14.3264 13.002 14 13.002C13.6736 13.002 13.5105 13.002 13.3832 13.0592C13.2384 13.1244 13.1224 13.2404 13.0573 13.3852Z\"></path></svg>`);\nconst QRIcon = (props) => {\n  const theme = useTheme();\n  const fill = () => props.fill || theme.colors.icon.secondary;\n  return (() => {\n    const _el$ = _tmpl$$8.cloneNode(true), _el$2 = _el$.firstChild;\n    createRenderEffect(() => setAttribute(_el$2, \"fill\", fill()));\n    return _el$;\n  })();\n};\nconst containerBorders = {\n  m: \"16px\",\n  s: \"12px\",\n  none: \"0\"\n};\nconst walletBorders = {\n  m: \"6px\",\n  s: \"6px\",\n  none: \"0\"\n};\nconst FourWalletsCard = styled.div`\n    width: 60px;\n    height: 60px;\n    padding: 8px;\n    margin-bottom: 8px;\n    border-radius: ${(props) => containerBorders[props.theme.borderRadius]};\n    background-color: ${(props) => props.theme.colors.background.tint};\n    display: grid;\n    grid-template: 1fr 1fr / 1fr 1fr;\n    gap: 4px;\n`;\nconst FourWalletsImage = styled(WalletImage)`\n    width: 20px;\n    height: 20px;\n    border-radius: ${(props) => walletBorders[props.theme.borderRadius]};\n`;\nconst FourWalletsItem = (props) => {\n  return createComponent(WalletItem, {\n    get name() {\n      return props.labelLine1;\n    },\n    get secondLine() {\n      return props.labelLine2;\n    },\n    get icon() {\n      return createComponent(FourWalletsCard, {\n        get children() {\n          return createComponent(For, {\n            each: [0, 1, 2, 3],\n            children: (index) => createComponent(FourWalletsImage, {\n              get src() {\n                return props.images[index];\n              }\n            })\n          });\n        }\n      });\n    },\n    onClick: () => props.onClick()\n  });\n};\nconst AT_WALLET_APP_NAME = \"telegram-wallet\";\nconst IMG = {\n  TON: \"https://raw.githubusercontent.com/ton-connect/sdk/main/assets/ton-icon-48.png\",\n  TG: \"https://raw.githubusercontent.com/ton-connect/sdk/main/assets/tg.png\"\n};\nconst WalletLabeledItem = (props) => {\n  const [t2] = useI18n();\n  const walletsSecondLine = () => {\n    if (props.wallet.appName === AT_WALLET_APP_NAME) {\n      return void 0;\n    }\n    if (\"isPreferred\" in props.wallet && props.wallet.isPreferred) {\n      return t2(\"walletItem.recent\", {}, \"Recent\");\n    }\n    if ((0,_tonconnect_sdk__WEBPACK_IMPORTED_MODULE_0__.isWalletInfoCurrentlyInjected)(props.wallet)) {\n      return t2(\"walletItem.installed\", {}, \"Installed\");\n    }\n    if (props.wallet.name === \"Tonkeeper\") {\n      return t2(\"walletItem.popular\", {}, \"Popular\");\n    }\n    return void 0;\n  };\n  return createMemo((() => {\n    const _c$ = createMemo(() => props.wallet.appName === AT_WALLET_APP_NAME);\n    return () => _c$() ? createComponent(WalletItem, {\n      get icon() {\n        return props.wallet.imageUrl;\n      },\n      get name() {\n        return t2(\"walletItem.walletOn\", {}, \"Wallet On\");\n      },\n      secondLine: \"Telegram\",\n      get badgeUrl() {\n        return IMG.TG;\n      },\n      onClick: () => props.onClick()\n    }) : createComponent(WalletItem, {\n      get icon() {\n        return props.wallet.imageUrl;\n      },\n      get name() {\n        return props.wallet.name;\n      },\n      get secondLine() {\n        return walletsSecondLine();\n      },\n      secondLineColorPrimary: false,\n      onClick: () => props.onClick()\n    });\n  })());\n};\nconst ScrollContainerStyled = styled.div`\n    width: 100%;\n    overflow-y: auto;\n    max-height: ${(props) => props.maxHeight};\n\n    scrollbar-width: none;\n    &&::-webkit-scrollbar {\n        display: none;\n    }\n\n    &&::-webkit-scrollbar-track {\n        background: transparent;\n    }\n\n    &&::-webkit-scrollbar-thumb {\n        display: none;\n    }\n`;\nconst ScrollDivider = styled.div`\n    height: 1px;\n    margin: 0 -24px;\n    width: calc(100% + 48px);\n    opacity: 0.08;\n    background: ${(props) => props.isShown ? props.theme.colors.icon.secondary : \"transparent\"};\n    transition: background 0.15s ease-in-out;\n\n    ${media(\"mobile\")} {\n        width: 100%;\n        margin: 0;\n    }\n`;\nconst [windowHeight, setWindowHeight] = createSignal(((_h = getWindow$1()) == null ? void 0 : _h.innerHeight) || 0);\nif (getWindow$1()) {\n  window.addEventListener(\"resize\", () => setWindowHeight(window.innerHeight));\n}\nconst [isMobile, setIsMobile] = createSignal(isDevice(\"mobile\"));\nconst updateIsMobile = () => setIsMobile(isDevice(\"mobile\"));\nif (getWindow$1()) {\n  window.addEventListener(\"resize\", () => updateIsMobile());\n  window.addEventListener(\"load\", () => updateIsMobile(), { once: true });\n}\nconst ScrollContainer = (props) => {\n  const [scrolled, setScrolled] = createSignal(false);\n  const onScroll = (e2) => {\n    setScrolled(e2.target.scrollTop > 0);\n  };\n  const offset = () => isMobile() ? 150 : 200;\n  const maxHeight = () => props.maxHeight !== void 0 ? `${props.maxHeight}px` : `${windowHeight() - offset()}px`;\n  return [createComponent(ScrollDivider, {\n    get isShown() {\n      return scrolled();\n    }\n  }), createComponent(ScrollContainerStyled, {\n    get maxHeight() {\n      return maxHeight();\n    },\n    onScroll,\n    get [\"class\"]() {\n      return props.class;\n    },\n    get children() {\n      return props.children;\n    }\n  })];\n};\nconst AStyled = styled.a`\n    display: block;\n    text-decoration: unset;\n`;\nconst Link = (props) => {\n  const attributes = () => props.blank ? {\n    rel: \"noreferrer noopener\"\n  } : {};\n  return createComponent(AStyled, mergeProps({\n    get href() {\n      return props.href;\n    },\n    get target() {\n      return props.blank ? \"_blank\" : \"_self\";\n    },\n    get [\"class\"]() {\n      return props.class;\n    }\n  }, attributes, {\n    get children() {\n      return props.children;\n    }\n  }));\n};\nconst TonConnectUiContext = createContext();\nconst _tmpl$$7 = /* @__PURE__ */ template$1(`<svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M7.76228 2.09998H10.2378C11.0458 2.09997 11.7067 2.09996 12.2438 2.14384C12.7997 2.18926 13.3017 2.28614 13.7706 2.52505C14.5045 2.89896 15.1011 3.49558 15.475 4.22941C15.7139 4.6983 15.8108 5.20038 15.8562 5.75629C15.9001 6.29337 15.9001 6.95422 15.9001 7.76227V8.1H16.2377C17.0457 8.09999 17.7066 8.09998 18.2437 8.14386C18.7996 8.18928 19.3017 8.28616 19.7705 8.52507C20.5044 8.89898 21.101 9.4956 21.4749 10.2294C21.7138 10.6983 21.8107 11.2004 21.8561 11.7563C21.9 12.2934 21.9 12.9542 21.9 13.7623V16.2377C21.9 17.0458 21.9 17.7066 21.8561 18.2437C21.8107 18.7996 21.7138 19.3017 21.4749 19.7706C21.101 20.5044 20.5044 21.101 19.7705 21.4749C19.3017 21.7138 18.7996 21.8107 18.2437 21.8561C17.7066 21.9 17.0458 21.9 16.2378 21.9H13.7623C12.9543 21.9 12.2934 21.9 11.7563 21.8561C11.2004 21.8107 10.6983 21.7138 10.2294 21.4749C9.49561 21.101 8.89898 20.5044 8.52508 19.7706C8.28616 19.3017 8.18928 18.7996 8.14386 18.2437C8.09998 17.7066 8.09999 17.0458 8.1 16.2377V15.9H7.76227C6.95426 15.9 6.29335 15.9 5.75629 15.8561C5.20038 15.8107 4.6983 15.7138 4.22941 15.4749C3.49558 15.101 2.89896 14.5044 2.52505 13.7705C2.28614 13.3017 2.18926 12.7996 2.14384 12.2437C2.09996 11.7066 2.09997 11.0458 2.09998 10.2377V7.76228C2.09997 6.95424 2.09996 6.29336 2.14384 5.75629C2.18926 5.20038 2.28614 4.6983 2.52505 4.22941C2.89896 3.49558 3.49558 2.89896 4.22941 2.52505C4.6983 2.28614 5.20038 2.18926 5.75629 2.14384C6.29336 2.09996 6.95425 2.09997 7.76228 2.09998ZM8.1 14.1V13.7623C8.09999 12.9542 8.09998 12.2934 8.14386 11.7563C8.18928 11.2004 8.28616 10.6983 8.52508 10.2294C8.89898 9.4956 9.49561 8.89898 10.2294 8.52507C10.6983 8.28616 11.2004 8.18928 11.7563 8.14386C12.2934 8.09998 12.9542 8.09999 13.7623 8.1H14.1001V7.79998C14.1001 6.94505 14.0994 6.35798 14.0622 5.90287C14.0259 5.45827 13.9593 5.21944 13.8712 5.0466C13.6699 4.65146 13.3486 4.3302 12.9535 4.12886C12.7806 4.04079 12.5418 3.97419 12.0972 3.93786C11.6421 3.90068 11.055 3.89998 10.2001 3.89998H7.79998C6.94505 3.89998 6.35798 3.90068 5.90287 3.93786C5.45827 3.97419 5.21944 4.04079 5.0466 4.12886C4.65146 4.3302 4.3302 4.65146 4.12886 5.0466C4.04079 5.21944 3.97419 5.45827 3.93786 5.90287C3.90068 6.35798 3.89998 6.94505 3.89998 7.79998V10.2C3.89998 11.0549 3.90068 11.642 3.93786 12.0971C3.97419 12.5417 4.04079 12.7805 4.12886 12.9534C4.3302 13.3485 4.65146 13.6698 5.0466 13.8711C5.21944 13.9592 5.45827 14.0258 5.90287 14.0621C6.35798 14.0993 6.94505 14.1 7.79998 14.1H8.1ZM11.0466 10.1289C11.2195 10.0408 11.4583 9.97421 11.9029 9.93788C12.358 9.9007 12.9451 9.9 13.8 9.9H16.2C17.0549 9.9 17.642 9.9007 18.0971 9.93788C18.5417 9.97421 18.7805 10.0408 18.9534 10.1289C19.3485 10.3302 19.6698 10.6515 19.8711 11.0466C19.9592 11.2195 20.0258 11.4583 20.0621 11.9029C20.0993 12.358 20.1 12.9451 20.1 13.8V16.2C20.1 17.0549 20.0993 17.642 20.0621 18.0971C20.0258 18.5417 19.9592 18.7805 19.8711 18.9534C19.6698 19.3485 19.3485 19.6698 18.9534 19.8711C18.7805 19.9592 18.5417 20.0258 18.0971 20.0621C17.642 20.0993 17.0549 20.1 16.2 20.1H13.8C12.9451 20.1 12.358 20.0993 11.9029 20.0621C11.4583 20.0258 11.2195 19.9592 11.0466 19.8711C10.6515 19.6698 10.3302 19.3485 10.1289 18.9534C10.0408 18.7805 9.97421 18.5417 9.93788 18.0971C9.9007 17.642 9.9 17.0549 9.9 16.2V13.8C9.9 12.9451 9.9007 12.358 9.93788 11.9029C9.97421 11.4583 10.0408 11.2195 10.1289 11.0466C10.3302 10.6515 10.6515 10.3302 11.0466 10.1289Z\"></path></svg>`);\nconst CopyIcon = (props) => {\n  const theme = useTheme();\n  const fill = () => props.fill || theme.colors.icon.primary;\n  return (() => {\n    const _el$ = _tmpl$$7.cloneNode(true), _el$2 = _el$.firstChild;\n    createRenderEffect((_p$) => {\n      const _v$ = props.class, _v$2 = fill();\n      _v$ !== _p$._v$ && setAttribute(_el$, \"class\", _p$._v$ = _v$);\n      _v$2 !== _p$._v$2 && setAttribute(_el$2, \"fill\", _p$._v$2 = _v$2);\n      return _p$;\n    }, {\n      _v$: void 0,\n      _v$2: void 0\n    });\n    return _el$;\n  })();\n};\nconst _tmpl$$6 = /* @__PURE__ */ template$1(`<svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M8.7624 3.10001C7.95435 3.1 7.29349 3.09999 6.75642 3.14387C6.2005 3.18929 5.69842 3.28617 5.22954 3.52508C4.4957 3.89899 3.89908 4.49561 3.52517 5.22944C3.28626 5.69833 3.18938 6.20041 3.14396 6.75632C3.10008 7.2934 3.10009 7.95424 3.1001 8.76229V15.2377C3.10009 16.0458 3.10008 16.7066 3.14396 17.2437C3.18938 17.7996 3.28626 18.3017 3.52517 18.7706C3.89908 19.5044 4.4957 20.101 5.22954 20.4749C5.69842 20.7138 6.2005 20.8107 6.75642 20.8561C7.29349 20.9 7.95434 20.9 8.76239 20.9H12.0001C12.4972 20.9 12.9001 20.4971 12.9001 20C12.9001 19.503 12.4972 19.1 12.0001 19.1H8.8001C7.94517 19.1 7.3581 19.0993 6.90299 19.0621C6.45839 19.0258 6.21956 18.9592 6.04672 18.8711C5.65158 18.6698 5.33032 18.3485 5.12898 17.9534C5.04092 17.7805 4.97431 17.5417 4.93798 17.0971C4.9008 16.642 4.9001 16.0549 4.9001 15.2V8.80001C4.9001 7.94508 4.9008 7.35801 4.93798 6.9029C4.97431 6.4583 5.04092 6.21947 5.12898 6.04663C5.33032 5.65149 5.65158 5.33023 6.04672 5.12889C6.21956 5.04082 6.45839 4.97422 6.90299 4.93789C7.3581 4.90071 7.94517 4.90001 8.8001 4.90001H12.0001C12.4972 4.90001 12.9001 4.49706 12.9001 4.00001C12.9001 3.50295 12.4972 3.10001 12.0001 3.10001H8.7624Z\"></path><path d=\"M17.6364 7.3636C17.2849 7.01212 16.7151 7.01212 16.3636 7.3636C16.0121 7.71507 16.0121 8.28492 16.3636 8.63639L18.8272 11.1H9.00001C8.50295 11.1 8.10001 11.5029 8.10001 12C8.10001 12.497 8.50295 12.9 9.00001 12.9H18.8272L16.3636 15.3636C16.0121 15.7151 16.0121 16.2849 16.3636 16.6364C16.7151 16.9879 17.2849 16.9879 17.6364 16.6364L21.6364 12.6364C21.9879 12.2849 21.9879 11.7151 21.6364 11.3636L17.6364 7.3636Z\"></path></svg>`);\nconst DisconnectIcon = (props) => {\n  const theme = useTheme();\n  const fill = () => props.fill || theme.colors.icon.primary;\n  return (() => {\n    const _el$ = _tmpl$$6.cloneNode(true), _el$2 = _el$.firstChild, _el$3 = _el$2.nextSibling;\n    createRenderEffect((_p$) => {\n      const _v$ = fill(), _v$2 = fill();\n      _v$ !== _p$._v$ && setAttribute(_el$2, \"fill\", _p$._v$ = _v$);\n      _v$2 !== _p$._v$2 && setAttribute(_el$3, \"fill\", _p$._v$2 = _v$2);\n      return _p$;\n    }, {\n      _v$: void 0,\n      _v$2: void 0\n    });\n    return _el$;\n  })();\n};\nconst hoverBorders$1 = {\n  m: \"8px\",\n  s: \"4px\",\n  none: \"0\"\n};\nconst dropdownBorders = {\n  m: \"16px\",\n  s: \"8px\",\n  none: \"0\"\n};\nconst AccountButtonDropdownStyled = styled.div`\n    width: 256px;\n    box-shadow: 0 4px 24px rgba(0, 0, 0, 0.16);\n    border-radius: ${(props) => dropdownBorders[props.theme.borderRadius]};\n\n    background-color: ${(props) => props.theme.colors.background.primary}\n           \n    color: ${(props) => props.theme.colors.text.primary}\n`;\nconst UlStyled$1 = styled.ul`\n    background-color: ${(props) => props.theme.colors.background.primary};\n    padding: 8px;\n`;\nconst MenuButtonStyled = styled.button`\n    display: flex;\n    align-items: center;\n    gap: 8px;\n    height: 40px;\n    padding-left: 8px;\n    width: 100%;\n\n    background-color: ${(props) => props.theme.colors.background.primary};\n    border: none;\n    border-radius: ${(props) => hoverBorders$1[props.theme.borderRadius]};\n    cursor: pointer;\n\n    transition: background-color, transform 0.1s ease-in-out;\n\n    &:hover {\n        background-color: ${(props) => props.theme.colors.background.secondary};\n    }\n\n    &:active {\n        transform: scale(0.96);\n    }\n`;\nconst _tmpl$$5 = /* @__PURE__ */ template$1(`<li></li>`);\nconst MenuItemText = (props) => createComponent(Text, {\n  get translationKey() {\n    return props.translationKey;\n  },\n  fontSize: \"15px\",\n  fontWeight: \"590\",\n  get children() {\n    return props.children;\n  }\n});\nconst AccountButtonDropdown = (props) => {\n  const tonConnectUi = useContext(TonConnectUiContext);\n  const [isCopiedShown, setIsCopiedShown] = createSignal(false);\n  const onCopy = () => __async(void 0, null, function* () {\n    const userFriendlyAddress = (0,_tonconnect_sdk__WEBPACK_IMPORTED_MODULE_0__.toUserFriendlyAddress)(tonConnectUi.account.address, tonConnectUi.account.chain === _tonconnect_sdk__WEBPACK_IMPORTED_MODULE_0__.CHAIN.TESTNET);\n    yield copyToClipboard(userFriendlyAddress);\n    setIsCopiedShown(true);\n    setTimeout(() => setIsCopiedShown(false), 1e3);\n  });\n  const onDisconnect = () => {\n    tonConnectUi.disconnect();\n    props.onClose();\n  };\n  return createComponent(AccountButtonDropdownStyled, {\n    ref(r$) {\n      const _ref$ = props.ref;\n      typeof _ref$ === \"function\" ? _ref$(r$) : props.ref = r$;\n    },\n    get [\"class\"]() {\n      return props.class;\n    },\n    \"data-tc-dropdown\": \"true\",\n    get children() {\n      return createComponent(UlStyled$1, {\n        get children() {\n          return [(() => {\n            const _el$ = _tmpl$$5.cloneNode(true);\n            insert(_el$, createComponent(MenuButtonStyled, {\n              onClick: () => onCopy(),\n              get children() {\n                return [createComponent(CopyIcon, {}), createComponent(Show, {\n                  get when() {\n                    return !isCopiedShown();\n                  },\n                  get children() {\n                    return createComponent(MenuItemText, {\n                      translationKey: \"button.dropdown.copy\",\n                      children: \"Copy address\"\n                    });\n                  }\n                }), createComponent(Show, {\n                  get when() {\n                    return isCopiedShown();\n                  },\n                  get children() {\n                    return createComponent(MenuItemText, {\n                      translationKey: \"button.dropdown.copied\",\n                      children: \"Address copied!\"\n                    });\n                  }\n                })];\n              }\n            }));\n            return _el$;\n          })(), (() => {\n            const _el$2 = _tmpl$$5.cloneNode(true);\n            insert(_el$2, createComponent(MenuButtonStyled, {\n              onClick: () => onDisconnect(),\n              get children() {\n                return [createComponent(DisconnectIcon, {}), createComponent(MenuItemText, {\n                  translationKey: \"button.dropdown.disconnect\",\n                  children: \"Disconnect\"\n                })];\n              }\n            }));\n            return _el$2;\n          })()];\n        }\n      });\n    }\n  });\n};\nconst borders$2 = {\n  m: \"16px\",\n  s: \"8px\",\n  none: \"0\"\n};\nconst NotificationStyled = styled.div`\n    width: 256px;\n    padding: 12px 16px;\n    display: flex;\n    gap: 9px;\n\n    background-color: ${(props) => props.theme.colors.background.primary};\n    box-shadow: 0 4px 24px rgba(0, 0, 0, 0.16);\n    border-radius: ${(props) => borders$2[props.theme.borderRadius]};\n`;\nconst NotificationContentStyled = styled.div`\n    width: 192px;\n\n    > h3 {\n        font-size: 15px;\n    }\n`;\nconst TextStyled$2 = styled(Text)`\n    margin-top: 4px;\n    color: ${(props) => props.theme.colors.text.secondary};\n`;\nconst Notification = (props) => {\n  const dataAttrs = useDataAttributes(props);\n  return createComponent(NotificationStyled, mergeProps({\n    get [\"class\"]() {\n      return props.class;\n    },\n    \"data-tc-notification\": \"true\"\n  }, dataAttrs, {\n    get children() {\n      return [createComponent(NotificationContentStyled, {\n        get children() {\n          return [createComponent(H3, {\n            get translationKey() {\n              return props.header.translationKey;\n            },\n            get translationValues() {\n              return props.header.translationValues;\n            },\n            get children() {\n              return props.children;\n            }\n          }), createComponent(Show, {\n            get when() {\n              return props.text;\n            },\n            get children() {\n              return createComponent(TextStyled$2, {\n                get translationKey() {\n                  return props.text.translationKey;\n                },\n                get translationValues() {\n                  return props.text.translationValues;\n                }\n              });\n            }\n          })];\n        }\n      }), createMemo(() => props.icon)];\n    }\n  }));\n};\nconst LoaderIconStyled$2 = styled(LoaderIcon)`\n    align-self: center;\n`;\nconst ConfirmOperationNotification = (props) => {\n  const tonConnectUI = useContext(TonConnectUiContext);\n  const [t2] = useI18n();\n  const name = () => tonConnectUI.wallet && \"name\" in tonConnectUI.wallet ? tonConnectUI.wallet.name : t2(\"common.yourWallet\", {}, \"Your wallet\");\n  return createComponent(Notification, {\n    get header() {\n      return {\n        translationKey: \"notifications.confirm.header\",\n        translationValues: {\n          name: name()\n        }\n      };\n    },\n    get [\"class\"]() {\n      return props.class;\n    },\n    get icon() {\n      return createComponent(LoaderIconStyled$2, {});\n    },\n    \"data-tc-notification-confirm\": \"true\",\n    children: \"Confirm operation in your wallet\"\n  });\n};\nconst ErrorIconStyled$2 = styled(ErrorIcon)`\n    margin-top: 2px;\n`;\nconst ErrorTransactionNotification = (props) => {\n  return createComponent(Notification, {\n    header: {\n      translationKey: \"notifications.transactionCanceled.header\"\n    },\n    text: {\n      translationKey: \"notifications.transactionCanceled.text\"\n    },\n    get icon() {\n      return createComponent(ErrorIconStyled$2, {\n        size: \"xs\"\n      });\n    },\n    get [\"class\"]() {\n      return props.class;\n    },\n    \"data-tc-notification-tx-cancelled\": \"true\",\n    children: \"Transaction cancelled\"\n  });\n};\nconst SuccessIconStyled = styled(SuccessIcon)`\n    margin-top: 2px;\n`;\nconst SuccessTransactionNotification = (props) => {\n  return createComponent(Notification, {\n    header: {\n      translationKey: \"notifications.transactionSent.header\"\n    },\n    text: {\n      translationKey: \"notifications.transactionSent.text\"\n    },\n    get icon() {\n      return createComponent(SuccessIconStyled, {});\n    },\n    get [\"class\"]() {\n      return props.class;\n    },\n    \"data-tc-notification-tx-sent\": \"true\",\n    children: \"Transaction sent\"\n  });\n};\nconst NotificationClass = u`\n    transform: translateY(-8px);\n    margin-bottom: 12px;\n`;\nconst defaultConfig = {\n  timeout: 4500\n};\nconst [latestAction, setLatestAction] = createSignal(null);\nfunction useOpenedNotifications(config) {\n  const { timeout } = __spreadValues(__spreadValues({}, defaultConfig), config);\n  const [openedNotifications, setOpenedNotifications] = createSignal([]);\n  const [timeoutIds, setTimeoutIds] = createSignal([]);\n  createEffect(\n    on(action, (action2) => {\n      var _a2;\n      if (!action2 || !action2.showNotification) {\n        return;\n      }\n      if (latestAction() === action2) {\n        return;\n      }\n      if (((_a2 = latestAction()) == null ? void 0 : _a2.name) === \"confirm-transaction\" && action2.name === \"confirm-transaction\") {\n        return;\n      }\n      setLatestAction(action2);\n      setOpenedNotifications(\n        (openedNotifications2) => openedNotifications2.filter((n2) => n2.action !== \"confirm-transaction\")\n      );\n      const notification = { action: action2.name };\n      setOpenedNotifications((openedNotifications2) => [...openedNotifications2, notification]);\n      const timeoutId = setTimeout(() => {\n        setOpenedNotifications(\n          (openedNotifications2) => openedNotifications2.filter((n2) => n2 !== notification)\n        );\n        setTimeoutIds((timeoutIds2) => timeoutIds2.filter((id) => id !== timeoutId));\n      }, timeout);\n      setTimeoutIds((timeoutIds2) => [...timeoutIds2, timeoutId]);\n    })\n  );\n  onCleanup(() => {\n    timeoutIds().forEach((id) => clearTimeout(id));\n  });\n  return openedNotifications;\n}\nconst _tmpl$$4 = /* @__PURE__ */ template$1(`<div data-tc-list-notifications=\"true\"></div>`);\nconst Notifications = (props) => {\n  const openedNotifications = useOpenedNotifications();\n  return (() => {\n    const _el$ = _tmpl$$4.cloneNode(true);\n    insert(_el$, createComponent(TransitionGroup, {\n      onBeforeEnter: (el) => {\n        animate(el, [{\n          opacity: 0,\n          transform: \"translateY(0)\"\n        }, {\n          opacity: 1,\n          transform: \"translateY(-8px)\"\n        }], {\n          duration: 200\n        });\n      },\n      onExit: (el, done) => {\n        const a2 = animate(el, [{\n          opacity: 1,\n          transform: \"translateY(-8px)\"\n        }, {\n          opacity: 0,\n          transform: \"translateY(-30px)\"\n        }], {\n          duration: 200\n        });\n        a2.finished.then(done);\n      },\n      get children() {\n        return createComponent(For, {\n          get each() {\n            return openedNotifications();\n          },\n          children: (openedNotification) => createComponent(Switch, {\n            get children() {\n              return [createComponent(Match, {\n                get when() {\n                  return openedNotification.action === \"transaction-sent\";\n                },\n                get children() {\n                  return createComponent(SuccessTransactionNotification, {\n                    \"class\": NotificationClass\n                  });\n                }\n              }), createComponent(Match, {\n                get when() {\n                  return openedNotification.action === \"transaction-canceled\";\n                },\n                get children() {\n                  return createComponent(ErrorTransactionNotification, {\n                    \"class\": NotificationClass\n                  });\n                }\n              }), createComponent(Match, {\n                get when() {\n                  return openedNotification.action === \"confirm-transaction\";\n                },\n                get children() {\n                  return createComponent(ConfirmOperationNotification, {\n                    \"class\": NotificationClass\n                  });\n                }\n              })];\n            }\n          })\n        });\n      }\n    }));\n    createRenderEffect(() => className(_el$, props.class));\n    return _el$;\n  })();\n};\nconst AccountButtonStyled = styled(Button)`\n    background-color: ${(props) => props.theme.colors.connectButton.background};\n    color: ${(props) => props.theme.colors.connectButton.foreground};\n    box-shadow: ${(props) => `0 4px 24px ${rgba(props.theme.colors.constant.black, 0.16)}`};\n    padding: 8px 16px 8px 12px;\n\n    display: flex;\n    align-items: center;\n    gap: 4px;\n    height: 40px;\n`;\nconst DropdownButtonStyled = styled(AccountButtonStyled)`\n    padding: 12px 16px;\n    min-width: 148px;\n    justify-content: center;\n    background-color: ${(props) => props.theme.colors.background.primary};\n`;\nconst LoaderButtonStyled$1 = styled(Button)`\n    min-width: 148px;\n    height: 40px;\n\n    background-color: ${(props) => props.theme.colors.background.primary};\n    color: ${(props) => props.theme.colors.connectButton.foreground};\n    box-shadow: ${(props) => `0 4px 24px ${rgba(props.theme.colors.constant.black, 0.16)}`};\n\n    display: flex;\n    align-items: center;\n    justify-content: center;\n`;\nconst LoaderIconStyled$1 = styled(LoaderIcon)`\n    height: 18px;\n    width: 18px;\n`;\nconst DropdownContainerStyled = styled.div`\n    width: fit-content;\n    display: flex;\n    flex-direction: column;\n    align-items: flex-end;\n`;\nconst DropdownStyled = styled(AccountButtonDropdown)`\n    box-sizing: border-box;\n    overflow: hidden;\n    margin-top: 12px;\n`;\nconst NotificationsStyled = styled(Notifications)`\n    > div:first-child {\n        margin-top: 20px;\n    }\n`;\nfunction getSide(placement) {\n  return placement.split(\"-\")[0];\n}\nfunction getAlignment(placement) {\n  return placement.split(\"-\")[1];\n}\nfunction getMainAxisFromPlacement(placement) {\n  return [\"top\", \"bottom\"].includes(getSide(placement)) ? \"x\" : \"y\";\n}\nfunction getLengthFromAxis(axis) {\n  return axis === \"y\" ? \"height\" : \"width\";\n}\nfunction computeCoordsFromPlacement(_ref, placement, rtl) {\n  let {\n    reference,\n    floating\n  } = _ref;\n  const commonX = reference.x + reference.width / 2 - floating.width / 2;\n  const commonY = reference.y + reference.height / 2 - floating.height / 2;\n  const mainAxis = getMainAxisFromPlacement(placement);\n  const length = getLengthFromAxis(mainAxis);\n  const commonAlign = reference[length] / 2 - floating[length] / 2;\n  const side = getSide(placement);\n  const isVertical = mainAxis === \"x\";\n  let coords;\n  switch (side) {\n    case \"top\":\n      coords = {\n        x: commonX,\n        y: reference.y - floating.height\n      };\n      break;\n    case \"bottom\":\n      coords = {\n        x: commonX,\n        y: reference.y + reference.height\n      };\n      break;\n    case \"right\":\n      coords = {\n        x: reference.x + reference.width,\n        y: commonY\n      };\n      break;\n    case \"left\":\n      coords = {\n        x: reference.x - floating.width,\n        y: commonY\n      };\n      break;\n    default:\n      coords = {\n        x: reference.x,\n        y: reference.y\n      };\n  }\n  switch (getAlignment(placement)) {\n    case \"start\":\n      coords[mainAxis] -= commonAlign * (rtl && isVertical ? -1 : 1);\n      break;\n    case \"end\":\n      coords[mainAxis] += commonAlign * (rtl && isVertical ? -1 : 1);\n      break;\n  }\n  return coords;\n}\nconst computePosition$1 = (reference, floating, config) => __async(void 0, null, function* () {\n  const {\n    placement = \"bottom\",\n    strategy = \"absolute\",\n    middleware = [],\n    platform: platform2\n  } = config;\n  const validMiddleware = middleware.filter(Boolean);\n  const rtl = yield platform2.isRTL == null ? void 0 : platform2.isRTL(floating);\n  if ({}.NODE_ENV !== \"production\") {\n    if (platform2 == null) {\n      console.error([\"Floating UI: `platform` property was not passed to config. If you\", \"want to use Floating UI on the web, install @floating-ui/dom\", \"instead of the /core package. Otherwise, you can create your own\", \"`platform`: https://floating-ui.com/docs/platform\"].join(\" \"));\n    }\n    if (validMiddleware.filter((_ref) => {\n      let {\n        name\n      } = _ref;\n      return name === \"autoPlacement\" || name === \"flip\";\n    }).length > 1) {\n      throw new Error([\"Floating UI: duplicate `flip` and/or `autoPlacement` middleware\", \"detected. This will lead to an infinite loop. Ensure only one of\", \"either has been passed to the `middleware` array.\"].join(\" \"));\n    }\n    if (!reference || !floating) {\n      console.error([\"Floating UI: The reference and/or floating element was not defined\", \"when `computePosition()` was called. Ensure that both elements have\", \"been created and can be measured.\"].join(\" \"));\n    }\n  }\n  let rects = yield platform2.getElementRects({\n    reference,\n    floating,\n    strategy\n  });\n  let {\n    x,\n    y\n  } = computeCoordsFromPlacement(rects, placement, rtl);\n  let statefulPlacement = placement;\n  let middlewareData = {};\n  let resetCount = 0;\n  for (let i2 = 0; i2 < validMiddleware.length; i2++) {\n    const {\n      name,\n      fn\n    } = validMiddleware[i2];\n    const {\n      x: nextX,\n      y: nextY,\n      data,\n      reset\n    } = yield fn({\n      x,\n      y,\n      initialPlacement: placement,\n      placement: statefulPlacement,\n      strategy,\n      middlewareData,\n      rects,\n      platform: platform2,\n      elements: {\n        reference,\n        floating\n      }\n    });\n    x = nextX != null ? nextX : x;\n    y = nextY != null ? nextY : y;\n    middlewareData = __spreadProps(__spreadValues({}, middlewareData), {\n      [name]: __spreadValues(__spreadValues({}, middlewareData[name]), data)\n    });\n    if ({}.NODE_ENV !== \"production\") {\n      if (resetCount > 50) {\n        console.warn([\"Floating UI: The middleware lifecycle appears to be running in an\", \"infinite loop. This is usually caused by a `reset` continually\", \"being returned without a break condition.\"].join(\" \"));\n      }\n    }\n    if (reset && resetCount <= 50) {\n      resetCount++;\n      if (typeof reset === \"object\") {\n        if (reset.placement) {\n          statefulPlacement = reset.placement;\n        }\n        if (reset.rects) {\n          rects = reset.rects === true ? yield platform2.getElementRects({\n            reference,\n            floating,\n            strategy\n          }) : reset.rects;\n        }\n        ({\n          x,\n          y\n        } = computeCoordsFromPlacement(rects, statefulPlacement, rtl));\n      }\n      i2 = -1;\n      continue;\n    }\n  }\n  return {\n    x,\n    y,\n    placement: statefulPlacement,\n    strategy,\n    middlewareData\n  };\n});\nfunction rectToClientRect(rect) {\n  return __spreadProps(__spreadValues({}, rect), {\n    top: rect.y,\n    left: rect.x,\n    right: rect.x + rect.width,\n    bottom: rect.y + rect.height\n  });\n}\nfunction getWindow(node) {\n  var _node$ownerDocument;\n  return ((_node$ownerDocument = node.ownerDocument) == null ? void 0 : _node$ownerDocument.defaultView) || window;\n}\nfunction getComputedStyle$1(element) {\n  return getWindow(element).getComputedStyle(element);\n}\nfunction getNodeName(node) {\n  return isNode(node) ? (node.nodeName || \"\").toLowerCase() : \"\";\n}\nlet uaString;\nfunction getUAString() {\n  if (uaString) {\n    return uaString;\n  }\n  const uaData = navigator.userAgentData;\n  if (uaData && Array.isArray(uaData.brands)) {\n    uaString = uaData.brands.map((item) => item.brand + \"/\" + item.version).join(\" \");\n    return uaString;\n  }\n  return navigator.userAgent;\n}\nfunction isHTMLElement(value) {\n  return value instanceof getWindow(value).HTMLElement;\n}\nfunction isElement(value) {\n  return value instanceof getWindow(value).Element;\n}\nfunction isNode(value) {\n  return value instanceof getWindow(value).Node;\n}\nfunction isShadowRoot(node) {\n  if (typeof ShadowRoot === \"undefined\") {\n    return false;\n  }\n  const OwnElement = getWindow(node).ShadowRoot;\n  return node instanceof OwnElement || node instanceof ShadowRoot;\n}\nfunction isOverflowElement(element) {\n  const {\n    overflow,\n    overflowX,\n    overflowY,\n    display\n  } = getComputedStyle$1(element);\n  return /auto|scroll|overlay|hidden/.test(overflow + overflowY + overflowX) && ![\"inline\", \"contents\"].includes(display);\n}\nfunction isTableElement(element) {\n  return [\"table\", \"td\", \"th\"].includes(getNodeName(element));\n}\nfunction isContainingBlock(element) {\n  const isFirefox = /firefox/i.test(getUAString());\n  const css = getComputedStyle$1(element);\n  const backdropFilter = css.backdropFilter || css.WebkitBackdropFilter;\n  return css.transform !== \"none\" || css.perspective !== \"none\" || (backdropFilter ? backdropFilter !== \"none\" : false) || isFirefox && css.willChange === \"filter\" || isFirefox && (css.filter ? css.filter !== \"none\" : false) || [\"transform\", \"perspective\"].some((value) => css.willChange.includes(value)) || [\"paint\", \"layout\", \"strict\", \"content\"].some(\n    (value) => {\n      const contain = css.contain;\n      return contain != null ? contain.includes(value) : false;\n    }\n  );\n}\nfunction isLayoutViewport() {\n  return !/^((?!chrome|android).)*safari/i.test(getUAString());\n}\nfunction isLastTraversableNode(node) {\n  return [\"html\", \"body\", \"#document\"].includes(getNodeName(node));\n}\nconst min = Math.min;\nconst max = Math.max;\nconst round = Math.round;\nconst FALLBACK_SCALE = {\n  x: 1,\n  y: 1\n};\nfunction getScale(element) {\n  const domElement = !isElement(element) && element.contextElement ? element.contextElement : isElement(element) ? element : null;\n  if (!domElement) {\n    return FALLBACK_SCALE;\n  }\n  const rect = domElement.getBoundingClientRect();\n  const css = getComputedStyle$1(domElement);\n  if (css.boxSizing !== \"border-box\") {\n    if (!isHTMLElement(domElement)) {\n      return FALLBACK_SCALE;\n    }\n    return {\n      x: domElement.offsetWidth > 0 ? round(rect.width) / domElement.offsetWidth || 1 : 1,\n      y: domElement.offsetHeight > 0 ? round(rect.height) / domElement.offsetHeight || 1 : 1\n    };\n  }\n  let x = rect.width / parseFloat(css.width);\n  let y = rect.height / parseFloat(css.height);\n  if (!x || !Number.isFinite(x)) {\n    x = 1;\n  }\n  if (!y || !Number.isFinite(y)) {\n    y = 1;\n  }\n  return {\n    x,\n    y\n  };\n}\nfunction getBoundingClientRect(element, includeScale, isFixedStrategy, offsetParent) {\n  var _win$visualViewport$o, _win$visualViewport, _win$visualViewport$o2, _win$visualViewport2;\n  if (includeScale === void 0) {\n    includeScale = false;\n  }\n  if (isFixedStrategy === void 0) {\n    isFixedStrategy = false;\n  }\n  const clientRect = element.getBoundingClientRect();\n  let scale = FALLBACK_SCALE;\n  if (includeScale) {\n    if (offsetParent) {\n      if (isElement(offsetParent)) {\n        scale = getScale(offsetParent);\n      }\n    } else {\n      scale = getScale(element);\n    }\n  }\n  const win = isElement(element) ? getWindow(element) : window;\n  const addVisualOffsets = !isLayoutViewport() && isFixedStrategy;\n  const x = (clientRect.left + (addVisualOffsets ? (_win$visualViewport$o = (_win$visualViewport = win.visualViewport) == null ? void 0 : _win$visualViewport.offsetLeft) != null ? _win$visualViewport$o : 0 : 0)) / scale.x;\n  const y = (clientRect.top + (addVisualOffsets ? (_win$visualViewport$o2 = (_win$visualViewport2 = win.visualViewport) == null ? void 0 : _win$visualViewport2.offsetTop) != null ? _win$visualViewport$o2 : 0 : 0)) / scale.y;\n  const width = clientRect.width / scale.x;\n  const height = clientRect.height / scale.y;\n  return {\n    width,\n    height,\n    top: y,\n    right: x + width,\n    bottom: y + height,\n    left: x,\n    x,\n    y\n  };\n}\nfunction getDocumentElement(node) {\n  return ((isNode(node) ? node.ownerDocument : node.document) || window.document).documentElement;\n}\nfunction getNodeScroll(element) {\n  if (isElement(element)) {\n    return {\n      scrollLeft: element.scrollLeft,\n      scrollTop: element.scrollTop\n    };\n  }\n  return {\n    scrollLeft: element.pageXOffset,\n    scrollTop: element.pageYOffset\n  };\n}\nfunction getWindowScrollBarX(element) {\n  return getBoundingClientRect(getDocumentElement(element)).left + getNodeScroll(element).scrollLeft;\n}\nfunction getRectRelativeToOffsetParent(element, offsetParent, strategy) {\n  const isOffsetParentAnElement = isHTMLElement(offsetParent);\n  const documentElement = getDocumentElement(offsetParent);\n  const rect = getBoundingClientRect(element, true, strategy === \"fixed\", offsetParent);\n  let scroll = {\n    scrollLeft: 0,\n    scrollTop: 0\n  };\n  const offsets = {\n    x: 0,\n    y: 0\n  };\n  if (isOffsetParentAnElement || !isOffsetParentAnElement && strategy !== \"fixed\") {\n    if (getNodeName(offsetParent) !== \"body\" || isOverflowElement(documentElement)) {\n      scroll = getNodeScroll(offsetParent);\n    }\n    if (isHTMLElement(offsetParent)) {\n      const offsetRect = getBoundingClientRect(offsetParent, true);\n      offsets.x = offsetRect.x + offsetParent.clientLeft;\n      offsets.y = offsetRect.y + offsetParent.clientTop;\n    } else if (documentElement) {\n      offsets.x = getWindowScrollBarX(documentElement);\n    }\n  }\n  return {\n    x: rect.left + scroll.scrollLeft - offsets.x,\n    y: rect.top + scroll.scrollTop - offsets.y,\n    width: rect.width,\n    height: rect.height\n  };\n}\nfunction getParentNode(node) {\n  if (getNodeName(node) === \"html\") {\n    return node;\n  }\n  const result = node.assignedSlot || node.parentNode || (isShadowRoot(node) ? node.host : null) || getDocumentElement(node);\n  return isShadowRoot(result) ? result.host : result;\n}\nfunction getTrueOffsetParent(element) {\n  if (!isHTMLElement(element) || getComputedStyle$1(element).position === \"fixed\") {\n    return null;\n  }\n  return element.offsetParent;\n}\nfunction getContainingBlock(element) {\n  let currentNode = getParentNode(element);\n  while (isHTMLElement(currentNode) && !isLastTraversableNode(currentNode)) {\n    if (isContainingBlock(currentNode)) {\n      return currentNode;\n    } else {\n      currentNode = getParentNode(currentNode);\n    }\n  }\n  return null;\n}\nfunction getOffsetParent(element) {\n  const window2 = getWindow(element);\n  let offsetParent = getTrueOffsetParent(element);\n  while (offsetParent && isTableElement(offsetParent) && getComputedStyle$1(offsetParent).position === \"static\") {\n    offsetParent = getTrueOffsetParent(offsetParent);\n  }\n  if (offsetParent && (getNodeName(offsetParent) === \"html\" || getNodeName(offsetParent) === \"body\" && getComputedStyle$1(offsetParent).position === \"static\" && !isContainingBlock(offsetParent))) {\n    return window2;\n  }\n  return offsetParent || getContainingBlock(element) || window2;\n}\nfunction getDimensions(element) {\n  if (isHTMLElement(element)) {\n    return {\n      width: element.offsetWidth,\n      height: element.offsetHeight\n    };\n  }\n  const rect = getBoundingClientRect(element);\n  return {\n    width: rect.width,\n    height: rect.height\n  };\n}\nfunction convertOffsetParentRelativeRectToViewportRelativeRect(_ref) {\n  let {\n    rect,\n    offsetParent,\n    strategy\n  } = _ref;\n  const isOffsetParentAnElement = isHTMLElement(offsetParent);\n  const documentElement = getDocumentElement(offsetParent);\n  if (offsetParent === documentElement) {\n    return rect;\n  }\n  let scroll = {\n    scrollLeft: 0,\n    scrollTop: 0\n  };\n  let scale = {\n    x: 1,\n    y: 1\n  };\n  const offsets = {\n    x: 0,\n    y: 0\n  };\n  if (isOffsetParentAnElement || !isOffsetParentAnElement && strategy !== \"fixed\") {\n    if (getNodeName(offsetParent) !== \"body\" || isOverflowElement(documentElement)) {\n      scroll = getNodeScroll(offsetParent);\n    }\n    if (isHTMLElement(offsetParent)) {\n      const offsetRect = getBoundingClientRect(offsetParent);\n      scale = getScale(offsetParent);\n      offsets.x = offsetRect.x + offsetParent.clientLeft;\n      offsets.y = offsetRect.y + offsetParent.clientTop;\n    }\n  }\n  return {\n    width: rect.width * scale.x,\n    height: rect.height * scale.y,\n    x: rect.x * scale.x - scroll.scrollLeft * scale.x + offsets.x,\n    y: rect.y * scale.y - scroll.scrollTop * scale.y + offsets.y\n  };\n}\nfunction getViewportRect(element, strategy) {\n  const win = getWindow(element);\n  const html = getDocumentElement(element);\n  const visualViewport = win.visualViewport;\n  let width = html.clientWidth;\n  let height = html.clientHeight;\n  let x = 0;\n  let y = 0;\n  if (visualViewport) {\n    width = visualViewport.width;\n    height = visualViewport.height;\n    const layoutViewport = isLayoutViewport();\n    if (layoutViewport || !layoutViewport && strategy === \"fixed\") {\n      x = visualViewport.offsetLeft;\n      y = visualViewport.offsetTop;\n    }\n  }\n  return {\n    width,\n    height,\n    x,\n    y\n  };\n}\nfunction getDocumentRect(element) {\n  var _element$ownerDocumen;\n  const html = getDocumentElement(element);\n  const scroll = getNodeScroll(element);\n  const body = (_element$ownerDocumen = element.ownerDocument) == null ? void 0 : _element$ownerDocumen.body;\n  const width = max(html.scrollWidth, html.clientWidth, body ? body.scrollWidth : 0, body ? body.clientWidth : 0);\n  const height = max(html.scrollHeight, html.clientHeight, body ? body.scrollHeight : 0, body ? body.clientHeight : 0);\n  let x = -scroll.scrollLeft + getWindowScrollBarX(element);\n  const y = -scroll.scrollTop;\n  if (getComputedStyle$1(body || html).direction === \"rtl\") {\n    x += max(html.clientWidth, body ? body.clientWidth : 0) - width;\n  }\n  return {\n    width,\n    height,\n    x,\n    y\n  };\n}\nfunction getNearestOverflowAncestor(node) {\n  const parentNode = getParentNode(node);\n  if (isLastTraversableNode(parentNode)) {\n    return node.ownerDocument.body;\n  }\n  if (isHTMLElement(parentNode) && isOverflowElement(parentNode)) {\n    return parentNode;\n  }\n  return getNearestOverflowAncestor(parentNode);\n}\nfunction getOverflowAncestors(node, list) {\n  var _node$ownerDocument;\n  if (list === void 0) {\n    list = [];\n  }\n  const scrollableAncestor = getNearestOverflowAncestor(node);\n  const isBody = scrollableAncestor === ((_node$ownerDocument = node.ownerDocument) == null ? void 0 : _node$ownerDocument.body);\n  const win = getWindow(scrollableAncestor);\n  if (isBody) {\n    return list.concat(win, win.visualViewport || [], isOverflowElement(scrollableAncestor) ? scrollableAncestor : []);\n  }\n  return list.concat(scrollableAncestor, getOverflowAncestors(scrollableAncestor));\n}\nfunction getInnerBoundingClientRect(element, strategy) {\n  const clientRect = getBoundingClientRect(element, true, strategy === \"fixed\");\n  const top = clientRect.top + element.clientTop;\n  const left = clientRect.left + element.clientLeft;\n  const scale = isHTMLElement(element) ? getScale(element) : {\n    x: 1,\n    y: 1\n  };\n  const width = element.clientWidth * scale.x;\n  const height = element.clientHeight * scale.y;\n  const x = left * scale.x;\n  const y = top * scale.y;\n  return {\n    top: y,\n    left: x,\n    right: x + width,\n    bottom: y + height,\n    x,\n    y,\n    width,\n    height\n  };\n}\nfunction getClientRectFromClippingAncestor(element, clippingAncestor, strategy) {\n  if (clippingAncestor === \"viewport\") {\n    return rectToClientRect(getViewportRect(element, strategy));\n  }\n  if (isElement(clippingAncestor)) {\n    return getInnerBoundingClientRect(clippingAncestor, strategy);\n  }\n  return rectToClientRect(getDocumentRect(getDocumentElement(element)));\n}\nfunction getClippingElementAncestors(element, cache) {\n  const cachedResult = cache.get(element);\n  if (cachedResult) {\n    return cachedResult;\n  }\n  let result = getOverflowAncestors(element).filter((el) => isElement(el) && getNodeName(el) !== \"body\");\n  let currentContainingBlockComputedStyle = null;\n  const elementIsFixed = getComputedStyle$1(element).position === \"fixed\";\n  let currentNode = elementIsFixed ? getParentNode(element) : element;\n  while (isElement(currentNode) && !isLastTraversableNode(currentNode)) {\n    const computedStyle = getComputedStyle$1(currentNode);\n    const containingBlock = isContainingBlock(currentNode);\n    const shouldDropCurrentNode = elementIsFixed ? !containingBlock && !currentContainingBlockComputedStyle : !containingBlock && computedStyle.position === \"static\" && !!currentContainingBlockComputedStyle && [\"absolute\", \"fixed\"].includes(currentContainingBlockComputedStyle.position);\n    if (shouldDropCurrentNode) {\n      result = result.filter((ancestor) => ancestor !== currentNode);\n    } else {\n      currentContainingBlockComputedStyle = computedStyle;\n    }\n    currentNode = getParentNode(currentNode);\n  }\n  cache.set(element, result);\n  return result;\n}\nfunction getClippingRect(_ref) {\n  let {\n    element,\n    boundary,\n    rootBoundary,\n    strategy\n  } = _ref;\n  const elementClippingAncestors = boundary === \"clippingAncestors\" ? getClippingElementAncestors(element, this._c) : [].concat(boundary);\n  const clippingAncestors = [...elementClippingAncestors, rootBoundary];\n  const firstClippingAncestor = clippingAncestors[0];\n  const clippingRect = clippingAncestors.reduce((accRect, clippingAncestor) => {\n    const rect = getClientRectFromClippingAncestor(element, clippingAncestor, strategy);\n    accRect.top = max(rect.top, accRect.top);\n    accRect.right = min(rect.right, accRect.right);\n    accRect.bottom = min(rect.bottom, accRect.bottom);\n    accRect.left = max(rect.left, accRect.left);\n    return accRect;\n  }, getClientRectFromClippingAncestor(element, firstClippingAncestor, strategy));\n  return {\n    width: clippingRect.right - clippingRect.left,\n    height: clippingRect.bottom - clippingRect.top,\n    x: clippingRect.left,\n    y: clippingRect.top\n  };\n}\nconst platform = {\n  getClippingRect,\n  convertOffsetParentRelativeRectToViewportRelativeRect,\n  isElement,\n  getDimensions,\n  getOffsetParent,\n  getDocumentElement,\n  getScale,\n  getElementRects(_ref) {\n    return __async(this, null, function* () {\n      let {\n        reference,\n        floating,\n        strategy\n      } = _ref;\n      const getOffsetParentFn = this.getOffsetParent || getOffsetParent;\n      const getDimensionsFn = this.getDimensions;\n      return {\n        reference: getRectRelativeToOffsetParent(reference, yield getOffsetParentFn(floating), strategy),\n        floating: __spreadValues({\n          x: 0,\n          y: 0\n        }, yield getDimensionsFn(floating))\n      };\n    });\n  },\n  getClientRects: (element) => Array.from(element.getClientRects()),\n  isRTL: (element) => getComputedStyle$1(element).direction === \"rtl\"\n};\nfunction autoUpdate(reference, floating, update, options) {\n  if (options === void 0) {\n    options = {};\n  }\n  const {\n    ancestorScroll: _ancestorScroll = true,\n    ancestorResize = true,\n    elementResize = true,\n    animationFrame = false\n  } = options;\n  const ancestorScroll = _ancestorScroll && !animationFrame;\n  const ancestors = ancestorScroll || ancestorResize ? [...isElement(reference) ? getOverflowAncestors(reference) : reference.contextElement ? getOverflowAncestors(reference.contextElement) : [], ...getOverflowAncestors(floating)] : [];\n  ancestors.forEach((ancestor) => {\n    ancestorScroll && ancestor.addEventListener(\"scroll\", update, {\n      passive: true\n    });\n    ancestorResize && ancestor.addEventListener(\"resize\", update);\n  });\n  let observer = null;\n  if (elementResize) {\n    let initialUpdate = true;\n    observer = new ResizeObserver(() => {\n      if (!initialUpdate) {\n        update();\n      }\n      initialUpdate = false;\n    });\n    isElement(reference) && !animationFrame && observer.observe(reference);\n    if (!isElement(reference) && reference.contextElement && !animationFrame) {\n      observer.observe(reference.contextElement);\n    }\n    observer.observe(floating);\n  }\n  let frameId;\n  let prevRefRect = animationFrame ? getBoundingClientRect(reference) : null;\n  if (animationFrame) {\n    frameLoop();\n  }\n  function frameLoop() {\n    const nextRefRect = getBoundingClientRect(reference);\n    if (prevRefRect && (nextRefRect.x !== prevRefRect.x || nextRefRect.y !== prevRefRect.y || nextRefRect.width !== prevRefRect.width || nextRefRect.height !== prevRefRect.height)) {\n      update();\n    }\n    prevRefRect = nextRefRect;\n    frameId = requestAnimationFrame(frameLoop);\n  }\n  update();\n  return () => {\n    var _observer;\n    ancestors.forEach((ancestor) => {\n      ancestorScroll && ancestor.removeEventListener(\"scroll\", update);\n      ancestorResize && ancestor.removeEventListener(\"resize\", update);\n    });\n    (_observer = observer) == null ? void 0 : _observer.disconnect();\n    observer = null;\n    if (animationFrame) {\n      cancelAnimationFrame(frameId);\n    }\n  };\n}\nconst computePosition = (reference, floating, options) => {\n  const cache = /* @__PURE__ */ new Map();\n  const mergedOptions = __spreadValues({\n    platform\n  }, options);\n  const platformWithCache = __spreadProps(__spreadValues({}, mergedOptions.platform), {\n    _c: cache\n  });\n  return computePosition$1(reference, floating, __spreadProps(__spreadValues({}, mergedOptions), {\n    platform: platformWithCache\n  }));\n};\nfunction P(l2, u2, e2) {\n  let c2 = () => {\n    var t2;\n    return (t2 = e2 == null ? void 0 : e2.placement) != null ? t2 : \"bottom\";\n  }, d = () => {\n    var t2;\n    return (t2 = e2 == null ? void 0 : e2.strategy) != null ? t2 : \"absolute\";\n  }, [n2, o2] = createSignal({ x: null, y: null, placement: c2(), strategy: d(), middlewareData: {} }), [x, F] = createSignal();\n  createEffect(() => {\n    let t2 = x();\n    if (t2)\n      throw t2.value;\n  });\n  let s2 = createMemo(() => (l2(), u2(), {}));\n  function i2() {\n    let t2 = l2(), r = u2();\n    if (t2 && r) {\n      let a2 = s2();\n      computePosition(t2, r, { middleware: e2 == null ? void 0 : e2.middleware, placement: c2(), strategy: d() }).then((m) => {\n        a2 === s2() && o2(m);\n      }, (m) => {\n        F(m);\n      });\n    }\n  }\n  return createEffect(() => {\n    let t2 = l2(), r = u2();\n    if (e2 == null || e2.middleware, c2(), d(), t2 && r)\n      if (e2 != null && e2.whileElementsMounted) {\n        let a2 = e2.whileElementsMounted(t2, r, i2);\n        a2 && onCleanup(a2);\n      } else\n        i2();\n  }), { get x() {\n    return n2().x;\n  }, get y() {\n    return n2().y;\n  }, get placement() {\n    return n2().placement;\n  }, get strategy() {\n    return n2().strategy;\n  }, get middlewareData() {\n    return n2().middlewareData;\n  }, update: i2 };\n}\nconst _tmpl$$3 = /* @__PURE__ */ template$1(`<tc-root data-tc-dropdown-container=\"true\"></tc-root>`);\nconst AccountButton = () => {\n  const theme = useTheme();\n  const connector = useContext(ConnectorContext);\n  const tonConnectUI = useContext(TonConnectUiContext);\n  const [isOpened, setIsOpened] = createSignal(false);\n  const [account, setAccount] = createSignal(connector.account);\n  const [restoringProcess, setRestoringProcess] = createSignal(!connector.account);\n  let dropDownRef;\n  const [floating, setFloating] = createSignal();\n  const [anchor, setAnchor] = createSignal();\n  const position = P(anchor, floating, {\n    whileElementsMounted: autoUpdate,\n    placement: \"bottom-end\"\n  });\n  const normalizedAddress = () => {\n    const acc = account();\n    if (acc) {\n      const userFriendlyAddress = (0,_tonconnect_sdk__WEBPACK_IMPORTED_MODULE_0__.toUserFriendlyAddress)(acc.address, acc.chain === _tonconnect_sdk__WEBPACK_IMPORTED_MODULE_0__.CHAIN.TESTNET);\n      return userFriendlyAddress.slice(0, 4) + \"\\u2026\" + userFriendlyAddress.slice(-4);\n    }\n    return \"\";\n  };\n  tonConnectUI.connectionRestored.then(() => setRestoringProcess(false));\n  const unsubscribe = connector.onStatusChange((wallet) => {\n    if (!wallet) {\n      setIsOpened(false);\n      setAccount(null);\n      setRestoringProcess(false);\n      return;\n    }\n    setAccount(wallet.account);\n    setRestoringProcess(false);\n  });\n  const onClick = (e2) => {\n    if (!account() || !isOpened()) {\n      return;\n    }\n    const clickToButton = anchor().contains(e2.target);\n    const clickToDropdown = dropDownRef.contains(e2.target);\n    if (!clickToButton && !clickToDropdown) {\n      setIsOpened(false);\n    }\n  };\n  onMount(() => {\n    document.body.addEventListener(\"click\", onClick);\n  });\n  onCleanup(() => {\n    document.body.removeEventListener(\"click\", onClick);\n    unsubscribe();\n  });\n  return createComponent(Dynamic, {\n    component: globalStylesTag,\n    get children() {\n      return [createComponent(Show, {\n        get when() {\n          return restoringProcess();\n        },\n        get children() {\n          return createComponent(LoaderButtonStyled$1, {\n            disabled: true,\n            \"data-tc-connect-button-loading\": \"true\",\n            get children() {\n              return createComponent(LoaderIconStyled$1, {});\n            }\n          });\n        }\n      }), createComponent(Show, {\n        get when() {\n          return !restoringProcess();\n        },\n        get children() {\n          return [createComponent(Show, {\n            get when() {\n              return !account();\n            },\n            get children() {\n              return createComponent(AccountButtonStyled, {\n                onClick: () => tonConnectUI.openModal(),\n                \"data-tc-connect-button\": \"true\",\n                scale: \"s\",\n                get children() {\n                  return [createComponent(TonIcon, {\n                    get fill() {\n                      return theme.colors.connectButton.foreground;\n                    }\n                  }), createComponent(Text, {\n                    translationKey: \"button.connectWallet\",\n                    fontSize: \"15px\",\n                    lineHeight: \"18px\",\n                    fontWeight: \"590\",\n                    get color() {\n                      return theme.colors.connectButton.foreground;\n                    },\n                    children: \"Connect wallet\"\n                  })];\n                }\n              });\n            }\n          }), createComponent(Show, {\n            get when() {\n              return account();\n            },\n            get children() {\n              return createComponent(DropdownContainerStyled, {\n                get children() {\n                  return [createComponent(DropdownButtonStyled, {\n                    onClick: () => setIsOpened((v) => !v),\n                    ref: setAnchor,\n                    \"data-tc-dropdown-button\": \"true\",\n                    scale: \"s\",\n                    get children() {\n                      return [createComponent(Text, {\n                        fontSize: \"15px\",\n                        fontWeight: \"590\",\n                        lineHeight: \"18px\",\n                        get children() {\n                          return normalizedAddress();\n                        }\n                      }), createComponent(ArrowIcon, {\n                        direction: \"bottom\"\n                      })];\n                    }\n                  }), createComponent(Portal, {\n                    get children() {\n                      const _el$ = untrack(() => document.importNode(_tmpl$$3, true));\n                      use(setFloating, _el$);\n                      _el$.style.setProperty(\"z-index\", \"999\");\n                      _el$._$owner = getOwner();\n                      insert(_el$, createComponent(Transition, {\n                        onBeforeEnter: (el) => {\n                          animate(el, [{\n                            opacity: 0,\n                            transform: \"translateY(-8px)\"\n                          }, {\n                            opacity: 1,\n                            transform: \"translateY(0)\"\n                          }], {\n                            duration: 150\n                          });\n                        },\n                        onExit: (el, done) => {\n                          const a2 = animate(el, [{\n                            opacity: 1,\n                            transform: \"translateY(0)\"\n                          }, {\n                            opacity: 0,\n                            transform: \"translateY(-8px)\"\n                          }], {\n                            duration: 150\n                          });\n                          a2.finished.then(done);\n                        },\n                        get children() {\n                          return createComponent(Show, {\n                            get when() {\n                              return isOpened();\n                            },\n                            get children() {\n                              return createComponent(DropdownStyled, {\n                                get hidden() {\n                                  return !isOpened();\n                                },\n                                onClose: () => setIsOpened(false),\n                                ref(r$) {\n                                  const _ref$ = dropDownRef;\n                                  typeof _ref$ === \"function\" ? _ref$(r$) : dropDownRef = r$;\n                                }\n                              });\n                            }\n                          });\n                        }\n                      }), null);\n                      insert(_el$, createComponent(NotificationsStyled, {}), null);\n                      createRenderEffect((_p$) => {\n                        var _a2, _b2;\n                        const _v$ = position.strategy, _v$2 = `${(_a2 = position.y) != null ? _a2 : 0}px`, _v$3 = `${(_b2 = position.x) != null ? _b2 : 0}px`;\n                        _v$ !== _p$._v$ && _el$.style.setProperty(\"position\", _p$._v$ = _v$);\n                        _v$2 !== _p$._v$2 && _el$.style.setProperty(\"top\", _p$._v$2 = _v$2);\n                        _v$3 !== _p$._v$3 && _el$.style.setProperty(\"left\", _p$._v$3 = _v$3);\n                        return _p$;\n                      }, {\n                        _v$: void 0,\n                        _v$2: void 0,\n                        _v$3: void 0\n                      });\n                      return _el$;\n                    }\n                  })];\n                }\n              });\n            }\n          })];\n        }\n      })];\n    }\n  });\n};\nconst StyledModal = styled(Modal)`\n    padding-left: 24px;\n    padding-right: 24px;\n    padding-top: 18px;\n    padding-bottom: 0;\n\n    ${media(\"mobile\")} {\n        padding-left: 0;\n        padding-right: 0;\n\n        min-height: 364px;\n    }\n`;\nconst H1Styled$8 = styled(H1)`\n    margin-top: 12px;\n\n    ${media(\"mobile\")} {\n        padding: 0 10px;\n    }\n`;\nconst LoaderContainerStyled = styled.div`\n    margin: 30px 0;\n    width: 100%;\n    display: flex;\n    justify-content: center;\n\n    ${media(\"mobile\")} {\n        height: 160px;\n        align-items: center;\n    }\n`;\nstyled(Text)`\n    min-width: 84px;\n    text-align: center;\n    font-weight: 590;\n`;\nstyled(TabBar)`\n    margin: 0 auto 22px;\n`;\nconst [appState, setAppState] = createStore({\n  buttonRootId: null,\n  language: \"en\",\n  returnStrategy: \"back\",\n  twaReturnUrl: void 0,\n  walletsListConfiguration: {},\n  enableAndroidBackHandler: true\n});\nfunction uniq(array) {\n  return [...new Set(array)];\n}\nfunction mergeConcat(idKey, array1, array2) {\n  return array1.map((item1) => {\n    const item2 = array2.find((elem) => elem[idKey] === item1[idKey]);\n    array2 = array2.filter((elem) => elem[idKey] !== item1[idKey]);\n    return item2 === void 0 ? item1 : item2;\n  }).concat(array2);\n}\nfunction uiWalletToWalletInfo(uiWallet) {\n  if (\"jsBridgeKey\" in uiWallet) {\n    return __spreadProps(__spreadValues({}, uiWallet), {\n      injected: _tonconnect_sdk__WEBPACK_IMPORTED_MODULE_0__.TonConnect.isWalletInjected(uiWallet.jsBridgeKey),\n      embedded: _tonconnect_sdk__WEBPACK_IMPORTED_MODULE_0__.TonConnect.isInsideWalletBrowser(uiWallet.jsBridgeKey)\n    });\n  }\n  return uiWallet;\n}\nfunction applyWalletsListConfiguration(walletsList, configuration) {\n  var _a2;\n  if (!configuration) {\n    return walletsList;\n  }\n  if ((_a2 = configuration.includeWallets) == null ? void 0 : _a2.length) {\n    walletsList = mergeConcat(\n      \"name\",\n      walletsList,\n      configuration.includeWallets.map(uiWalletToWalletInfo)\n    );\n  }\n  return walletsList;\n}\nfunction supportsDesktop(walletInfo) {\n  return walletInfo.platforms.some((w) => [\"macos\", \"linux\", \"windows\"].includes(w));\n}\nfunction supportsMobile(walletInfo) {\n  return walletInfo.platforms.some((w) => [\"ios\", \"android\"].includes(w));\n}\nfunction supportsExtension(walletInfo) {\n  return walletInfo.platforms.some((w) => [\"chrome\", \"firefox\", \"safari\"].includes(w));\n}\nfunction eqWalletName(wallet1, name) {\n  if (!name) {\n    return false;\n  }\n  return wallet1.name.toLowerCase() === name.toLowerCase() || wallet1.appName.toLowerCase() === name.toLowerCase();\n}\nconst DesktopSelectWalletModalStyled = styled.div`\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n`;\nconst H1Styled$7 = styled(H1)`\n    margin-bottom: 18px;\n`;\nstyled.div`\n    height: 1px;\n    margin: 0 -24px;\n    width: calc(100% + 48px);\n    opacity: 0.12;\n    background: ${(props) => props.isShown ? props.theme.colors.icon.secondary : \"transparent\"};\n    transition: background 0.15s ease-in-out;\n\n    ${media(\"mobile\")} {\n        width: 100%;\n    }\n`;\nconst WalletsUl = styled.ul`\n    display: grid;\n    grid-template-columns: repeat(auto-fit, 92px);\n    grid-template-rows: auto;\n    align-content: flex-start;\n    justify-content: center;\n    row-gap: 8px;\n    width: 100%;\n    padding: 0 0 16px;\n    align-self: flex-start;\n    max-width: 400px;\n    margin: 0 auto;\n\n    > li {\n        display: block;\n        height: fit-content;\n    }\n\n    ${media(\"mobile\")} {\n        grid-template-columns: repeat(auto-fit, 82px);\n    }\n`;\nstyled(Button)`\n    display: block;\n    margin: 0 auto 1px;\n    font-size: 15px;\n`;\nconst StyledIconButton$3 = styled(IconButton)`\n    position: absolute;\n    top: 16px;\n    left: 16px;\n`;\nconst WalletLabeledItemStyled = styled(WalletLabeledItem)`\n    height: 100%;\n`;\nconst _tmpl$$2 = /* @__PURE__ */ template$1(`<li></li>`);\nconst AllWalletsListModal = (props) => {\n  const maxHeight = () => isMobile() ? void 0 : 510;\n  const walletsList = () => isMobile() ? props.walletsList.filter(supportsMobile) : props.walletsList;\n  return createComponent(DesktopSelectWalletModalStyled, {\n    \"data-tc-wallets-modal-list\": \"true\",\n    get children() {\n      return [createComponent(StyledIconButton$3, {\n        icon: \"arrow\",\n        onClick: () => props.onBack()\n      }), createComponent(H1Styled$7, {\n        translationKey: \"walletModal.wallets\",\n        children: \"Wallets\"\n      }), createComponent(ScrollContainer, {\n        get maxHeight() {\n          return maxHeight();\n        },\n        get children() {\n          return createComponent(WalletsUl, {\n            get children() {\n              return createComponent(For, {\n                get each() {\n                  return walletsList();\n                },\n                children: (wallet) => (() => {\n                  const _el$ = _tmpl$$2.cloneNode(true);\n                  insert(_el$, createComponent(WalletLabeledItemStyled, {\n                    wallet,\n                    onClick: () => props.onSelect(wallet)\n                  }));\n                  return _el$;\n                })()\n              });\n            }\n          });\n        }\n      })];\n    }\n  });\n};\nconst tgButtonBorders = {\n  m: \"16px\",\n  s: \"12px\",\n  none: \"0\"\n};\nconst tgIconBorders = {\n  m: \"6px\",\n  s: \"6px\",\n  none: \"0\"\n};\nconst DesktopConnectionModalStyled = styled.div`\n    display: flex;\n    flex-direction: column;\n`;\nconst BodyStyled$1 = styled.div`\n    flex: 1;\n    margin-top: ${(props) => props.qr ? \"0\" : \"18px\"};\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n    min-height: 232px;\n`;\nconst QRCodeStyled$1 = styled(QRCode)`\n    margin-bottom: 24px;\n`;\nconst H1Styled$6 = styled(H1)`\n    max-width: 288px;\n    margin: 0 auto 2px;\n`;\nconst H2Styled$4 = styled(H2)`\n    max-width: 288px;\n    text-align: center;\n    margin: 0 auto 20px;\n`;\nconst StyledIconButton$2 = styled(IconButton)`\n    position: absolute;\n    top: 16px;\n    left: 16px;\n`;\nconst ButtonsContainerStyled$1 = styled.div`\n    display: flex;\n    justify-content: center;\n    gap: 8px;\n    padding-bottom: 16px;\n`;\nconst BottomButtonsContainerStyled = styled(ButtonsContainerStyled$1)`\n    padding-bottom: 0;\n`;\nconst FooterButton$1 = styled(Button)`\n    margin-bottom: 24px;\n`;\nconst LoaderStyled$1 = styled(LoaderIcon)`\n    margin-bottom: 18px;\n    margin-top: 2px;\n`;\nconst ErrorIconStyled$1 = styled(ErrorIcon)`\n    margin-bottom: 16px;\n`;\nconst BodyTextStyled$1 = styled(H2)`\n    color: ${(props) => props.theme.colors.text.secondary};\n    text-align: center;\n    margin-bottom: 20px;\n`;\nconst TgButtonStyled = styled(Button)`\n    margin-top: -8px;\n    margin-bottom: 24px;\n    width: 100%;\n    padding: 12px 12px 12px 20px;\n    border-radius: ${(props) => tgButtonBorders[props.theme.borderRadius]};\n    font-size: 16px;\n    line-height: 20px;\n`;\nconst TgImageStyled = styled(Image)`\n    width: 32px;\n    height: 32px;\n    border-radius: ${(props) => tgIconBorders[props.theme.borderRadius]};\n`;\nconst Translation = (props) => {\n  const [t2] = useI18n();\n  return createMemo(() => {\n    var _a2;\n    return t2(props.translationKey, props.translationValues, (_a2 = props.children) == null ? void 0 : _a2.toString());\n  });\n};\nfunction addReturnStrategy(url, strategy) {\n  let returnStrategy;\n  if (typeof strategy === \"string\") {\n    returnStrategy = strategy;\n  } else {\n    returnStrategy = isInTMA() ? strategy.twaReturnUrl || strategy.returnStrategy : \"none\";\n  }\n  const newUrl = addQueryParameter(url, \"ret\", returnStrategy);\n  if (!(0,_tonconnect_sdk__WEBPACK_IMPORTED_MODULE_0__.isTelegramUrl)(url)) {\n    return newUrl;\n  }\n  const lastParam = newUrl.slice(newUrl.lastIndexOf(\"&\") + 1);\n  return newUrl.slice(0, newUrl.lastIndexOf(\"&\")) + \"-\" + (0,_tonconnect_sdk__WEBPACK_IMPORTED_MODULE_0__.encodeTelegramUrlParameters)(lastParam);\n}\nfunction redirectToTelegram(universalLink, options) {\n  options = __spreadValues({}, options);\n  const directLink = convertToTGDirectLink(universalLink);\n  const directLinkUrl = new URL(directLink);\n  if (!directLinkUrl.searchParams.has(\"startapp\")) {\n    directLinkUrl.searchParams.append(\"startapp\", \"tonconnect\");\n  }\n  if (isInTelegramBrowser()) {\n    options.returnStrategy = \"back\";\n    const linkWitStrategy = addReturnStrategy(directLinkUrl.toString(), options.returnStrategy);\n    openLinkBlank(linkWitStrategy);\n  } else if (isInTMA()) {\n    if (isTmaPlatform(\"ios\", \"android\", \"macos\", \"tdesktop\", \"web\")) {\n      options.returnStrategy = \"back\";\n      const linkWitStrategy = addReturnStrategy(\n        directLinkUrl.toString(),\n        options.returnStrategy\n      );\n      sendOpenTelegramLink(linkWitStrategy);\n    } else if (isTmaPlatform(\"weba\")) {\n      sendOpenTelegramLink(addReturnStrategy(directLinkUrl.toString(), options));\n    } else {\n      openLinkBlank(addReturnStrategy(directLinkUrl.toString(), options));\n    }\n  } else {\n    if (isOS(\"ios\")) {\n      if (options.returnStrategy === \"back\") {\n        if (isBrowser(\"safari\")) {\n          options.returnStrategy = \"back\";\n        } else if (isBrowser(\"chrome\")) {\n          options.returnStrategy = \"googlechrome://\";\n        } else if (isBrowser(\"firefox\")) {\n          options.returnStrategy = \"firefox://\";\n        } else if (isBrowser(\"opera\")) {\n          options.returnStrategy = \"opera-http://\";\n        } else {\n          options.returnStrategy = location.href;\n        }\n      }\n      const isChrome = isBrowser(\"chrome\");\n      const isFirefox = isBrowser(\"firefox\");\n      const useDeepLink = (isChrome || isFirefox) && !options.forceRedirect;\n      if (useDeepLink) {\n        const linkWithStrategy = addReturnStrategy(\n          directLinkUrl.toString(),\n          options.returnStrategy\n        );\n        const deepLink = convertToTGDeepLink(linkWithStrategy);\n        openDeeplinkWithFallback(deepLink, () => openLinkBlank(linkWithStrategy));\n      } else {\n        const linkWithStrategy = addReturnStrategy(\n          directLinkUrl.toString(),\n          options.returnStrategy\n        );\n        openLinkBlank(linkWithStrategy);\n      }\n    } else if (isOS(\"android\")) {\n      options.returnStrategy = \"back\";\n      const isChrome = isBrowser(\"chrome\");\n      const isFirefox = isBrowser(\"firefox\");\n      const useDeepLink = (isChrome || isFirefox) && !options.forceRedirect;\n      if (useDeepLink) {\n        const linkWithStrategy = addReturnStrategy(\n          directLinkUrl.toString(),\n          options.returnStrategy\n        );\n        const deepLink = convertToTGDeepLink(linkWithStrategy);\n        openDeeplinkWithFallback(deepLink, () => openLinkBlank(linkWithStrategy));\n      } else {\n        const linkWithStrategy = addReturnStrategy(\n          directLinkUrl.toString(),\n          options.returnStrategy\n        );\n        openLinkBlank(linkWithStrategy);\n      }\n    } else if (isOS(\"ipad\")) {\n      if (options.returnStrategy === \"back\") {\n        if (isBrowser(\"safari\")) {\n          options.returnStrategy = \"back\";\n        } else if (isBrowser(\"chrome\")) {\n          options.returnStrategy = \"googlechrome://\";\n        } else if (isBrowser(\"firefox\")) {\n          options.returnStrategy = \"firefox://\";\n        } else if (isBrowser(\"opera\")) {\n          options.returnStrategy = \"opera-http://\";\n        } else {\n          options.returnStrategy = location.href;\n        }\n      }\n      const isChrome = isBrowser(\"chrome\");\n      const isFirefox = isBrowser(\"firefox\");\n      const useDeepLink = (isChrome || isFirefox) && !options.forceRedirect;\n      const linkWithStrategy = addReturnStrategy(\n        directLinkUrl.toString(),\n        options.returnStrategy\n      );\n      if (useDeepLink) {\n        const deepLink = convertToTGDeepLink(linkWithStrategy);\n        openDeeplinkWithFallback(deepLink, () => openLinkBlank(linkWithStrategy));\n      } else {\n        openLinkBlank(linkWithStrategy);\n      }\n    } else if (isOS(\"macos\", \"windows\", \"linux\")) {\n      options.returnStrategy = \"back\";\n      options.twaReturnUrl = void 0;\n      const linkWithStrategy = addReturnStrategy(\n        directLinkUrl.toString(),\n        options.returnStrategy\n      );\n      if (options.forceRedirect) {\n        openLinkBlank(linkWithStrategy);\n      } else {\n        const deepLink = convertToTGDeepLink(linkWithStrategy);\n        openDeeplinkWithFallback(deepLink, () => openLinkBlank(linkWithStrategy));\n      }\n    } else {\n      openLinkBlank(addReturnStrategy(directLinkUrl.toString(), options));\n    }\n  }\n}\nfunction redirectToWallet(universalLink, deepLink, options, setOpenMethod) {\n  options = __spreadValues({}, options);\n  if (isInTelegramBrowser()) {\n    if (isOS(\"ios\", \"android\")) {\n      if (options.returnStrategy === \"back\") {\n        options.returnStrategy = \"tg://resolve\";\n      }\n      setOpenMethod(\"universal-link\");\n      openLink(addReturnStrategy(universalLink, options.returnStrategy), \"_self\");\n    } else {\n      setOpenMethod(\"universal-link\");\n      const linkWitStrategy = addReturnStrategy(universalLink, options.returnStrategy);\n      openLinkBlank(linkWitStrategy);\n    }\n  } else if (isInTMA()) {\n    if (isTmaPlatform(\"ios\", \"android\")) {\n      if (options.returnStrategy === \"back\") {\n        options.returnStrategy = \"tg://resolve\";\n      }\n      setOpenMethod(\"universal-link\");\n      const linkWitStrategy = addReturnStrategy(universalLink, options.returnStrategy);\n      sendOpenTelegramLink(linkWitStrategy, () => {\n        setOpenMethod(\"universal-link\");\n        openLinkBlank(linkWitStrategy);\n      });\n    } else if (isTmaPlatform(\"macos\", \"tdesktop\")) {\n      if (options.returnStrategy === \"back\") {\n        options.returnStrategy = \"tg://resolve\";\n      }\n      const linkWitStrategy = addReturnStrategy(universalLink, options.returnStrategy);\n      const useDeepLink = !!deepLink && !options.forceRedirect;\n      if (useDeepLink) {\n        setOpenMethod(\"custom-deeplink\");\n        openDeeplinkWithFallback(toDeeplink(linkWitStrategy, deepLink), () => {\n          setOpenMethod(\"universal-link\");\n          openLinkBlank(linkWitStrategy);\n        });\n      } else {\n        setOpenMethod(\"universal-link\");\n        openLinkBlank(linkWitStrategy);\n      }\n    } else if (isTmaPlatform(\"weba\")) {\n      if (options.returnStrategy === \"back\") {\n        if (isBrowser(\"safari\")) {\n          options.returnStrategy = location.href;\n        } else if (isBrowser(\"chrome\")) {\n          options.returnStrategy = \"googlechrome://\";\n        } else if (isBrowser(\"firefox\")) {\n          options.returnStrategy = \"firefox://\";\n        } else if (isBrowser(\"opera\")) {\n          options.returnStrategy = \"opera-http://\";\n        } else {\n          options.returnStrategy = location.href;\n        }\n      }\n      const linkWitStrategy = addReturnStrategy(universalLink, options.returnStrategy);\n      const useDeepLink = !!deepLink && !options.forceRedirect;\n      if (useDeepLink) {\n        setOpenMethod(\"custom-deeplink\");\n        openDeeplinkWithFallback(toDeeplink(linkWitStrategy, deepLink), () => {\n          setOpenMethod(\"universal-link\");\n          openLinkBlank(linkWitStrategy);\n        });\n      } else {\n        setOpenMethod(\"universal-link\");\n        openLinkBlank(linkWitStrategy);\n      }\n    } else if (isTmaPlatform(\"web\")) {\n      if (options.returnStrategy === \"back\") {\n        if (isBrowser(\"safari\")) {\n          options.returnStrategy = location.href;\n        } else if (isBrowser(\"chrome\")) {\n          options.returnStrategy = \"googlechrome://\";\n        } else if (isBrowser(\"firefox\")) {\n          options.returnStrategy = \"firefox://\";\n        } else if (isBrowser(\"opera\")) {\n          options.returnStrategy = \"opera-http://\";\n        } else {\n          options.returnStrategy = location.href;\n        }\n      }\n      const linkWitStrategy = addReturnStrategy(universalLink, options.returnStrategy);\n      const useDeepLink = !!deepLink && !options.forceRedirect;\n      if (useDeepLink) {\n        setOpenMethod(\"custom-deeplink\");\n        openDeeplinkWithFallback(toDeeplink(linkWitStrategy, deepLink), () => {\n          setOpenMethod(\"universal-link\");\n          openLinkBlank(linkWitStrategy);\n        });\n      } else {\n        setOpenMethod(\"universal-link\");\n        openLinkBlank(linkWitStrategy);\n      }\n    } else {\n      setOpenMethod(\"universal-link\");\n      const linkWitStrategy = addReturnStrategy(universalLink, options.returnStrategy);\n      openLinkBlank(linkWitStrategy);\n    }\n  } else {\n    if (isOS(\"ios\")) {\n      if (options.returnStrategy === \"back\") {\n        if (isBrowser(\"safari\")) {\n          options.returnStrategy = \"none\";\n        } else if (isBrowser(\"chrome\")) {\n          options.returnStrategy = \"googlechrome://\";\n        } else if (isBrowser(\"firefox\")) {\n          options.returnStrategy = \"firefox://\";\n        } else if (isBrowser(\"opera\")) {\n          options.returnStrategy = \"opera-http://\";\n        } else {\n          options.returnStrategy = location.href;\n        }\n      }\n      if (isBrowser(\"chrome\")) {\n        setOpenMethod(\"universal-link\");\n        openLink(addReturnStrategy(universalLink, options.returnStrategy), \"_self\");\n      } else {\n        setOpenMethod(\"universal-link\");\n        openLinkBlank(addReturnStrategy(universalLink, options.returnStrategy));\n      }\n    } else if (isOS(\"android\")) {\n      if (options.returnStrategy === \"back\") {\n        if (isBrowser(\"chrome\")) {\n          options.returnStrategy = \"googlechrome://\";\n        } else if (isBrowser(\"firefox\")) {\n          options.returnStrategy = \"firefox://\";\n        } else if (isBrowser(\"opera\")) {\n          options.returnStrategy = \"opera-http://\";\n        } else {\n          options.returnStrategy = location.href;\n        }\n      }\n      setOpenMethod(\"universal-link\");\n      openLinkBlank(addReturnStrategy(universalLink, options.returnStrategy));\n    } else if (isOS(\"ipad\")) {\n      if (options.returnStrategy === \"back\") {\n        if (isBrowser(\"safari\")) {\n          options.returnStrategy = \"none\";\n        } else if (isBrowser(\"chrome\")) {\n          options.returnStrategy = \"googlechrome://\";\n        } else if (isBrowser(\"firefox\")) {\n          options.returnStrategy = \"firefox://\";\n        } else if (isBrowser(\"opera\")) {\n          options.returnStrategy = \"opera-http://\";\n        } else {\n          options.returnStrategy = location.href;\n        }\n      }\n      if (isBrowser(\"chrome\")) {\n        setOpenMethod(\"universal-link\");\n        openLink(addReturnStrategy(universalLink, options.returnStrategy), \"_self\");\n      } else {\n        setOpenMethod(\"universal-link\");\n        openLinkBlank(addReturnStrategy(universalLink, options.returnStrategy));\n      }\n    } else if (isOS(\"macos\", \"windows\", \"linux\")) {\n      if (options.returnStrategy === \"back\") {\n        if (isBrowser(\"safari\")) {\n          options.returnStrategy = \"none\";\n        } else if (isBrowser(\"chrome\")) {\n          options.returnStrategy = \"googlechrome://\";\n        } else if (isBrowser(\"firefox\")) {\n          options.returnStrategy = \"firefox://\";\n        } else if (isBrowser(\"opera\")) {\n          options.returnStrategy = \"opera-http://\";\n        } else {\n          options.returnStrategy = \"none\";\n        }\n      }\n      const linkWitStrategy = addReturnStrategy(universalLink, options.returnStrategy);\n      const useDeepLink = !!deepLink && !options.forceRedirect;\n      if (useDeepLink) {\n        setOpenMethod(\"custom-deeplink\");\n        openDeeplinkWithFallback(toDeeplink(linkWitStrategy, deepLink), () => {\n          setOpenMethod(\"universal-link\");\n          openLinkBlank(linkWitStrategy);\n        });\n      } else {\n        setOpenMethod(\"universal-link\");\n        openLinkBlank(linkWitStrategy);\n      }\n    } else {\n      setOpenMethod(\"universal-link\");\n      openLinkBlank(addReturnStrategy(universalLink, options.returnStrategy));\n    }\n  }\n}\nfunction addQueryParameter(url, key, value) {\n  const parsed = new URL(url);\n  parsed.searchParams.append(key, value);\n  return parsed.toString();\n}\nfunction convertToTGDirectLink(universalLink) {\n  const url = new URL(universalLink);\n  if (url.searchParams.has(\"attach\")) {\n    url.searchParams.delete(\"attach\");\n    url.pathname += \"/start\";\n  }\n  return url.toString();\n}\nfunction convertToTGDeepLink(directLink) {\n  const parsed = new URL(directLink);\n  const [, domain, appname] = parsed.pathname.split(\"/\");\n  const startapp = parsed.searchParams.get(\"startapp\");\n  return `tg://resolve?domain=${domain}&appname=${appname}&startapp=${startapp}`;\n}\nconst DesktopConnectionModal = (props) => {\n  const [mode, setMode] = createSignal(\"mobile\");\n  const [connectionErrored, setConnectionErrored] = createSignal(false);\n  const [universalLink, setUniversalLink] = createSignal();\n  const [firstClick, setFirstClick] = createSignal(true);\n  const connector = useContext(ConnectorContext);\n  const unsubscribe = connector.onStatusChange(() => {\n  }, () => {\n    if (props.wallet.appName !== AT_WALLET_APP_NAME) {\n      setConnectionErrored(true);\n    }\n  });\n  onCleanup(unsubscribe);\n  const generateUniversalLink = () => {\n    try {\n      const universalLink2 = connector.connect({\n        universalLink: props.wallet.universalLink,\n        bridgeUrl: props.wallet.bridgeUrl\n      }, props.additionalRequest);\n      setUniversalLink(universalLink2);\n    } catch (e2) {\n    }\n  };\n  createEffect(() => {\n    if (untrack(mode) !== \"extension\" && (supportsMobile(props.wallet) || supportsDesktop(props.wallet))) {\n      generateUniversalLink();\n    }\n  });\n  const onClickMobile = () => {\n    setConnectionErrored(false);\n    if (mode() === \"extension\") {\n      generateUniversalLink();\n    }\n    setMode(\"mobile\");\n    setLastSelectedWalletInfo(__spreadProps(__spreadValues({}, props.wallet), {\n      openMethod: \"qrcode\"\n    }));\n  };\n  const onClickDesktop = () => {\n    setConnectionErrored(false);\n    if (mode() === \"extension\") {\n      generateUniversalLink();\n    }\n    setMode(\"desktop\");\n    if ((0,_tonconnect_sdk__WEBPACK_IMPORTED_MODULE_0__.isTelegramUrl)(universalLink())) {\n      onClickTelegram();\n    } else {\n      const forceRedirect = !firstClick();\n      setFirstClick(false);\n      redirectToWallet(universalLink(), props.wallet.deepLink, {\n        returnStrategy: appState.returnStrategy,\n        forceRedirect\n      }, (method) => {\n        setLastSelectedWalletInfo(__spreadProps(__spreadValues({}, props.wallet), {\n          openMethod: method\n        }));\n      });\n    }\n  };\n  const onClickTelegram = () => {\n    const forceRedirect = !firstClick();\n    setFirstClick(false);\n    setLastSelectedWalletInfo(__spreadProps(__spreadValues({}, props.wallet), {\n      openMethod: \"universal-link\"\n    }));\n    redirectToTelegram(universalLink(), {\n      returnStrategy: appState.returnStrategy,\n      twaReturnUrl: appState.twaReturnUrl,\n      forceRedirect\n    });\n  };\n  const onClickExtension = () => {\n    setConnectionErrored(false);\n    setMode(\"extension\");\n    if ((0,_tonconnect_sdk__WEBPACK_IMPORTED_MODULE_0__.isWalletInfoCurrentlyInjected)(props.wallet)) {\n      setLastSelectedWalletInfo(props.wallet);\n      connector.connect({\n        jsBridgeKey: props.wallet.jsBridgeKey\n      }, props.additionalRequest);\n    }\n  };\n  if (supportsMobile(props.wallet)) {\n    onClickMobile();\n  } else if (supportsExtension(props.wallet)) {\n    onClickExtension();\n  } else {\n    onClickDesktop();\n  }\n  return createComponent(DesktopConnectionModalStyled, {\n    \"data-tc-wallets-modal-connection-desktop\": \"true\",\n    get children() {\n      return [createComponent(Show, {\n        get when() {\n          return !props.backDisabled;\n        },\n        get children() {\n          return createComponent(StyledIconButton$2, {\n            icon: \"arrow\",\n            onClick: () => props.onBackClick()\n          });\n        }\n      }), createComponent(H1Styled$6, {\n        get children() {\n          return props.wallet.name;\n        }\n      }), createComponent(Show, {\n        get when() {\n          return mode() === \"mobile\";\n        },\n        get children() {\n          return createComponent(H2Styled$4, {\n            translationKey: \"walletModal.desktopConnectionModal.scanQR\",\n            get translationValues() {\n              return {\n                name: props.wallet.name\n              };\n            },\n            get children() {\n              return [\"Scan the QR code below with your phone\\u2019s or \", createMemo(() => props.wallet.name), \"\\u2019s camera\"];\n            }\n          });\n        }\n      }), createComponent(BodyStyled$1, {\n        get qr() {\n          return mode() === \"mobile\";\n        },\n        get children() {\n          return createComponent(Switch, {\n            get children() {\n              return [createComponent(Match, {\n                get when() {\n                  return mode() === \"mobile\";\n                },\n                get children() {\n                  return createComponent(QRCodeStyled$1, {\n                    disableCopy: false,\n                    get sourceUrl() {\n                      return addReturnStrategy(universalLink(), \"none\");\n                    },\n                    get imageUrl() {\n                      return props.wallet.imageUrl;\n                    }\n                  });\n                }\n              }), createComponent(Match, {\n                get when() {\n                  return connectionErrored();\n                },\n                get children() {\n                  return [createComponent(ErrorIconStyled$1, {\n                    size: \"s\"\n                  }), createComponent(BodyTextStyled$1, {\n                    translationKey: \"walletModal.desktopConnectionModal.connectionDeclined\",\n                    children: \"Connection declined\"\n                  }), createComponent(ButtonsContainerStyled$1, {\n                    get children() {\n                      return createComponent(Button, {\n                        get leftIcon() {\n                          return createComponent(RetryIcon, {});\n                        },\n                        get onClick() {\n                          return mode() === \"extension\" ? onClickExtension : onClickDesktop;\n                        },\n                        get children() {\n                          return createComponent(Translation, {\n                            translationKey: \"common.retry\",\n                            children: \"Retry\"\n                          });\n                        }\n                      });\n                    }\n                  })];\n                }\n              }), createComponent(Match, {\n                get when() {\n                  return mode() === \"extension\";\n                },\n                get children() {\n                  return [createComponent(Show, {\n                    get when() {\n                      return (0,_tonconnect_sdk__WEBPACK_IMPORTED_MODULE_0__.isWalletInfoCurrentlyInjected)(props.wallet);\n                    },\n                    get children() {\n                      return [createComponent(LoaderStyled$1, {\n                        size: \"s\"\n                      }), createComponent(BodyTextStyled$1, {\n                        translationKey: \"walletModal.desktopConnectionModal.continueInExtension\",\n                        get translationValues() {\n                          return {\n                            name: props.wallet.name\n                          };\n                        },\n                        get children() {\n                          return [\"Continue in \", createMemo(() => props.wallet.name), \" browser extension\\u2026\"];\n                        }\n                      }), createComponent(ButtonsContainerStyled$1, {\n                        get children() {\n                          return createComponent(Button, {\n                            get leftIcon() {\n                              return createComponent(RetryIcon, {});\n                            },\n                            onClick: onClickExtension,\n                            get children() {\n                              return createComponent(Translation, {\n                                translationKey: \"common.retry\",\n                                children: \"Retry\"\n                              });\n                            }\n                          });\n                        }\n                      })];\n                    }\n                  }), createComponent(Show, {\n                    get when() {\n                      return !(0,_tonconnect_sdk__WEBPACK_IMPORTED_MODULE_0__.isWalletInfoCurrentlyInjected)(props.wallet);\n                    },\n                    get children() {\n                      return [createComponent(BodyTextStyled$1, {\n                        translationKey: \"walletModal.desktopConnectionModal.dontHaveExtension\",\n                        get translationValues() {\n                          return {\n                            name: props.wallet.name\n                          };\n                        },\n                        get children() {\n                          return [\"Seems you don't have installed \", createMemo(() => props.wallet.name), \" browser extension\"];\n                        }\n                      }), createComponent(ButtonsContainerStyled$1, {\n                        get children() {\n                          return createComponent(Link, {\n                            get href() {\n                              return props.wallet.aboutUrl;\n                            },\n                            blank: true,\n                            get children() {\n                              return createComponent(Button, {\n                                get rightIcon() {\n                                  return createComponent(LinkIcon, {});\n                                },\n                                onClick: onClickExtension,\n                                get children() {\n                                  return createComponent(Translation, {\n                                    translationKey: \"walletModal.desktopConnectionModal.getWallet\",\n                                    get translationValues() {\n                                      return {\n                                        name: props.wallet.name\n                                      };\n                                    },\n                                    get children() {\n                                      return [\"Get \", createMemo(() => props.wallet.name)];\n                                    }\n                                  });\n                                }\n                              });\n                            }\n                          });\n                        }\n                      })];\n                    }\n                  })];\n                }\n              }), createComponent(Match, {\n                get when() {\n                  return mode() === \"desktop\";\n                },\n                get children() {\n                  return [createComponent(LoaderIcon, {\n                    size: \"m\"\n                  }), createComponent(BodyTextStyled$1, {\n                    translationKey: \"walletModal.desktopConnectionModal.continueOnDesktop\",\n                    get translationValues() {\n                      return {\n                        name: props.wallet.name\n                      };\n                    },\n                    get children() {\n                      return [\"Continue in \", createMemo(() => props.wallet.name), \" on desktop\\u2026\"];\n                    }\n                  }), createComponent(ButtonsContainerStyled$1, {\n                    get children() {\n                      return [createComponent(Button, {\n                        get leftIcon() {\n                          return createComponent(RetryIcon, {});\n                        },\n                        onClick: onClickDesktop,\n                        get children() {\n                          return createComponent(Translation, {\n                            translationKey: \"common.retry\",\n                            children: \"Retry\"\n                          });\n                        }\n                      }), createComponent(Link, {\n                        get href() {\n                          return props.wallet.aboutUrl;\n                        },\n                        blank: true,\n                        get children() {\n                          return createComponent(Button, {\n                            get rightIcon() {\n                              return createComponent(LinkIcon, {});\n                            },\n                            get children() {\n                              return createComponent(Translation, {\n                                translationKey: \"walletModal.desktopConnectionModal.getWallet\",\n                                get translationValues() {\n                                  return {\n                                    name: props.wallet.name\n                                  };\n                                },\n                                get children() {\n                                  return [\"Get \", createMemo(() => props.wallet.name)];\n                                }\n                              });\n                            }\n                          });\n                        }\n                      })];\n                    }\n                  })];\n                }\n              })];\n            }\n          });\n        }\n      }), createComponent(Show, {\n        get when() {\n          return props.wallet.appName === AT_WALLET_APP_NAME;\n        },\n        get children() {\n          return createComponent(TgButtonStyled, {\n            get rightIcon() {\n              return createComponent(TgImageStyled, {\n                get src() {\n                  return IMG.TG;\n                }\n              });\n            },\n            scale: \"s\",\n            onClick: onClickTelegram,\n            get children() {\n              return createComponent(Translation, {\n                translationKey: \"walletModal.desktopConnectionModal.openWalletOnTelegram\",\n                children: \"Open Wallet in Telegram on desktop\"\n              });\n            }\n          });\n        }\n      }), createComponent(Show, {\n        get when() {\n          return props.wallet.appName !== AT_WALLET_APP_NAME;\n        },\n        get children() {\n          return createComponent(BottomButtonsContainerStyled, {\n            get children() {\n              return [createComponent(Show, {\n                get when() {\n                  return createMemo(() => mode() !== \"mobile\")() && supportsMobile(props.wallet);\n                },\n                get children() {\n                  return createComponent(FooterButton$1, {\n                    appearance: \"secondary\",\n                    get leftIcon() {\n                      return createComponent(MobileIcon, {});\n                    },\n                    onClick: onClickMobile,\n                    get children() {\n                      return createComponent(Translation, {\n                        translationKey: \"common.mobile\",\n                        children: \"Mobile\"\n                      });\n                    }\n                  });\n                }\n              }), createComponent(Show, {\n                get when() {\n                  return createMemo(() => mode() !== \"extension\")() && supportsExtension(props.wallet);\n                },\n                get children() {\n                  return createComponent(FooterButton$1, {\n                    appearance: \"secondary\",\n                    get leftIcon() {\n                      return createComponent(BrowserIcon, {});\n                    },\n                    onClick: onClickExtension,\n                    get children() {\n                      return createComponent(Translation, {\n                        translationKey: \"common.browserExtension\",\n                        children: \"Browser Extension\"\n                      });\n                    }\n                  });\n                }\n              }), createComponent(Show, {\n                get when() {\n                  return createMemo(() => mode() !== \"desktop\")() && supportsDesktop(props.wallet);\n                },\n                get children() {\n                  return createComponent(FooterButton$1, {\n                    appearance: \"secondary\",\n                    get leftIcon() {\n                      return createComponent(DesktopIcon, {});\n                    },\n                    onClick: onClickDesktop,\n                    get children() {\n                      return createComponent(Translation, {\n                        translationKey: \"common.desktop\",\n                        children: \"Desktop\"\n                      });\n                    }\n                  });\n                }\n              })];\n            }\n          });\n        }\n      })];\n    }\n  });\n};\nconst InfoModalStyled = styled.div``;\nconst StyledIconButton$1 = styled(IconButton)`\n    position: absolute;\n    top: 16px;\n    left: 16px;\n`;\nconst H1Styled$5 = styled(H1)`\n    margin-bottom: 18px;\n`;\nconst InfoBlock = styled.div`\n    padding: 16px 0;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n`;\nconst InfoBlockIconClass = u`\n    margin-bottom: 12px;\n`;\nconst H3Styled = styled(H3)`\n    text-align: center;\n    margin-bottom: 4px;\n`;\nconst TextStyled$1 = styled(Text)`\n    text-align: center;\n    max-width: 352px;\n    color: ${(props) => props.theme.colors.text.secondary};\n`;\nconst ButtonsBlock = styled.div`\n    padding: 16px 24px 24px;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    gap: 8px;\n`;\nconst LINKS = {\n  GET_A_WALLET: \"https://ton.org/wallets?filters[wallet_features][slug][$in]=dapp-auth&pagination[limit]=-1\"\n};\nconst InfoModal = (props) => {\n  return createComponent(InfoModalStyled, {\n    \"data-tc-wallets-modal-info\": \"true\",\n    get children() {\n      return [createComponent(StyledIconButton$1, {\n        icon: \"arrow\",\n        onClick: () => props.onBackClick()\n      }), createComponent(H1Styled$5, {\n        translationKey: \"walletModal.infoModal.whatIsAWallet\",\n        children: \"What is a wallet\"\n      }), createComponent(ScrollContainer, {\n        get children() {\n          return [createComponent(InfoBlock, {\n            get children() {\n              return [createComponent(SecurityIcon, {\n                \"class\": InfoBlockIconClass\n              }), createComponent(H3Styled, {\n                translationKey: \"walletModal.infoModal.secureDigitalAssets\",\n                children: \"Secure digital assets storage\"\n              }), createComponent(TextStyled$1, {\n                translationKey: \"walletModal.infoModal.walletProtects\",\n                children: \"A wallet protects and manages your digital assets including TON, tokens and collectables.\"\n              })];\n            }\n          }), createComponent(InfoBlock, {\n            get children() {\n              return [createComponent(PersonalityIcon, {\n                \"class\": InfoBlockIconClass\n              }), createComponent(H3Styled, {\n                translationKey: \"walletModal.infoModal.controlIdentity\",\n                children: \"Control your Web3 identity\"\n              }), createComponent(TextStyled$1, {\n                translationKey: \"walletModal.infoModal.manageIdentity\",\n                children: \"Manage your digital identity and access decentralized applications with ease. Maintain control over your data and engage securely in the blockchain ecosystem.\"\n              })];\n            }\n          }), createComponent(InfoBlock, {\n            get children() {\n              return [createComponent(SwapIcon, {\n                \"class\": InfoBlockIconClass\n              }), createComponent(H3Styled, {\n                translationKey: \"walletModal.infoModal.effortlessCryptoTransactions\",\n                children: \"Effortless crypto transactions\"\n              }), createComponent(TextStyled$1, {\n                translationKey: \"walletModal.infoModal.easilySend\",\n                children: \"Easily send, receive, monitor your cryptocurrencies. Streamline your operations with decentralized applications.\"\n              })];\n            }\n          }), createComponent(ButtonsBlock, {\n            get children() {\n              return createComponent(Link, {\n                get href() {\n                  return LINKS.GET_A_WALLET;\n                },\n                blank: true,\n                get children() {\n                  return createComponent(Button, {\n                    get rightIcon() {\n                      return createComponent(WalletIcon, {});\n                    },\n                    get children() {\n                      return createComponent(Translation, {\n                        translationKey: \"walletModal.infoModal.getAWallet\",\n                        children: \"Get a Wallet\"\n                      });\n                    }\n                  });\n                }\n              });\n            }\n          })];\n        }\n      })];\n    }\n  });\n};\nconst MobileConnectionModalStyled = styled.div``;\nconst BodyStyled = styled.div`\n    flex: 1;\n    margin-top: 18px;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n    min-height: 232px;\n`;\nconst H1Styled$4 = styled(H1)`\n    max-width: 262px;\n    margin: 0 auto 8px;\n`;\nconst StyledIconButton = styled(IconButton)`\n    position: absolute;\n    top: 16px;\n    left: 16px;\n`;\nconst FooterStyled = styled.div`\n    padding: 16px;\n    display: flex;\n    align-items: center;\n    gap: 12px;\n    border-top: 0.5px solid ${(props) => rgba(props.theme.colors.icon.secondary, 0.2)};\n`;\nconst ImageStyled = styled(Image)`\n    width: 36px;\n    height: 36px;\n    border-radius: 10px;\n`;\nconst FooterButton = styled(Link)`\n    margin-left: auto;\n`;\nconst LoaderStyled = styled(LoaderIcon)`\n    margin-bottom: 18px;\n    margin-top: 2px;\n`;\nconst ErrorIconStyled = styled(ErrorIcon)`\n    margin-bottom: 16px;\n`;\nconst BodyTextStyled = styled(H2)`\n    color: ${(props) => props.theme.colors.text.secondary};\n    text-align: center;\n    margin-bottom: 20px;\n`;\nconst ButtonsContainerStyled = styled.div`\n    display: flex;\n    justify-content: center;\n    gap: 8px;\n    padding-bottom: 16px;\n`;\nconst H1Styled$3 = styled(H1)`\n    margin-bottom: 2px;\n    padding: 0 64px;\n`;\nconst H2Styled$3 = styled(H2)`\n    margin-bottom: 20px;\n    padding: 0 64px;\n    min-height: 44px;\n`;\nconst QrCodeWrapper$1 = styled.div`\n    padding: 0 24px 24px;\n`;\nconst MobileConnectionQR = (props) => {\n  return [createComponent(H1Styled$3, {\n    get children() {\n      return props.walletInfo.name;\n    }\n  }), createComponent(H2Styled$3, {\n    translationKey: \"walletModal.mobileConnectionModal.scanQR\",\n    get translationValues() {\n      return {\n        name: props.walletInfo.name\n      };\n    },\n    get children() {\n      return [\"Scan the QR code below with your phone\\u2019s or \", createMemo(() => props.walletInfo.name), \"\\u2019s camera\"];\n    }\n  }), createComponent(QrCodeWrapper$1, {\n    get children() {\n      return createComponent(QRCode, {\n        get imageUrl() {\n          return props.walletInfo.imageUrl;\n        },\n        get sourceUrl() {\n          return addReturnStrategy(props.universalLink, \"none\");\n        },\n        disableCopy: true\n      });\n    }\n  })];\n};\nconst MobileConnectionModal = (props) => {\n  const theme = useTheme();\n  const [firstClick, setFirstClick] = createSignal(true);\n  const [showQR, setShowQR] = createSignal(false);\n  const [connectionErrored, setConnectionErrored] = createSignal(false);\n  const connector = useContext(ConnectorContext);\n  const unsubscribe = connector.onStatusChange(() => {\n  }, () => {\n    setConnectionErrored(true);\n  });\n  const universalLink = createMemo(() => connector.connect({\n    universalLink: props.wallet.universalLink,\n    bridgeUrl: props.wallet.bridgeUrl\n  }, props.additionalRequest));\n  const onClickTelegram = () => {\n    const alwaysForceRedirect = true;\n    setLastSelectedWalletInfo(__spreadProps(__spreadValues({}, props.wallet), {\n      openMethod: \"universal-link\"\n    }));\n    redirectToTelegram(universalLink(), {\n      returnStrategy: appState.returnStrategy,\n      twaReturnUrl: appState.twaReturnUrl,\n      forceRedirect: alwaysForceRedirect\n    });\n  };\n  const onRetry = () => {\n    const currentUniversalLink = universalLink();\n    if ((0,_tonconnect_sdk__WEBPACK_IMPORTED_MODULE_0__.isTelegramUrl)(currentUniversalLink)) {\n      return onClickTelegram();\n    }\n    setConnectionErrored(false);\n    const forceRedirect = !firstClick();\n    setFirstClick(false);\n    redirectToWallet(universalLink(), props.wallet.deepLink, {\n      returnStrategy: appState.returnStrategy,\n      forceRedirect\n    }, (method) => {\n      setLastSelectedWalletInfo(__spreadProps(__spreadValues({}, props.wallet), {\n        openMethod: method\n      }));\n    });\n  };\n  const onOpenQR = () => {\n    setConnectionErrored(false);\n    setShowQR(true);\n    setLastSelectedWalletInfo(__spreadProps(__spreadValues({}, props.wallet), {\n      openMethod: \"qrcode\"\n    }));\n  };\n  const onCloseQR = () => {\n    setShowQR(false);\n    setLastSelectedWalletInfo(__spreadProps(__spreadValues({}, props.wallet), {\n      openMethod: \"universal-link\"\n    }));\n  };\n  const onBack = () => {\n    if (showQR()) {\n      onCloseQR();\n    } else {\n      props.onBackClick();\n    }\n  };\n  onCleanup(unsubscribe);\n  onRetry();\n  return createComponent(MobileConnectionModalStyled, {\n    \"data-tc-wallets-modal-connection-mobile\": \"true\",\n    get children() {\n      return [createComponent(Show, {\n        get when() {\n          return !props.backDisabled || showQR();\n        },\n        get children() {\n          return createComponent(StyledIconButton, {\n            icon: \"arrow\",\n            onClick: onBack\n          });\n        }\n      }), createComponent(Show, {\n        get when() {\n          return showQR();\n        },\n        get children() {\n          return createComponent(MobileConnectionQR, {\n            get universalLink() {\n              return universalLink();\n            },\n            get walletInfo() {\n              return props.wallet;\n            }\n          });\n        }\n      }), createComponent(Show, {\n        get when() {\n          return !showQR();\n        },\n        get children() {\n          return [createComponent(H1Styled$4, {\n            get children() {\n              return props.wallet.name;\n            }\n          }), createComponent(BodyStyled, {\n            get children() {\n              return [createComponent(Show, {\n                get when() {\n                  return connectionErrored();\n                },\n                get children() {\n                  return [createComponent(ErrorIconStyled, {\n                    size: \"s\"\n                  }), createComponent(BodyTextStyled, {\n                    translationKey: \"walletModal.mobileConnectionModal.connectionDeclined\",\n                    children: \"Connection declined\"\n                  }), createComponent(ButtonsContainerStyled, {\n                    get children() {\n                      return [createComponent(Button, {\n                        get leftIcon() {\n                          return createComponent(RetryIcon, {});\n                        },\n                        onClick: onRetry,\n                        get children() {\n                          return createComponent(Translation, {\n                            translationKey: \"common.retry\",\n                            children: \"Retry\"\n                          });\n                        }\n                      }), createComponent(Button, {\n                        get leftIcon() {\n                          return createComponent(QRIcon, {\n                            get fill() {\n                              return theme.colors.accent;\n                            }\n                          });\n                        },\n                        onClick: onOpenQR,\n                        get children() {\n                          return createComponent(Translation, {\n                            translationKey: \"walletModal.mobileConnectionModal.showQR\",\n                            children: \"Show QR Code\"\n                          });\n                        }\n                      })];\n                    }\n                  })];\n                }\n              }), createComponent(Show, {\n                get when() {\n                  return !connectionErrored();\n                },\n                get children() {\n                  return [createComponent(LoaderStyled, {\n                    size: \"s\"\n                  }), createComponent(BodyTextStyled, {\n                    translationKey: \"walletModal.mobileConnectionModal.continueIn\",\n                    get translationValues() {\n                      return {\n                        name: props.wallet.name\n                      };\n                    },\n                    get children() {\n                      return [\"Continue in \", createMemo(() => props.wallet.name), \"\\u2026\"];\n                    }\n                  }), createComponent(ButtonsContainerStyled, {\n                    get children() {\n                      return [createComponent(Button, {\n                        get leftIcon() {\n                          return createComponent(RetryIcon, {});\n                        },\n                        onClick: onRetry,\n                        get children() {\n                          return createComponent(Translation, {\n                            translationKey: \"common.retry\",\n                            children: \"Retry\"\n                          });\n                        }\n                      }), createComponent(Button, {\n                        get leftIcon() {\n                          return createComponent(QRIcon, {\n                            get fill() {\n                              return theme.colors.accent;\n                            }\n                          });\n                        },\n                        onClick: onOpenQR,\n                        get children() {\n                          return createComponent(Translation, {\n                            translationKey: \"walletModal.mobileConnectionModal.showQR\",\n                            children: \"Show QR Code\"\n                          });\n                        }\n                      })];\n                    }\n                  })];\n                }\n              })];\n            }\n          }), createComponent(FooterStyled, {\n            get children() {\n              return [createComponent(ImageStyled, {\n                get src() {\n                  return props.wallet.imageUrl;\n                }\n              }), createComponent(H3, {\n                get children() {\n                  return props.wallet.name;\n                }\n              }), createComponent(FooterButton, {\n                get href() {\n                  return props.wallet.aboutUrl;\n                },\n                blank: true,\n                get children() {\n                  return createComponent(Button, {\n                    get children() {\n                      return createComponent(Translation, {\n                        translationKey: \"common.get\",\n                        children: \"GET\"\n                      });\n                    }\n                  });\n                }\n              })];\n            }\n          })];\n        }\n      })];\n    }\n  });\n};\nconst borders$1 = {\n  m: \"16px\",\n  s: \"12px\",\n  none: \"0\"\n};\nconst tgBorders = {\n  m: \"6px\",\n  s: \"6px\",\n  none: \"0\"\n};\nconst UlStyled = styled.ul`\n    display: flex;\n    justify-content: space-between;\n    margin: 0 auto;\n    width: fit-content;\n    max-width: 100%;\n    min-width: 100%;\n    height: fit-content;\n    overflow-x: auto;\n    overflow-y: hidden;\n    padding: 0 13px 24px;\n\n    &&::-webkit-scrollbar {\n        display: none;\n    }\n\n    -ms-overflow-style: none;\n    scrollbar-width: none;\n\n    > li {\n        height: fit-content;\n    }\n`;\nconst OtherOptionButton = styled.li`\n    width: 82px;\n    min-width: 82px;\n    height: 124px;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    padding: 8px 4px;\n\n    text-align: center;\n    cursor: pointer;\n\n    transition: transform 0.1s ease-in-out;\n\n    ${mediaNotTouch} {\n        &:hover {\n            transform: scale(1.04);\n        }\n    }\n\n    &:active {\n        transform: scale(0.96);\n    }\n\n    ${mediaTouch} {\n        &:active {\n            transform: scale(0.92);\n        }\n    }\n`;\nconst Divider = styled.div`\n    width: 1px;\n    margin: 0 10px;\n    height: 24px;\n    position: relative;\n    top: 26px;\n\n    background-color: ${(props) => props.theme.colors.icon.secondary};\n    opacity: 0.2;\n`;\nconst IconContainer = styled.div`\n    width: 60px;\n    height: 60px;\n    border-radius: ${(props) => borders$1[props.theme.borderRadius]};\n    display: flex;\n    align-items: center;\n    justify-content: center;\n\n    background-color: ${(props) => props.theme.colors.background.tint};\n    margin-bottom: 8px;\n`;\nconst H1Styled$2 = styled(H1)`\n    margin-top: 38px;\n    margin-bottom: 4px;\n    padding: 0 24px;\n`;\nconst H2Styled$2 = styled(H2)`\n    margin-bottom: 24px;\n    padding: 0 24px;\n    min-height: 44px;\n    max-width: ${(props) => props.maxWidth}px;\n    margin-left: ${(props) => props.maxWidth ? \"auto\" : \"0px\"};\n    margin-right: ${(props) => props.maxWidth ? \"auto\" : \"0px\"};\n`;\nstyled(Button)`\n    display: block;\n    margin: 0 auto;\n`;\nconst TelegramButtonStyled = styled(Button)`\n    margin: 0 24px 24px;\n    width: calc(100% - 48px);\n    border-radius: ${(props) => borders$1[props.theme.borderRadius]};\n    padding: 14px 16px 14px 14px;\n    background-color: ${(props) => props.theme.colors.telegramButton};\n\n    color: ${(props) => props.theme.colors.constant.white};\n    font-weight: 510;\n    font-size: 16px;\n    line-height: 20px;\n`;\nconst TGImageStyled = styled(Image)`\n    background-color: transparent;\n    border-radius: ${(props) => tgBorders[props.theme.borderRadius]};\n    width: 24px;\n    height: 24px;\n`;\nconst StyledLeftActionButton = styled(IconButton)`\n    position: absolute;\n    top: 16px;\n    left: 16px;\n`;\nconst H1Styled$1 = styled(H1)`\n    margin-bottom: 2px;\n    padding: 0 64px;\n`;\nconst H2Styled$1 = styled(H2)`\n    margin-bottom: 20px;\n    padding: 0 64px;\n`;\nconst QrCodeWrapper = styled.div`\n    padding: 0 24px 24px;\n`;\nconst MobileUniversalQR = (props) => {\n  return [createComponent(H1Styled$1, {\n    translationKey: \"walletModal.mobileUniversalModal.connectYourWallet\",\n    children: \"Connect your wallet\"\n  }), createComponent(H2Styled$1, {\n    translationKey: \"walletModal.mobileUniversalModal.scan\",\n    children: \"Scan with your mobile wallet\"\n  }), createComponent(QrCodeWrapper, {\n    get children() {\n      return createComponent(QRCode, {\n        get imageUrl() {\n          return IMG.TON;\n        },\n        get sourceUrl() {\n          return addReturnStrategy(props.universalLink, \"none\");\n        },\n        disableCopy: true\n      });\n    }\n  })];\n};\nfunction getUniqueBridges(walletsList) {\n  const uniqueBridges = new Set(\n    walletsList.filter(_tonconnect_sdk__WEBPACK_IMPORTED_MODULE_0__.isWalletInfoRemote).map((item) => item.bridgeUrl)\n  );\n  return Array.from(uniqueBridges).map((bridgeUrl) => ({ bridgeUrl }));\n}\nfunction bridgesIsEqual(left, right) {\n  const leftSet = new Set(left == null ? void 0 : left.map((i2) => i2.bridgeUrl));\n  const rightSet = new Set(right == null ? void 0 : right.map((i2) => i2.bridgeUrl));\n  return leftSet.size === rightSet.size && [...leftSet].every((value) => rightSet.has(value));\n}\nconst _tmpl$$1 = /* @__PURE__ */ template$1(`<li></li>`), _tmpl$2 = /* @__PURE__ */ template$1(`<div data-tc-wallets-modal-universal-mobile=\"true\"></div>`);\nconst MobileUniversalModal = (props) => {\n  const [showQR, setShowQR] = createSignal(false);\n  const [firstClick, setFirstClick] = createSignal(true);\n  const [universalLink, setUniversalLink] = createSignal(null);\n  const connector = appState.connector;\n  const walletsList = () => props.walletsList.filter((w) => supportsMobile(w) && w.appName !== AT_WALLET_APP_NAME);\n  const shouldShowMoreButton = () => walletsList().length > 7;\n  const walletsBridges = createMemo(() => getUniqueBridges(props.walletsList), null, {\n    equals: bridgesIsEqual\n  });\n  const getUniversalLink = () => {\n    if (!universalLink()) {\n      setUniversalLink(connector.connect(walletsBridges(), props.additionalRequest));\n    }\n    return universalLink();\n  };\n  setLastSelectedWalletInfo({\n    openMethod: \"universal-link\"\n  });\n  const [isCopiedShown, setIsCopiedShown] = createSignal(void 0);\n  const onCopy = () => __async(void 0, null, function* () {\n    if (isCopiedShown() !== void 0) {\n      clearTimeout(isCopiedShown());\n    }\n    yield copyToClipboard(getUniversalLink());\n    const timeoutId = setTimeout(() => setIsCopiedShown(void 0), 1500);\n    setIsCopiedShown(timeoutId);\n  });\n  const onSelectUniversal = () => {\n    const forceRedirect = !firstClick();\n    setFirstClick(false);\n    redirectToWallet(getUniversalLink(), void 0, {\n      returnStrategy: appState.returnStrategy,\n      forceRedirect\n    }, (method) => {\n      setLastSelectedWalletInfo({\n        openMethod: method\n      });\n    });\n  };\n  const onSelectTelegram = () => {\n    setUniversalLink(null);\n    const atWallet = props.walletsList.find((wallet) => wallet.appName === AT_WALLET_APP_NAME);\n    if (!atWallet || !(0,_tonconnect_sdk__WEBPACK_IMPORTED_MODULE_0__.isWalletInfoRemote)(atWallet)) {\n      throw new TonConnectUIError(\"@wallet bot not found in the wallets list\");\n    }\n    const walletLink = connector.connect({\n      bridgeUrl: atWallet.bridgeUrl,\n      universalLink: atWallet.universalLink\n    }, props.additionalRequest);\n    const forceRedirect = !firstClick();\n    setFirstClick(false);\n    redirectToTelegram(walletLink, {\n      returnStrategy: appState.returnStrategy,\n      twaReturnUrl: appState.twaReturnUrl,\n      forceRedirect\n    });\n  };\n  const onOpenQR = () => {\n    setShowQR(true);\n    setLastSelectedWalletInfo({\n      openMethod: \"qrcode\"\n    });\n  };\n  const onCloseQR = () => {\n    setShowQR(false);\n    setLastSelectedWalletInfo({\n      openMethod: \"universal-link\"\n    });\n  };\n  return (() => {\n    const _el$ = _tmpl$2.cloneNode(true);\n    insert(_el$, createComponent(Show, {\n      get when() {\n        return showQR();\n      },\n      get children() {\n        return [createComponent(StyledLeftActionButton, {\n          icon: \"arrow\",\n          onClick: onCloseQR\n        }), createComponent(MobileUniversalQR, {\n          get universalLink() {\n            return getUniversalLink();\n          }\n        })];\n      }\n    }), null);\n    insert(_el$, createComponent(Show, {\n      get when() {\n        return !showQR();\n      },\n      get children() {\n        return [createComponent(StyledLeftActionButton, {\n          get icon() {\n            return createComponent(QRIcon, {});\n          },\n          onClick: onOpenQR\n        }), createComponent(H1Styled$2, {\n          translationKey: \"walletModal.mobileUniversalModal.connectYourWallet\",\n          children: \"Connect your wallet\"\n        }), createComponent(H2Styled$2, {\n          translationKey: \"walletModal.mobileUniversalModal.openWalletOnTelegramOrSelect\",\n          maxWidth: 342,\n          children: \"Open Wallet in Telegram or select your wallet to connect\"\n        }), createComponent(TelegramButtonStyled, {\n          get leftIcon() {\n            return createComponent(AtWalletIcon, {});\n          },\n          get rightIcon() {\n            return createComponent(TGImageStyled, {\n              get src() {\n                return IMG.TG;\n              }\n            });\n          },\n          onClick: onSelectTelegram,\n          scale: \"s\",\n          get children() {\n            return createComponent(Translation, {\n              translationKey: \"walletModal.mobileUniversalModal.openWalletOnTelegram\",\n              children: \"Open Wallet in Telegram\"\n            });\n          }\n        }), createComponent(UlStyled, {\n          get children() {\n            return [createComponent(For, {\n              get each() {\n                return createMemo(() => !!shouldShowMoreButton())() ? walletsList().slice(0, 4) : walletsList();\n              },\n              children: (wallet) => (() => {\n                const _el$3 = _tmpl$$1.cloneNode(true);\n                insert(_el$3, createComponent(WalletItem, {\n                  get icon() {\n                    return wallet.imageUrl;\n                  },\n                  get name() {\n                    return wallet.name;\n                  },\n                  onClick: () => props.onSelect(wallet)\n                }));\n                return _el$3;\n              })()\n            }), createComponent(Show, {\n              get when() {\n                return shouldShowMoreButton();\n              },\n              get children() {\n                const _el$2 = _tmpl$$1.cloneNode(true);\n                insert(_el$2, createComponent(FourWalletsItem, {\n                  labelLine1: \"View all\",\n                  labelLine2: \"wallets\",\n                  get images() {\n                    return walletsList().slice(3, 7).map((i2) => i2.imageUrl);\n                  },\n                  onClick: () => props.onSelectAllWallets()\n                }));\n                return _el$2;\n              }\n            }), createComponent(Divider, {\n              children: \"\\xA0\"\n            }), createComponent(OtherOptionButton, {\n              onClick: onSelectUniversal,\n              get children() {\n                return [createComponent(IconContainer, {\n                  get children() {\n                    return createComponent(LongArrowIcon, {});\n                  }\n                }), createComponent(Text, {\n                  fontWeight: 590,\n                  translationKey: \"walletModal.mobileUniversalModal.openLink\",\n                  children: \"Open Link\"\n                })];\n              }\n            }), createComponent(OtherOptionButton, {\n              onClick: onCopy,\n              get children() {\n                return [createComponent(IconContainer, {\n                  get children() {\n                    return createMemo(() => isCopiedShown() !== void 0)() ? createComponent(DoneIcon, {}) : createComponent(CopyLightIcon, {});\n                  }\n                }), createComponent(Text, {\n                  fontWeight: 590,\n                  get translationKey() {\n                    return isCopiedShown() !== void 0 ? \"common.copied\" : \"common.copyLink\";\n                  },\n                  get children() {\n                    return isCopiedShown() !== void 0 ? \"Copied\" : \"Copy Link\";\n                  }\n                })];\n              }\n            })];\n          }\n        })];\n      }\n    }), null);\n    return _el$;\n  })();\n};\nconst borders = {\n  m: \"16px\",\n  s: \"8px\",\n  none: \"0\"\n};\nconst hoverBorders = {\n  m: \"8px\",\n  s: \"4px\",\n  none: \"0\"\n};\nconst DesktopUniversalModalStyled = styled.div`\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    padding-bottom: 16px;\n`;\nconst H2Styled = styled(H2)`\n    max-width: 320px;\n    margin-top: 2px;\n    margin-bottom: 20px;\n`;\nconst H2AvailableWalletsStyled = styled(H2)`\n    margin-bottom: 16px;\n`;\nconst QRCodeStyled = styled(QRCode)`\n    margin-bottom: 24px;\n`;\nconst WalletsContainerStyled = styled.ul`\n    display: flex;\n`;\nstyled.div`\n    display: flex;\n    gap: 16px;\n    width: 100%;\n`;\nstyled(Button)`\n    position: relative;\n    font-size: 16px;\n    line-height: 20px;\n    width: 100%;\n    padding: 0 16px;\n    height: 56px;\n    border-radius: ${(props) => borders[props.theme.borderRadius]};\n\n    &:hover {\n        ${(props) => props.disableEventsAnimation ? \"transform: unset;\" : \"\"}\n    }\n\n    &:active {\n        ${(props) => props.disableEventsAnimation ? \"transform: unset;\" : \"\"}\n    }\n`;\nstyled.ul`\n    position: absolute;\n    bottom: 100%;\n    left: 0;\n    margin: 0;\n    padding: 8px;\n    width: 188px;\n    transform: translateY(-16px);\n\n    background-color: ${(props) => props.theme.colors.background.primary};\n    border-radius: ${(props) => borders[props.theme.borderRadius]};\n    box-shadow: 0 4px 24px rgba(0, 0, 0, 0.16);\n`;\nstyled.li`\n    padding: 8px;\n\n    display: flex;\n    align-items: center;\n    gap: 8px;\n\n    cursor: pointer;\n    border-radius: ${(props) => hoverBorders[props.theme.borderRadius]};\n\n    transition: background-color, transform 0.1s ease-in-out;\n\n    &:hover {\n        background-color: ${(props) => props.theme.colors.background.secondary};\n    }\n\n    &:active {\n        transform: scale(0.96);\n    }\n`;\nstyled(Image)`\n    width: 24px;\n    height: 24px;\n\n    border-radius: 6px;\n`;\nstyled.div`\n    margin-top: 23px;\n    margin-bottom: 1px;\n    width: 100%;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n`;\nstyled(Text)`\n    color: ${(props) => props.theme.colors.text.secondary};\n    font-size: 16px;\n`;\nconst _tmpl$ = /* @__PURE__ */ template$1(`<li></li>`);\nconst DesktopUniversalModal = (props) => {\n  const [popupOpened, setPopupOpened] = createSignal(false);\n  const connector = appState.connector;\n  const walletsBridges = createMemo(() => getUniqueBridges(props.walletsList), null, {\n    equals: bridgesIsEqual\n  });\n  setLastSelectedWalletInfo({\n    openMethod: \"qrcode\"\n  });\n  const request = createMemo(() => connector.connect(walletsBridges(), props.additionalRequest));\n  return createComponent(DesktopUniversalModalStyled, {\n    onClick: () => setPopupOpened(false),\n    \"data-tc-wallets-modal-universal-desktop\": \"true\",\n    get children() {\n      return [createComponent(H1, {\n        translationKey: \"walletModal.desktopUniversalModal.connectYourWallet\",\n        children: \"Connect your wallet\"\n      }), createComponent(H2Styled, {\n        translationKey: \"walletModal.desktopUniversalModal.scan\",\n        children: \"Scan with your mobile wallet\"\n      }), createComponent(QRCodeStyled, {\n        get sourceUrl() {\n          return addReturnStrategy(request(), \"none\");\n        },\n        get disableCopy() {\n          return popupOpened();\n        },\n        get imageUrl() {\n          return IMG.TON;\n        }\n      }), createComponent(H2AvailableWalletsStyled, {\n        translationKey: \"walletModal.desktopUniversalModal.availableWallets\",\n        children: \"Available wallets\"\n      }), createComponent(WalletsContainerStyled, {\n        get children() {\n          return [createComponent(For, {\n            get each() {\n              return props.walletsList.slice(0, 3);\n            },\n            children: (wallet) => (() => {\n              const _el$ = _tmpl$.cloneNode(true);\n              insert(_el$, createComponent(WalletLabeledItem, {\n                wallet,\n                onClick: () => props.onSelect(wallet)\n              }));\n              return _el$;\n            })()\n          }), createComponent(FourWalletsItem, {\n            labelLine1: \"View all\",\n            labelLine2: \"wallets\",\n            get images() {\n              return props.walletsList.slice(3, 7).map((i2) => i2.imageUrl);\n            },\n            onClick: () => props.onSelectAllWallets()\n          })];\n        }\n      })];\n    }\n  });\n};\nconst WalletsModal = () => {\n  const {\n    locale\n  } = useI18n()[1];\n  createEffect(() => locale(appState.language));\n  createEffect(() => {\n    if (getWalletsModalIsOpened()) {\n      updateIsMobile();\n    } else {\n      setSelectedWalletInfo(null);\n      setSelectedTab(\"universal\");\n      setInfoTab(false);\n    }\n  });\n  const connector = useContext(ConnectorContext);\n  const tonConnectUI = useContext(TonConnectUiContext);\n  const [fetchedWalletsList] = createResource(() => tonConnectUI.getWallets());\n  const [selectedWalletInfo, setSelectedWalletInfo] = createSignal(null);\n  const [selectedTab, setSelectedTab] = createSignal(\"universal\");\n  const [infoTab, setInfoTab] = createSignal(false);\n  const walletsList = createMemo(() => {\n    if (fetchedWalletsList.state !== \"ready\") {\n      return null;\n    }\n    let walletsList2 = applyWalletsListConfiguration(fetchedWalletsList(), appState.walletsListConfiguration);\n    const injectedWallets = walletsList2.filter(_tonconnect_sdk__WEBPACK_IMPORTED_MODULE_0__.isWalletInfoCurrentlyInjected);\n    const notInjectedWallets = walletsList2.filter((w) => !(0,_tonconnect_sdk__WEBPACK_IMPORTED_MODULE_0__.isWalletInfoCurrentlyInjected)(w));\n    walletsList2 = (injectedWallets || []).concat(notInjectedWallets);\n    const preferredWalletAppName = appState.preferredWalletAppName;\n    const preferredWallet = walletsList2.find((item) => eqWalletName(item, preferredWalletAppName));\n    const someWalletsWithSameName = walletsList2.filter((item) => eqWalletName(item, preferredWalletAppName)).length >= 2;\n    if (preferredWalletAppName && preferredWallet && !someWalletsWithSameName) {\n      walletsList2 = [__spreadProps(__spreadValues({}, preferredWallet), {\n        isPreferred: true\n      })].concat(walletsList2.filter((item) => !eqWalletName(item, preferredWalletAppName)));\n    }\n    const atWallet = walletsList2.find((item) => eqWalletName(item, AT_WALLET_APP_NAME));\n    if (atWallet) {\n      walletsList2 = [atWallet].concat(walletsList2.filter((item) => !eqWalletName(item, AT_WALLET_APP_NAME)));\n    }\n    return walletsList2;\n  });\n  const additionalRequestLoading = () => {\n    var _a2;\n    return ((_a2 = appState.connectRequestParameters) == null ? void 0 : _a2.state) === \"loading\";\n  };\n  const additionalRequest = createMemo(() => {\n    var _a2;\n    if (additionalRequestLoading()) {\n      return void 0;\n    }\n    return (_a2 = appState.connectRequestParameters) == null ? void 0 : _a2.value;\n  });\n  const onClose = (closeReason) => {\n    tonConnectUI.closeModal(closeReason);\n  };\n  const unsubscribe = connector.onStatusChange((wallet) => {\n    if (wallet) {\n      onClose(\"wallet-selected\");\n    }\n  });\n  const onSelectAllWallets = () => {\n    setSelectedTab(\"all-wallets\");\n  };\n  const onSelectUniversal = () => {\n    setSelectedTab(\"universal\");\n  };\n  const clearSelectedWalletInfo = () => {\n    setSelectedWalletInfo(null);\n  };\n  onCleanup(() => {\n    setSelectedWalletInfo(null);\n    setInfoTab(false);\n  });\n  onCleanup(unsubscribe);\n  return createComponent(StyledModal, {\n    get opened() {\n      return getWalletsModalIsOpened();\n    },\n    get enableAndroidBackHandler() {\n      return appState.enableAndroidBackHandler;\n    },\n    onClose: () => onClose(\"action-cancelled\"),\n    onClickQuestion: () => setInfoTab((v) => !v),\n    \"data-tc-wallets-modal-container\": \"true\",\n    get children() {\n      return [createComponent(Show, {\n        get when() {\n          return infoTab();\n        },\n        get children() {\n          return createComponent(InfoModal, {\n            onBackClick: () => setInfoTab(false)\n          });\n        }\n      }), createComponent(Show, {\n        get when() {\n          return !infoTab();\n        },\n        get children() {\n          return [createComponent(Show, {\n            get when() {\n              return additionalRequestLoading() || !walletsList();\n            },\n            get children() {\n              return [createComponent(H1Styled$8, {\n                translationKey: \"walletModal.loading\",\n                children: \"Wallets list is loading\"\n              }), createComponent(LoaderContainerStyled, {\n                get children() {\n                  return createComponent(LoaderIcon, {\n                    size: \"m\"\n                  });\n                }\n              })];\n            }\n          }), createComponent(Show, {\n            get when() {\n              return createMemo(() => !!!additionalRequestLoading())() && walletsList();\n            },\n            get children() {\n              return createComponent(Switch, {\n                get children() {\n                  return [createComponent(Match, {\n                    get when() {\n                      return selectedWalletInfo();\n                    },\n                    get children() {\n                      return createComponent(Dynamic, {\n                        get component() {\n                          return isMobile() ? MobileConnectionModal : DesktopConnectionModal;\n                        },\n                        get wallet() {\n                          return selectedWalletInfo();\n                        },\n                        get additionalRequest() {\n                          return additionalRequest();\n                        },\n                        onBackClick: clearSelectedWalletInfo\n                      });\n                    }\n                  }), createComponent(Match, {\n                    get when() {\n                      return selectedTab() === \"universal\";\n                    },\n                    get children() {\n                      return createComponent(Dynamic, {\n                        get component() {\n                          return isMobile() ? MobileUniversalModal : DesktopUniversalModal;\n                        },\n                        onSelect: setSelectedWalletInfo,\n                        get walletsList() {\n                          return walletsList();\n                        },\n                        get additionalRequest() {\n                          return additionalRequest();\n                        },\n                        onSelectAllWallets\n                      });\n                    }\n                  }), createComponent(Match, {\n                    get when() {\n                      return selectedTab() === \"all-wallets\";\n                    },\n                    get children() {\n                      return createComponent(AllWalletsListModal, {\n                        get walletsList() {\n                          return walletsList();\n                        },\n                        onBack: onSelectUniversal,\n                        onSelect: setSelectedWalletInfo\n                      });\n                    }\n                  })];\n                }\n              });\n            }\n          })];\n        }\n      })];\n    }\n  });\n};\nconst ActionModalStyled = styled.div`\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    padding-bottom: 8px;\n`;\nconst H1Styled = styled(H1)`\n    margin-top: 16px;\n`;\nconst TextStyled = styled(Text)`\n    font-weight: 510;\n    font-size: 16px;\n    line-height: 20px;\n    text-align: center;\n    max-width: 250px;\n\n    color: ${(props) => props.theme.colors.text.secondary};\n`;\nconst LoaderButtonStyled = styled(Button)`\n    min-width: 112px;\n    margin-top: 32px;\n`;\nconst LoaderIconStyled = styled(LoaderIcon)`\n    height: 16px;\n    width: 16px;\n`;\nconst ButtonStyled = styled(Button)`\n    margin-top: 32px;\n`;\nconst ActionModal = (props) => {\n  const dataAttrs = useDataAttributes(props);\n  const tonConnectUI = useContext(TonConnectUiContext);\n  const [firstClick, setFirstClick] = createSignal(true);\n  const [sent, setSent] = createSignal(false);\n  createEffect(() => {\n    const currentAction = action();\n    setSent(!!currentAction && \"sent\" in currentAction && currentAction.sent);\n  });\n  let universalLink;\n  if ((tonConnectUI == null ? void 0 : tonConnectUI.wallet) && \"universalLink\" in tonConnectUI.wallet && (tonConnectUI.wallet.openMethod === \"universal-link\" || (0,_tonconnect_sdk__WEBPACK_IMPORTED_MODULE_0__.isTelegramUrl)(tonConnectUI.wallet.universalLink) && isInTMA())) {\n    universalLink = tonConnectUI.wallet.universalLink;\n  }\n  let deepLink;\n  if ((tonConnectUI == null ? void 0 : tonConnectUI.wallet) && \"deepLink\" in tonConnectUI.wallet && (tonConnectUI.wallet.openMethod === \"custom-deeplink\" || (0,_tonconnect_sdk__WEBPACK_IMPORTED_MODULE_0__.isTelegramUrl)(tonConnectUI.wallet.deepLink) && isInTMA())) {\n    deepLink = tonConnectUI.wallet.deepLink;\n  }\n  const onOpenWallet = () => {\n    const currentAction = action();\n    const returnStrategy = \"returnStrategy\" in currentAction ? currentAction.returnStrategy : appState.returnStrategy;\n    const forceRedirect = !firstClick();\n    setFirstClick(false);\n    if ((0,_tonconnect_sdk__WEBPACK_IMPORTED_MODULE_0__.isTelegramUrl)(universalLink)) {\n      redirectToTelegram(universalLink, {\n        returnStrategy,\n        twaReturnUrl: \"twaReturnUrl\" in currentAction ? currentAction.twaReturnUrl : appState.twaReturnUrl,\n        forceRedirect\n      });\n    } else {\n      redirectToWallet(universalLink, deepLink, {\n        returnStrategy,\n        forceRedirect\n      }, () => {\n      });\n    }\n  };\n  return createComponent(ActionModalStyled, mergeProps(dataAttrs, {\n    get children() {\n      return [createMemo(() => props.icon), createComponent(H1Styled, {\n        get translationKey() {\n          return props.headerTranslationKey;\n        },\n        get translationValues() {\n          return props.headerTranslationValues;\n        }\n      }), createComponent(TextStyled, {\n        get translationKey() {\n          return props.textTranslationKey;\n        },\n        get translationValues() {\n          return props.textTranslationValues;\n        }\n      }), createComponent(Show, {\n        get when() {\n          return !sent() && (props.showButton === \"open-wallet\" && universalLink || props.showButton !== \"open-wallet\");\n        },\n        get children() {\n          return createComponent(LoaderButtonStyled, {\n            disabled: true,\n            \"data-tc-connect-button-loading\": \"true\",\n            get children() {\n              return createComponent(LoaderIconStyled, {});\n            }\n          });\n        }\n      }), createComponent(Show, {\n        get when() {\n          return sent();\n        },\n        get children() {\n          return [createComponent(Show, {\n            get when() {\n              return props.showButton !== \"open-wallet\";\n            },\n            get children() {\n              return createComponent(ButtonStyled, {\n                onClick: () => props.onClose(),\n                get children() {\n                  return createComponent(Translation, {\n                    translationKey: \"common.close\",\n                    children: \"Close\"\n                  });\n                }\n              });\n            }\n          }), createComponent(Show, {\n            get when() {\n              return props.showButton === \"open-wallet\" && universalLink;\n            },\n            get children() {\n              return createComponent(ButtonStyled, {\n                onClick: onOpenWallet,\n                get children() {\n                  return createComponent(Translation, {\n                    translationKey: \"common.openWallet\",\n                    children: \"Open wallet\"\n                  });\n                }\n              });\n            }\n          })];\n        }\n      })];\n    }\n  }));\n};\nconst ConfirmTransactionModal = (props) => {\n  const tonConnectUI = useContext(TonConnectUiContext);\n  const [t2] = useI18n();\n  const name = () => tonConnectUI.wallet && \"name\" in tonConnectUI.wallet ? tonConnectUI.wallet.name : t2(\"common.yourWallet\", {}, \"Your wallet\");\n  return createComponent(ActionModal, {\n    headerTranslationKey: \"actionModal.confirmTransaction.header\",\n    get headerTranslationValues() {\n      return {\n        name: name()\n      };\n    },\n    textTranslationKey: \"actionModal.confirmTransaction.text\",\n    get icon() {\n      return createComponent(LoaderIcon, {\n        size: \"m\"\n      });\n    },\n    onClose: () => props.onClose(),\n    showButton: \"open-wallet\",\n    \"data-tc-confirm-modal\": \"true\"\n  });\n};\nconst TransactionCanceledModal = (props) => {\n  return createComponent(ActionModal, {\n    headerTranslationKey: \"actionModal.transactionCanceled.header\",\n    textTranslationKey: \"actionModal.transactionCanceled.text\",\n    get icon() {\n      return createComponent(ErrorIcon, {\n        size: \"m\"\n      });\n    },\n    onClose: () => props.onClose(),\n    \"data-tc-transaction-canceled-modal\": \"true\"\n  });\n};\nconst TransactionSentModal = (props) => {\n  return createComponent(ActionModal, {\n    headerTranslationKey: \"actionModal.transactionSent.header\",\n    textTranslationKey: \"actionModal.transactionSent.text\",\n    get icon() {\n      return createComponent(SuccessIcon, {\n        size: \"m\"\n      });\n    },\n    onClose: () => props.onClose(),\n    \"data-tc-transaction-sent-modal\": \"true\"\n  });\n};\nconst ActionsModal = () => {\n  return createComponent(Modal, {\n    get opened() {\n      var _a2;\n      return createMemo(() => action() !== null)() && ((_a2 = action()) == null ? void 0 : _a2.openModal) === true;\n    },\n    get enableAndroidBackHandler() {\n      return appState.enableAndroidBackHandler;\n    },\n    onClose: () => setAction(null),\n    \"data-tc-actions-modal-container\": \"true\",\n    get children() {\n      return createComponent(Switch, {\n        get children() {\n          return [createComponent(Match, {\n            get when() {\n              return action().name === \"transaction-sent\";\n            },\n            get children() {\n              return createComponent(TransactionSentModal, {\n                onClose: () => setAction(null)\n              });\n            }\n          }), createComponent(Match, {\n            get when() {\n              return action().name === \"transaction-canceled\";\n            },\n            get children() {\n              return createComponent(TransactionCanceledModal, {\n                onClose: () => setAction(null)\n              });\n            }\n          }), createComponent(Match, {\n            get when() {\n              return action().name === \"confirm-transaction\";\n            },\n            get children() {\n              return createComponent(ConfirmTransactionModal, {\n                onClose: () => setAction(null)\n              });\n            }\n          })];\n        }\n      });\n    }\n  });\n};\nconst SingleWalletModal = () => {\n  const {\n    locale\n  } = useI18n()[1];\n  createEffect(() => locale(appState.language));\n  createEffect(() => {\n    if (getSingleWalletModalIsOpened()) {\n      updateIsMobile();\n    }\n  });\n  const connector = useContext(ConnectorContext);\n  const tonConnectUI = useContext(TonConnectUiContext);\n  const [infoTab, setInfoTab] = createSignal(false);\n  const additionalRequestLoading = () => {\n    var _a2;\n    return ((_a2 = appState.connectRequestParameters) == null ? void 0 : _a2.state) === \"loading\";\n  };\n  const additionalRequest = createMemo(() => {\n    var _a2;\n    if (additionalRequestLoading()) {\n      return void 0;\n    }\n    return (_a2 = appState.connectRequestParameters) == null ? void 0 : _a2.value;\n  });\n  const onClose = (closeReason) => {\n    tonConnectUI.closeSingleWalletModal(closeReason);\n  };\n  const unsubscribe = connector.onStatusChange((wallet) => {\n    if (wallet) {\n      onClose(\"wallet-selected\");\n    }\n  });\n  onCleanup(unsubscribe);\n  onCleanup(() => {\n    setInfoTab(false);\n  });\n  return createComponent(StyledModal, {\n    get opened() {\n      return getSingleWalletModalIsOpened();\n    },\n    get enableAndroidBackHandler() {\n      return appState.enableAndroidBackHandler;\n    },\n    onClose: () => onClose(\"action-cancelled\"),\n    onClickQuestion: () => setInfoTab((v) => !v),\n    \"data-tc-wallets-modal-container\": \"true\",\n    get children() {\n      return [createComponent(Show, {\n        get when() {\n          return infoTab();\n        },\n        get children() {\n          return createComponent(InfoModal, {\n            onBackClick: () => setInfoTab(false)\n          });\n        }\n      }), createComponent(Show, {\n        get when() {\n          return !infoTab();\n        },\n        get children() {\n          return [createComponent(Show, {\n            get when() {\n              return additionalRequestLoading();\n            },\n            get children() {\n              return [createComponent(H1Styled$8, {\n                translationKey: \"walletModal.loading\",\n                children: \"Wallets list is loading\"\n              }), createComponent(LoaderContainerStyled, {\n                get children() {\n                  return createComponent(LoaderIcon, {\n                    size: \"m\"\n                  });\n                }\n              })];\n            }\n          }), createComponent(Show, {\n            get when() {\n              return !additionalRequestLoading();\n            },\n            get children() {\n              return createComponent(Dynamic, {\n                get component() {\n                  return isMobile() ? MobileConnectionModal : DesktopConnectionModal;\n                },\n                get wallet() {\n                  return getSingleWalletModalWalletInfo();\n                },\n                get additionalRequest() {\n                  return additionalRequest();\n                },\n                onBackClick: () => {\n                },\n                backDisabled: true\n              });\n            }\n          })];\n        }\n      })];\n    }\n  });\n};\nconst App = (props) => {\n  const translations = createI18nContext(i18nDictionary, appState.language);\n  defineStylesRoot();\n  fixMobileSafariActiveTransition();\n  return createComponent(I18nContext.Provider, {\n    value: translations,\n    get children() {\n      return createComponent(TonConnectUiContext.Provider, {\n        get value() {\n          return props.tonConnectUI;\n        },\n        get children() {\n          return createComponent(ConnectorContext.Provider, {\n            get value() {\n              return appState.connector;\n            },\n            get children() {\n              return [createComponent(GlobalStyles, {}), createComponent(ThemeProvider, {\n                theme: themeState,\n                get children() {\n                  return [createComponent(Show, {\n                    get when() {\n                      return appState.buttonRootId;\n                    },\n                    get children() {\n                      return createComponent(Portal, {\n                        get mount() {\n                          return document.getElementById(appState.buttonRootId);\n                        },\n                        get children() {\n                          return createComponent(AccountButton, {});\n                        }\n                      });\n                    }\n                  }), createComponent(Dynamic, {\n                    component: globalStylesTag,\n                    get children() {\n                      return [createComponent(WalletsModal, {}), createComponent(SingleWalletModal, {}), createComponent(ActionsModal, {})];\n                    }\n                  })];\n                }\n              })];\n            }\n          });\n        }\n      });\n    }\n  });\n};\nconst widgetController = {\n  openWalletsModal: () => void setTimeout(() => setWalletsModalState({\n    status: \"opened\",\n    closeReason: null\n  })),\n  closeWalletsModal: (reason) => void setTimeout(() => setWalletsModalState({\n    status: \"closed\",\n    closeReason: reason\n  })),\n  openSingleWalletModal: (walletInfo) => {\n    void setTimeout(() => setSingleWalletModalState({\n      status: \"opened\",\n      closeReason: null,\n      walletInfo\n    }));\n  },\n  closeSingleWalletModal: (reason) => void setTimeout(() => setSingleWalletModalState({\n    status: \"closed\",\n    closeReason: reason\n  })),\n  setAction: (action2) => void setTimeout(() => setAction(action2)),\n  clearAction: () => void setTimeout(() => setAction(null)),\n  getSelectedWalletInfo: () => lastSelectedWalletInfo(),\n  removeSelectedWalletInfo: () => setLastSelectedWalletInfo(null),\n  renderApp: (root, tonConnectUI) => render(() => createComponent(App, {\n    tonConnectUI\n  }), document.getElementById(root))\n};\nclass WalletsModalManager {\n  constructor(options) {\n    __publicField(this, \"connector\");\n    __publicField(this, \"setConnectRequestParametersCallback\");\n    __publicField(this, \"consumers\", []);\n    __publicField(this, \"tracker\");\n    __publicField(this, \"state\", walletsModalState());\n    this.connector = options.connector;\n    this.tracker = options.tracker;\n    this.setConnectRequestParametersCallback = options.setConnectRequestParametersCallback;\n    createEffect(() => {\n      const state = walletsModalState();\n      this.state = state;\n      this.consumers.forEach((consumer) => consumer(state));\n    });\n  }\n  open() {\n    return __async(this, null, function* () {\n      this.tracker.trackConnectionStarted();\n      const walletsList = yield this.connector.getWallets();\n      const embeddedWallet = walletsList.find(_tonconnect_sdk__WEBPACK_IMPORTED_MODULE_0__.isWalletInfoCurrentlyEmbedded);\n      if (embeddedWallet) {\n        return this.connectEmbeddedWallet(embeddedWallet);\n      } else {\n        return this.openWalletsModal();\n      }\n    });\n  }\n  close(reason = \"action-cancelled\") {\n    if (reason === \"action-cancelled\") {\n      this.tracker.trackConnectionError(\"Connection was cancelled\");\n    }\n    widgetController.closeWalletsModal(reason);\n  }\n  onStateChange(onChange) {\n    this.consumers.push(onChange);\n    return () => {\n      this.consumers = this.consumers.filter((consumer) => consumer !== onChange);\n    };\n  }\n  connectEmbeddedWallet(embeddedWallet) {\n    const connect = (parameters) => {\n      setLastSelectedWalletInfo(embeddedWallet);\n      this.connector.connect({ jsBridgeKey: embeddedWallet.jsBridgeKey }, parameters);\n    };\n    const additionalRequest = appState.connectRequestParameters;\n    if ((additionalRequest == null ? void 0 : additionalRequest.state) === \"loading\") {\n      this.setConnectRequestParametersCallback(connect);\n    } else {\n      connect(additionalRequest == null ? void 0 : additionalRequest.value);\n    }\n  }\n  openWalletsModal() {\n    return __async(this, null, function* () {\n      if (isInTMA()) {\n        sendExpand();\n      }\n      widgetController.openWalletsModal();\n      return new Promise((resolve) => {\n        const unsubscribe = this.onStateChange((state) => {\n          const { status } = state;\n          if (status === \"opened\") {\n            unsubscribe();\n            resolve();\n          }\n        });\n      });\n    });\n  }\n}\nclass TransactionModalManager {\n  constructor(options) {\n    __publicField(this, \"connector\");\n    __publicField(this, \"consumers\", []);\n    this.connector = options.connector;\n    createEffect(() => {\n      const currentAction = action();\n      this.consumers.forEach((consumer) => consumer(currentAction));\n    });\n  }\n  onStateChange(consumer) {\n    this.consumers.push(consumer);\n    return () => {\n      this.consumers = this.consumers.filter((c2) => c2 !== consumer);\n    };\n  }\n}\nclass SingleWalletModalManager {\n  constructor(options) {\n    __publicField(this, \"connector\");\n    __publicField(this, \"setConnectRequestParametersCallback\");\n    __publicField(this, \"consumers\", []);\n    __publicField(this, \"tracker\");\n    __publicField(this, \"state\", singleWalletModalState());\n    this.connector = options.connector;\n    this.tracker = options.tracker;\n    this.setConnectRequestParametersCallback = options.setConnectRequestParametersCallback;\n    createEffect(() => {\n      const state = singleWalletModalState();\n      this.state = state;\n      this.consumers.forEach((consumer) => consumer(state));\n    });\n  }\n  open(wallet) {\n    return __async(this, null, function* () {\n      this.tracker.trackConnectionStarted();\n      const fetchedWalletsList = yield this.connector.getWallets();\n      const walletsList = applyWalletsListConfiguration(\n        fetchedWalletsList,\n        appState.walletsListConfiguration\n      );\n      const embeddedWallet = walletsList.find(_tonconnect_sdk__WEBPACK_IMPORTED_MODULE_0__.isWalletInfoCurrentlyEmbedded);\n      const isEmbeddedWalletExist = !!embeddedWallet;\n      if (isEmbeddedWalletExist) {\n        return this.connectEmbeddedWallet(embeddedWallet);\n      }\n      const externalWallets = walletsList.filter(_tonconnect_sdk__WEBPACK_IMPORTED_MODULE_0__.isWalletInfoRemote);\n      const externalWallet = externalWallets.find((walletInfo) => eqWalletName(walletInfo, wallet));\n      const isExternalWalletExist = !!externalWallet;\n      if (isExternalWalletExist) {\n        return this.openSingleWalletModal(externalWallet);\n      }\n      const error = `Trying to open modal window with unknown wallet \"${wallet}\".`;\n      this.tracker.trackConnectionError(error);\n      throw new TonConnectUIError(error);\n    });\n  }\n  close(reason = \"action-cancelled\") {\n    if (reason === \"action-cancelled\") {\n      this.tracker.trackConnectionError(\"Connection was cancelled\");\n    }\n    widgetController.closeSingleWalletModal(\"action-cancelled\");\n  }\n  onStateChange(onChange) {\n    this.consumers.push(onChange);\n    return () => {\n      this.consumers = this.consumers.filter((consumer) => consumer !== onChange);\n    };\n  }\n  connectEmbeddedWallet(embeddedWallet) {\n    const connect = (parameters) => {\n      setLastSelectedWalletInfo(embeddedWallet);\n      this.connector.connect({ jsBridgeKey: embeddedWallet.jsBridgeKey }, parameters);\n    };\n    const additionalRequest = appState.connectRequestParameters;\n    if ((additionalRequest == null ? void 0 : additionalRequest.state) === \"loading\") {\n      this.setConnectRequestParametersCallback(connect);\n    } else {\n      connect(additionalRequest == null ? void 0 : additionalRequest.value);\n    }\n  }\n  openSingleWalletModal(wallet) {\n    return __async(this, null, function* () {\n      if (isInTMA()) {\n        sendExpand();\n      }\n      widgetController.openSingleWalletModal(wallet);\n      return new Promise((resolve) => {\n        const unsubscribe = this.onStateChange((state) => {\n          const { status } = state;\n          if (status === \"opened\") {\n            unsubscribe();\n            resolve();\n          }\n        });\n      });\n    });\n  }\n}\nclass TonConnectUITracker {\n  constructor(options) {\n    __publicField(this, \"eventPrefix\", \"ton-connect-ui-\");\n    __publicField(this, \"tonConnectUiVersion\");\n    __publicField(this, \"tonConnectSdkVersion\", null);\n    __publicField(this, \"eventDispatcher\");\n    var _a2;\n    this.eventDispatcher = (_a2 = options == null ? void 0 : options.eventDispatcher) != null ? _a2 : new _tonconnect_sdk__WEBPACK_IMPORTED_MODULE_0__.BrowserEventDispatcher();\n    this.tonConnectUiVersion = options.tonConnectUiVersion;\n    this.init().catch();\n  }\n  get version() {\n    return (0,_tonconnect_sdk__WEBPACK_IMPORTED_MODULE_0__.createVersionInfo)({\n      ton_connect_sdk_lib: this.tonConnectSdkVersion,\n      ton_connect_ui_lib: this.tonConnectUiVersion\n    });\n  }\n  init() {\n    return __async(this, null, function* () {\n      try {\n        yield this.setRequestVersionHandler();\n        this.tonConnectSdkVersion = yield this.requestTonConnectSdkVersion();\n      } catch (e2) {\n      }\n    });\n  }\n  setRequestVersionHandler() {\n    return __async(this, null, function* () {\n      yield this.eventDispatcher.addEventListener(\"ton-connect-ui-request-version\", () => __async(this, null, function* () {\n        yield this.eventDispatcher.dispatchEvent(\n          \"ton-connect-ui-response-version\",\n          (0,_tonconnect_sdk__WEBPACK_IMPORTED_MODULE_0__.createResponseVersionEvent)(this.tonConnectUiVersion)\n        );\n      }));\n    });\n  }\n  requestTonConnectSdkVersion() {\n    return __async(this, null, function* () {\n      return new Promise((resolve, reject) => __async(this, null, function* () {\n        try {\n          yield this.eventDispatcher.addEventListener(\n            \"ton-connect-response-version\",\n            (event) => {\n              resolve(event.detail.version);\n            },\n            { once: true }\n          );\n          yield this.eventDispatcher.dispatchEvent(\n            \"ton-connect-request-version\",\n            (0,_tonconnect_sdk__WEBPACK_IMPORTED_MODULE_0__.createRequestVersionEvent)()\n          );\n        } catch (e2) {\n          reject(e2);\n        }\n      }));\n    });\n  }\n  dispatchUserActionEvent(eventDetails) {\n    var _a2;\n    try {\n      (_a2 = this.eventDispatcher) == null ? void 0 : _a2.dispatchEvent(`${this.eventPrefix}${eventDetails.type}`, eventDetails).catch();\n    } catch (e2) {\n    }\n  }\n  trackConnectionStarted(...args) {\n    try {\n      const event = (0,_tonconnect_sdk__WEBPACK_IMPORTED_MODULE_0__.createConnectionStartedEvent)(this.version, ...args);\n      this.dispatchUserActionEvent(event);\n    } catch (e2) {\n    }\n  }\n  trackConnectionCompleted(...args) {\n    try {\n      const event = (0,_tonconnect_sdk__WEBPACK_IMPORTED_MODULE_0__.createConnectionCompletedEvent)(this.version, ...args);\n      this.dispatchUserActionEvent(event);\n    } catch (e2) {\n    }\n  }\n  trackConnectionError(...args) {\n    try {\n      const event = (0,_tonconnect_sdk__WEBPACK_IMPORTED_MODULE_0__.createConnectionErrorEvent)(this.version, ...args);\n      this.dispatchUserActionEvent(event);\n    } catch (e2) {\n    }\n  }\n  trackConnectionRestoringStarted(...args) {\n    try {\n      const event = (0,_tonconnect_sdk__WEBPACK_IMPORTED_MODULE_0__.createConnectionRestoringStartedEvent)(this.version, ...args);\n      this.dispatchUserActionEvent(event);\n    } catch (e2) {\n    }\n  }\n  trackConnectionRestoringCompleted(...args) {\n    try {\n      const event = (0,_tonconnect_sdk__WEBPACK_IMPORTED_MODULE_0__.createConnectionRestoringCompletedEvent)(this.version, ...args);\n      this.dispatchUserActionEvent(event);\n    } catch (e2) {\n    }\n  }\n  trackConnectionRestoringError(...args) {\n    try {\n      const event = (0,_tonconnect_sdk__WEBPACK_IMPORTED_MODULE_0__.createConnectionRestoringErrorEvent)(this.version, ...args);\n      this.dispatchUserActionEvent(event);\n    } catch (e2) {\n    }\n  }\n  trackDisconnection(...args) {\n    try {\n      const event = (0,_tonconnect_sdk__WEBPACK_IMPORTED_MODULE_0__.createDisconnectionEvent)(this.version, ...args);\n      this.dispatchUserActionEvent(event);\n    } catch (e2) {\n    }\n  }\n  trackTransactionSentForSignature(...args) {\n    try {\n      const event = (0,_tonconnect_sdk__WEBPACK_IMPORTED_MODULE_0__.createTransactionSentForSignatureEvent)(this.version, ...args);\n      this.dispatchUserActionEvent(event);\n    } catch (e2) {\n    }\n  }\n  trackTransactionSigned(...args) {\n    try {\n      const event = (0,_tonconnect_sdk__WEBPACK_IMPORTED_MODULE_0__.createTransactionSignedEvent)(this.version, ...args);\n      this.dispatchUserActionEvent(event);\n    } catch (e2) {\n    }\n  }\n  trackTransactionSigningFailed(...args) {\n    try {\n      const event = (0,_tonconnect_sdk__WEBPACK_IMPORTED_MODULE_0__.createTransactionSigningFailedEvent)(this.version, ...args);\n      this.dispatchUserActionEvent(event);\n    } catch (e2) {\n    }\n  }\n}\nconst tonConnectUiVersion = \"2.0.9\";\nclass TonConnectUI {\n  constructor(options) {\n    __publicField(this, \"walletInfoStorage\", new WalletInfoStorage());\n    __publicField(this, \"preferredWalletStorage\", new PreferredWalletStorage());\n    __publicField(this, \"tracker\");\n    __publicField(this, \"walletInfo\", null);\n    __publicField(this, \"systemThemeChangeUnsubscribe\", null);\n    __publicField(this, \"actionsConfiguration\");\n    __publicField(this, \"walletsList\");\n    __publicField(this, \"connectRequestParametersCallback\");\n    __publicField(this, \"connector\");\n    __publicField(this, \"modal\");\n    __publicField(this, \"singleWalletModal\");\n    __publicField(this, \"transactionModal\");\n    __publicField(this, \"connectionRestored\", Promise.resolve(false));\n    if (options && \"connector\" in options && options.connector) {\n      this.connector = options.connector;\n    } else if (options && \"manifestUrl\" in options && options.manifestUrl) {\n      this.connector = new _tonconnect_sdk__WEBPACK_IMPORTED_MODULE_0__.TonConnect({\n        manifestUrl: options.manifestUrl,\n        eventDispatcher: options == null ? void 0 : options.eventDispatcher\n      });\n    } else {\n      throw new TonConnectUIError(\n        \"You have to specify a `manifestUrl` or a `connector` in the options.\"\n      );\n    }\n    this.tracker = new TonConnectUITracker({\n      eventDispatcher: options == null ? void 0 : options.eventDispatcher,\n      tonConnectUiVersion\n    });\n    this.modal = new WalletsModalManager({\n      connector: this.connector,\n      tracker: this.tracker,\n      setConnectRequestParametersCallback: (callback) => {\n        this.connectRequestParametersCallback = callback;\n      }\n    });\n    this.singleWalletModal = new SingleWalletModalManager({\n      connector: this.connector,\n      tracker: this.tracker,\n      setConnectRequestParametersCallback: (callback) => {\n        this.connectRequestParametersCallback = callback;\n      }\n    });\n    this.transactionModal = new TransactionModalManager({\n      connector: this.connector\n    });\n    this.walletsList = this.getWallets();\n    this.walletsList.then((list) => preloadImages(uniq(list.map((item) => item.imageUrl))));\n    const rootId = this.normalizeWidgetRoot(options == null ? void 0 : options.widgetRootId);\n    this.subscribeToWalletChange();\n    if ((options == null ? void 0 : options.restoreConnection) !== false) {\n      this.connectionRestored = createMacrotaskAsync(() => __async(this, null, function* () {\n        this.tracker.trackConnectionRestoringStarted();\n        yield this.connector.restoreConnection();\n        if (!this.connector.connected) {\n          this.tracker.trackConnectionRestoringError(\"Connection was not restored\");\n          this.walletInfoStorage.removeWalletInfo();\n        } else {\n          this.tracker.trackConnectionRestoringCompleted(this.wallet);\n        }\n        return this.connector.connected;\n      }));\n    }\n    this.uiOptions = mergeOptions(options, { uiPreferences: { theme: \"SYSTEM\" } });\n    const preferredWalletName = this.preferredWalletStorage.getPreferredWalletAppName();\n    setAppState({\n      connector: this.connector,\n      preferredWalletAppName: preferredWalletName\n    });\n    widgetController.renderApp(rootId, this);\n  }\n  static getWallets() {\n    return _tonconnect_sdk__WEBPACK_IMPORTED_MODULE_0__.TonConnect.getWallets();\n  }\n  get connected() {\n    return this.connector.connected;\n  }\n  get account() {\n    return this.connector.account;\n  }\n  get wallet() {\n    if (!this.connector.wallet) {\n      return null;\n    }\n    return __spreadValues(__spreadValues({}, this.connector.wallet), this.walletInfo);\n  }\n  set uiOptions(options) {\n    var _a2, _b2, _c2, _d2, _e2;\n    this.checkButtonRootExist(options.buttonRootId);\n    this.actionsConfiguration = options.actionsConfiguration;\n    if ((_a2 = options.uiPreferences) == null ? void 0 : _a2.theme) {\n      if (((_b2 = options.uiPreferences) == null ? void 0 : _b2.theme) !== \"SYSTEM\") {\n        (_c2 = this.systemThemeChangeUnsubscribe) == null ? void 0 : _c2.call(this);\n        setTheme(options.uiPreferences.theme, options.uiPreferences.colorsSet);\n      } else {\n        setTheme(getSystemTheme(), options.uiPreferences.colorsSet);\n        if (!this.systemThemeChangeUnsubscribe) {\n          this.systemThemeChangeUnsubscribe = subscribeToThemeChange(setTheme);\n        }\n      }\n    } else {\n      if ((_d2 = options.uiPreferences) == null ? void 0 : _d2.colorsSet) {\n        setColors(options.uiPreferences.colorsSet);\n      }\n    }\n    if ((_e2 = options.uiPreferences) == null ? void 0 : _e2.borderRadius) {\n      setBorderRadius(options.uiPreferences.borderRadius);\n    }\n    setAppState((state) => {\n      var _a3, _b3;\n      const merged = mergeOptions(\n        __spreadValues(__spreadValues(__spreadValues(__spreadValues({}, options.language && { language: options.language }), !!((_a3 = options.actionsConfiguration) == null ? void 0 : _a3.returnStrategy) && {\n          returnStrategy: options.actionsConfiguration.returnStrategy\n        }), !!((_b3 = options.actionsConfiguration) == null ? void 0 : _b3.twaReturnUrl) && {\n          twaReturnUrl: options.actionsConfiguration.twaReturnUrl\n        }), !!options.walletsListConfiguration && {\n          walletsListConfiguration: options.walletsListConfiguration\n        }),\n        unwrap(state)\n      );\n      if (options.buttonRootId !== void 0) {\n        merged.buttonRootId = options.buttonRootId;\n      }\n      if (options.enableAndroidBackHandler !== void 0) {\n        merged.enableAndroidBackHandler = options.enableAndroidBackHandler;\n      }\n      return merged;\n    });\n  }\n  setConnectRequestParameters(connectRequestParameters) {\n    var _a2;\n    setAppState({ connectRequestParameters });\n    if ((connectRequestParameters == null ? void 0 : connectRequestParameters.state) === \"ready\" || !connectRequestParameters) {\n      (_a2 = this.connectRequestParametersCallback) == null ? void 0 : _a2.call(this, connectRequestParameters == null ? void 0 : connectRequestParameters.value);\n    }\n  }\n  getWallets() {\n    return __async(this, null, function* () {\n      return this.connector.getWallets();\n    });\n  }\n  onStatusChange(callback, errorsHandler) {\n    return this.connector.onStatusChange((wallet) => __async(this, null, function* () {\n      if (wallet) {\n        const lastSelectedWalletInfo2 = yield this.getSelectedWalletInfo(wallet);\n        callback(__spreadValues(__spreadValues({}, wallet), lastSelectedWalletInfo2 || this.walletInfoStorage.getWalletInfo()));\n      } else {\n        callback(wallet);\n      }\n    }), errorsHandler);\n  }\n  openModal() {\n    return __async(this, null, function* () {\n      return this.modal.open();\n    });\n  }\n  closeModal(reason) {\n    this.modal.close(reason);\n  }\n  onModalStateChange(onChange) {\n    return this.modal.onStateChange(onChange);\n  }\n  get modalState() {\n    return this.modal.state;\n  }\n  openSingleWalletModal(wallet) {\n    return __async(this, null, function* () {\n      return this.singleWalletModal.open(wallet);\n    });\n  }\n  closeSingleWalletModal(closeReason) {\n    this.singleWalletModal.close(closeReason);\n  }\n  onSingleWalletModalStateChange(onChange) {\n    return this.singleWalletModal.onStateChange(onChange);\n  }\n  get singleWalletModalState() {\n    return this.singleWalletModal.state;\n  }\n  connectWallet() {\n    return __async(this, null, function* () {\n      const walletsList = yield this.getWallets();\n      const embeddedWallet = walletsList.find(_tonconnect_sdk__WEBPACK_IMPORTED_MODULE_0__.isWalletInfoCurrentlyEmbedded);\n      if (embeddedWallet) {\n        return yield this.connectEmbeddedWallet(embeddedWallet);\n      } else {\n        return yield this.connectExternalWallet();\n      }\n    });\n  }\n  disconnect() {\n    this.tracker.trackDisconnection(this.wallet, \"dapp\");\n    widgetController.clearAction();\n    widgetController.removeSelectedWalletInfo();\n    this.walletInfoStorage.removeWalletInfo();\n    return this.connector.disconnect();\n  }\n  sendTransaction(tx, options) {\n    return __async(this, null, function* () {\n      this.tracker.trackTransactionSentForSignature(this.wallet, tx);\n      if (!this.connected) {\n        this.tracker.trackTransactionSigningFailed(this.wallet, tx, \"Wallet was not connected\");\n        throw new TonConnectUIError(\"Connect wallet to send a transaction.\");\n      }\n      if (isInTMA()) {\n        sendExpand();\n      }\n      const { notifications: notifications2, modals, returnStrategy, twaReturnUrl, skipRedirectToWallet } = this.getModalsAndNotificationsConfiguration(options);\n      widgetController.setAction({\n        name: \"confirm-transaction\",\n        showNotification: notifications2.includes(\"before\"),\n        openModal: modals.includes(\"before\"),\n        sent: false\n      });\n      const onRequestSent = () => {\n        if (abortController.signal.aborted) {\n          return;\n        }\n        widgetController.setAction({\n          name: \"confirm-transaction\",\n          showNotification: notifications2.includes(\"before\"),\n          openModal: modals.includes(\"before\"),\n          sent: true\n        });\n        if (this.walletInfo && \"universalLink\" in this.walletInfo && (this.walletInfo.openMethod === \"universal-link\" || this.walletInfo.openMethod === \"custom-deeplink\")) {\n          if ((0,_tonconnect_sdk__WEBPACK_IMPORTED_MODULE_0__.isTelegramUrl)(this.walletInfo.universalLink)) {\n            redirectToTelegram(this.walletInfo.universalLink, {\n              returnStrategy,\n              twaReturnUrl: twaReturnUrl || appState.twaReturnUrl,\n              forceRedirect: false\n            });\n          } else {\n            redirectToWallet(\n              this.walletInfo.universalLink,\n              this.walletInfo.deepLink,\n              {\n                returnStrategy,\n                forceRedirect: false\n              },\n              () => {\n              }\n            );\n          }\n        }\n      };\n      const abortController = new AbortController();\n      const unsubscribe = this.onTransactionModalStateChange((action2) => {\n        if (action2 == null ? void 0 : action2.openModal) {\n          return;\n        }\n        unsubscribe();\n        if (!action2) {\n          abortController.abort();\n        }\n      });\n      try {\n        const result = yield this.waitForSendTransaction(\n          {\n            transaction: tx,\n            signal: abortController.signal\n          },\n          onRequestSent\n        );\n        this.tracker.trackTransactionSigned(this.wallet, tx, result);\n        widgetController.setAction({\n          name: \"transaction-sent\",\n          showNotification: notifications2.includes(\"success\"),\n          openModal: modals.includes(\"success\")\n        });\n        return result;\n      } catch (e2) {\n        widgetController.setAction({\n          name: \"transaction-canceled\",\n          showNotification: notifications2.includes(\"error\"),\n          openModal: modals.includes(\"error\")\n        });\n        if (e2 instanceof _tonconnect_sdk__WEBPACK_IMPORTED_MODULE_0__.TonConnectError) {\n          throw e2;\n        } else {\n          console.error(e2);\n          throw new TonConnectUIError(\"Unhandled error:\" + e2);\n        }\n      } finally {\n        unsubscribe();\n      }\n    });\n  }\n  connectEmbeddedWallet(embeddedWallet) {\n    return __async(this, null, function* () {\n      const connect = (parameters) => {\n        setLastSelectedWalletInfo(embeddedWallet);\n        this.connector.connect({ jsBridgeKey: embeddedWallet.jsBridgeKey }, parameters);\n      };\n      const additionalRequest = appState.connectRequestParameters;\n      if ((additionalRequest == null ? void 0 : additionalRequest.state) === \"loading\") {\n        this.connectRequestParametersCallback = connect;\n      } else {\n        connect(additionalRequest == null ? void 0 : additionalRequest.value);\n      }\n      return yield this.waitForWalletConnection({\n        ignoreErrors: false\n      });\n    });\n  }\n  connectExternalWallet() {\n    return __async(this, null, function* () {\n      const abortController = new AbortController();\n      widgetController.openWalletsModal();\n      const unsubscribe = this.onModalStateChange((state) => {\n        const { status, closeReason } = state;\n        if (status === \"opened\") {\n          return;\n        }\n        unsubscribe();\n        if (closeReason === \"action-cancelled\") {\n          abortController.abort();\n        }\n      });\n      return yield this.waitForWalletConnection({\n        ignoreErrors: true,\n        signal: abortController.signal\n      });\n    });\n  }\n  waitForWalletConnection(options) {\n    return __async(this, null, function* () {\n      return new Promise((resolve, reject) => {\n        this.tracker.trackConnectionStarted();\n        const { ignoreErrors = false, signal = null } = options;\n        if (signal && signal.aborted) {\n          this.tracker.trackConnectionError(\"Connection was cancelled\");\n          return reject(new TonConnectUIError(\"Wallet was not connected\"));\n        }\n        const onStatusChangeHandler = (wallet) => __async(this, null, function* () {\n          if (!wallet) {\n            this.tracker.trackConnectionError(\"Connection was cancelled\");\n            if (ignoreErrors) {\n              return;\n            }\n            unsubscribe();\n            reject(new TonConnectUIError(\"Wallet was not connected\"));\n          } else {\n            this.tracker.trackConnectionCompleted(wallet);\n            unsubscribe();\n            resolve(wallet);\n          }\n        });\n        const onErrorsHandler = (reason) => {\n          this.tracker.trackConnectionError(reason.message);\n          if (ignoreErrors) {\n            return;\n          }\n          unsubscribe();\n          reject(reason);\n        };\n        const unsubscribe = this.onStatusChange(\n          (wallet) => onStatusChangeHandler(wallet),\n          (reason) => onErrorsHandler(reason)\n        );\n        if (signal) {\n          signal.addEventListener(\n            \"abort\",\n            () => {\n              unsubscribe();\n              reject(new TonConnectUIError(\"Wallet was not connected\"));\n            },\n            { once: true }\n          );\n        }\n      });\n    });\n  }\n  waitForSendTransaction(options, onRequestSent) {\n    return __async(this, null, function* () {\n      return new Promise((resolve, reject) => {\n        const { transaction, signal } = options;\n        if (signal.aborted) {\n          this.tracker.trackTransactionSigningFailed(\n            this.wallet,\n            transaction,\n            \"Transaction was cancelled\"\n          );\n          return reject(new TonConnectUIError(\"Transaction was not sent\"));\n        }\n        const onTransactionHandler = (transaction2) => __async(this, null, function* () {\n          resolve(transaction2);\n        });\n        const onErrorsHandler = (reason) => {\n          reject(reason);\n        };\n        const onCanceledHandler = () => {\n          this.tracker.trackTransactionSigningFailed(\n            this.wallet,\n            transaction,\n            \"Transaction was cancelled\"\n          );\n          reject(new TonConnectUIError(\"Transaction was not sent\"));\n        };\n        signal.addEventListener(\"abort\", onCanceledHandler, { once: true });\n        this.connector.sendTransaction(transaction, { onRequestSent, signal }).then((result) => {\n          signal.removeEventListener(\"abort\", onCanceledHandler);\n          return onTransactionHandler(result);\n        }).catch((reason) => {\n          signal.removeEventListener(\"abort\", onCanceledHandler);\n          return onErrorsHandler(reason);\n        });\n      });\n    });\n  }\n  onTransactionModalStateChange(onChange) {\n    return this.transactionModal.onStateChange(onChange);\n  }\n  subscribeToWalletChange() {\n    this.connector.onStatusChange((wallet) => __async(this, null, function* () {\n      var _a2;\n      if (wallet) {\n        yield this.updateWalletInfo(wallet);\n        this.setPreferredWalletAppName(((_a2 = this.walletInfo) == null ? void 0 : _a2.appName) || wallet.device.appName);\n      } else {\n        this.walletInfoStorage.removeWalletInfo();\n      }\n    }));\n  }\n  setPreferredWalletAppName(value) {\n    this.preferredWalletStorage.setPreferredWalletAppName(value);\n    setAppState({ preferredWalletAppName: value });\n  }\n  getSelectedWalletInfo(wallet) {\n    return __async(this, null, function* () {\n      let lastSelectedWalletInfo2 = widgetController.getSelectedWalletInfo();\n      if (!lastSelectedWalletInfo2) {\n        return null;\n      }\n      let fullLastSelectedWalletInfo;\n      if (!(\"name\" in lastSelectedWalletInfo2)) {\n        const walletsList = applyWalletsListConfiguration(\n          yield this.walletsList,\n          appState.walletsListConfiguration\n        );\n        const walletInfo = walletsList.find((item) => eqWalletName(item, wallet.device.appName));\n        if (!walletInfo) {\n          throw new TonConnectUIError(\n            `Cannot find WalletInfo for the '${wallet.device.appName}' wallet`\n          );\n        }\n        fullLastSelectedWalletInfo = __spreadValues(__spreadValues({}, walletInfo), lastSelectedWalletInfo2);\n      } else {\n        fullLastSelectedWalletInfo = lastSelectedWalletInfo2;\n      }\n      return fullLastSelectedWalletInfo;\n    });\n  }\n  updateWalletInfo(wallet) {\n    return __async(this, null, function* () {\n      const selectedWalletInfo = yield this.getSelectedWalletInfo(wallet);\n      if (selectedWalletInfo) {\n        this.walletInfo = selectedWalletInfo;\n        this.walletInfoStorage.setWalletInfo(selectedWalletInfo);\n        return;\n      }\n      const storedWalletInfo = this.walletInfoStorage.getWalletInfo();\n      if (storedWalletInfo) {\n        this.walletInfo = storedWalletInfo;\n        return;\n      }\n      this.walletInfo = (yield this.walletsList).find(\n        (walletInfo) => eqWalletName(walletInfo, wallet.device.appName)\n      ) || null;\n    });\n  }\n  normalizeWidgetRoot(rootId) {\n    if (!rootId || !document.getElementById(rootId)) {\n      rootId = \"tc-widget-root\";\n      const rootElement = document.createElement(\"div\");\n      rootElement.id = rootId;\n      document.body.appendChild(rootElement);\n    }\n    return rootId;\n  }\n  checkButtonRootExist(buttonRootId) {\n    if (buttonRootId == null) {\n      return;\n    }\n    if (!document.getElementById(buttonRootId)) {\n      throw new TonConnectUIError(`${buttonRootId} element not found in the document.`);\n    }\n  }\n  getModalsAndNotificationsConfiguration(options) {\n    var _a2, _b2, _c2, _d2, _e2, _f2;\n    const allActions = [\n      \"before\",\n      \"success\",\n      \"error\"\n    ];\n    let notifications2 = allActions;\n    if (((_a2 = this.actionsConfiguration) == null ? void 0 : _a2.notifications) && ((_b2 = this.actionsConfiguration) == null ? void 0 : _b2.notifications) !== \"all\") {\n      notifications2 = this.actionsConfiguration.notifications;\n    }\n    if (options == null ? void 0 : options.notifications) {\n      if (options.notifications === \"all\") {\n        notifications2 = allActions;\n      } else {\n        notifications2 = options.notifications;\n      }\n    }\n    let modals = [\"before\"];\n    if ((_c2 = this.actionsConfiguration) == null ? void 0 : _c2.modals) {\n      if (this.actionsConfiguration.modals === \"all\") {\n        modals = allActions;\n      } else {\n        modals = this.actionsConfiguration.modals;\n      }\n    }\n    if (options == null ? void 0 : options.modals) {\n      if (options.modals === \"all\") {\n        modals = allActions;\n      } else {\n        modals = options.modals;\n      }\n    }\n    const returnStrategy = (options == null ? void 0 : options.returnStrategy) || ((_d2 = this.actionsConfiguration) == null ? void 0 : _d2.returnStrategy) || \"back\";\n    const twaReturnUrl = (options == null ? void 0 : options.twaReturnUrl) || ((_e2 = this.actionsConfiguration) == null ? void 0 : _e2.twaReturnUrl);\n    let skipRedirectToWallet = (options == null ? void 0 : options.skipRedirectToWallet) || ((_f2 = this.actionsConfiguration) == null ? void 0 : _f2.skipRedirectToWallet) || \"ios\";\n    if (isInTMA()) {\n      skipRedirectToWallet = \"never\";\n    }\n    return {\n      notifications: notifications2,\n      modals,\n      returnStrategy,\n      twaReturnUrl,\n      skipRedirectToWallet\n    };\n  }\n}\n\n//# sourceMappingURL=index.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AdG9uY29ubmVjdC91aS9saWIvaW5kZXgubWpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDhFQUE4RSw2REFBNkQ7QUFDM0k7QUFDQSwrQkFBK0I7QUFDL0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxRQUFRO0FBQ1I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsUUFBUTtBQUNSO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNncEI7QUFDaG5CO0FBQ0k7QUFDRjtBQUNOO0FBQzVCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHNDQUFzQztBQUN0QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esc0NBQXNDO0FBQ3RDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLElBQUk7QUFDSjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBLFlBQVksd0JBQXdCLEVBQUUsNkJBQTZCO0FBQ25FO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHVCQUF1QixrQkFBa0I7QUFDekM7QUFDQSxNQUFNO0FBQ047QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxNQUFNO0FBQ047QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsTUFBTTtBQUNOO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHlCQUF5Qiw0QkFBNEI7QUFDckQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxjQUFjLEtBQUs7QUFDbkIsWUFBWSxFQUFDO0FBQ2I7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsTUFBTTtBQUNOO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtB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QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQ0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQ0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsTUFBTTtBQUNOO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxNQUFNO0FBQ047QUFDQTtBQUNBO0FBQ0E7QUFDQSxNQUFNO0FBQ047QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxZQUFZO0FBQ1o7QUFDQSxVQUFVO0FBQ1Y7QUFDQSxRQUFRO0FBQ1I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlEQUFpRDtBQUNqRDtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMkNBQTJDLFNBQVM7QUFDcEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnQkFBZ0IsS0FBSztBQUNyQixnQkFBZ0IsS0FBSztBQUNyQixNQUFNO0FBQ04sZ0JBQWdCLEtBQUs7QUFDckIsSUFBSTtBQUNKO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQTtBQUNBLHlDQUF5QztBQUN6QywyQ0FBMkM7QUFDM0M7QUFDQSxzQ0FBc0MsVUFBVTtBQUNoRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx1Q0FBdUMsVUFBVTtBQUNqRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvQkFBb0I7QUFDcEIsc0JBQXNCO0FBQ3RCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnQ0FBZ0M7QUFDaEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0VBQWdFO0FBQ2hFLHNCQUFzQjtBQUN0QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0RBQWdELGNBQWM7QUFDOUQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQTtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7QUFDQTtBQUNBLElBQUk7QUFDSjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLElBQUk7QUFDSjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbUJBQW1CLFFBQVE7QUFDM0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMkJBQTJCLElBQUk7QUFDL0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxRQUFRO0FBQ1I7QUFDQTtBQUNBLE1BQU07QUFDTjtBQUNBO0FBQ0EsUUFBUTtBQUNSO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQTtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQSxJQUFJO0FBQ0o7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsdUJBQXVCLG1CQUFtQjtBQUMxQztBQUNBO0FBQ0E7QUFD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QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7QUFDRDtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7QUFDRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQ0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLElBQUk7QUFDSjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHFCQUFxQixRQUFRO0FBQzdCLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0EsMEVBQTBFLE9BQU87QUFDakYsZ0NBQWdDLE9BQU87QUFDdkM7QUFDQSxHQUFHO0FBQ0g7QUFDQSwwRUFBMEUsT0FBTztBQUNqRiw0Q0FBNEMsUUFBUTtBQUNwRCwwREFBMEQsT0FBTztBQUNqRSx1QkFBdUIs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QUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUyxzQ0FBUztBQUNsQjtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQ0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBLGtCQUFrQixjQUFjO0FBQ2hDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0Esd0JBQXdCO0FBQ3hCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxFQUFFO0FBQ0Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0NBQWdDO0FBQ2hDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0VBQWtFLElBQUk7QUFDdEU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDhEQUE4RCxJQUFJO0FBQ2xFO0FBQ0E7QUFDQTtBQUNBLHdDQUF3QyxxQkFBcUI7QUFDN0QsSUFBSTtBQUNKO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE1BQU07QUFDTjtBQUNBLCtDQUErQyxzQkFBc0I7QUFDckUsTUFBTTtBQUNOO0FBQ0EsdUNBQXVDLHNCQUFzQjtBQUM3RDtBQUNBO0FBQ0EsTUFBTTtBQUNOO0FBQ0E7QUFDQSxJQUFJO0FBQ0osbURBQW1ELEdBQUc7QUFDdEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlLCtCQUErQjtBQUM5QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsU0FBUztBQUN4QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxtQ0FBbUMsZ0JBQWdCO0FBQ25EO0FBQ0EsbUNBQW1DLGdCQUFnQixrQkFBa0IsZ0JBQWdCO0FBQ3JGO0FBQ0E7QUFDQSxtQ0FBbUMsZ0JBQWdCO0FBQ25EO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlO0FBQ2YsV0FBVztBQUNYLG1CQUFtQjtBQUNuQix1QkFBdUI7QUFDdkIsd0JBQXdCO0FBQ3hCLGFBQWE7O0FBRWIsZUFBZTtBQUNmLG9CQUFvQjtBQUNwQixxQkFBcUI7QUFDckI7QUFDQSxxQkFBcUI7QUFDckIsY0FBYzs7QUFFZDtBQUNBO0FBQ0E7O0FBRUE7O0FBRUEsTUFBTTtBQUNOO0FBQ0EseUJBQXlCLCtDQUErQyw2QkFBNkI7QUFDckc7QUFDQTs7QUFFQTtBQUNBLHFCQUFxQiwrQ0FBK0MsNkJBQTZCO0FBQ2pHOztBQUVBLE1BQU07QUFDTjtBQUNBLHlCQUF5QiwrQ0FBK0MsaUNBQWlDO0FBQ3pHO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVc7QUFDWDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLElBQUk7QUFDSjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxQkFBcUIsZ0JBQWdCO0FBQ3JDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQSxxQkFBcUIsZ0JBQWdCO0FBQ3JDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1QsUUFBUTtBQUNSO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9DQUFvQyxHQUFHLEtBQUssR0FBRztBQUMvQztBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0wsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw0QkFBNEIsaURBQWlEO0FBQzdFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHdCQUF3QjtBQUN4QjtBQUNBOztBQUVBOztBQUVBLE1BQU07QUFDTjtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUEsTUFBTTtBQUNOO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUI7QUFDakI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG1CQUFtQjtBQUNuQjtBQUNBLGVBQWU7QUFDZjtBQUNBO0FBQ0EsaUJBQWlCO0FBQ2pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxtQkFBbUI7QUFDbkI7QUFDQSxlQUFlO0FBQ2Y7QUFDQTtBQUNBLGlCQUFpQjtBQUNqQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbUJBQW1CO0FBQ25CO0FBQ0EsZUFBZTtBQUNmO0FBQ0E7QUFDQSxpQkFBaUI7QUFDakI7QUFDQTtBQUNBO0FBQ0EsZUFBZTtBQUNmO0FBQ0EsV0FBVztBQUNYO0FBQ0EsT0FBTztBQUNQO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsTUFBTTtBQUNOO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLE1BQU07QUFDTjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQSx3QkFBd0I7QUFDeEIscUJBQXFCOztBQUVyQixNQUFNO0FBQ047QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx5QkFBeUI7QUFDekIsVUFBVTtBQUNWO0FBQ0E7QUFDQSx3QkFBd0I7QUFDeEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE1BQU07QUFDTjtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQSxPQUFPO0FBQ1A7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0EsU0FBUztBQUNUO0FBQ0EsU0FBUztBQUNUO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0EsT0FBTztBQUNQO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBLFNBQVM7QUFDVDtBQUNBLFNBQVM7QUFDVDtBQUNBLFFBQVE7QUFDUjtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBLFdBQVc7QUFDWDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZTtBQUNmO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUI7QUFDakI7QUFDQTtBQUNBO0FBQ0E7QUFDQSxtQkFBbUI7QUFDbkI7QUFDQSxlQUFlO0FBQ2Y7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCO0FBQ2pCO0FBQ0E7QUFDQTtBQUNBLGlFQUFpRTtBQUNqRTtBQUNBO0FBQ0EseUJBQXlCO0FBQ3pCO0FBQ0EsdUJBQXVCO0FBQ3ZCO0FBQ0EsbUJBQW1CO0FBQ25CO0FBQ0EsZUFBZTtBQUNmLHVEQUF1RCx1Q0FBRTtBQUN6RCxpREFBaUQ7QUFDakQsb0RBQW9EOztBQUVwRCxrQ0FBa0M7QUFDbEMscURBQXFEO0FBQ3JELDBDQUEwQywrQkFBK0I7QUFDekU7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXO0FBQ1g7QUFDQSxPQUFPO0FBQ1A7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EscUJBQXFCOztBQUVyQix3QkFBd0I7QUFDeEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBLHFCQUFxQjtBQUNyQix3QkFBd0I7O0FBRXhCLGlCQUFpQjs7QUFFakI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxjQUFjOztBQUVkOztBQUVBO0FBQ0EscUJBQXFCO0FBQ3JCOztBQUVBO0FBQ0EsVUFBVSx1Q0FBdUMsbUNBQW1DO0FBQ3BGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVc7QUFDWDtBQUNBLE9BQU87QUFDUDtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVc7QUFDWDtBQUNBLE9BQU87QUFDUDtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx3QkFBd0I7QUFDeEIscUJBQXFCO0FBQ3JCLGVBQWUsb0JBQW9CO0FBQ25DLGNBQWM7QUFDZDs7QUFFQTtBQUNBO0FBQ0E7O0FBRUEsTUFBTTtBQUNOO0FBQ0EsY0FBYztBQUNkO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0EsVUFBVTtBQUNWO0FBQ0E7QUFDQTs7QUFFQSxNQUFNO0FBQ047QUFDQSxjQUFjO0FBQ2Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLGdCQUFnQjtBQUNoQjtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYixjQUFjO0FBQ2Qsa0JBQWtCOztBQUVsQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiLGNBQWM7QUFDZCxxQkFBcUI7QUFDckIsd0JBQXdCO0FBQ3hCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSx3QkFBd0I7QUFDeEI7QUFDQSxpQkFBaUI7QUFDakI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw0QkFBNEIsbUJBQW1CO0FBQy9DO0FBQ0EsOEJBQThCLG1CQUFtQjtBQUNqRDtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx5QkFBeUIsUUFBUTtBQUNqQztBQUNBO0FBQ0EsNEJBQTRCLFNBQVM7QUFDckM7QUFDQTtBQUNBO0FBQ0E7QUFDQSxjQUFjO0FBQ2Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHlCQUF5QixRQUFRO0FBQ2pDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCLHNCQUFzQjtBQUM5QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EseUJBQXlCLHVCQUF1QjtBQUNoRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EseUJBQXlCLGlCQUFpQjtBQUMxQywwQkFBMEIsZ0JBQWdCO0FBQzFDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw2QkFBNkIsUUFBUTtBQUNyQyxnQ0FBZ0MsU0FBUztBQUN6QztBQUNBO0FBQ0Esa0JBQWtCO0FBQ2xCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHlCQUF5QixTQUFTO0FBQ2xDO0FBQ0E7QUFDQTtBQUNBLHlCQUF5QixTQUFTO0FBQ2xDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EseUJBQXlCLFNBQVM7QUFDbEM7QUFDQTtBQUNBO0FBQ0EsWUFBWTtBQUNaO0FBQ0EsWUFBWTtBQUNaO0FBQ0E7QUFDQTtBQUNBLHlCQUF5QixTQUFTO0FBQ2xDO0FBQ0E7QUFDQTtBQUNBLFlBQVk7QUFDWjtBQUNBLFlBQVk7QUFDWjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EseUNBQXlDLFNBQVM7QUFDbEQ7QUFDQTtBQUNBO0FBQ0EsNkJBQTZCLFFBQVE7QUFDckM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHdCQUF3QixxQkFBcUI7QUFDN0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDJCQUEyQix1QkFBdUI7QUFDbEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwyQkFBMkIsdUJBQXVCO0FBQ2xEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx5QkFBeUIsc0JBQXNCO0FBQy9DO0FBQ0E7QUFDQTtBQUNBO0FBQ0EseUJBQXlCLGlCQUFpQjtBQUMxQywwQkFBMEIscUJBQXFCO0FBQy9DO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHlCQUF5QixpQkFBaUI7QUFDMUMsMEJBQTBCLHFCQUFxQjtBQUMvQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EseUJBQXlCLHNCQUFzQjtBQUMvQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx5QkFBeUIsc0JBQXNCO0FBQy9DO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQixrQkFBa0I7QUFDbkM7QUFDQTtBQUNBLDZCQUE2Qix1QkFBdUI7QUFDcEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNkJBQTZCLHNCQUFzQjtBQUNuRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx1Q0FBdUMsbUJBQW1CO0FBQzFELDhDQUE4QztBQUM5QyxrQ0FBa0MseUJBQXlCO0FBQzNEO0FBQ0E7QUFDQSx3QkFBd0IsNEJBQTRCO0FBQ3BEO0FBQ0EsMkJBQTJCLDZCQUE2QjtBQUN4RDtBQUNBLDJDQUEyQyxtQkFBbUI7QUFDOUQsa0RBQWtEO0FBQ2xELHNDQUFzQyxZQUFZO0FBQ2xELGtEQUFrRDtBQUNsRCxtREFBbUQ7QUFDbkQ7QUFDQTtBQUNBLHdCQUF3QjtBQUN4QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDBDQUEwQyxZQUFZO0FBQ3REO0FBQ0E7QUFDQSw4Q0FBOEMsY0FBYztBQUM1RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvQkFBb0IsNEJBQTRCO0FBQ2hEO0FBQ0EsdUJBQXVCLDZCQUE2QjtBQUNwRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxZQUFZO0FBQ1o7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EseUJBQXlCLGdCQUFnQjtBQUN6QztBQUNBO0FBQ0E7QUFDQSw4QkFBOEI7QUFDOUI7QUFDQTtBQUNBLDhCQUE4QjtBQUM5QjtBQUNBO0FBQ0EsK0JBQStCO0FBQy9CO0FBQ0E7QUFDQSxnQ0FBZ0M7QUFDaEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvQkFBb0IsVUFBVTtBQUM5QjtBQUNBO0FBQ0Esc0JBQXNCLFVBQVU7QUFDaEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsY0FBYztBQUNkO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvQkFBb0IsVUFBVTtBQUM5QjtBQUNBO0FBQ0Esc0JBQXNCLFVBQVU7QUFDaEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esc0JBQXNCLGNBQWM7QUFDcEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDBCQUEwQixjQUFjO0FBQ3hDLDRCQUE0QixjQUFjO0FBQzFDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EseUJBQXlCLGdCQUFnQjtBQUN6QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBO0FBQ0E7QUFDQSx5QkFBeUIsZ0JBQWdCO0FBQ3pDO0FBQ0E7QUFDQTtBQUNBLFlBQVk7QUFDWjtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdCQUFnQjtBQUNoQjtBQUNBO0FBQ0E7QUFDQSxjQUFjO0FBQ2Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNB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O0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EseUJBQXlCLGFBQWE7QUFDdEM7QUFDQTtBQUNBO0FBQ0EsMEJBQTBCLFdBQVc7QUFDckM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHlCQUF5QixhQUFhO0FBQ3RDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxZQUFZO0FBQ1o7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EseUJBQXlCLGdCQUFnQjtBQUN6QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxVQUFVO0FBQ1Y7QUFDQSxVQUFVO0FBQ1Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx5QkFBeUIsb0JBQW9CO0FBQzdDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVk7QUFDWjtBQUNBLFlBQVk7QUFDWjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHlCQUF5QixVQUFVO0FBQ25DO0FBQ0E7QUFDQTtBQUNBO0FBQ0EseUJBQXlCLGdCQUFnQjtBQUN6QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx5QkFBeUIsb0JBQW9CO0FBQzdDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFVBQVU7QUFDVjtBQUNBLFVBQVU7QUFDVjtBQUNBLFVBQVU7QUFDVjtBQUNBLFVBQVU7QUFDVjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwyQkFBMkIsYUFBYTtBQUN4QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVk7QUFDWjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxVQUFVO0FBQ1Y7QUFDQSxVQUFVO0FBQ1Y7QUFDQSxVQUFVO0FBQ1Y7QUFDQSxVQUFVO0FBQ1Y7QUFDQSxVQUFVO0FBQ1Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDBCQUEwQjtBQUMxQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtB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QTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxhQUFhOztBQUViO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0EsT0FBTztBQUNQLEtBQUs7QUFDTCxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0EsT0FBTztBQUNQLEtBQUs7QUFDTCxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscUJBQXFCLGlCQUFpQjtBQUN0QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvQkFBb0IsdUNBQUU7QUFDdEI7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQSx1QkFBdUIsdUNBQUU7QUFDekI7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBLHVCQUF1Qix1Q0FBRTtBQUN6QjtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBLE9BQU87QUFDUCxLQUFLO0FBQ0wsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscUJBQXFCO0FBQ3JCLHdCQUF3QjtBQUN4QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHFCQUFxQjtBQUNyQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiLFdBQVc7QUFDWDtBQUNBLE9BQU87QUFDUCxLQUFLO0FBQ0w7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx1Q0FBdUM7QUFDdkM7QUFDQSxRQUFRLDhFQUE2QjtBQUNyQywwQ0FBMEM7QUFDMUM7QUFDQTtBQUNBLHdDQUF3QztBQUN4QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0EsMkNBQTJDO0FBQzNDLE9BQU87QUFDUDtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBLEtBQUs7QUFDTCxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrQkFBa0I7O0FBRWxCO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrQkFBa0I7QUFDbEI7O0FBRUEsTUFBTTtBQUNOO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDREQUE0RCxZQUFZO0FBQ3hFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMERBQTBELGdCQUFnQixTQUFTLDBCQUEwQjtBQUM3RztBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLElBQUk7QUFDSjtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHFCQUFxQjs7QUFFckIsd0JBQXdCO0FBQ3hCO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQSx3QkFBd0I7QUFDeEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLHdCQUF3QjtBQUN4QjtBQUNBLHFCQUFxQjtBQUNyQjs7QUFFQTs7QUFFQTtBQUNBLDRCQUE0QjtBQUM1Qjs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQ0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnQ0FBZ0Msc0VBQXFCLDhEQUE4RCxrREFBSztBQUN4SDtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9EQUFvRDtBQUNwRDtBQUNBO0FBQ0EsbUJBQW1CO0FBQ25CO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscUJBQXFCO0FBQ3JCO0FBQ0EsaUJBQWlCO0FBQ2pCO0FBQ0E7QUFDQSxtQkFBbUI7QUFDbkI7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxQkFBcUI7QUFDckI7QUFDQSxpQkFBaUI7QUFDakI7QUFDQSxhQUFhO0FBQ2I7QUFDQSxXQUFXO0FBQ1g7QUFDQTtBQUNBO0FBQ0E7QUFDQSwwREFBMEQ7QUFDMUQ7QUFDQTtBQUNBLGlCQUFpQjtBQUNqQjtBQUNBLGFBQWE7QUFDYjtBQUNBLFdBQVc7QUFDWDtBQUNBLE9BQU87QUFDUDtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLHdCQUF3QjtBQUN4QjtBQUNBLHFCQUFxQjtBQUNyQjtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQSxXQUFXO0FBQ1g7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQjtBQUNqQjtBQUNBO0FBQ0E7QUFDQSxlQUFlO0FBQ2Y7QUFDQSxXQUFXO0FBQ1g7QUFDQSxPQUFPO0FBQ1A7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpSUFBaUk7QUFDakk7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0EsbURBQW1EO0FBQ25ELEtBQUs7QUFDTDtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1AsS0FBSztBQUNMO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQSxrREFBa0Q7QUFDbEQsS0FBSztBQUNMO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFVBQVUsVUFBVSxrQ0FBa0M7QUFDdEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNkJBQTZCO0FBQzdCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQSxTQUFTO0FBQ1QsT0FBTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQSxTQUFTO0FBQ1Q7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXO0FBQ1g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQjtBQUNqQjtBQUNBO0FBQ0E7QUFDQSxtQkFBbUI7QUFDbkI7QUFDQSxlQUFlO0FBQ2Y7QUFDQTtBQUNBLGlCQUFpQjtBQUNqQjtBQUNBO0FBQ0E7QUFDQSxtQkFBbUI7QUFDbkI7QUFDQSxlQUFlO0FBQ2Y7QUFDQTtBQUNBLGlCQUFpQjtBQUNqQjtBQUNBO0FBQ0E7QUFDQSxtQkFBbUI7QUFDbkI7QUFDQSxlQUFlO0FBQ2Y7QUFDQSxXQUFXO0FBQ1gsU0FBUztBQUNUO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBLHdCQUF3QjtBQUN4QixhQUFhO0FBQ2Isa0JBQWtCLHlCQUF5Qiw4Q0FBOEM7QUFDekY7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCO0FBQ3hCO0FBQ0E7QUFDQTtBQUNBOztBQUVBLHdCQUF3QjtBQUN4QixhQUFhO0FBQ2Isa0JBQWtCLHlCQUF5Qiw4Q0FBOEM7O0FBRXpGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7QUFDQSxRQUFRO0FBQ1I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsUUFBUTtBQUNSO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBLElBQUk7QUFDSjtBQUNBO0FBQ0E7QUFDQSxtQkFBbUIsNkJBQTZCO0FBQ2hEO0FBQ0E7QUFDQTtBQUNBLE1BQU07QUFDTjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsTUFBTTtBQUNOO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0Esb0RBQW9EO0FBQ3BELDhDQUE4QztBQUM5QyxLQUFLO0FBQ0wsVUFBVTtBQUNWO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVc7QUFDWDtBQUNBO0FBQ0E7QUFDQTtBQUNBLFVBQVU7QUFDVjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQ0Q7QUFDQSx3Q0FBd0M7QUFDeEM7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsTUFBTTtBQUNOO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsTUFBTTtBQUNOO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsTUFBTTtBQUNOO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsTUFBTTtBQUNOO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FB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O0FBQ0E7QUFDQSxNQUFNO0FBQ047QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDZCQUE2QjtBQUM3QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE1BQU07QUFDTjtBQUNBO0FBQ0E7QUFDQTtBQUNBLElBQUk7QUFDSjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1AsTUFBTTtBQUNOO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNULFFBQVE7QUFDUjtBQUNBO0FBQ0E7QUFDQSxNQUFNO0FBQ047QUFDQTtBQUNBO0FBQ0EsVUFBVTtBQUNWO0FBQ0EsVUFBVTtBQUNWO0FBQ0EsVUFBVTtBQUNWO0FBQ0EsVUFBVTtBQUNWO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNULFFBQVE7QUFDUjtBQUNBO0FBQ0E7QUFDQSxNQUFNO0FBQ047QUFDQTtBQUNBO0FBQ0EsVUFBVTtBQUNWO0FBQ0EsVUFBVTtBQUNWO0FBQ0EsVUFBVTtBQUNWO0FBQ0EsVUFBVTtBQUNWO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNULFFBQVE7QUFDUjtBQUNBO0FBQ0E7QUFDQSxNQUFNO0FBQ047QUFDQTtBQUNBO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQTtBQUNBO0FBQ0E7QUFDQSxVQUFVO0FBQ1Y7QUFDQSxVQUFVO0FBQ1Y7QUFDQSxVQUFVO0FBQ1Y7QUFDQSxVQUFVO0FBQ1Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsUUFBUTtBQUNSO0FBQ0E7QUFDQTtBQUNBLE1BQU07QUFDTjtBQUNBO0FBQ0E7QUFDQSxVQUFVO0FBQ1Y7QUFDQSxVQUFVO0FBQ1Y7QUFDQSxVQUFVO0FBQ1Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE1BQU07QUFDTjtBQUNBO0FBQ0E7QUFDQSxV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Q0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxQ0FBcUMsY0FBYztBQUNuRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFFBQVE7QUFDUjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFFBQVE7QUFDUjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxRQUFRO0FBQ1I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBS0U7QUFDRiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHRvbmNvbm5lY3QvdWkvbGliL2luZGV4Lm1qcz83Y2VhIl0sInNvdXJjZXNDb250ZW50IjpbInZhciBfX2RlZlByb3AgPSBPYmplY3QuZGVmaW5lUHJvcGVydHk7XG52YXIgX19kZWZQcm9wcyA9IE9iamVjdC5kZWZpbmVQcm9wZXJ0aWVzO1xudmFyIF9fZ2V0T3duUHJvcERlc2NzID0gT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcnM7XG52YXIgX19nZXRPd25Qcm9wU3ltYm9scyA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHM7XG52YXIgX19oYXNPd25Qcm9wID0gT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eTtcbnZhciBfX3Byb3BJc0VudW0gPSBPYmplY3QucHJvdG90eXBlLnByb3BlcnR5SXNFbnVtZXJhYmxlO1xudmFyIF9fZGVmTm9ybWFsUHJvcCA9IChvYmosIGtleSwgdmFsdWUpID0+IGtleSBpbiBvYmogPyBfX2RlZlByb3Aob2JqLCBrZXksIHsgZW51bWVyYWJsZTogdHJ1ZSwgY29uZmlndXJhYmxlOiB0cnVlLCB3cml0YWJsZTogdHJ1ZSwgdmFsdWUgfSkgOiBvYmpba2V5XSA9IHZhbHVlO1xudmFyIF9fc3ByZWFkVmFsdWVzID0gKGEyLCBiKSA9PiB7XG4gIGZvciAodmFyIHByb3AgaW4gYiB8fCAoYiA9IHt9KSlcbiAgICBpZiAoX19oYXNPd25Qcm9wLmNhbGwoYiwgcHJvcCkpXG4gICAgICBfX2RlZk5vcm1hbFByb3AoYTIsIHByb3AsIGJbcHJvcF0pO1xuICBpZiAoX19nZXRPd25Qcm9wU3ltYm9scylcbiAgICBmb3IgKHZhciBwcm9wIG9mIF9fZ2V0T3duUHJvcFN5bWJvbHMoYikpIHtcbiAgICAgIGlmIChfX3Byb3BJc0VudW0uY2FsbChiLCBwcm9wKSlcbiAgICAgICAgX19kZWZOb3JtYWxQcm9wKGEyLCBwcm9wLCBiW3Byb3BdKTtcbiAgICB9XG4gIHJldHVybiBhMjtcbn07XG52YXIgX19zcHJlYWRQcm9wcyA9IChhMiwgYikgPT4gX19kZWZQcm9wcyhhMiwgX19nZXRPd25Qcm9wRGVzY3MoYikpO1xudmFyIF9fcHVibGljRmllbGQgPSAob2JqLCBrZXksIHZhbHVlKSA9PiB7XG4gIF9fZGVmTm9ybWFsUHJvcChvYmosIHR5cGVvZiBrZXkgIT09IFwic3ltYm9sXCIgPyBrZXkgKyBcIlwiIDoga2V5LCB2YWx1ZSk7XG4gIHJldHVybiB2YWx1ZTtcbn07XG52YXIgX19hc3luYyA9IChfX3RoaXMsIF9fYXJndW1lbnRzLCBnZW5lcmF0b3IpID0+IHtcbiAgcmV0dXJuIG5ldyBQcm9taXNlKChyZXNvbHZlLCByZWplY3QpID0+IHtcbiAgICB2YXIgZnVsZmlsbGVkID0gKHZhbHVlKSA9PiB7XG4gICAgICB0cnkge1xuICAgICAgICBzdGVwKGdlbmVyYXRvci5uZXh0KHZhbHVlKSk7XG4gICAgICB9IGNhdGNoIChlMikge1xuICAgICAgICByZWplY3QoZTIpO1xuICAgICAgfVxuICAgIH07XG4gICAgdmFyIHJlamVjdGVkID0gKHZhbHVlKSA9PiB7XG4gICAgICB0cnkge1xuICAgICAgICBzdGVwKGdlbmVyYXRvci50aHJvdyh2YWx1ZSkpO1xuICAgICAgfSBjYXRjaCAoZTIpIHtcbiAgICAgICAgcmVqZWN0KGUyKTtcbiAgICAgIH1cbiAgICB9O1xuICAgIHZhciBzdGVwID0gKHgpID0+IHguZG9uZSA/IHJlc29sdmUoeC52YWx1ZSkgOiBQcm9taXNlLnJlc29sdmUoeC52YWx1ZSkudGhlbihmdWxmaWxsZWQsIHJlamVjdGVkKTtcbiAgICBzdGVwKChnZW5lcmF0b3IgPSBnZW5lcmF0b3IuYXBwbHkoX190aGlzLCBfX2FyZ3VtZW50cykpLm5leHQoKSk7XG4gIH0pO1xufTtcbnZhciBfYSwgX2IsIF9jLCBfZCwgX2UsIF9mLCBfZywgX2g7XG5pbXBvcnQgeyBUb25Db25uZWN0RXJyb3IsIGlzV2FsbGV0SW5mb0N1cnJlbnRseUluamVjdGVkLCB0b1VzZXJGcmllbmRseUFkZHJlc3MsIENIQUlOLCBUb25Db25uZWN0LCBpc1RlbGVncmFtVXJsLCBlbmNvZGVUZWxlZ3JhbVVybFBhcmFtZXRlcnMsIGlzV2FsbGV0SW5mb1JlbW90ZSwgaXNXYWxsZXRJbmZvQ3VycmVudGx5RW1iZWRkZWQsIGNyZWF0ZVZlcnNpb25JbmZvLCBCcm93c2VyRXZlbnREaXNwYXRjaGVyLCBjcmVhdGVSZXNwb25zZVZlcnNpb25FdmVudCwgY3JlYXRlUmVxdWVzdFZlcnNpb25FdmVudCwgY3JlYXRlQ29ubmVjdGlvblN0YXJ0ZWRFdmVudCwgY3JlYXRlQ29ubmVjdGlvbkNvbXBsZXRlZEV2ZW50LCBjcmVhdGVDb25uZWN0aW9uRXJyb3JFdmVudCwgY3JlYXRlQ29ubmVjdGlvblJlc3RvcmluZ1N0YXJ0ZWRFdmVudCwgY3JlYXRlQ29ubmVjdGlvblJlc3RvcmluZ0NvbXBsZXRlZEV2ZW50LCBjcmVhdGVDb25uZWN0aW9uUmVzdG9yaW5nRXJyb3JFdmVudCwgY3JlYXRlRGlzY29ubmVjdGlvbkV2ZW50LCBjcmVhdGVUcmFuc2FjdGlvblNlbnRGb3JTaWduYXR1cmVFdmVudCwgY3JlYXRlVHJhbnNhY3Rpb25TaWduZWRFdmVudCwgY3JlYXRlVHJhbnNhY3Rpb25TaWduaW5nRmFpbGVkRXZlbnQgfSBmcm9tIFwiQHRvbmNvbm5lY3Qvc2RrXCI7XG5leHBvcnQgKiBmcm9tIFwiQHRvbmNvbm5lY3Qvc2RrXCI7XG5pbXBvcnQgVUFQYXJzZXIgZnJvbSBcInVhLXBhcnNlci1qc1wiO1xuaW1wb3J0IGRlZXBtZXJnZSBmcm9tIFwiZGVlcG1lcmdlXCI7XG5pbXBvcnQgY24gZnJvbSBcImNsYXNzbmFtZXNcIjtcbmNvbnN0IHNoYXJlZENvbmZpZyA9IHt9O1xuZnVuY3Rpb24gc2V0SHlkcmF0ZUNvbnRleHQoY29udGV4dCkge1xuICBzaGFyZWRDb25maWcuY29udGV4dCA9IGNvbnRleHQ7XG59XG5jb25zdCBlcXVhbEZuID0gKGEyLCBiKSA9PiBhMiA9PT0gYjtcbmNvbnN0ICRQUk9YWSA9IFN5bWJvbChcInNvbGlkLXByb3h5XCIpO1xuY29uc3QgJFRSQUNLID0gU3ltYm9sKFwic29saWQtdHJhY2tcIik7XG5jb25zdCBzaWduYWxPcHRpb25zID0ge1xuICBlcXVhbHM6IGVxdWFsRm5cbn07XG5sZXQgcnVuRWZmZWN0cyA9IHJ1blF1ZXVlO1xuY29uc3QgU1RBTEUgPSAxO1xuY29uc3QgUEVORElORyA9IDI7XG5jb25zdCBVTk9XTkVEID0ge1xuICBvd25lZDogbnVsbCxcbiAgY2xlYW51cHM6IG51bGwsXG4gIGNvbnRleHQ6IG51bGwsXG4gIG93bmVyOiBudWxsXG59O1xuY29uc3QgTk9fSU5JVCA9IHt9O1xudmFyIE93bmVyID0gbnVsbDtcbmxldCBUcmFuc2l0aW9uJDEgPSBudWxsO1xubGV0IExpc3RlbmVyID0gbnVsbDtcbmxldCBVcGRhdGVzID0gbnVsbDtcbmxldCBFZmZlY3RzID0gbnVsbDtcbmxldCBFeGVjQ291bnQgPSAwO1xuZnVuY3Rpb24gY3JlYXRlUm9vdChmbiwgZGV0YWNoZWRPd25lcikge1xuICBjb25zdCBsaXN0ZW5lciA9IExpc3RlbmVyLCBvd25lciA9IE93bmVyLCB1bm93bmVkID0gZm4ubGVuZ3RoID09PSAwLCByb290ID0gdW5vd25lZCA/IFVOT1dORUQgOiB7XG4gICAgb3duZWQ6IG51bGwsXG4gICAgY2xlYW51cHM6IG51bGwsXG4gICAgY29udGV4dDogbnVsbCxcbiAgICBvd25lcjogZGV0YWNoZWRPd25lciA9PT0gdm9pZCAwID8gb3duZXIgOiBkZXRhY2hlZE93bmVyXG4gIH0sIHVwZGF0ZUZuID0gdW5vd25lZCA/IGZuIDogKCkgPT4gZm4oKCkgPT4gdW50cmFjaygoKSA9PiBjbGVhbk5vZGUocm9vdCkpKTtcbiAgT3duZXIgPSByb290O1xuICBMaXN0ZW5lciA9IG51bGw7XG4gIHRyeSB7XG4gICAgcmV0dXJuIHJ1blVwZGF0ZXModXBkYXRlRm4sIHRydWUpO1xuICB9IGZpbmFsbHkge1xuICAgIExpc3RlbmVyID0gbGlzdGVuZXI7XG4gICAgT3duZXIgPSBvd25lcjtcbiAgfVxufVxuZnVuY3Rpb24gY3JlYXRlU2lnbmFsKHZhbHVlLCBvcHRpb25zKSB7XG4gIG9wdGlvbnMgPSBvcHRpb25zID8gT2JqZWN0LmFzc2lnbih7fSwgc2lnbmFsT3B0aW9ucywgb3B0aW9ucykgOiBzaWduYWxPcHRpb25zO1xuICBjb25zdCBzMiA9IHtcbiAgICB2YWx1ZSxcbiAgICBvYnNlcnZlcnM6IG51bGwsXG4gICAgb2JzZXJ2ZXJTbG90czogbnVsbCxcbiAgICBjb21wYXJhdG9yOiBvcHRpb25zLmVxdWFscyB8fCB2b2lkIDBcbiAgfTtcbiAgY29uc3Qgc2V0dGVyID0gKHZhbHVlMikgPT4ge1xuICAgIGlmICh0eXBlb2YgdmFsdWUyID09PSBcImZ1bmN0aW9uXCIpIHtcbiAgICAgIHZhbHVlMiA9IHZhbHVlMihzMi52YWx1ZSk7XG4gICAgfVxuICAgIHJldHVybiB3cml0ZVNpZ25hbChzMiwgdmFsdWUyKTtcbiAgfTtcbiAgcmV0dXJuIFtyZWFkU2lnbmFsLmJpbmQoczIpLCBzZXR0ZXJdO1xufVxuZnVuY3Rpb24gY3JlYXRlQ29tcHV0ZWQoZm4sIHZhbHVlLCBvcHRpb25zKSB7XG4gIGNvbnN0IGMyID0gY3JlYXRlQ29tcHV0YXRpb24oZm4sIHZhbHVlLCB0cnVlLCBTVEFMRSk7XG4gIHVwZGF0ZUNvbXB1dGF0aW9uKGMyKTtcbn1cbmZ1bmN0aW9uIGNyZWF0ZVJlbmRlckVmZmVjdChmbiwgdmFsdWUsIG9wdGlvbnMpIHtcbiAgY29uc3QgYzIgPSBjcmVhdGVDb21wdXRhdGlvbihmbiwgdmFsdWUsIGZhbHNlLCBTVEFMRSk7XG4gIHVwZGF0ZUNvbXB1dGF0aW9uKGMyKTtcbn1cbmZ1bmN0aW9uIGNyZWF0ZUVmZmVjdChmbiwgdmFsdWUsIG9wdGlvbnMpIHtcbiAgcnVuRWZmZWN0cyA9IHJ1blVzZXJFZmZlY3RzO1xuICBjb25zdCBjMiA9IGNyZWF0ZUNvbXB1dGF0aW9uKGZuLCB2YWx1ZSwgZmFsc2UsIFNUQUxFKTtcbiAgYzIudXNlciA9IHRydWU7XG4gIEVmZmVjdHMgPyBFZmZlY3RzLnB1c2goYzIpIDogdXBkYXRlQ29tcHV0YXRpb24oYzIpO1xufVxuZnVuY3Rpb24gY3JlYXRlTWVtbyhmbiwgdmFsdWUsIG9wdGlvbnMpIHtcbiAgb3B0aW9ucyA9IG9wdGlvbnMgPyBPYmplY3QuYXNzaWduKHt9LCBzaWduYWxPcHRpb25zLCBvcHRpb25zKSA6IHNpZ25hbE9wdGlvbnM7XG4gIGNvbnN0IGMyID0gY3JlYXRlQ29tcHV0YXRpb24oZm4sIHZhbHVlLCB0cnVlLCAwKTtcbiAgYzIub2JzZXJ2ZXJzID0gbnVsbDtcbiAgYzIub2JzZXJ2ZXJTbG90cyA9IG51bGw7XG4gIGMyLmNvbXBhcmF0b3IgPSBvcHRpb25zLmVxdWFscyB8fCB2b2lkIDA7XG4gIHVwZGF0ZUNvbXB1dGF0aW9uKGMyKTtcbiAgcmV0dXJuIHJlYWRTaWduYWwuYmluZChjMik7XG59XG5mdW5jdGlvbiBjcmVhdGVSZXNvdXJjZShwU291cmNlLCBwRmV0Y2hlciwgcE9wdGlvbnMpIHtcbiAgbGV0IHNvdXJjZTtcbiAgbGV0IGZldGNoZXI7XG4gIGxldCBvcHRpb25zO1xuICBpZiAoYXJndW1lbnRzLmxlbmd0aCA9PT0gMiAmJiB0eXBlb2YgcEZldGNoZXIgPT09IFwib2JqZWN0XCIgfHwgYXJndW1lbnRzLmxlbmd0aCA9PT0gMSkge1xuICAgIHNvdXJjZSA9IHRydWU7XG4gICAgZmV0Y2hlciA9IHBTb3VyY2U7XG4gICAgb3B0aW9ucyA9IHBGZXRjaGVyIHx8IHt9O1xuICB9IGVsc2Uge1xuICAgIHNvdXJjZSA9IHBTb3VyY2U7XG4gICAgZmV0Y2hlciA9IHBGZXRjaGVyO1xuICAgIG9wdGlvbnMgPSBwT3B0aW9ucyB8fCB7fTtcbiAgfVxuICBsZXQgcHIgPSBudWxsLCBpbml0UCA9IE5PX0lOSVQsIGlkID0gbnVsbCwgc2NoZWR1bGVkID0gZmFsc2UsIHJlc29sdmVkID0gXCJpbml0aWFsVmFsdWVcIiBpbiBvcHRpb25zLCBkeW5hbWljID0gdHlwZW9mIHNvdXJjZSA9PT0gXCJmdW5jdGlvblwiICYmIGNyZWF0ZU1lbW8oc291cmNlKTtcbiAgY29uc3QgY29udGV4dHMgPSAvKiBAX19QVVJFX18gKi8gbmV3IFNldCgpLCBbdmFsdWUsIHNldFZhbHVlXSA9IChvcHRpb25zLnN0b3JhZ2UgfHwgY3JlYXRlU2lnbmFsKShvcHRpb25zLmluaXRpYWxWYWx1ZSksIFtlcnJvciwgc2V0RXJyb3JdID0gY3JlYXRlU2lnbmFsKHZvaWQgMCksIFt0cmFjaywgdHJpZ2dlcl0gPSBjcmVhdGVTaWduYWwodm9pZCAwLCB7XG4gICAgZXF1YWxzOiBmYWxzZVxuICB9KSwgW3N0YXRlLCBzZXRTdGF0ZV0gPSBjcmVhdGVTaWduYWwocmVzb2x2ZWQgPyBcInJlYWR5XCIgOiBcInVucmVzb2x2ZWRcIik7XG4gIGlmIChzaGFyZWRDb25maWcuY29udGV4dCkge1xuICAgIGlkID0gYCR7c2hhcmVkQ29uZmlnLmNvbnRleHQuaWR9JHtzaGFyZWRDb25maWcuY29udGV4dC5jb3VudCsrfWA7XG4gICAgbGV0IHY7XG4gICAgaWYgKG9wdGlvbnMuc3NyTG9hZEZyb20gPT09IFwiaW5pdGlhbFwiKVxuICAgICAgaW5pdFAgPSBvcHRpb25zLmluaXRpYWxWYWx1ZTtcbiAgICBlbHNlIGlmIChzaGFyZWRDb25maWcubG9hZCAmJiAodiA9IHNoYXJlZENvbmZpZy5sb2FkKGlkKSkpXG4gICAgICBpbml0UCA9IHZbMF07XG4gIH1cbiAgZnVuY3Rpb24gbG9hZEVuZChwMiwgdiwgZXJyb3IyLCBrZXkpIHtcbiAgICBpZiAocHIgPT09IHAyKSB7XG4gICAgICBwciA9IG51bGw7XG4gICAgICByZXNvbHZlZCA9IHRydWU7XG4gICAgICBpZiAoKHAyID09PSBpbml0UCB8fCB2ID09PSBpbml0UCkgJiYgb3B0aW9ucy5vbkh5ZHJhdGVkKVxuICAgICAgICBxdWV1ZU1pY3JvdGFzaygoKSA9PiBvcHRpb25zLm9uSHlkcmF0ZWQoa2V5LCB7XG4gICAgICAgICAgdmFsdWU6IHZcbiAgICAgICAgfSkpO1xuICAgICAgaW5pdFAgPSBOT19JTklUO1xuICAgICAgY29tcGxldGVMb2FkKHYsIGVycm9yMik7XG4gICAgfVxuICAgIHJldHVybiB2O1xuICB9XG4gIGZ1bmN0aW9uIGNvbXBsZXRlTG9hZCh2LCBlcnIpIHtcbiAgICBydW5VcGRhdGVzKCgpID0+IHtcbiAgICAgIGlmIChlcnIgPT09IHZvaWQgMClcbiAgICAgICAgc2V0VmFsdWUoKCkgPT4gdik7XG4gICAgICBzZXRTdGF0ZShlcnIgIT09IHZvaWQgMCA/IFwiZXJyb3JlZFwiIDogXCJyZWFkeVwiKTtcbiAgICAgIHNldEVycm9yKGVycik7XG4gICAgICBmb3IgKGNvbnN0IGMyIG9mIGNvbnRleHRzLmtleXMoKSlcbiAgICAgICAgYzIuZGVjcmVtZW50KCk7XG4gICAgICBjb250ZXh0cy5jbGVhcigpO1xuICAgIH0sIGZhbHNlKTtcbiAgfVxuICBmdW5jdGlvbiByZWFkKCkge1xuICAgIGNvbnN0IGMyID0gU3VzcGVuc2VDb250ZXh0LCB2ID0gdmFsdWUoKSwgZXJyID0gZXJyb3IoKTtcbiAgICBpZiAoZXJyICE9PSB2b2lkIDAgJiYgIXByKVxuICAgICAgdGhyb3cgZXJyO1xuICAgIGlmIChMaXN0ZW5lciAmJiAhTGlzdGVuZXIudXNlciAmJiBjMikge1xuICAgICAgY3JlYXRlQ29tcHV0ZWQoKCkgPT4ge1xuICAgICAgICB0cmFjaygpO1xuICAgICAgICBpZiAocHIpIHtcbiAgICAgICAgICBpZiAoYzIucmVzb2x2ZWQpXG4gICAgICAgICAgICA7XG4gICAgICAgICAgZWxzZSBpZiAoIWNvbnRleHRzLmhhcyhjMikpIHtcbiAgICAgICAgICAgIGMyLmluY3JlbWVudCgpO1xuICAgICAgICAgICAgY29udGV4dHMuYWRkKGMyKTtcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH0pO1xuICAgIH1cbiAgICByZXR1cm4gdjtcbiAgfVxuICBmdW5jdGlvbiBsb2FkKHJlZmV0Y2hpbmcgPSB0cnVlKSB7XG4gICAgaWYgKHJlZmV0Y2hpbmcgIT09IGZhbHNlICYmIHNjaGVkdWxlZClcbiAgICAgIHJldHVybjtcbiAgICBzY2hlZHVsZWQgPSBmYWxzZTtcbiAgICBjb25zdCBsb29rdXAyID0gZHluYW1pYyA/IGR5bmFtaWMoKSA6IHNvdXJjZTtcbiAgICBpZiAobG9va3VwMiA9PSBudWxsIHx8IGxvb2t1cDIgPT09IGZhbHNlKSB7XG4gICAgICBsb2FkRW5kKHByLCB1bnRyYWNrKHZhbHVlKSk7XG4gICAgICByZXR1cm47XG4gICAgfVxuICAgIGNvbnN0IHAyID0gaW5pdFAgIT09IE5PX0lOSVQgPyBpbml0UCA6IHVudHJhY2soKCkgPT4gZmV0Y2hlcihsb29rdXAyLCB7XG4gICAgICB2YWx1ZTogdmFsdWUoKSxcbiAgICAgIHJlZmV0Y2hpbmdcbiAgICB9KSk7XG4gICAgaWYgKHR5cGVvZiBwMiAhPT0gXCJvYmplY3RcIiB8fCAhKHAyICYmIFwidGhlblwiIGluIHAyKSkge1xuICAgICAgbG9hZEVuZChwciwgcDIsIHZvaWQgMCwgbG9va3VwMik7XG4gICAgICByZXR1cm4gcDI7XG4gICAgfVxuICAgIHByID0gcDI7XG4gICAgc2NoZWR1bGVkID0gdHJ1ZTtcbiAgICBxdWV1ZU1pY3JvdGFzaygoKSA9PiBzY2hlZHVsZWQgPSBmYWxzZSk7XG4gICAgcnVuVXBkYXRlcygoKSA9PiB7XG4gICAgICBzZXRTdGF0ZShyZXNvbHZlZCA/IFwicmVmcmVzaGluZ1wiIDogXCJwZW5kaW5nXCIpO1xuICAgICAgdHJpZ2dlcigpO1xuICAgIH0sIGZhbHNlKTtcbiAgICByZXR1cm4gcDIudGhlbigodikgPT4gbG9hZEVuZChwMiwgdiwgdm9pZCAwLCBsb29rdXAyKSwgKGUyKSA9PiBsb2FkRW5kKHAyLCB2b2lkIDAsIGNhc3RFcnJvcihlMiksIGxvb2t1cDIpKTtcbiAgfVxuICBPYmplY3QuZGVmaW5lUHJvcGVydGllcyhyZWFkLCB7XG4gICAgc3RhdGU6IHtcbiAgICAgIGdldDogKCkgPT4gc3RhdGUoKVxuICAgIH0sXG4gICAgZXJyb3I6IHtcbiAgICAgIGdldDogKCkgPT4gZXJyb3IoKVxuICAgIH0sXG4gICAgbG9hZGluZzoge1xuICAgICAgZ2V0KCkge1xuICAgICAgICBjb25zdCBzMiA9IHN0YXRlKCk7XG4gICAgICAgIHJldHVybiBzMiA9PT0gXCJwZW5kaW5nXCIgfHwgczIgPT09IFwicmVmcmVzaGluZ1wiO1xuICAgICAgfVxuICAgIH0sXG4gICAgbGF0ZXN0OiB7XG4gICAgICBnZXQoKSB7XG4gICAgICAgIGlmICghcmVzb2x2ZWQpXG4gICAgICAgICAgcmV0dXJuIHJlYWQoKTtcbiAgICAgICAgY29uc3QgZXJyID0gZXJyb3IoKTtcbiAgICAgICAgaWYgKGVyciAmJiAhcHIpXG4gICAgICAgICAgdGhyb3cgZXJyO1xuICAgICAgICByZXR1cm4gdmFsdWUoKTtcbiAgICAgIH1cbiAgICB9XG4gIH0pO1xuICBpZiAoZHluYW1pYylcbiAgICBjcmVhdGVDb21wdXRlZCgoKSA9PiBsb2FkKGZhbHNlKSk7XG4gIGVsc2VcbiAgICBsb2FkKGZhbHNlKTtcbiAgcmV0dXJuIFtyZWFkLCB7XG4gICAgcmVmZXRjaDogbG9hZCxcbiAgICBtdXRhdGU6IHNldFZhbHVlXG4gIH1dO1xufVxuZnVuY3Rpb24gYmF0Y2goZm4pIHtcbiAgcmV0dXJuIHJ1blVwZGF0ZXMoZm4sIGZhbHNlKTtcbn1cbmZ1bmN0aW9uIHVudHJhY2soZm4pIHtcbiAgaWYgKExpc3RlbmVyID09PSBudWxsKVxuICAgIHJldHVybiBmbigpO1xuICBjb25zdCBsaXN0ZW5lciA9IExpc3RlbmVyO1xuICBMaXN0ZW5lciA9IG51bGw7XG4gIHRyeSB7XG4gICAgcmV0dXJuIGZuKCk7XG4gIH0gZmluYWxseSB7XG4gICAgTGlzdGVuZXIgPSBsaXN0ZW5lcjtcbiAgfVxufVxuZnVuY3Rpb24gb24oZGVwcywgZm4sIG9wdGlvbnMpIHtcbiAgY29uc3QgaXNBcnJheSA9IEFycmF5LmlzQXJyYXkoZGVwcyk7XG4gIGxldCBwcmV2SW5wdXQ7XG4gIGxldCBkZWZlciA9IG9wdGlvbnMgJiYgb3B0aW9ucy5kZWZlcjtcbiAgcmV0dXJuIChwcmV2VmFsdWUpID0+IHtcbiAgICBsZXQgaW5wdXQ7XG4gICAgaWYgKGlzQXJyYXkpIHtcbiAgICAgIGlucHV0ID0gQXJyYXkoZGVwcy5sZW5ndGgpO1xuICAgICAgZm9yIChsZXQgaTIgPSAwOyBpMiA8IGRlcHMubGVuZ3RoOyBpMisrKVxuICAgICAgICBpbnB1dFtpMl0gPSBkZXBzW2kyXSgpO1xuICAgIH0gZWxzZVxuICAgICAgaW5wdXQgPSBkZXBzKCk7XG4gICAgaWYgKGRlZmVyKSB7XG4gICAgICBkZWZlciA9IGZhbHNlO1xuICAgICAgcmV0dXJuIHZvaWQgMDtcbiAgICB9XG4gICAgY29uc3QgcmVzdWx0ID0gdW50cmFjaygoKSA9PiBmbihpbnB1dCwgcHJldklucHV0LCBwcmV2VmFsdWUpKTtcbiAgICBwcmV2SW5wdXQgPSBpbnB1dDtcbiAgICByZXR1cm4gcmVzdWx0O1xuICB9O1xufVxuZnVuY3Rpb24gb25Nb3VudChmbikge1xuICBjcmVhdGVFZmZlY3QoKCkgPT4gdW50cmFjayhmbikpO1xufVxuZnVuY3Rpb24gb25DbGVhbnVwKGZuKSB7XG4gIGlmIChPd25lciA9PT0gbnVsbClcbiAgICA7XG4gIGVsc2UgaWYgKE93bmVyLmNsZWFudXBzID09PSBudWxsKVxuICAgIE93bmVyLmNsZWFudXBzID0gW2ZuXTtcbiAgZWxzZVxuICAgIE93bmVyLmNsZWFudXBzLnB1c2goZm4pO1xuICByZXR1cm4gZm47XG59XG5mdW5jdGlvbiBnZXRMaXN0ZW5lcigpIHtcbiAgcmV0dXJuIExpc3RlbmVyO1xufVxuZnVuY3Rpb24gZ2V0T3duZXIoKSB7XG4gIHJldHVybiBPd25lcjtcbn1cbmZ1bmN0aW9uIGNyZWF0ZUNvbnRleHQoZGVmYXVsdFZhbHVlLCBvcHRpb25zKSB7XG4gIGNvbnN0IGlkID0gU3ltYm9sKFwiY29udGV4dFwiKTtcbiAgcmV0dXJuIHtcbiAgICBpZCxcbiAgICBQcm92aWRlcjogY3JlYXRlUHJvdmlkZXIoaWQpLFxuICAgIGRlZmF1bHRWYWx1ZVxuICB9O1xufVxuZnVuY3Rpb24gdXNlQ29udGV4dChjb250ZXh0KSB7XG4gIGxldCBjdHg7XG4gIHJldHVybiAoY3R4ID0gbG9va3VwKE93bmVyLCBjb250ZXh0LmlkKSkgIT09IHZvaWQgMCA/IGN0eCA6IGNvbnRleHQuZGVmYXVsdFZhbHVlO1xufVxuZnVuY3Rpb24gY2hpbGRyZW4oZm4pIHtcbiAgY29uc3QgY2hpbGRyZW4yID0gY3JlYXRlTWVtbyhmbik7XG4gIGNvbnN0IG1lbW8gPSBjcmVhdGVNZW1vKCgpID0+IHJlc29sdmVDaGlsZHJlbihjaGlsZHJlbjIoKSkpO1xuICBtZW1vLnRvQXJyYXkgPSAoKSA9PiB7XG4gICAgY29uc3QgYzIgPSBtZW1vKCk7XG4gICAgcmV0dXJuIEFycmF5LmlzQXJyYXkoYzIpID8gYzIgOiBjMiAhPSBudWxsID8gW2MyXSA6IFtdO1xuICB9O1xuICByZXR1cm4gbWVtbztcbn1cbmxldCBTdXNwZW5zZUNvbnRleHQ7XG5mdW5jdGlvbiByZWFkU2lnbmFsKCkge1xuICBjb25zdCBydW5uaW5nVHJhbnNpdGlvbiA9IFRyYW5zaXRpb24kMTtcbiAgaWYgKHRoaXMuc291cmNlcyAmJiAodGhpcy5zdGF0ZSB8fCBydW5uaW5nVHJhbnNpdGlvbikpIHtcbiAgICBpZiAodGhpcy5zdGF0ZSA9PT0gU1RBTEUgfHwgcnVubmluZ1RyYW5zaXRpb24pXG4gICAgICB1cGRhdGVDb21wdXRhdGlvbih0aGlzKTtcbiAgICBlbHNlIHtcbiAgICAgIGNvbnN0IHVwZGF0ZXMgPSBVcGRhdGVzO1xuICAgICAgVXBkYXRlcyA9IG51bGw7XG4gICAgICBydW5VcGRhdGVzKCgpID0+IGxvb2tVcHN0cmVhbSh0aGlzKSwgZmFsc2UpO1xuICAgICAgVXBkYXRlcyA9IHVwZGF0ZXM7XG4gICAgfVxuICB9XG4gIGlmIChMaXN0ZW5lcikge1xuICAgIGNvbnN0IHNTbG90ID0gdGhpcy5vYnNlcnZlcnMgPyB0aGlzLm9ic2VydmVycy5sZW5ndGggOiAwO1xuICAgIGlmICghTGlzdGVuZXIuc291cmNlcykge1xuICAgICAgTGlzdGVuZXIuc291cmNlcyA9IFt0aGlzXTtcbiAgICAgIExpc3RlbmVyLnNvdXJjZVNsb3RzID0gW3NTbG90XTtcbiAgICB9IGVsc2Uge1xuICAgICAgTGlzdGVuZXIuc291cmNlcy5wdXNoKHRoaXMpO1xuICAgICAgTGlzdGVuZXIuc291cmNlU2xvdHMucHVzaChzU2xvdCk7XG4gICAgfVxuICAgIGlmICghdGhpcy5vYnNlcnZlcnMpIHtcbiAgICAgIHRoaXMub2JzZXJ2ZXJzID0gW0xpc3RlbmVyXTtcbiAgICAgIHRoaXMub2JzZXJ2ZXJTbG90cyA9IFtMaXN0ZW5lci5zb3VyY2VzLmxlbmd0aCAtIDFdO1xuICAgIH0gZWxzZSB7XG4gICAgICB0aGlzLm9ic2VydmVycy5wdXNoKExpc3RlbmVyKTtcbiAgICAgIHRoaXMub2JzZXJ2ZXJTbG90cy5wdXNoKExpc3RlbmVyLnNvdXJjZXMubGVuZ3RoIC0gMSk7XG4gICAgfVxuICB9XG4gIHJldHVybiB0aGlzLnZhbHVlO1xufVxuZnVuY3Rpb24gd3JpdGVTaWduYWwobm9kZSwgdmFsdWUsIGlzQ29tcCkge1xuICBsZXQgY3VycmVudCA9IG5vZGUudmFsdWU7XG4gIGlmICghbm9kZS5jb21wYXJhdG9yIHx8ICFub2RlLmNvbXBhcmF0b3IoY3VycmVudCwgdmFsdWUpKSB7XG4gICAgbm9kZS52YWx1ZSA9IHZhbHVlO1xuICAgIGlmIChub2RlLm9ic2VydmVycyAmJiBub2RlLm9ic2VydmVycy5sZW5ndGgpIHtcbiAgICAgIHJ1blVwZGF0ZXMoKCkgPT4ge1xuICAgICAgICBmb3IgKGxldCBpMiA9IDA7IGkyIDwgbm9kZS5vYnNlcnZlcnMubGVuZ3RoOyBpMiArPSAxKSB7XG4gICAgICAgICAgY29uc3QgbzIgPSBub2RlLm9ic2VydmVyc1tpMl07XG4gICAgICAgICAgY29uc3QgVHJhbnNpdGlvblJ1bm5pbmcgPSBUcmFuc2l0aW9uJDEgJiYgVHJhbnNpdGlvbiQxLnJ1bm5pbmc7XG4gICAgICAgICAgaWYgKFRyYW5zaXRpb25SdW5uaW5nICYmIFRyYW5zaXRpb24kMS5kaXNwb3NlZC5oYXMobzIpKVxuICAgICAgICAgICAgO1xuICAgICAgICAgIGlmIChUcmFuc2l0aW9uUnVubmluZyAmJiAhbzIudFN0YXRlIHx8ICFUcmFuc2l0aW9uUnVubmluZyAmJiAhbzIuc3RhdGUpIHtcbiAgICAgICAgICAgIGlmIChvMi5wdXJlKVxuICAgICAgICAgICAgICBVcGRhdGVzLnB1c2gobzIpO1xuICAgICAgICAgICAgZWxzZVxuICAgICAgICAgICAgICBFZmZlY3RzLnB1c2gobzIpO1xuICAgICAgICAgICAgaWYgKG8yLm9ic2VydmVycylcbiAgICAgICAgICAgICAgbWFya0Rvd25zdHJlYW0obzIpO1xuICAgICAgICAgIH1cbiAgICAgICAgICBpZiAoVHJhbnNpdGlvblJ1bm5pbmcpXG4gICAgICAgICAgICA7XG4gICAgICAgICAgZWxzZVxuICAgICAgICAgICAgbzIuc3RhdGUgPSBTVEFMRTtcbiAgICAgICAgfVxuICAgICAgICBpZiAoVXBkYXRlcy5sZW5ndGggPiAxZTYpIHtcbiAgICAgICAgICBVcGRhdGVzID0gW107XG4gICAgICAgICAgaWYgKGZhbHNlKVxuICAgICAgICAgICAgO1xuICAgICAgICAgIHRocm93IG5ldyBFcnJvcigpO1xuICAgICAgICB9XG4gICAgICB9LCBmYWxzZSk7XG4gICAgfVxuICB9XG4gIHJldHVybiB2YWx1ZTtcbn1cbmZ1bmN0aW9uIHVwZGF0ZUNvbXB1dGF0aW9uKG5vZGUpIHtcbiAgaWYgKCFub2RlLmZuKVxuICAgIHJldHVybjtcbiAgY2xlYW5Ob2RlKG5vZGUpO1xuICBjb25zdCBvd25lciA9IE93bmVyLCBsaXN0ZW5lciA9IExpc3RlbmVyLCB0aW1lID0gRXhlY0NvdW50O1xuICBMaXN0ZW5lciA9IE93bmVyID0gbm9kZTtcbiAgcnVuQ29tcHV0YXRpb24obm9kZSwgbm9kZS52YWx1ZSwgdGltZSk7XG4gIExpc3RlbmVyID0gbGlzdGVuZXI7XG4gIE93bmVyID0gb3duZXI7XG59XG5mdW5jdGlvbiBydW5Db21wdXRhdGlvbihub2RlLCB2YWx1ZSwgdGltZSkge1xuICBsZXQgbmV4dFZhbHVlO1xuICB0cnkge1xuICAgIG5leHRWYWx1ZSA9IG5vZGUuZm4odmFsdWUpO1xuICB9IGNhdGNoIChlcnIpIHtcbiAgICBpZiAobm9kZS5wdXJlKSB7XG4gICAgICB7XG4gICAgICAgIG5vZGUuc3RhdGUgPSBTVEFMRTtcbiAgICAgICAgbm9kZS5vd25lZCAmJiBub2RlLm93bmVkLmZvckVhY2goY2xlYW5Ob2RlKTtcbiAgICAgICAgbm9kZS5vd25lZCA9IG51bGw7XG4gICAgICB9XG4gICAgfVxuICAgIGhhbmRsZUVycm9yKGVycik7XG4gIH1cbiAgaWYgKCFub2RlLnVwZGF0ZWRBdCB8fCBub2RlLnVwZGF0ZWRBdCA8PSB0aW1lKSB7XG4gICAgaWYgKG5vZGUudXBkYXRlZEF0ICE9IG51bGwgJiYgXCJvYnNlcnZlcnNcIiBpbiBub2RlKSB7XG4gICAgICB3cml0ZVNpZ25hbChub2RlLCBuZXh0VmFsdWUpO1xuICAgIH0gZWxzZVxuICAgICAgbm9kZS52YWx1ZSA9IG5leHRWYWx1ZTtcbiAgICBub2RlLnVwZGF0ZWRBdCA9IHRpbWU7XG4gIH1cbn1cbmZ1bmN0aW9uIGNyZWF0ZUNvbXB1dGF0aW9uKGZuLCBpbml0LCBwdXJlLCBzdGF0ZSA9IFNUQUxFLCBvcHRpb25zKSB7XG4gIGNvbnN0IGMyID0ge1xuICAgIGZuLFxuICAgIHN0YXRlLFxuICAgIHVwZGF0ZWRBdDogbnVsbCxcbiAgICBvd25lZDogbnVsbCxcbiAgICBzb3VyY2VzOiBudWxsLFxuICAgIHNvdXJjZVNsb3RzOiBudWxsLFxuICAgIGNsZWFudXBzOiBudWxsLFxuICAgIHZhbHVlOiBpbml0LFxuICAgIG93bmVyOiBPd25lcixcbiAgICBjb250ZXh0OiBudWxsLFxuICAgIHB1cmVcbiAgfTtcbiAgaWYgKE93bmVyID09PSBudWxsKVxuICAgIDtcbiAgZWxzZSBpZiAoT3duZXIgIT09IFVOT1dORUQpIHtcbiAgICB7XG4gICAgICBpZiAoIU93bmVyLm93bmVkKVxuICAgICAgICBPd25lci5vd25lZCA9IFtjMl07XG4gICAgICBlbHNlXG4gICAgICAgIE93bmVyLm93bmVkLnB1c2goYzIpO1xuICAgIH1cbiAgfVxuICByZXR1cm4gYzI7XG59XG5mdW5jdGlvbiBydW5Ub3Aobm9kZSkge1xuICBjb25zdCBydW5uaW5nVHJhbnNpdGlvbiA9IFRyYW5zaXRpb24kMTtcbiAgaWYgKG5vZGUuc3RhdGUgPT09IDAgfHwgcnVubmluZ1RyYW5zaXRpb24pXG4gICAgcmV0dXJuO1xuICBpZiAobm9kZS5zdGF0ZSA9PT0gUEVORElORyB8fCBydW5uaW5nVHJhbnNpdGlvbilcbiAgICByZXR1cm4gbG9va1Vwc3RyZWFtKG5vZGUpO1xuICBpZiAobm9kZS5zdXNwZW5zZSAmJiB1bnRyYWNrKG5vZGUuc3VzcGVuc2UuaW5GYWxsYmFjaykpXG4gICAgcmV0dXJuIG5vZGUuc3VzcGVuc2UuZWZmZWN0cy5wdXNoKG5vZGUpO1xuICBjb25zdCBhbmNlc3RvcnMgPSBbbm9kZV07XG4gIHdoaWxlICgobm9kZSA9IG5vZGUub3duZXIpICYmICghbm9kZS51cGRhdGVkQXQgfHwgbm9kZS51cGRhdGVkQXQgPCBFeGVjQ291bnQpKSB7XG4gICAgaWYgKG5vZGUuc3RhdGUgfHwgcnVubmluZ1RyYW5zaXRpb24pXG4gICAgICBhbmNlc3RvcnMucHVzaChub2RlKTtcbiAgfVxuICBmb3IgKGxldCBpMiA9IGFuY2VzdG9ycy5sZW5ndGggLSAxOyBpMiA+PSAwOyBpMi0tKSB7XG4gICAgbm9kZSA9IGFuY2VzdG9yc1tpMl07XG4gICAgaWYgKG5vZGUuc3RhdGUgPT09IFNUQUxFIHx8IHJ1bm5pbmdUcmFuc2l0aW9uKSB7XG4gICAgICB1cGRhdGVDb21wdXRhdGlvbihub2RlKTtcbiAgICB9IGVsc2UgaWYgKG5vZGUuc3RhdGUgPT09IFBFTkRJTkcgfHwgcnVubmluZ1RyYW5zaXRpb24pIHtcbiAgICAgIGNvbnN0IHVwZGF0ZXMgPSBVcGRhdGVzO1xuICAgICAgVXBkYXRlcyA9IG51bGw7XG4gICAgICBydW5VcGRhdGVzKCgpID0+IGxvb2tVcHN0cmVhbShub2RlLCBhbmNlc3RvcnNbMF0pLCBmYWxzZSk7XG4gICAgICBVcGRhdGVzID0gdXBkYXRlcztcbiAgICB9XG4gIH1cbn1cbmZ1bmN0aW9uIHJ1blVwZGF0ZXMoZm4sIGluaXQpIHtcbiAgaWYgKFVwZGF0ZXMpXG4gICAgcmV0dXJuIGZuKCk7XG4gIGxldCB3YWl0ID0gZmFsc2U7XG4gIGlmICghaW5pdClcbiAgICBVcGRhdGVzID0gW107XG4gIGlmIChFZmZlY3RzKVxuICAgIHdhaXQgPSB0cnVlO1xuICBlbHNlXG4gICAgRWZmZWN0cyA9IFtdO1xuICBFeGVjQ291bnQrKztcbiAgdHJ5IHtcbiAgICBjb25zdCByZXMgPSBmbigpO1xuICAgIGNvbXBsZXRlVXBkYXRlcyh3YWl0KTtcbiAgICByZXR1cm4gcmVzO1xuICB9IGNhdGNoIChlcnIpIHtcbiAgICBpZiAoIXdhaXQpXG4gICAgICBFZmZlY3RzID0gbnVsbDtcbiAgICBVcGRhdGVzID0gbnVsbDtcbiAgICBoYW5kbGVFcnJvcihlcnIpO1xuICB9XG59XG5mdW5jdGlvbiBjb21wbGV0ZVVwZGF0ZXMod2FpdCkge1xuICBpZiAoVXBkYXRlcykge1xuICAgIHJ1blF1ZXVlKFVwZGF0ZXMpO1xuICAgIFVwZGF0ZXMgPSBudWxsO1xuICB9XG4gIGlmICh3YWl0KVxuICAgIHJldHVybjtcbiAgY29uc3QgZTIgPSBFZmZlY3RzO1xuICBFZmZlY3RzID0gbnVsbDtcbiAgaWYgKGUyLmxlbmd0aClcbiAgICBydW5VcGRhdGVzKCgpID0+IHJ1bkVmZmVjdHMoZTIpLCBmYWxzZSk7XG59XG5mdW5jdGlvbiBydW5RdWV1ZShxdWV1ZSkge1xuICBmb3IgKGxldCBpMiA9IDA7IGkyIDwgcXVldWUubGVuZ3RoOyBpMisrKVxuICAgIHJ1blRvcChxdWV1ZVtpMl0pO1xufVxuZnVuY3Rpb24gcnVuVXNlckVmZmVjdHMocXVldWUpIHtcbiAgbGV0IGkyLCB1c2VyTGVuZ3RoID0gMDtcbiAgZm9yIChpMiA9IDA7IGkyIDwgcXVldWUubGVuZ3RoOyBpMisrKSB7XG4gICAgY29uc3QgZTIgPSBxdWV1ZVtpMl07XG4gICAgaWYgKCFlMi51c2VyKVxuICAgICAgcnVuVG9wKGUyKTtcbiAgICBlbHNlXG4gICAgICBxdWV1ZVt1c2VyTGVuZ3RoKytdID0gZTI7XG4gIH1cbiAgaWYgKHNoYXJlZENvbmZpZy5jb250ZXh0KVxuICAgIHNldEh5ZHJhdGVDb250ZXh0KCk7XG4gIGZvciAoaTIgPSAwOyBpMiA8IHVzZXJMZW5ndGg7IGkyKyspXG4gICAgcnVuVG9wKHF1ZXVlW2kyXSk7XG59XG5mdW5jdGlvbiBsb29rVXBzdHJlYW0obm9kZSwgaWdub3JlKSB7XG4gIGNvbnN0IHJ1bm5pbmdUcmFuc2l0aW9uID0gVHJhbnNpdGlvbiQxO1xuICBub2RlLnN0YXRlID0gMDtcbiAgZm9yIChsZXQgaTIgPSAwOyBpMiA8IG5vZGUuc291cmNlcy5sZW5ndGg7IGkyICs9IDEpIHtcbiAgICBjb25zdCBzb3VyY2UgPSBub2RlLnNvdXJjZXNbaTJdO1xuICAgIGlmIChzb3VyY2Uuc291cmNlcykge1xuICAgICAgaWYgKHNvdXJjZS5zdGF0ZSA9PT0gU1RBTEUgfHwgcnVubmluZ1RyYW5zaXRpb24pIHtcbiAgICAgICAgaWYgKHNvdXJjZSAhPT0gaWdub3JlKVxuICAgICAgICAgIHJ1blRvcChzb3VyY2UpO1xuICAgICAgfSBlbHNlIGlmIChzb3VyY2Uuc3RhdGUgPT09IFBFTkRJTkcgfHwgcnVubmluZ1RyYW5zaXRpb24pXG4gICAgICAgIGxvb2tVcHN0cmVhbShzb3VyY2UsIGlnbm9yZSk7XG4gICAgfVxuICB9XG59XG5mdW5jdGlvbiBtYXJrRG93bnN0cmVhbShub2RlKSB7XG4gIGNvbnN0IHJ1bm5pbmdUcmFuc2l0aW9uID0gVHJhbnNpdGlvbiQxO1xuICBmb3IgKGxldCBpMiA9IDA7IGkyIDwgbm9kZS5vYnNlcnZlcnMubGVuZ3RoOyBpMiArPSAxKSB7XG4gICAgY29uc3QgbzIgPSBub2RlLm9ic2VydmVyc1tpMl07XG4gICAgaWYgKCFvMi5zdGF0ZSB8fCBydW5uaW5nVHJhbnNpdGlvbikge1xuICAgICAgbzIuc3RhdGUgPSBQRU5ESU5HO1xuICAgICAgaWYgKG8yLnB1cmUpXG4gICAgICAgIFVwZGF0ZXMucHVzaChvMik7XG4gICAgICBlbHNlXG4gICAgICAgIEVmZmVjdHMucHVzaChvMik7XG4gICAgICBvMi5vYnNlcnZlcnMgJiYgbWFya0Rvd25zdHJlYW0obzIpO1xuICAgIH1cbiAgfVxufVxuZnVuY3Rpb24gY2xlYW5Ob2RlKG5vZGUpIHtcbiAgbGV0IGkyO1xuICBpZiAobm9kZS5zb3VyY2VzKSB7XG4gICAgd2hpbGUgKG5vZGUuc291cmNlcy5sZW5ndGgpIHtcbiAgICAgIGNvbnN0IHNvdXJjZSA9IG5vZGUuc291cmNlcy5wb3AoKSwgaW5kZXggPSBub2RlLnNvdXJjZVNsb3RzLnBvcCgpLCBvYnMgPSBzb3VyY2Uub2JzZXJ2ZXJzO1xuICAgICAgaWYgKG9icyAmJiBvYnMubGVuZ3RoKSB7XG4gICAgICAgIGNvbnN0IG4yID0gb2JzLnBvcCgpLCBzMiA9IHNvdXJjZS5vYnNlcnZlclNsb3RzLnBvcCgpO1xuICAgICAgICBpZiAoaW5kZXggPCBvYnMubGVuZ3RoKSB7XG4gICAgICAgICAgbjIuc291cmNlU2xvdHNbczJdID0gaW5kZXg7XG4gICAgICAgICAgb2JzW2luZGV4XSA9IG4yO1xuICAgICAgICAgIHNvdXJjZS5vYnNlcnZlclNsb3RzW2luZGV4XSA9IHMyO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuICB9XG4gIGlmIChub2RlLm93bmVkKSB7XG4gICAgZm9yIChpMiA9IDA7IGkyIDwgbm9kZS5vd25lZC5sZW5ndGg7IGkyKyspXG4gICAgICBjbGVhbk5vZGUobm9kZS5vd25lZFtpMl0pO1xuICAgIG5vZGUub3duZWQgPSBudWxsO1xuICB9XG4gIGlmIChub2RlLmNsZWFudXBzKSB7XG4gICAgZm9yIChpMiA9IDA7IGkyIDwgbm9kZS5jbGVhbnVwcy5sZW5ndGg7IGkyKyspXG4gICAgICBub2RlLmNsZWFudXBzW2kyXSgpO1xuICAgIG5vZGUuY2xlYW51cHMgPSBudWxsO1xuICB9XG4gIG5vZGUuc3RhdGUgPSAwO1xuICBub2RlLmNvbnRleHQgPSBudWxsO1xufVxuZnVuY3Rpb24gY2FzdEVycm9yKGVycikge1xuICBpZiAoZXJyIGluc3RhbmNlb2YgRXJyb3IgfHwgdHlwZW9mIGVyciA9PT0gXCJzdHJpbmdcIilcbiAgICByZXR1cm4gZXJyO1xuICByZXR1cm4gbmV3IEVycm9yKFwiVW5rbm93biBlcnJvclwiKTtcbn1cbmZ1bmN0aW9uIGhhbmRsZUVycm9yKGVycikge1xuICBlcnIgPSBjYXN0RXJyb3IoZXJyKTtcbiAgdGhyb3cgZXJyO1xufVxuZnVuY3Rpb24gbG9va3VwKG93bmVyLCBrZXkpIHtcbiAgcmV0dXJuIG93bmVyID8gb3duZXIuY29udGV4dCAmJiBvd25lci5jb250ZXh0W2tleV0gIT09IHZvaWQgMCA/IG93bmVyLmNvbnRleHRba2V5XSA6IGxvb2t1cChvd25lci5vd25lciwga2V5KSA6IHZvaWQgMDtcbn1cbmZ1bmN0aW9uIHJlc29sdmVDaGlsZHJlbihjaGlsZHJlbjIpIHtcbiAgaWYgKHR5cGVvZiBjaGlsZHJlbjIgPT09IFwiZnVuY3Rpb25cIiAmJiAhY2hpbGRyZW4yLmxlbmd0aClcbiAgICByZXR1cm4gcmVzb2x2ZUNoaWxkcmVuKGNoaWxkcmVuMigpKTtcbiAgaWYgKEFycmF5LmlzQXJyYXkoY2hpbGRyZW4yKSkge1xuICAgIGNvbnN0IHJlc3VsdHMgPSBbXTtcbiAgICBmb3IgKGxldCBpMiA9IDA7IGkyIDwgY2hpbGRyZW4yLmxlbmd0aDsgaTIrKykge1xuICAgICAgY29uc3QgcmVzdWx0ID0gcmVzb2x2ZUNoaWxkcmVuKGNoaWxkcmVuMltpMl0pO1xuICAgICAgQXJyYXkuaXNBcnJheShyZXN1bHQpID8gcmVzdWx0cy5wdXNoLmFwcGx5KHJlc3VsdHMsIHJlc3VsdCkgOiByZXN1bHRzLnB1c2gocmVzdWx0KTtcbiAgICB9XG4gICAgcmV0dXJuIHJlc3VsdHM7XG4gIH1cbiAgcmV0dXJuIGNoaWxkcmVuMjtcbn1cbmZ1bmN0aW9uIGNyZWF0ZVByb3ZpZGVyKGlkLCBvcHRpb25zKSB7XG4gIHJldHVybiBmdW5jdGlvbiBwcm92aWRlcihwcm9wcykge1xuICAgIGxldCByZXM7XG4gICAgY3JlYXRlUmVuZGVyRWZmZWN0KCgpID0+IHJlcyA9IHVudHJhY2soKCkgPT4ge1xuICAgICAgT3duZXIuY29udGV4dCA9IHtcbiAgICAgICAgW2lkXTogcHJvcHMudmFsdWVcbiAgICAgIH07XG4gICAgICByZXR1cm4gY2hpbGRyZW4oKCkgPT4gcHJvcHMuY2hpbGRyZW4pO1xuICAgIH0pLCB2b2lkIDApO1xuICAgIHJldHVybiByZXM7XG4gIH07XG59XG5jb25zdCBGQUxMQkFDSyA9IFN5bWJvbChcImZhbGxiYWNrXCIpO1xuZnVuY3Rpb24gZGlzcG9zZShkKSB7XG4gIGZvciAobGV0IGkyID0gMDsgaTIgPCBkLmxlbmd0aDsgaTIrKylcbiAgICBkW2kyXSgpO1xufVxuZnVuY3Rpb24gbWFwQXJyYXkobGlzdCwgbWFwRm4sIG9wdGlvbnMgPSB7fSkge1xuICBsZXQgaXRlbXMgPSBbXSwgbWFwcGVkID0gW10sIGRpc3Bvc2VycyA9IFtdLCBsZW4gPSAwLCBpbmRleGVzID0gbWFwRm4ubGVuZ3RoID4gMSA/IFtdIDogbnVsbDtcbiAgb25DbGVhbnVwKCgpID0+IGRpc3Bvc2UoZGlzcG9zZXJzKSk7XG4gIHJldHVybiAoKSA9PiB7XG4gICAgbGV0IG5ld0l0ZW1zID0gbGlzdCgpIHx8IFtdLCBpMiwgajtcbiAgICBuZXdJdGVtc1skVFJBQ0tdO1xuICAgIHJldHVybiB1bnRyYWNrKCgpID0+IHtcbiAgICAgIGxldCBuZXdMZW4gPSBuZXdJdGVtcy5sZW5ndGgsIG5ld0luZGljZXMsIG5ld0luZGljZXNOZXh0LCB0ZW1wLCB0ZW1wZGlzcG9zZXJzLCB0ZW1wSW5kZXhlcywgc3RhcnQsIGVuZCwgbmV3RW5kLCBpdGVtO1xuICAgICAgaWYgKG5ld0xlbiA9PT0gMCkge1xuICAgICAgICBpZiAobGVuICE9PSAwKSB7XG4gICAgICAgICAgZGlzcG9zZShkaXNwb3NlcnMpO1xuICAgICAgICAgIGRpc3Bvc2VycyA9IFtdO1xuICAgICAgICAgIGl0ZW1zID0gW107XG4gICAgICAgICAgbWFwcGVkID0gW107XG4gICAgICAgICAgbGVuID0gMDtcbiAgICAgICAgICBpbmRleGVzICYmIChpbmRleGVzID0gW10pO1xuICAgICAgICB9XG4gICAgICAgIGlmIChvcHRpb25zLmZhbGxiYWNrKSB7XG4gICAgICAgICAgaXRlbXMgPSBbRkFMTEJBQ0tdO1xuICAgICAgICAgIG1hcHBlZFswXSA9IGNyZWF0ZVJvb3QoKGRpc3Bvc2VyKSA9PiB7XG4gICAgICAgICAgICBkaXNwb3NlcnNbMF0gPSBkaXNwb3NlcjtcbiAgICAgICAgICAgIHJldHVybiBvcHRpb25zLmZhbGxiYWNrKCk7XG4gICAgICAgICAgfSk7XG4gICAgICAgICAgbGVuID0gMTtcbiAgICAgICAgfVxuICAgICAgfSBlbHNlIGlmIChsZW4gPT09IDApIHtcbiAgICAgICAgbWFwcGVkID0gbmV3IEFycmF5KG5ld0xlbik7XG4gICAgICAgIGZvciAoaiA9IDA7IGogPCBuZXdMZW47IGorKykge1xuICAgICAgICAgIGl0ZW1zW2pdID0gbmV3SXRlbXNbal07XG4gICAgICAgICAgbWFwcGVkW2pdID0gY3JlYXRlUm9vdChtYXBwZXIpO1xuICAgICAgICB9XG4gICAgICAgIGxlbiA9IG5ld0xlbjtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHRlbXAgPSBuZXcgQXJyYXkobmV3TGVuKTtcbiAgICAgICAgdGVtcGRpc3Bvc2VycyA9IG5ldyBBcnJheShuZXdMZW4pO1xuICAgICAgICBpbmRleGVzICYmICh0ZW1wSW5kZXhlcyA9IG5ldyBBcnJheShuZXdMZW4pKTtcbiAgICAgICAgZm9yIChzdGFydCA9IDAsIGVuZCA9IE1hdGgubWluKGxlbiwgbmV3TGVuKTsgc3RhcnQgPCBlbmQgJiYgaXRlbXNbc3RhcnRdID09PSBuZXdJdGVtc1tzdGFydF07IHN0YXJ0KyspXG4gICAgICAgICAgO1xuICAgICAgICBmb3IgKGVuZCA9IGxlbiAtIDEsIG5ld0VuZCA9IG5ld0xlbiAtIDE7IGVuZCA+PSBzdGFydCAmJiBuZXdFbmQgPj0gc3RhcnQgJiYgaXRlbXNbZW5kXSA9PT0gbmV3SXRlbXNbbmV3RW5kXTsgZW5kLS0sIG5ld0VuZC0tKSB7XG4gICAgICAgICAgdGVtcFtuZXdFbmRdID0gbWFwcGVkW2VuZF07XG4gICAgICAgICAgdGVtcGRpc3Bvc2Vyc1tuZXdFbmRdID0gZGlzcG9zZXJzW2VuZF07XG4gICAgICAgICAgaW5kZXhlcyAmJiAodGVtcEluZGV4ZXNbbmV3RW5kXSA9IGluZGV4ZXNbZW5kXSk7XG4gICAgICAgIH1cbiAgICAgICAgbmV3SW5kaWNlcyA9IC8qIEBfX1BVUkVfXyAqLyBuZXcgTWFwKCk7XG4gICAgICAgIG5ld0luZGljZXNOZXh0ID0gbmV3IEFycmF5KG5ld0VuZCArIDEpO1xuICAgICAgICBmb3IgKGogPSBuZXdFbmQ7IGogPj0gc3RhcnQ7IGotLSkge1xuICAgICAgICAgIGl0ZW0gPSBuZXdJdGVtc1tqXTtcbiAgICAgICAgICBpMiA9IG5ld0luZGljZXMuZ2V0KGl0ZW0pO1xuICAgICAgICAgIG5ld0luZGljZXNOZXh0W2pdID0gaTIgPT09IHZvaWQgMCA/IC0xIDogaTI7XG4gICAgICAgICAgbmV3SW5kaWNlcy5zZXQoaXRlbSwgaik7XG4gICAgICAgIH1cbiAgICAgICAgZm9yIChpMiA9IHN0YXJ0OyBpMiA8PSBlbmQ7IGkyKyspIHtcbiAgICAgICAgICBpdGVtID0gaXRlbXNbaTJdO1xuICAgICAgICAgIGogPSBuZXdJbmRpY2VzLmdldChpdGVtKTtcbiAgICAgICAgICBpZiAoaiAhPT0gdm9pZCAwICYmIGogIT09IC0xKSB7XG4gICAgICAgICAgICB0ZW1wW2pdID0gbWFwcGVkW2kyXTtcbiAgICAgICAgICAgIHRlbXBkaXNwb3NlcnNbal0gPSBkaXNwb3NlcnNbaTJdO1xuICAgICAgICAgICAgaW5kZXhlcyAmJiAodGVtcEluZGV4ZXNbal0gPSBpbmRleGVzW2kyXSk7XG4gICAgICAgICAgICBqID0gbmV3SW5kaWNlc05leHRbal07XG4gICAgICAgICAgICBuZXdJbmRpY2VzLnNldChpdGVtLCBqKTtcbiAgICAgICAgICB9IGVsc2VcbiAgICAgICAgICAgIGRpc3Bvc2Vyc1tpMl0oKTtcbiAgICAgICAgfVxuICAgICAgICBmb3IgKGogPSBzdGFydDsgaiA8IG5ld0xlbjsgaisrKSB7XG4gICAgICAgICAgaWYgKGogaW4gdGVtcCkge1xuICAgICAgICAgICAgbWFwcGVkW2pdID0gdGVtcFtqXTtcbiAgICAgICAgICAgIGRpc3Bvc2Vyc1tqXSA9IHRlbXBkaXNwb3NlcnNbal07XG4gICAgICAgICAgICBpZiAoaW5kZXhlcykge1xuICAgICAgICAgICAgICBpbmRleGVzW2pdID0gdGVtcEluZGV4ZXNbal07XG4gICAgICAgICAgICAgIGluZGV4ZXNbal0oaik7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfSBlbHNlXG4gICAgICAgICAgICBtYXBwZWRbal0gPSBjcmVhdGVSb290KG1hcHBlcik7XG4gICAgICAgIH1cbiAgICAgICAgbWFwcGVkID0gbWFwcGVkLnNsaWNlKDAsIGxlbiA9IG5ld0xlbik7XG4gICAgICAgIGl0ZW1zID0gbmV3SXRlbXMuc2xpY2UoMCk7XG4gICAgICB9XG4gICAgICByZXR1cm4gbWFwcGVkO1xuICAgIH0pO1xuICAgIGZ1bmN0aW9uIG1hcHBlcihkaXNwb3Nlcikge1xuICAgICAgZGlzcG9zZXJzW2pdID0gZGlzcG9zZXI7XG4gICAgICBpZiAoaW5kZXhlcykge1xuICAgICAgICBjb25zdCBbczIsIHNldF0gPSBjcmVhdGVTaWduYWwoaik7XG4gICAgICAgIGluZGV4ZXNbal0gPSBzZXQ7XG4gICAgICAgIHJldHVybiBtYXBGbihuZXdJdGVtc1tqXSwgczIpO1xuICAgICAgfVxuICAgICAgcmV0dXJuIG1hcEZuKG5ld0l0ZW1zW2pdKTtcbiAgICB9XG4gIH07XG59XG5mdW5jdGlvbiBjcmVhdGVDb21wb25lbnQoQ29tcCwgcHJvcHMpIHtcbiAgcmV0dXJuIHVudHJhY2soKCkgPT4gQ29tcChwcm9wcyB8fCB7fSkpO1xufVxuZnVuY3Rpb24gdHJ1ZUZuKCkge1xuICByZXR1cm4gdHJ1ZTtcbn1cbmNvbnN0IHByb3BUcmFwcyA9IHtcbiAgZ2V0KF8sIHByb3BlcnR5LCByZWNlaXZlcikge1xuICAgIGlmIChwcm9wZXJ0eSA9PT0gJFBST1hZKVxuICAgICAgcmV0dXJuIHJlY2VpdmVyO1xuICAgIHJldHVybiBfLmdldChwcm9wZXJ0eSk7XG4gIH0sXG4gIGhhcyhfLCBwcm9wZXJ0eSkge1xuICAgIGlmIChwcm9wZXJ0eSA9PT0gJFBST1hZKVxuICAgICAgcmV0dXJuIHRydWU7XG4gICAgcmV0dXJuIF8uaGFzKHByb3BlcnR5KTtcbiAgfSxcbiAgc2V0OiB0cnVlRm4sXG4gIGRlbGV0ZVByb3BlcnR5OiB0cnVlRm4sXG4gIGdldE93blByb3BlcnR5RGVzY3JpcHRvcihfLCBwcm9wZXJ0eSkge1xuICAgIHJldHVybiB7XG4gICAgICBjb25maWd1cmFibGU6IHRydWUsXG4gICAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgICAgZ2V0KCkge1xuICAgICAgICByZXR1cm4gXy5nZXQocHJvcGVydHkpO1xuICAgICAgfSxcbiAgICAgIHNldDogdHJ1ZUZuLFxuICAgICAgZGVsZXRlUHJvcGVydHk6IHRydWVGblxuICAgIH07XG4gIH0sXG4gIG93bktleXMoXykge1xuICAgIHJldHVybiBfLmtleXMoKTtcbiAgfVxufTtcbmZ1bmN0aW9uIHJlc29sdmVTb3VyY2UoczIpIHtcbiAgcmV0dXJuICEoczIgPSB0eXBlb2YgczIgPT09IFwiZnVuY3Rpb25cIiA/IHMyKCkgOiBzMikgPyB7fSA6IHMyO1xufVxuZnVuY3Rpb24gbWVyZ2VQcm9wcyguLi5zb3VyY2VzKSB7XG4gIGxldCBwcm94eSA9IGZhbHNlO1xuICBmb3IgKGxldCBpMiA9IDA7IGkyIDwgc291cmNlcy5sZW5ndGg7IGkyKyspIHtcbiAgICBjb25zdCBzMiA9IHNvdXJjZXNbaTJdO1xuICAgIHByb3h5ID0gcHJveHkgfHwgISFzMiAmJiAkUFJPWFkgaW4gczI7XG4gICAgc291cmNlc1tpMl0gPSB0eXBlb2YgczIgPT09IFwiZnVuY3Rpb25cIiA/IChwcm94eSA9IHRydWUsIGNyZWF0ZU1lbW8oczIpKSA6IHMyO1xuICB9XG4gIGlmIChwcm94eSkge1xuICAgIHJldHVybiBuZXcgUHJveHkoe1xuICAgICAgZ2V0KHByb3BlcnR5KSB7XG4gICAgICAgIGZvciAobGV0IGkyID0gc291cmNlcy5sZW5ndGggLSAxOyBpMiA+PSAwOyBpMi0tKSB7XG4gICAgICAgICAgY29uc3QgdiA9IHJlc29sdmVTb3VyY2Uoc291cmNlc1tpMl0pW3Byb3BlcnR5XTtcbiAgICAgICAgICBpZiAodiAhPT0gdm9pZCAwKVxuICAgICAgICAgICAgcmV0dXJuIHY7XG4gICAgICAgIH1cbiAgICAgIH0sXG4gICAgICBoYXMocHJvcGVydHkpIHtcbiAgICAgICAgZm9yIChsZXQgaTIgPSBzb3VyY2VzLmxlbmd0aCAtIDE7IGkyID49IDA7IGkyLS0pIHtcbiAgICAgICAgICBpZiAocHJvcGVydHkgaW4gcmVzb2x2ZVNvdXJjZShzb3VyY2VzW2kyXSkpXG4gICAgICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICB9LFxuICAgICAga2V5cygpIHtcbiAgICAgICAgY29uc3Qga2V5cyA9IFtdO1xuICAgICAgICBmb3IgKGxldCBpMiA9IDA7IGkyIDwgc291cmNlcy5sZW5ndGg7IGkyKyspXG4gICAgICAgICAga2V5cy5wdXNoKC4uLk9iamVjdC5rZXlzKHJlc29sdmVTb3VyY2Uoc291cmNlc1tpMl0pKSk7XG4gICAgICAgIHJldHVybiBbLi4ubmV3IFNldChrZXlzKV07XG4gICAgICB9XG4gICAgfSwgcHJvcFRyYXBzKTtcbiAgfVxuICBjb25zdCB0YXJnZXQgPSB7fTtcbiAgZm9yIChsZXQgaTIgPSBzb3VyY2VzLmxlbmd0aCAtIDE7IGkyID49IDA7IGkyLS0pIHtcbiAgICBpZiAoc291cmNlc1tpMl0pIHtcbiAgICAgIGNvbnN0IGRlc2NyaXB0b3JzID0gT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcnMoc291cmNlc1tpMl0pO1xuICAgICAgZm9yIChjb25zdCBrZXkgaW4gZGVzY3JpcHRvcnMpIHtcbiAgICAgICAgaWYgKGtleSBpbiB0YXJnZXQpXG4gICAgICAgICAgY29udGludWU7XG4gICAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0YXJnZXQsIGtleSwge1xuICAgICAgICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgICAgICAgZ2V0KCkge1xuICAgICAgICAgICAgZm9yIChsZXQgaTMgPSBzb3VyY2VzLmxlbmd0aCAtIDE7IGkzID49IDA7IGkzLS0pIHtcbiAgICAgICAgICAgICAgY29uc3QgdiA9IChzb3VyY2VzW2kzXSB8fCB7fSlba2V5XTtcbiAgICAgICAgICAgICAgaWYgKHYgIT09IHZvaWQgMClcbiAgICAgICAgICAgICAgICByZXR1cm4gdjtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgICAgfVxuICAgIH1cbiAgfVxuICByZXR1cm4gdGFyZ2V0O1xufVxuZnVuY3Rpb24gc3BsaXRQcm9wcyhwcm9wcywgLi4ua2V5cykge1xuICBjb25zdCBibG9ja2VkID0gbmV3IFNldChrZXlzLmZsYXQoKSk7XG4gIGlmICgkUFJPWFkgaW4gcHJvcHMpIHtcbiAgICBjb25zdCByZXMgPSBrZXlzLm1hcCgoaykgPT4ge1xuICAgICAgcmV0dXJuIG5ldyBQcm94eSh7XG4gICAgICAgIGdldChwcm9wZXJ0eSkge1xuICAgICAgICAgIHJldHVybiBrLmluY2x1ZGVzKHByb3BlcnR5KSA/IHByb3BzW3Byb3BlcnR5XSA6IHZvaWQgMDtcbiAgICAgICAgfSxcbiAgICAgICAgaGFzKHByb3BlcnR5KSB7XG4gICAgICAgICAgcmV0dXJuIGsuaW5jbHVkZXMocHJvcGVydHkpICYmIHByb3BlcnR5IGluIHByb3BzO1xuICAgICAgICB9LFxuICAgICAgICBrZXlzKCkge1xuICAgICAgICAgIHJldHVybiBrLmZpbHRlcigocHJvcGVydHkpID0+IHByb3BlcnR5IGluIHByb3BzKTtcbiAgICAgICAgfVxuICAgICAgfSwgcHJvcFRyYXBzKTtcbiAgICB9KTtcbiAgICByZXMucHVzaChuZXcgUHJveHkoe1xuICAgICAgZ2V0KHByb3BlcnR5KSB7XG4gICAgICAgIHJldHVybiBibG9ja2VkLmhhcyhwcm9wZXJ0eSkgPyB2b2lkIDAgOiBwcm9wc1twcm9wZXJ0eV07XG4gICAgICB9LFxuICAgICAgaGFzKHByb3BlcnR5KSB7XG4gICAgICAgIHJldHVybiBibG9ja2VkLmhhcyhwcm9wZXJ0eSkgPyBmYWxzZSA6IHByb3BlcnR5IGluIHByb3BzO1xuICAgICAgfSxcbiAgICAgIGtleXMoKSB7XG4gICAgICAgIHJldHVybiBPYmplY3Qua2V5cyhwcm9wcykuZmlsdGVyKChrKSA9PiAhYmxvY2tlZC5oYXMoaykpO1xuICAgICAgfVxuICAgIH0sIHByb3BUcmFwcykpO1xuICAgIHJldHVybiByZXM7XG4gIH1cbiAgY29uc3QgZGVzY3JpcHRvcnMgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9ycyhwcm9wcyk7XG4gIGtleXMucHVzaChPYmplY3Qua2V5cyhkZXNjcmlwdG9ycykuZmlsdGVyKChrKSA9PiAhYmxvY2tlZC5oYXMoaykpKTtcbiAgcmV0dXJuIGtleXMubWFwKChrKSA9PiB7XG4gICAgY29uc3QgY2xvbmUgPSB7fTtcbiAgICBmb3IgKGxldCBpMiA9IDA7IGkyIDwgay5sZW5ndGg7IGkyKyspIHtcbiAgICAgIGNvbnN0IGtleSA9IGtbaTJdO1xuICAgICAgaWYgKCEoa2V5IGluIHByb3BzKSlcbiAgICAgICAgY29udGludWU7XG4gICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkoY2xvbmUsIGtleSwgZGVzY3JpcHRvcnNba2V5XSA/IGRlc2NyaXB0b3JzW2tleV0gOiB7XG4gICAgICAgIGdldCgpIHtcbiAgICAgICAgICByZXR1cm4gcHJvcHNba2V5XTtcbiAgICAgICAgfSxcbiAgICAgICAgc2V0KCkge1xuICAgICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgICB9LFxuICAgICAgICBlbnVtZXJhYmxlOiB0cnVlXG4gICAgICB9KTtcbiAgICB9XG4gICAgcmV0dXJuIGNsb25lO1xuICB9KTtcbn1cbmZ1bmN0aW9uIEZvcihwcm9wcykge1xuICBjb25zdCBmYWxsYmFjayA9IFwiZmFsbGJhY2tcIiBpbiBwcm9wcyAmJiB7XG4gICAgZmFsbGJhY2s6ICgpID0+IHByb3BzLmZhbGxiYWNrXG4gIH07XG4gIHJldHVybiBjcmVhdGVNZW1vKG1hcEFycmF5KCgpID0+IHByb3BzLmVhY2gsIHByb3BzLmNoaWxkcmVuLCBmYWxsYmFjayB8fCB2b2lkIDApKTtcbn1cbmZ1bmN0aW9uIFNob3cocHJvcHMpIHtcbiAgbGV0IHN0cmljdEVxdWFsID0gZmFsc2U7XG4gIGNvbnN0IGtleWVkID0gcHJvcHMua2V5ZWQ7XG4gIGNvbnN0IGNvbmRpdGlvbiA9IGNyZWF0ZU1lbW8oKCkgPT4gcHJvcHMud2hlbiwgdm9pZCAwLCB7XG4gICAgZXF1YWxzOiAoYTIsIGIpID0+IHN0cmljdEVxdWFsID8gYTIgPT09IGIgOiAhYTIgPT09ICFiXG4gIH0pO1xuICByZXR1cm4gY3JlYXRlTWVtbygoKSA9PiB7XG4gICAgY29uc3QgYzIgPSBjb25kaXRpb24oKTtcbiAgICBpZiAoYzIpIHtcbiAgICAgIGNvbnN0IGNoaWxkID0gcHJvcHMuY2hpbGRyZW47XG4gICAgICBjb25zdCBmbiA9IHR5cGVvZiBjaGlsZCA9PT0gXCJmdW5jdGlvblwiICYmIGNoaWxkLmxlbmd0aCA+IDA7XG4gICAgICBzdHJpY3RFcXVhbCA9IGtleWVkIHx8IGZuO1xuICAgICAgcmV0dXJuIGZuID8gdW50cmFjaygoKSA9PiBjaGlsZChjMikpIDogY2hpbGQ7XG4gICAgfVxuICAgIHJldHVybiBwcm9wcy5mYWxsYmFjaztcbiAgfSwgdm9pZCAwLCB2b2lkIDApO1xufVxuZnVuY3Rpb24gU3dpdGNoKHByb3BzKSB7XG4gIGxldCBzdHJpY3RFcXVhbCA9IGZhbHNlO1xuICBsZXQga2V5ZWQgPSBmYWxzZTtcbiAgY29uc3QgZXF1YWxzID0gKGEyLCBiKSA9PiBhMlswXSA9PT0gYlswXSAmJiAoc3RyaWN0RXF1YWwgPyBhMlsxXSA9PT0gYlsxXSA6ICFhMlsxXSA9PT0gIWJbMV0pICYmIGEyWzJdID09PSBiWzJdO1xuICBjb25zdCBjb25kaXRpb25zID0gY2hpbGRyZW4oKCkgPT4gcHJvcHMuY2hpbGRyZW4pLCBldmFsQ29uZGl0aW9ucyA9IGNyZWF0ZU1lbW8oKCkgPT4ge1xuICAgIGxldCBjb25kcyA9IGNvbmRpdGlvbnMoKTtcbiAgICBpZiAoIUFycmF5LmlzQXJyYXkoY29uZHMpKVxuICAgICAgY29uZHMgPSBbY29uZHNdO1xuICAgIGZvciAobGV0IGkyID0gMDsgaTIgPCBjb25kcy5sZW5ndGg7IGkyKyspIHtcbiAgICAgIGNvbnN0IGMyID0gY29uZHNbaTJdLndoZW47XG4gICAgICBpZiAoYzIpIHtcbiAgICAgICAga2V5ZWQgPSAhIWNvbmRzW2kyXS5rZXllZDtcbiAgICAgICAgcmV0dXJuIFtpMiwgYzIsIGNvbmRzW2kyXV07XG4gICAgICB9XG4gICAgfVxuICAgIHJldHVybiBbLTFdO1xuICB9LCB2b2lkIDAsIHtcbiAgICBlcXVhbHNcbiAgfSk7XG4gIHJldHVybiBjcmVhdGVNZW1vKCgpID0+IHtcbiAgICBjb25zdCBbaW5kZXgsIHdoZW4sIGNvbmRdID0gZXZhbENvbmRpdGlvbnMoKTtcbiAgICBpZiAoaW5kZXggPCAwKVxuICAgICAgcmV0dXJuIHByb3BzLmZhbGxiYWNrO1xuICAgIGNvbnN0IGMyID0gY29uZC5jaGlsZHJlbjtcbiAgICBjb25zdCBmbiA9IHR5cGVvZiBjMiA9PT0gXCJmdW5jdGlvblwiICYmIGMyLmxlbmd0aCA+IDA7XG4gICAgc3RyaWN0RXF1YWwgPSBrZXllZCB8fCBmbjtcbiAgICByZXR1cm4gZm4gPyB1bnRyYWNrKCgpID0+IGMyKHdoZW4pKSA6IGMyO1xuICB9LCB2b2lkIDAsIHZvaWQgMCk7XG59XG5mdW5jdGlvbiBNYXRjaChwcm9wcykge1xuICByZXR1cm4gcHJvcHM7XG59XG5jb25zdCBib29sZWFucyA9IFtcImFsbG93ZnVsbHNjcmVlblwiLCBcImFzeW5jXCIsIFwiYXV0b2ZvY3VzXCIsIFwiYXV0b3BsYXlcIiwgXCJjaGVja2VkXCIsIFwiY29udHJvbHNcIiwgXCJkZWZhdWx0XCIsIFwiZGlzYWJsZWRcIiwgXCJmb3Jtbm92YWxpZGF0ZVwiLCBcImhpZGRlblwiLCBcImluZGV0ZXJtaW5hdGVcIiwgXCJpc21hcFwiLCBcImxvb3BcIiwgXCJtdWx0aXBsZVwiLCBcIm11dGVkXCIsIFwibm9tb2R1bGVcIiwgXCJub3ZhbGlkYXRlXCIsIFwib3BlblwiLCBcInBsYXlzaW5saW5lXCIsIFwicmVhZG9ubHlcIiwgXCJyZXF1aXJlZFwiLCBcInJldmVyc2VkXCIsIFwic2VhbWxlc3NcIiwgXCJzZWxlY3RlZFwiXTtcbmNvbnN0IFByb3BlcnRpZXMgPSAvKiBAX19QVVJFX18gKi8gbmV3IFNldChbXCJjbGFzc05hbWVcIiwgXCJ2YWx1ZVwiLCBcInJlYWRPbmx5XCIsIFwiZm9ybU5vVmFsaWRhdGVcIiwgXCJpc01hcFwiLCBcIm5vTW9kdWxlXCIsIFwicGxheXNJbmxpbmVcIiwgLi4uYm9vbGVhbnNdKTtcbmNvbnN0IENoaWxkUHJvcGVydGllcyA9IC8qIEBfX1BVUkVfXyAqLyBuZXcgU2V0KFtcImlubmVySFRNTFwiLCBcInRleHRDb250ZW50XCIsIFwiaW5uZXJUZXh0XCIsIFwiY2hpbGRyZW5cIl0pO1xuY29uc3QgQWxpYXNlcyA9IC8qIEBfX1BVUkVfXyAqLyBPYmplY3QuYXNzaWduKC8qIEBfX1BVUkVfXyAqLyBPYmplY3QuY3JlYXRlKG51bGwpLCB7XG4gIGNsYXNzTmFtZTogXCJjbGFzc1wiLFxuICBodG1sRm9yOiBcImZvclwiXG59KTtcbmNvbnN0IFByb3BBbGlhc2VzID0gLyogQF9fUFVSRV9fICovIE9iamVjdC5hc3NpZ24oLyogQF9fUFVSRV9fICovIE9iamVjdC5jcmVhdGUobnVsbCksIHtcbiAgY2xhc3M6IFwiY2xhc3NOYW1lXCIsXG4gIGZvcm1ub3ZhbGlkYXRlOiBcImZvcm1Ob1ZhbGlkYXRlXCIsXG4gIGlzbWFwOiBcImlzTWFwXCIsXG4gIG5vbW9kdWxlOiBcIm5vTW9kdWxlXCIsXG4gIHBsYXlzaW5saW5lOiBcInBsYXlzSW5saW5lXCIsXG4gIHJlYWRvbmx5OiBcInJlYWRPbmx5XCJcbn0pO1xuY29uc3QgRGVsZWdhdGVkRXZlbnRzID0gLyogQF9fUFVSRV9fICovIG5ldyBTZXQoW1wiYmVmb3JlaW5wdXRcIiwgXCJjbGlja1wiLCBcImRibGNsaWNrXCIsIFwiY29udGV4dG1lbnVcIiwgXCJmb2N1c2luXCIsIFwiZm9jdXNvdXRcIiwgXCJpbnB1dFwiLCBcImtleWRvd25cIiwgXCJrZXl1cFwiLCBcIm1vdXNlZG93blwiLCBcIm1vdXNlbW92ZVwiLCBcIm1vdXNlb3V0XCIsIFwibW91c2VvdmVyXCIsIFwibW91c2V1cFwiLCBcInBvaW50ZXJkb3duXCIsIFwicG9pbnRlcm1vdmVcIiwgXCJwb2ludGVyb3V0XCIsIFwicG9pbnRlcm92ZXJcIiwgXCJwb2ludGVydXBcIiwgXCJ0b3VjaGVuZFwiLCBcInRvdWNobW92ZVwiLCBcInRvdWNoc3RhcnRcIl0pO1xuY29uc3QgU1ZHRWxlbWVudHMgPSAvKiBAX19QVVJFX18gKi8gbmV3IFNldChbXG4gIFwiYWx0R2x5cGhcIixcbiAgXCJhbHRHbHlwaERlZlwiLFxuICBcImFsdEdseXBoSXRlbVwiLFxuICBcImFuaW1hdGVcIixcbiAgXCJhbmltYXRlQ29sb3JcIixcbiAgXCJhbmltYXRlTW90aW9uXCIsXG4gIFwiYW5pbWF0ZVRyYW5zZm9ybVwiLFxuICBcImNpcmNsZVwiLFxuICBcImNsaXBQYXRoXCIsXG4gIFwiY29sb3ItcHJvZmlsZVwiLFxuICBcImN1cnNvclwiLFxuICBcImRlZnNcIixcbiAgXCJkZXNjXCIsXG4gIFwiZWxsaXBzZVwiLFxuICBcImZlQmxlbmRcIixcbiAgXCJmZUNvbG9yTWF0cml4XCIsXG4gIFwiZmVDb21wb25lbnRUcmFuc2ZlclwiLFxuICBcImZlQ29tcG9zaXRlXCIsXG4gIFwiZmVDb252b2x2ZU1hdHJpeFwiLFxuICBcImZlRGlmZnVzZUxpZ2h0aW5nXCIsXG4gIFwiZmVEaXNwbGFjZW1lbnRNYXBcIixcbiAgXCJmZURpc3RhbnRMaWdodFwiLFxuICBcImZlRmxvb2RcIixcbiAgXCJmZUZ1bmNBXCIsXG4gIFwiZmVGdW5jQlwiLFxuICBcImZlRnVuY0dcIixcbiAgXCJmZUZ1bmNSXCIsXG4gIFwiZmVHYXVzc2lhbkJsdXJcIixcbiAgXCJmZUltYWdlXCIsXG4gIFwiZmVNZXJnZVwiLFxuICBcImZlTWVyZ2VOb2RlXCIsXG4gIFwiZmVNb3JwaG9sb2d5XCIsXG4gIFwiZmVPZmZzZXRcIixcbiAgXCJmZVBvaW50TGlnaHRcIixcbiAgXCJmZVNwZWN1bGFyTGlnaHRpbmdcIixcbiAgXCJmZVNwb3RMaWdodFwiLFxuICBcImZlVGlsZVwiLFxuICBcImZlVHVyYnVsZW5jZVwiLFxuICBcImZpbHRlclwiLFxuICBcImZvbnRcIixcbiAgXCJmb250LWZhY2VcIixcbiAgXCJmb250LWZhY2UtZm9ybWF0XCIsXG4gIFwiZm9udC1mYWNlLW5hbWVcIixcbiAgXCJmb250LWZhY2Utc3JjXCIsXG4gIFwiZm9udC1mYWNlLXVyaVwiLFxuICBcImZvcmVpZ25PYmplY3RcIixcbiAgXCJnXCIsXG4gIFwiZ2x5cGhcIixcbiAgXCJnbHlwaFJlZlwiLFxuICBcImhrZXJuXCIsXG4gIFwiaW1hZ2VcIixcbiAgXCJsaW5lXCIsXG4gIFwibGluZWFyR3JhZGllbnRcIixcbiAgXCJtYXJrZXJcIixcbiAgXCJtYXNrXCIsXG4gIFwibWV0YWRhdGFcIixcbiAgXCJtaXNzaW5nLWdseXBoXCIsXG4gIFwibXBhdGhcIixcbiAgXCJwYXRoXCIsXG4gIFwicGF0dGVyblwiLFxuICBcInBvbHlnb25cIixcbiAgXCJwb2x5bGluZVwiLFxuICBcInJhZGlhbEdyYWRpZW50XCIsXG4gIFwicmVjdFwiLFxuICBcInNldFwiLFxuICBcInN0b3BcIixcbiAgXCJzdmdcIixcbiAgXCJzd2l0Y2hcIixcbiAgXCJzeW1ib2xcIixcbiAgXCJ0ZXh0XCIsXG4gIFwidGV4dFBhdGhcIixcbiAgXCJ0cmVmXCIsXG4gIFwidHNwYW5cIixcbiAgXCJ1c2VcIixcbiAgXCJ2aWV3XCIsXG4gIFwidmtlcm5cIlxuXSk7XG5jb25zdCBTVkdOYW1lc3BhY2UgPSB7XG4gIHhsaW5rOiBcImh0dHA6Ly93d3cudzMub3JnLzE5OTkveGxpbmtcIixcbiAgeG1sOiBcImh0dHA6Ly93d3cudzMub3JnL1hNTC8xOTk4L25hbWVzcGFjZVwiXG59O1xuZnVuY3Rpb24gcmVjb25jaWxlQXJyYXlzKHBhcmVudE5vZGUsIGEyLCBiKSB7XG4gIGxldCBiTGVuZ3RoID0gYi5sZW5ndGgsIGFFbmQgPSBhMi5sZW5ndGgsIGJFbmQgPSBiTGVuZ3RoLCBhU3RhcnQgPSAwLCBiU3RhcnQgPSAwLCBhZnRlciA9IGEyW2FFbmQgLSAxXS5uZXh0U2libGluZywgbWFwID0gbnVsbDtcbiAgd2hpbGUgKGFTdGFydCA8IGFFbmQgfHwgYlN0YXJ0IDwgYkVuZCkge1xuICAgIGlmIChhMlthU3RhcnRdID09PSBiW2JTdGFydF0pIHtcbiAgICAgIGFTdGFydCsrO1xuICAgICAgYlN0YXJ0Kys7XG4gICAgICBjb250aW51ZTtcbiAgICB9XG4gICAgd2hpbGUgKGEyW2FFbmQgLSAxXSA9PT0gYltiRW5kIC0gMV0pIHtcbiAgICAgIGFFbmQtLTtcbiAgICAgIGJFbmQtLTtcbiAgICB9XG4gICAgaWYgKGFFbmQgPT09IGFTdGFydCkge1xuICAgICAgY29uc3Qgbm9kZSA9IGJFbmQgPCBiTGVuZ3RoID8gYlN0YXJ0ID8gYltiU3RhcnQgLSAxXS5uZXh0U2libGluZyA6IGJbYkVuZCAtIGJTdGFydF0gOiBhZnRlcjtcbiAgICAgIHdoaWxlIChiU3RhcnQgPCBiRW5kKVxuICAgICAgICBwYXJlbnROb2RlLmluc2VydEJlZm9yZShiW2JTdGFydCsrXSwgbm9kZSk7XG4gICAgfSBlbHNlIGlmIChiRW5kID09PSBiU3RhcnQpIHtcbiAgICAgIHdoaWxlIChhU3RhcnQgPCBhRW5kKSB7XG4gICAgICAgIGlmICghbWFwIHx8ICFtYXAuaGFzKGEyW2FTdGFydF0pKVxuICAgICAgICAgIGEyW2FTdGFydF0ucmVtb3ZlKCk7XG4gICAgICAgIGFTdGFydCsrO1xuICAgICAgfVxuICAgIH0gZWxzZSBpZiAoYTJbYVN0YXJ0XSA9PT0gYltiRW5kIC0gMV0gJiYgYltiU3RhcnRdID09PSBhMlthRW5kIC0gMV0pIHtcbiAgICAgIGNvbnN0IG5vZGUgPSBhMlstLWFFbmRdLm5leHRTaWJsaW5nO1xuICAgICAgcGFyZW50Tm9kZS5pbnNlcnRCZWZvcmUoYltiU3RhcnQrK10sIGEyW2FTdGFydCsrXS5uZXh0U2libGluZyk7XG4gICAgICBwYXJlbnROb2RlLmluc2VydEJlZm9yZShiWy0tYkVuZF0sIG5vZGUpO1xuICAgICAgYTJbYUVuZF0gPSBiW2JFbmRdO1xuICAgIH0gZWxzZSB7XG4gICAgICBpZiAoIW1hcCkge1xuICAgICAgICBtYXAgPSAvKiBAX19QVVJFX18gKi8gbmV3IE1hcCgpO1xuICAgICAgICBsZXQgaTIgPSBiU3RhcnQ7XG4gICAgICAgIHdoaWxlIChpMiA8IGJFbmQpXG4gICAgICAgICAgbWFwLnNldChiW2kyXSwgaTIrKyk7XG4gICAgICB9XG4gICAgICBjb25zdCBpbmRleCA9IG1hcC5nZXQoYTJbYVN0YXJ0XSk7XG4gICAgICBpZiAoaW5kZXggIT0gbnVsbCkge1xuICAgICAgICBpZiAoYlN0YXJ0IDwgaW5kZXggJiYgaW5kZXggPCBiRW5kKSB7XG4gICAgICAgICAgbGV0IGkyID0gYVN0YXJ0LCBzZXF1ZW5jZSA9IDEsIHQyO1xuICAgICAgICAgIHdoaWxlICgrK2kyIDwgYUVuZCAmJiBpMiA8IGJFbmQpIHtcbiAgICAgICAgICAgIGlmICgodDIgPSBtYXAuZ2V0KGEyW2kyXSkpID09IG51bGwgfHwgdDIgIT09IGluZGV4ICsgc2VxdWVuY2UpXG4gICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgc2VxdWVuY2UrKztcbiAgICAgICAgICB9XG4gICAgICAgICAgaWYgKHNlcXVlbmNlID4gaW5kZXggLSBiU3RhcnQpIHtcbiAgICAgICAgICAgIGNvbnN0IG5vZGUgPSBhMlthU3RhcnRdO1xuICAgICAgICAgICAgd2hpbGUgKGJTdGFydCA8IGluZGV4KVxuICAgICAgICAgICAgICBwYXJlbnROb2RlLmluc2VydEJlZm9yZShiW2JTdGFydCsrXSwgbm9kZSk7XG4gICAgICAgICAgfSBlbHNlXG4gICAgICAgICAgICBwYXJlbnROb2RlLnJlcGxhY2VDaGlsZChiW2JTdGFydCsrXSwgYTJbYVN0YXJ0KytdKTtcbiAgICAgICAgfSBlbHNlXG4gICAgICAgICAgYVN0YXJ0Kys7XG4gICAgICB9IGVsc2VcbiAgICAgICAgYTJbYVN0YXJ0KytdLnJlbW92ZSgpO1xuICAgIH1cbiAgfVxufVxuY29uc3QgJCRFVkVOVFMgPSBcIl8kRFhfREVMRUdBVEVcIjtcbmZ1bmN0aW9uIHJlbmRlcihjb2RlLCBlbGVtZW50LCBpbml0LCBvcHRpb25zID0ge30pIHtcbiAgbGV0IGRpc3Bvc2VyO1xuICBjcmVhdGVSb290KChkaXNwb3NlMikgPT4ge1xuICAgIGRpc3Bvc2VyID0gZGlzcG9zZTI7XG4gICAgZWxlbWVudCA9PT0gZG9jdW1lbnQgPyBjb2RlKCkgOiBpbnNlcnQoZWxlbWVudCwgY29kZSgpLCBlbGVtZW50LmZpcnN0Q2hpbGQgPyBudWxsIDogdm9pZCAwLCBpbml0KTtcbiAgfSwgb3B0aW9ucy5vd25lcik7XG4gIHJldHVybiAoKSA9PiB7XG4gICAgZGlzcG9zZXIoKTtcbiAgICBlbGVtZW50LnRleHRDb250ZW50ID0gXCJcIjtcbiAgfTtcbn1cbmZ1bmN0aW9uIHRlbXBsYXRlJDEoaHRtbCwgY2hlY2ssIGlzU1ZHKSB7XG4gIGlmICh0eXBlb2Ygd2luZG93ID09PSAndW5kZWZpbmVkJykge1xuICAgIHJldHVybiBudWxsO1xuICB9XG5cbiAgY29uc3QgdDIgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwidGVtcGxhdGVcIik7XG4gIHQyLmlubmVySFRNTCA9IGh0bWw7XG4gIGxldCBub2RlID0gdDIuY29udGVudC5maXJzdENoaWxkO1xuICBpZiAoaXNTVkcpXG4gICAgbm9kZSA9IG5vZGUuZmlyc3RDaGlsZDtcbiAgcmV0dXJuIG5vZGU7XG59XG5mdW5jdGlvbiBkZWxlZ2F0ZUV2ZW50cyhldmVudE5hbWVzLCBkb2N1bWVudDIgPSB3aW5kb3cuZG9jdW1lbnQpIHtcbiAgY29uc3QgZTIgPSBkb2N1bWVudDJbJCRFVkVOVFNdIHx8IChkb2N1bWVudDJbJCRFVkVOVFNdID0gLyogQF9fUFVSRV9fICovIG5ldyBTZXQoKSk7XG4gIGZvciAobGV0IGkyID0gMCwgbDIgPSBldmVudE5hbWVzLmxlbmd0aDsgaTIgPCBsMjsgaTIrKykge1xuICAgIGNvbnN0IG5hbWUgPSBldmVudE5hbWVzW2kyXTtcbiAgICBpZiAoIWUyLmhhcyhuYW1lKSkge1xuICAgICAgZTIuYWRkKG5hbWUpO1xuICAgICAgZG9jdW1lbnQyLmFkZEV2ZW50TGlzdGVuZXIobmFtZSwgZXZlbnRIYW5kbGVyKTtcbiAgICB9XG4gIH1cbn1cbmZ1bmN0aW9uIHNldEF0dHJpYnV0ZShub2RlLCBuYW1lLCB2YWx1ZSkge1xuICBpZiAodmFsdWUgPT0gbnVsbClcbiAgICBub2RlLnJlbW92ZUF0dHJpYnV0ZShuYW1lKTtcbiAgZWxzZVxuICAgIG5vZGUuc2V0QXR0cmlidXRlKG5hbWUsIHZhbHVlKTtcbn1cbmZ1bmN0aW9uIHNldEF0dHJpYnV0ZU5TKG5vZGUsIG5hbWVzcGFjZSwgbmFtZSwgdmFsdWUpIHtcbiAgaWYgKHZhbHVlID09IG51bGwpXG4gICAgbm9kZS5yZW1vdmVBdHRyaWJ1dGVOUyhuYW1lc3BhY2UsIG5hbWUpO1xuICBlbHNlXG4gICAgbm9kZS5zZXRBdHRyaWJ1dGVOUyhuYW1lc3BhY2UsIG5hbWUsIHZhbHVlKTtcbn1cbmZ1bmN0aW9uIGNsYXNzTmFtZShub2RlLCB2YWx1ZSkge1xuICBpZiAodmFsdWUgPT0gbnVsbClcbiAgICBub2RlLnJlbW92ZUF0dHJpYnV0ZShcImNsYXNzXCIpO1xuICBlbHNlXG4gICAgbm9kZS5jbGFzc05hbWUgPSB2YWx1ZTtcbn1cbmZ1bmN0aW9uIGFkZEV2ZW50TGlzdGVuZXIobm9kZSwgbmFtZSwgaGFuZGxlciwgZGVsZWdhdGUpIHtcbiAgaWYgKGRlbGVnYXRlKSB7XG4gICAgaWYgKEFycmF5LmlzQXJyYXkoaGFuZGxlcikpIHtcbiAgICAgIG5vZGVbYCQkJHtuYW1lfWBdID0gaGFuZGxlclswXTtcbiAgICAgIG5vZGVbYCQkJHtuYW1lfURhdGFgXSA9IGhhbmRsZXJbMV07XG4gICAgfSBlbHNlXG4gICAgICBub2RlW2AkJCR7bmFtZX1gXSA9IGhhbmRsZXI7XG4gIH0gZWxzZSBpZiAoQXJyYXkuaXNBcnJheShoYW5kbGVyKSkge1xuICAgIGNvbnN0IGhhbmRsZXJGbiA9IGhhbmRsZXJbMF07XG4gICAgbm9kZS5hZGRFdmVudExpc3RlbmVyKG5hbWUsIGhhbmRsZXJbMF0gPSAoZTIpID0+IGhhbmRsZXJGbi5jYWxsKG5vZGUsIGhhbmRsZXJbMV0sIGUyKSk7XG4gIH0gZWxzZVxuICAgIG5vZGUuYWRkRXZlbnRMaXN0ZW5lcihuYW1lLCBoYW5kbGVyKTtcbn1cbmZ1bmN0aW9uIGNsYXNzTGlzdChub2RlLCB2YWx1ZSwgcHJldiA9IHt9KSB7XG4gIGNvbnN0IGNsYXNzS2V5cyA9IE9iamVjdC5rZXlzKHZhbHVlIHx8IHt9KSwgcHJldktleXMgPSBPYmplY3Qua2V5cyhwcmV2KTtcbiAgbGV0IGkyLCBsZW47XG4gIGZvciAoaTIgPSAwLCBsZW4gPSBwcmV2S2V5cy5sZW5ndGg7IGkyIDwgbGVuOyBpMisrKSB7XG4gICAgY29uc3Qga2V5ID0gcHJldktleXNbaTJdO1xuICAgIGlmICgha2V5IHx8IGtleSA9PT0gXCJ1bmRlZmluZWRcIiB8fCB2YWx1ZVtrZXldKVxuICAgICAgY29udGludWU7XG4gICAgdG9nZ2xlQ2xhc3NLZXkobm9kZSwga2V5LCBmYWxzZSk7XG4gICAgZGVsZXRlIHByZXZba2V5XTtcbiAgfVxuICBmb3IgKGkyID0gMCwgbGVuID0gY2xhc3NLZXlzLmxlbmd0aDsgaTIgPCBsZW47IGkyKyspIHtcbiAgICBjb25zdCBrZXkgPSBjbGFzc0tleXNbaTJdLCBjbGFzc1ZhbHVlID0gISF2YWx1ZVtrZXldO1xuICAgIGlmICgha2V5IHx8IGtleSA9PT0gXCJ1bmRlZmluZWRcIiB8fCBwcmV2W2tleV0gPT09IGNsYXNzVmFsdWUgfHwgIWNsYXNzVmFsdWUpXG4gICAgICBjb250aW51ZTtcbiAgICB0b2dnbGVDbGFzc0tleShub2RlLCBrZXksIHRydWUpO1xuICAgIHByZXZba2V5XSA9IGNsYXNzVmFsdWU7XG4gIH1cbiAgcmV0dXJuIHByZXY7XG59XG5mdW5jdGlvbiBzdHlsZShub2RlLCB2YWx1ZSwgcHJldikge1xuICBpZiAoIXZhbHVlKVxuICAgIHJldHVybiBwcmV2ID8gc2V0QXR0cmlidXRlKG5vZGUsIFwic3R5bGVcIikgOiB2YWx1ZTtcbiAgY29uc3Qgbm9kZVN0eWxlID0gbm9kZS5zdHlsZTtcbiAgaWYgKHR5cGVvZiB2YWx1ZSA9PT0gXCJzdHJpbmdcIilcbiAgICByZXR1cm4gbm9kZVN0eWxlLmNzc1RleHQgPSB2YWx1ZTtcbiAgdHlwZW9mIHByZXYgPT09IFwic3RyaW5nXCIgJiYgKG5vZGVTdHlsZS5jc3NUZXh0ID0gcHJldiA9IHZvaWQgMCk7XG4gIHByZXYgfHwgKHByZXYgPSB7fSk7XG4gIHZhbHVlIHx8ICh2YWx1ZSA9IHt9KTtcbiAgbGV0IHYsIHMyO1xuICBmb3IgKHMyIGluIHByZXYpIHtcbiAgICB2YWx1ZVtzMl0gPT0gbnVsbCAmJiBub2RlU3R5bGUucmVtb3ZlUHJvcGVydHkoczIpO1xuICAgIGRlbGV0ZSBwcmV2W3MyXTtcbiAgfVxuICBmb3IgKHMyIGluIHZhbHVlKSB7XG4gICAgdiA9IHZhbHVlW3MyXTtcbiAgICBpZiAodiAhPT0gcHJldltzMl0pIHtcbiAgICAgIG5vZGVTdHlsZS5zZXRQcm9wZXJ0eShzMiwgdik7XG4gICAgICBwcmV2W3MyXSA9IHY7XG4gICAgfVxuICB9XG4gIHJldHVybiBwcmV2O1xufVxuZnVuY3Rpb24gc3ByZWFkKG5vZGUsIHByb3BzID0ge30sIGlzU1ZHLCBza2lwQ2hpbGRyZW4pIHtcbiAgY29uc3QgcHJldlByb3BzID0ge307XG4gIGlmICghc2tpcENoaWxkcmVuKSB7XG4gICAgY3JlYXRlUmVuZGVyRWZmZWN0KCgpID0+IHByZXZQcm9wcy5jaGlsZHJlbiA9IGluc2VydEV4cHJlc3Npb24obm9kZSwgcHJvcHMuY2hpbGRyZW4sIHByZXZQcm9wcy5jaGlsZHJlbikpO1xuICB9XG4gIGNyZWF0ZVJlbmRlckVmZmVjdCgoKSA9PiBwcm9wcy5yZWYgJiYgcHJvcHMucmVmKG5vZGUpKTtcbiAgY3JlYXRlUmVuZGVyRWZmZWN0KCgpID0+IGFzc2lnbihub2RlLCBwcm9wcywgaXNTVkcsIHRydWUsIHByZXZQcm9wcywgdHJ1ZSkpO1xuICByZXR1cm4gcHJldlByb3BzO1xufVxuZnVuY3Rpb24gdXNlKGZuLCBlbGVtZW50LCBhcmcpIHtcbiAgcmV0dXJuIHVudHJhY2soKCkgPT4gZm4oZWxlbWVudCwgYXJnKSk7XG59XG5mdW5jdGlvbiBpbnNlcnQocGFyZW50LCBhY2Nlc3NvciwgbWFya2VyLCBpbml0aWFsKSB7XG4gIGlmIChtYXJrZXIgIT09IHZvaWQgMCAmJiAhaW5pdGlhbClcbiAgICBpbml0aWFsID0gW107XG4gIGlmICh0eXBlb2YgYWNjZXNzb3IgIT09IFwiZnVuY3Rpb25cIilcbiAgICByZXR1cm4gaW5zZXJ0RXhwcmVzc2lvbihwYXJlbnQsIGFjY2Vzc29yLCBpbml0aWFsLCBtYXJrZXIpO1xuICBjcmVhdGVSZW5kZXJFZmZlY3QoKGN1cnJlbnQpID0+IGluc2VydEV4cHJlc3Npb24ocGFyZW50LCBhY2Nlc3NvcigpLCBjdXJyZW50LCBtYXJrZXIpLCBpbml0aWFsKTtcbn1cbmZ1bmN0aW9uIGFzc2lnbihub2RlLCBwcm9wcywgaXNTVkcsIHNraXBDaGlsZHJlbiwgcHJldlByb3BzID0ge30sIHNraXBSZWYgPSBmYWxzZSkge1xuICBwcm9wcyB8fCAocHJvcHMgPSB7fSk7XG4gIGZvciAoY29uc3QgcHJvcCBpbiBwcmV2UHJvcHMpIHtcbiAgICBpZiAoIShwcm9wIGluIHByb3BzKSkge1xuICAgICAgaWYgKHByb3AgPT09IFwiY2hpbGRyZW5cIilcbiAgICAgICAgY29udGludWU7XG4gICAgICBwcmV2UHJvcHNbcHJvcF0gPSBhc3NpZ25Qcm9wKG5vZGUsIHByb3AsIG51bGwsIHByZXZQcm9wc1twcm9wXSwgaXNTVkcsIHNraXBSZWYpO1xuICAgIH1cbiAgfVxuICBmb3IgKGNvbnN0IHByb3AgaW4gcHJvcHMpIHtcbiAgICBpZiAocHJvcCA9PT0gXCJjaGlsZHJlblwiKSB7XG4gICAgICBpZiAoIXNraXBDaGlsZHJlbilcbiAgICAgICAgaW5zZXJ0RXhwcmVzc2lvbihub2RlLCBwcm9wcy5jaGlsZHJlbik7XG4gICAgICBjb250aW51ZTtcbiAgICB9XG4gICAgY29uc3QgdmFsdWUgPSBwcm9wc1twcm9wXTtcbiAgICBwcmV2UHJvcHNbcHJvcF0gPSBhc3NpZ25Qcm9wKG5vZGUsIHByb3AsIHZhbHVlLCBwcmV2UHJvcHNbcHJvcF0sIGlzU1ZHLCBza2lwUmVmKTtcbiAgfVxufVxuZnVuY3Rpb24gZ2V0TmV4dEVsZW1lbnQodGVtcGxhdGUyKSB7XG4gIGxldCBub2RlLCBrZXk7XG4gIGlmICghc2hhcmVkQ29uZmlnLmNvbnRleHQgfHwgIShub2RlID0gc2hhcmVkQ29uZmlnLnJlZ2lzdHJ5LmdldChrZXkgPSBnZXRIeWRyYXRpb25LZXkoKSkpKSB7XG4gICAgcmV0dXJuIHRlbXBsYXRlMi5jbG9uZU5vZGUodHJ1ZSk7XG4gIH1cbiAgaWYgKHNoYXJlZENvbmZpZy5jb21wbGV0ZWQpXG4gICAgc2hhcmVkQ29uZmlnLmNvbXBsZXRlZC5hZGQobm9kZSk7XG4gIHNoYXJlZENvbmZpZy5yZWdpc3RyeS5kZWxldGUoa2V5KTtcbiAgcmV0dXJuIG5vZGU7XG59XG5mdW5jdGlvbiB0b1Byb3BlcnR5TmFtZShuYW1lKSB7XG4gIHJldHVybiBuYW1lLnRvTG93ZXJDYXNlKCkucmVwbGFjZSgvLShbYS16XSkvZywgKF8sIHcpID0+IHcudG9VcHBlckNhc2UoKSk7XG59XG5mdW5jdGlvbiB0b2dnbGVDbGFzc0tleShub2RlLCBrZXksIHZhbHVlKSB7XG4gIGNvbnN0IGNsYXNzTmFtZXMgPSBrZXkudHJpbSgpLnNwbGl0KC9cXHMrLyk7XG4gIGZvciAobGV0IGkyID0gMCwgbmFtZUxlbiA9IGNsYXNzTmFtZXMubGVuZ3RoOyBpMiA8IG5hbWVMZW47IGkyKyspXG4gICAgbm9kZS5jbGFzc0xpc3QudG9nZ2xlKGNsYXNzTmFtZXNbaTJdLCB2YWx1ZSk7XG59XG5mdW5jdGlvbiBhc3NpZ25Qcm9wKG5vZGUsIHByb3AsIHZhbHVlLCBwcmV2LCBpc1NWRywgc2tpcFJlZikge1xuICBsZXQgaXNDRSwgaXNQcm9wLCBpc0NoaWxkUHJvcDtcbiAgaWYgKHByb3AgPT09IFwic3R5bGVcIilcbiAgICByZXR1cm4gc3R5bGUobm9kZSwgdmFsdWUsIHByZXYpO1xuICBpZiAocHJvcCA9PT0gXCJjbGFzc0xpc3RcIilcbiAgICByZXR1cm4gY2xhc3NMaXN0KG5vZGUsIHZhbHVlLCBwcmV2KTtcbiAgaWYgKHZhbHVlID09PSBwcmV2KVxuICAgIHJldHVybiBwcmV2O1xuICBpZiAocHJvcCA9PT0gXCJyZWZcIikge1xuICAgIGlmICghc2tpcFJlZilcbiAgICAgIHZhbHVlKG5vZGUpO1xuICB9IGVsc2UgaWYgKHByb3Auc2xpY2UoMCwgMykgPT09IFwib246XCIpIHtcbiAgICBjb25zdCBlMiA9IHByb3Auc2xpY2UoMyk7XG4gICAgcHJldiAmJiBub2RlLnJlbW92ZUV2ZW50TGlzdGVuZXIoZTIsIHByZXYpO1xuICAgIHZhbHVlICYmIG5vZGUuYWRkRXZlbnRMaXN0ZW5lcihlMiwgdmFsdWUpO1xuICB9IGVsc2UgaWYgKHByb3Auc2xpY2UoMCwgMTApID09PSBcIm9uY2FwdHVyZTpcIikge1xuICAgIGNvbnN0IGUyID0gcHJvcC5zbGljZSgxMCk7XG4gICAgcHJldiAmJiBub2RlLnJlbW92ZUV2ZW50TGlzdGVuZXIoZTIsIHByZXYsIHRydWUpO1xuICAgIHZhbHVlICYmIG5vZGUuYWRkRXZlbnRMaXN0ZW5lcihlMiwgdmFsdWUsIHRydWUpO1xuICB9IGVsc2UgaWYgKHByb3Auc2xpY2UoMCwgMikgPT09IFwib25cIikge1xuICAgIGNvbnN0IG5hbWUgPSBwcm9wLnNsaWNlKDIpLnRvTG93ZXJDYXNlKCk7XG4gICAgY29uc3QgZGVsZWdhdGUgPSBEZWxlZ2F0ZWRFdmVudHMuaGFzKG5hbWUpO1xuICAgIGlmICghZGVsZWdhdGUgJiYgcHJldikge1xuICAgICAgY29uc3QgaDIgPSBBcnJheS5pc0FycmF5KHByZXYpID8gcHJldlswXSA6IHByZXY7XG4gICAgICBub2RlLnJlbW92ZUV2ZW50TGlzdGVuZXIobmFtZSwgaDIpO1xuICAgIH1cbiAgICBpZiAoZGVsZWdhdGUgfHwgdmFsdWUpIHtcbiAgICAgIGFkZEV2ZW50TGlzdGVuZXIobm9kZSwgbmFtZSwgdmFsdWUsIGRlbGVnYXRlKTtcbiAgICAgIGRlbGVnYXRlICYmIGRlbGVnYXRlRXZlbnRzKFtuYW1lXSk7XG4gICAgfVxuICB9IGVsc2UgaWYgKChpc0NoaWxkUHJvcCA9IENoaWxkUHJvcGVydGllcy5oYXMocHJvcCkpIHx8ICFpc1NWRyAmJiAoUHJvcEFsaWFzZXNbcHJvcF0gfHwgKGlzUHJvcCA9IFByb3BlcnRpZXMuaGFzKHByb3ApKSkgfHwgKGlzQ0UgPSBub2RlLm5vZGVOYW1lLmluY2x1ZGVzKFwiLVwiKSkpIHtcbiAgICBpZiAocHJvcCA9PT0gXCJjbGFzc1wiIHx8IHByb3AgPT09IFwiY2xhc3NOYW1lXCIpXG4gICAgICBjbGFzc05hbWUobm9kZSwgdmFsdWUpO1xuICAgIGVsc2UgaWYgKGlzQ0UgJiYgIWlzUHJvcCAmJiAhaXNDaGlsZFByb3ApXG4gICAgICBub2RlW3RvUHJvcGVydHlOYW1lKHByb3ApXSA9IHZhbHVlO1xuICAgIGVsc2VcbiAgICAgIG5vZGVbUHJvcEFsaWFzZXNbcHJvcF0gfHwgcHJvcF0gPSB2YWx1ZTtcbiAgfSBlbHNlIHtcbiAgICBjb25zdCBucyA9IGlzU1ZHICYmIHByb3AuaW5kZXhPZihcIjpcIikgPiAtMSAmJiBTVkdOYW1lc3BhY2VbcHJvcC5zcGxpdChcIjpcIilbMF1dO1xuICAgIGlmIChucylcbiAgICAgIHNldEF0dHJpYnV0ZU5TKG5vZGUsIG5zLCBwcm9wLCB2YWx1ZSk7XG4gICAgZWxzZVxuICAgICAgc2V0QXR0cmlidXRlKG5vZGUsIEFsaWFzZXNbcHJvcF0gfHwgcHJvcCwgdmFsdWUpO1xuICB9XG4gIHJldHVybiB2YWx1ZTtcbn1cbmZ1bmN0aW9uIGV2ZW50SGFuZGxlcihlMikge1xuICBjb25zdCBrZXkgPSBgJCQke2UyLnR5cGV9YDtcbiAgbGV0IG5vZGUgPSBlMi5jb21wb3NlZFBhdGggJiYgZTIuY29tcG9zZWRQYXRoKClbMF0gfHwgZTIudGFyZ2V0O1xuICBpZiAoZTIudGFyZ2V0ICE9PSBub2RlKSB7XG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KGUyLCBcInRhcmdldFwiLCB7XG4gICAgICBjb25maWd1cmFibGU6IHRydWUsXG4gICAgICB2YWx1ZTogbm9kZVxuICAgIH0pO1xuICB9XG4gIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShlMiwgXCJjdXJyZW50VGFyZ2V0XCIsIHtcbiAgICBjb25maWd1cmFibGU6IHRydWUsXG4gICAgZ2V0KCkge1xuICAgICAgcmV0dXJuIG5vZGUgfHwgZG9jdW1lbnQ7XG4gICAgfVxuICB9KTtcbiAgaWYgKHNoYXJlZENvbmZpZy5yZWdpc3RyeSAmJiAhc2hhcmVkQ29uZmlnLmRvbmUpIHtcbiAgICBzaGFyZWRDb25maWcuZG9uZSA9IHRydWU7XG4gICAgZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbChcIltpZF49cGwtXVwiKS5mb3JFYWNoKChlbGVtKSA9PiB7XG4gICAgICB3aGlsZSAoZWxlbSAmJiBlbGVtLm5vZGVUeXBlICE9PSA4ICYmIGVsZW0ubm9kZVZhbHVlICE9PSBcInBsLVwiICsgZTIpIHtcbiAgICAgICAgbGV0IHggPSBlbGVtLm5leHRTaWJsaW5nO1xuICAgICAgICBlbGVtLnJlbW92ZSgpO1xuICAgICAgICBlbGVtID0geDtcbiAgICAgIH1cbiAgICAgIGVsZW0gJiYgZWxlbS5yZW1vdmUoKTtcbiAgICB9KTtcbiAgfVxuICB3aGlsZSAobm9kZSkge1xuICAgIGNvbnN0IGhhbmRsZXIgPSBub2RlW2tleV07XG4gICAgaWYgKGhhbmRsZXIgJiYgIW5vZGUuZGlzYWJsZWQpIHtcbiAgICAgIGNvbnN0IGRhdGEgPSBub2RlW2Ake2tleX1EYXRhYF07XG4gICAgICBkYXRhICE9PSB2b2lkIDAgPyBoYW5kbGVyLmNhbGwobm9kZSwgZGF0YSwgZTIpIDogaGFuZGxlci5jYWxsKG5vZGUsIGUyKTtcbiAgICAgIGlmIChlMi5jYW5jZWxCdWJibGUpXG4gICAgICAgIHJldHVybjtcbiAgICB9XG4gICAgbm9kZSA9IG5vZGUuXyRob3N0IHx8IG5vZGUucGFyZW50Tm9kZSB8fCBub2RlLmhvc3Q7XG4gIH1cbn1cbmZ1bmN0aW9uIGluc2VydEV4cHJlc3Npb24ocGFyZW50LCB2YWx1ZSwgY3VycmVudCwgbWFya2VyLCB1bndyYXBBcnJheSkge1xuICBpZiAoc2hhcmVkQ29uZmlnLmNvbnRleHQgJiYgIWN1cnJlbnQpXG4gICAgY3VycmVudCA9IFsuLi5wYXJlbnQuY2hpbGROb2Rlc107XG4gIHdoaWxlICh0eXBlb2YgY3VycmVudCA9PT0gXCJmdW5jdGlvblwiKVxuICAgIGN1cnJlbnQgPSBjdXJyZW50KCk7XG4gIGlmICh2YWx1ZSA9PT0gY3VycmVudClcbiAgICByZXR1cm4gY3VycmVudDtcbiAgY29uc3QgdDIgPSB0eXBlb2YgdmFsdWUsIG11bHRpID0gbWFya2VyICE9PSB2b2lkIDA7XG4gIHBhcmVudCA9IG11bHRpICYmIGN1cnJlbnRbMF0gJiYgY3VycmVudFswXS5wYXJlbnROb2RlIHx8IHBhcmVudDtcbiAgaWYgKHQyID09PSBcInN0cmluZ1wiIHx8IHQyID09PSBcIm51bWJlclwiKSB7XG4gICAgaWYgKHNoYXJlZENvbmZpZy5jb250ZXh0KVxuICAgICAgcmV0dXJuIGN1cnJlbnQ7XG4gICAgaWYgKHQyID09PSBcIm51bWJlclwiKVxuICAgICAgdmFsdWUgPSB2YWx1ZS50b1N0cmluZygpO1xuICAgIGlmIChtdWx0aSkge1xuICAgICAgbGV0IG5vZGUgPSBjdXJyZW50WzBdO1xuICAgICAgaWYgKG5vZGUgJiYgbm9kZS5ub2RlVHlwZSA9PT0gMykge1xuICAgICAgICBub2RlLmRhdGEgPSB2YWx1ZTtcbiAgICAgIH0gZWxzZVxuICAgICAgICBub2RlID0gZG9jdW1lbnQuY3JlYXRlVGV4dE5vZGUodmFsdWUpO1xuICAgICAgY3VycmVudCA9IGNsZWFuQ2hpbGRyZW4ocGFyZW50LCBjdXJyZW50LCBtYXJrZXIsIG5vZGUpO1xuICAgIH0gZWxzZSB7XG4gICAgICBpZiAoY3VycmVudCAhPT0gXCJcIiAmJiB0eXBlb2YgY3VycmVudCA9PT0gXCJzdHJpbmdcIikge1xuICAgICAgICBjdXJyZW50ID0gcGFyZW50LmZpcnN0Q2hpbGQuZGF0YSA9IHZhbHVlO1xuICAgICAgfSBlbHNlXG4gICAgICAgIGN1cnJlbnQgPSBwYXJlbnQudGV4dENvbnRlbnQgPSB2YWx1ZTtcbiAgICB9XG4gIH0gZWxzZSBpZiAodmFsdWUgPT0gbnVsbCB8fCB0MiA9PT0gXCJib29sZWFuXCIpIHtcbiAgICBpZiAoc2hhcmVkQ29uZmlnLmNvbnRleHQpXG4gICAgICByZXR1cm4gY3VycmVudDtcbiAgICBjdXJyZW50ID0gY2xlYW5DaGlsZHJlbihwYXJlbnQsIGN1cnJlbnQsIG1hcmtlcik7XG4gIH0gZWxzZSBpZiAodDIgPT09IFwiZnVuY3Rpb25cIikge1xuICAgIGNyZWF0ZVJlbmRlckVmZmVjdCgoKSA9PiB7XG4gICAgICBsZXQgdiA9IHZhbHVlKCk7XG4gICAgICB3aGlsZSAodHlwZW9mIHYgPT09IFwiZnVuY3Rpb25cIilcbiAgICAgICAgdiA9IHYoKTtcbiAgICAgIGN1cnJlbnQgPSBpbnNlcnRFeHByZXNzaW9uKHBhcmVudCwgdiwgY3VycmVudCwgbWFya2VyKTtcbiAgICB9KTtcbiAgICByZXR1cm4gKCkgPT4gY3VycmVudDtcbiAgfSBlbHNlIGlmIChBcnJheS5pc0FycmF5KHZhbHVlKSkge1xuICAgIGNvbnN0IGFycmF5ID0gW107XG4gICAgY29uc3QgY3VycmVudEFycmF5ID0gY3VycmVudCAmJiBBcnJheS5pc0FycmF5KGN1cnJlbnQpO1xuICAgIGlmIChub3JtYWxpemVJbmNvbWluZ0FycmF5KGFycmF5LCB2YWx1ZSwgY3VycmVudCwgdW53cmFwQXJyYXkpKSB7XG4gICAgICBjcmVhdGVSZW5kZXJFZmZlY3QoKCkgPT4gY3VycmVudCA9IGluc2VydEV4cHJlc3Npb24ocGFyZW50LCBhcnJheSwgY3VycmVudCwgbWFya2VyLCB0cnVlKSk7XG4gICAgICByZXR1cm4gKCkgPT4gY3VycmVudDtcbiAgICB9XG4gICAgaWYgKHNoYXJlZENvbmZpZy5jb250ZXh0KSB7XG4gICAgICBpZiAoIWFycmF5Lmxlbmd0aClcbiAgICAgICAgcmV0dXJuIGN1cnJlbnQ7XG4gICAgICBmb3IgKGxldCBpMiA9IDA7IGkyIDwgYXJyYXkubGVuZ3RoOyBpMisrKSB7XG4gICAgICAgIGlmIChhcnJheVtpMl0ucGFyZW50Tm9kZSlcbiAgICAgICAgICByZXR1cm4gY3VycmVudCA9IGFycmF5O1xuICAgICAgfVxuICAgIH1cbiAgICBpZiAoYXJyYXkubGVuZ3RoID09PSAwKSB7XG4gICAgICBjdXJyZW50ID0gY2xlYW5DaGlsZHJlbihwYXJlbnQsIGN1cnJlbnQsIG1hcmtlcik7XG4gICAgICBpZiAobXVsdGkpXG4gICAgICAgIHJldHVybiBjdXJyZW50O1xuICAgIH0gZWxzZSBpZiAoY3VycmVudEFycmF5KSB7XG4gICAgICBpZiAoY3VycmVudC5sZW5ndGggPT09IDApIHtcbiAgICAgICAgYXBwZW5kTm9kZXMocGFyZW50LCBhcnJheSwgbWFya2VyKTtcbiAgICAgIH0gZWxzZVxuICAgICAgICByZWNvbmNpbGVBcnJheXMocGFyZW50LCBjdXJyZW50LCBhcnJheSk7XG4gICAgfSBlbHNlIHtcbiAgICAgIGN1cnJlbnQgJiYgY2xlYW5DaGlsZHJlbihwYXJlbnQpO1xuICAgICAgYXBwZW5kTm9kZXMocGFyZW50LCBhcnJheSk7XG4gICAgfVxuICAgIGN1cnJlbnQgPSBhcnJheTtcbiAgfSBlbHNlIGlmICh2YWx1ZSBpbnN0YW5jZW9mIE5vZGUpIHtcbiAgICBpZiAoc2hhcmVkQ29uZmlnLmNvbnRleHQgJiYgdmFsdWUucGFyZW50Tm9kZSlcbiAgICAgIHJldHVybiBjdXJyZW50ID0gbXVsdGkgPyBbdmFsdWVdIDogdmFsdWU7XG4gICAgaWYgKEFycmF5LmlzQXJyYXkoY3VycmVudCkpIHtcbiAgICAgIGlmIChtdWx0aSlcbiAgICAgICAgcmV0dXJuIGN1cnJlbnQgPSBjbGVhbkNoaWxkcmVuKHBhcmVudCwgY3VycmVudCwgbWFya2VyLCB2YWx1ZSk7XG4gICAgICBjbGVhbkNoaWxkcmVuKHBhcmVudCwgY3VycmVudCwgbnVsbCwgdmFsdWUpO1xuICAgIH0gZWxzZSBpZiAoY3VycmVudCA9PSBudWxsIHx8IGN1cnJlbnQgPT09IFwiXCIgfHwgIXBhcmVudC5maXJzdENoaWxkKSB7XG4gICAgICBwYXJlbnQuYXBwZW5kQ2hpbGQodmFsdWUpO1xuICAgIH0gZWxzZVxuICAgICAgcGFyZW50LnJlcGxhY2VDaGlsZCh2YWx1ZSwgcGFyZW50LmZpcnN0Q2hpbGQpO1xuICAgIGN1cnJlbnQgPSB2YWx1ZTtcbiAgfSBlbHNlXG4gICAgO1xuICByZXR1cm4gY3VycmVudDtcbn1cbmZ1bmN0aW9uIG5vcm1hbGl6ZUluY29taW5nQXJyYXkobm9ybWFsaXplZCwgYXJyYXksIGN1cnJlbnQsIHVud3JhcDIpIHtcbiAgbGV0IGR5bmFtaWMgPSBmYWxzZTtcbiAgZm9yIChsZXQgaTIgPSAwLCBsZW4gPSBhcnJheS5sZW5ndGg7IGkyIDwgbGVuOyBpMisrKSB7XG4gICAgbGV0IGl0ZW0gPSBhcnJheVtpMl0sIHByZXYgPSBjdXJyZW50ICYmIGN1cnJlbnRbaTJdO1xuICAgIGlmIChpdGVtIGluc3RhbmNlb2YgTm9kZSkge1xuICAgICAgbm9ybWFsaXplZC5wdXNoKGl0ZW0pO1xuICAgIH0gZWxzZSBpZiAoaXRlbSA9PSBudWxsIHx8IGl0ZW0gPT09IHRydWUgfHwgaXRlbSA9PT0gZmFsc2UpXG4gICAgICA7XG4gICAgZWxzZSBpZiAoQXJyYXkuaXNBcnJheShpdGVtKSkge1xuICAgICAgZHluYW1pYyA9IG5vcm1hbGl6ZUluY29taW5nQXJyYXkobm9ybWFsaXplZCwgaXRlbSwgcHJldikgfHwgZHluYW1pYztcbiAgICB9IGVsc2UgaWYgKHR5cGVvZiBpdGVtID09PSBcImZ1bmN0aW9uXCIpIHtcbiAgICAgIGlmICh1bndyYXAyKSB7XG4gICAgICAgIHdoaWxlICh0eXBlb2YgaXRlbSA9PT0gXCJmdW5jdGlvblwiKVxuICAgICAgICAgIGl0ZW0gPSBpdGVtKCk7XG4gICAgICAgIGR5bmFtaWMgPSBub3JtYWxpemVJbmNvbWluZ0FycmF5KG5vcm1hbGl6ZWQsIEFycmF5LmlzQXJyYXkoaXRlbSkgPyBpdGVtIDogW2l0ZW1dLCBBcnJheS5pc0FycmF5KHByZXYpID8gcHJldiA6IFtwcmV2XSkgfHwgZHluYW1pYztcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIG5vcm1hbGl6ZWQucHVzaChpdGVtKTtcbiAgICAgICAgZHluYW1pYyA9IHRydWU7XG4gICAgICB9XG4gICAgfSBlbHNlIHtcbiAgICAgIGNvbnN0IHZhbHVlID0gU3RyaW5nKGl0ZW0pO1xuICAgICAgaWYgKHByZXYgJiYgcHJldi5ub2RlVHlwZSA9PT0gMyAmJiBwcmV2LmRhdGEgPT09IHZhbHVlKSB7XG4gICAgICAgIG5vcm1hbGl6ZWQucHVzaChwcmV2KTtcbiAgICAgIH0gZWxzZVxuICAgICAgICBub3JtYWxpemVkLnB1c2goZG9jdW1lbnQuY3JlYXRlVGV4dE5vZGUodmFsdWUpKTtcbiAgICB9XG4gIH1cbiAgcmV0dXJuIGR5bmFtaWM7XG59XG5mdW5jdGlvbiBhcHBlbmROb2RlcyhwYXJlbnQsIGFycmF5LCBtYXJrZXIgPSBudWxsKSB7XG4gIGZvciAobGV0IGkyID0gMCwgbGVuID0gYXJyYXkubGVuZ3RoOyBpMiA8IGxlbjsgaTIrKylcbiAgICBwYXJlbnQuaW5zZXJ0QmVmb3JlKGFycmF5W2kyXSwgbWFya2VyKTtcbn1cbmZ1bmN0aW9uIGNsZWFuQ2hpbGRyZW4ocGFyZW50LCBjdXJyZW50LCBtYXJrZXIsIHJlcGxhY2VtZW50KSB7XG4gIGlmIChtYXJrZXIgPT09IHZvaWQgMClcbiAgICByZXR1cm4gcGFyZW50LnRleHRDb250ZW50ID0gXCJcIjtcbiAgY29uc3Qgbm9kZSA9IHJlcGxhY2VtZW50IHx8IGRvY3VtZW50LmNyZWF0ZVRleHROb2RlKFwiXCIpO1xuICBpZiAoY3VycmVudC5sZW5ndGgpIHtcbiAgICBsZXQgaW5zZXJ0ZWQgPSBmYWxzZTtcbiAgICBmb3IgKGxldCBpMiA9IGN1cnJlbnQubGVuZ3RoIC0gMTsgaTIgPj0gMDsgaTItLSkge1xuICAgICAgY29uc3QgZWwgPSBjdXJyZW50W2kyXTtcbiAgICAgIGlmIChub2RlICE9PSBlbCkge1xuICAgICAgICBjb25zdCBpc1BhcmVudCA9IGVsLnBhcmVudE5vZGUgPT09IHBhcmVudDtcbiAgICAgICAgaWYgKCFpbnNlcnRlZCAmJiAhaTIpXG4gICAgICAgICAgaXNQYXJlbnQgPyBwYXJlbnQucmVwbGFjZUNoaWxkKG5vZGUsIGVsKSA6IHBhcmVudC5pbnNlcnRCZWZvcmUobm9kZSwgbWFya2VyKTtcbiAgICAgICAgZWxzZVxuICAgICAgICAgIGlzUGFyZW50ICYmIGVsLnJlbW92ZSgpO1xuICAgICAgfSBlbHNlXG4gICAgICAgIGluc2VydGVkID0gdHJ1ZTtcbiAgICB9XG4gIH0gZWxzZVxuICAgIHBhcmVudC5pbnNlcnRCZWZvcmUobm9kZSwgbWFya2VyKTtcbiAgcmV0dXJuIFtub2RlXTtcbn1cbmZ1bmN0aW9uIGdldEh5ZHJhdGlvbktleSgpIHtcbiAgY29uc3QgaHlkcmF0ZSA9IHNoYXJlZENvbmZpZy5jb250ZXh0O1xuICByZXR1cm4gYCR7aHlkcmF0ZS5pZH0ke2h5ZHJhdGUuY291bnQrK31gO1xufVxuY29uc3QgU1ZHX05BTUVTUEFDRSA9IFwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcIjtcbmZ1bmN0aW9uIGNyZWF0ZUVsZW1lbnQodGFnTmFtZSwgaXNTVkcgPSBmYWxzZSkge1xuICByZXR1cm4gaXNTVkcgPyBkb2N1bWVudC5jcmVhdGVFbGVtZW50TlMoU1ZHX05BTUVTUEFDRSwgdGFnTmFtZSkgOiBkb2N1bWVudC5jcmVhdGVFbGVtZW50KHRhZ05hbWUpO1xufVxuZnVuY3Rpb24gUG9ydGFsKHByb3BzKSB7XG4gIGNvbnN0IHtcbiAgICB1c2VTaGFkb3dcbiAgfSA9IHByb3BzLCBtYXJrZXIgPSBkb2N1bWVudC5jcmVhdGVUZXh0Tm9kZShcIlwiKSwgbW91bnQgPSBwcm9wcy5tb3VudCB8fCBkb2N1bWVudC5ib2R5O1xuICBmdW5jdGlvbiByZW5kZXJQb3J0YWwoKSB7XG4gICAgaWYgKHNoYXJlZENvbmZpZy5jb250ZXh0KSB7XG4gICAgICBjb25zdCBbczIsIHNldF0gPSBjcmVhdGVTaWduYWwoZmFsc2UpO1xuICAgICAgcXVldWVNaWNyb3Rhc2soKCkgPT4gc2V0KHRydWUpKTtcbiAgICAgIHJldHVybiAoKSA9PiBzMigpICYmIHByb3BzLmNoaWxkcmVuO1xuICAgIH0gZWxzZVxuICAgICAgcmV0dXJuICgpID0+IHByb3BzLmNoaWxkcmVuO1xuICB9XG4gIGlmIChtb3VudCBpbnN0YW5jZW9mIEhUTUxIZWFkRWxlbWVudCkge1xuICAgIGNvbnN0IFtjbGVhbiwgc2V0Q2xlYW5dID0gY3JlYXRlU2lnbmFsKGZhbHNlKTtcbiAgICBjb25zdCBjbGVhbnVwID0gKCkgPT4gc2V0Q2xlYW4odHJ1ZSk7XG4gICAgY3JlYXRlUm9vdCgoZGlzcG9zZTIpID0+IGluc2VydChtb3VudCwgKCkgPT4gIWNsZWFuKCkgPyByZW5kZXJQb3J0YWwoKSgpIDogZGlzcG9zZTIoKSwgbnVsbCkpO1xuICAgIG9uQ2xlYW51cCgoKSA9PiB7XG4gICAgICBpZiAoc2hhcmVkQ29uZmlnLmNvbnRleHQpXG4gICAgICAgIHF1ZXVlTWljcm90YXNrKGNsZWFudXApO1xuICAgICAgZWxzZVxuICAgICAgICBjbGVhbnVwKCk7XG4gICAgfSk7XG4gIH0gZWxzZSB7XG4gICAgY29uc3QgY29udGFpbmVyID0gY3JlYXRlRWxlbWVudChwcm9wcy5pc1NWRyA/IFwiZ1wiIDogXCJkaXZcIiwgcHJvcHMuaXNTVkcpLCByZW5kZXJSb290ID0gdXNlU2hhZG93ICYmIGNvbnRhaW5lci5hdHRhY2hTaGFkb3cgPyBjb250YWluZXIuYXR0YWNoU2hhZG93KHtcbiAgICAgIG1vZGU6IFwib3BlblwiXG4gICAgfSkgOiBjb250YWluZXI7XG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KGNvbnRhaW5lciwgXCJfJGhvc3RcIiwge1xuICAgICAgZ2V0KCkge1xuICAgICAgICByZXR1cm4gbWFya2VyLnBhcmVudE5vZGU7XG4gICAgICB9LFxuICAgICAgY29uZmlndXJhYmxlOiB0cnVlXG4gICAgfSk7XG4gICAgaW5zZXJ0KHJlbmRlclJvb3QsIHJlbmRlclBvcnRhbCgpKTtcbiAgICBtb3VudC5hcHBlbmRDaGlsZChjb250YWluZXIpO1xuICAgIHByb3BzLnJlZiAmJiBwcm9wcy5yZWYoY29udGFpbmVyKTtcbiAgICBvbkNsZWFudXAoKCkgPT4gbW91bnQucmVtb3ZlQ2hpbGQoY29udGFpbmVyKSk7XG4gIH1cbiAgcmV0dXJuIG1hcmtlcjtcbn1cbmZ1bmN0aW9uIER5bmFtaWMocHJvcHMpIHtcbiAgY29uc3QgW3AyLCBvdGhlcnNdID0gc3BsaXRQcm9wcyhwcm9wcywgW1wiY29tcG9uZW50XCJdKTtcbiAgY29uc3QgY2FjaGVkID0gY3JlYXRlTWVtbygoKSA9PiBwMi5jb21wb25lbnQpO1xuICByZXR1cm4gY3JlYXRlTWVtbygoKSA9PiB7XG4gICAgY29uc3QgY29tcG9uZW50ID0gY2FjaGVkKCk7XG4gICAgc3dpdGNoICh0eXBlb2YgY29tcG9uZW50KSB7XG4gICAgICBjYXNlIFwiZnVuY3Rpb25cIjpcbiAgICAgICAgcmV0dXJuIHVudHJhY2soKCkgPT4gY29tcG9uZW50KG90aGVycykpO1xuICAgICAgY2FzZSBcInN0cmluZ1wiOlxuICAgICAgICBjb25zdCBpc1N2ZyA9IFNWR0VsZW1lbnRzLmhhcyhjb21wb25lbnQpO1xuICAgICAgICBjb25zdCBlbCA9IHNoYXJlZENvbmZpZy5jb250ZXh0ID8gZ2V0TmV4dEVsZW1lbnQoKSA6IGNyZWF0ZUVsZW1lbnQoY29tcG9uZW50LCBpc1N2Zyk7XG4gICAgICAgIHNwcmVhZChlbCwgb3RoZXJzLCBpc1N2Zyk7XG4gICAgICAgIHJldHVybiBlbDtcbiAgICB9XG4gIH0pO1xufVxudmFyIFRIRU1FID0gLyogQF9fUFVSRV9fICovICgoVEhFTUUyKSA9PiB7XG4gIFRIRU1FMltcIkRBUktcIl0gPSBcIkRBUktcIjtcbiAgVEhFTUUyW1wiTElHSFRcIl0gPSBcIkxJR0hUXCI7XG4gIHJldHVybiBUSEVNRTI7XG59KShUSEVNRSB8fCB7fSk7XG5sZXQgZSA9IHsgZGF0YTogXCJcIiB9LCB0ID0gKHQyKSA9PiBcIm9iamVjdFwiID09IHR5cGVvZiB3aW5kb3cgPyAoKHQyID8gdDIucXVlcnlTZWxlY3RvcihcIiNfZ29vYmVyXCIpIDogd2luZG93Ll9nb29iZXIpIHx8IE9iamVjdC5hc3NpZ24oKHQyIHx8IGRvY3VtZW50LmhlYWQpLmFwcGVuZENoaWxkKGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJzdHlsZVwiKSksIHsgaW5uZXJIVE1MOiBcIiBcIiwgaWQ6IFwiX2dvb2JlclwiIH0pKS5maXJzdENoaWxkIDogdDIgfHwgZSwgbCA9IC8oPzooW1xcdTAwODAtXFx1RkZGRlxcdy0lQF0rKSAqOj8gKihbXns7XSs/KTt8KFteO317XSo/KSAqeyl8KH1cXHMqKS9nLCBhID0gL1xcL1xcKlteXSo/XFwqXFwvfCAgKy9nLCBuID0gL1xcbisvZywgbyA9IChlMiwgdDIpID0+IHtcbiAgbGV0IHIgPSBcIlwiLCBsMiA9IFwiXCIsIGEyID0gXCJcIjtcbiAgZm9yIChsZXQgbjIgaW4gZTIpIHtcbiAgICBsZXQgYzIgPSBlMltuMl07XG4gICAgXCJAXCIgPT0gbjJbMF0gPyBcImlcIiA9PSBuMlsxXSA/IHIgPSBuMiArIFwiIFwiICsgYzIgKyBcIjtcIiA6IGwyICs9IFwiZlwiID09IG4yWzFdID8gbyhjMiwgbjIpIDogbjIgKyBcIntcIiArIG8oYzIsIFwia1wiID09IG4yWzFdID8gXCJcIiA6IHQyKSArIFwifVwiIDogXCJvYmplY3RcIiA9PSB0eXBlb2YgYzIgPyBsMiArPSBvKGMyLCB0MiA/IHQyLnJlcGxhY2UoLyhbXixdKSsvZywgKGUzKSA9PiBuMi5yZXBsYWNlKC8oXjouKil8KFteLF0pKy9nLCAodDMpID0+IC8mLy50ZXN0KHQzKSA/IHQzLnJlcGxhY2UoLyYvZywgZTMpIDogZTMgPyBlMyArIFwiIFwiICsgdDMgOiB0MykpIDogbjIpIDogbnVsbCAhPSBjMiAmJiAobjIgPSAvXi0tLy50ZXN0KG4yKSA/IG4yIDogbjIucmVwbGFjZSgvW0EtWl0vZywgXCItJCZcIikudG9Mb3dlckNhc2UoKSwgYTIgKz0gby5wID8gby5wKG4yLCBjMikgOiBuMiArIFwiOlwiICsgYzIgKyBcIjtcIik7XG4gIH1cbiAgcmV0dXJuIHIgKyAodDIgJiYgYTIgPyB0MiArIFwie1wiICsgYTIgKyBcIn1cIiA6IGEyKSArIGwyO1xufSwgYyA9IHt9LCBzID0gKGUyKSA9PiB7XG4gIGlmIChcIm9iamVjdFwiID09IHR5cGVvZiBlMikge1xuICAgIGxldCB0MiA9IFwiXCI7XG4gICAgZm9yIChsZXQgciBpbiBlMilcbiAgICAgIHQyICs9IHIgKyBzKGUyW3JdKTtcbiAgICByZXR1cm4gdDI7XG4gIH1cbiAgcmV0dXJuIGUyO1xufSwgaSA9IChlMiwgdDIsIHIsIGkyLCBwMikgPT4ge1xuICBsZXQgdTIgPSBzKGUyKSwgZCA9IGNbdTJdIHx8IChjW3UyXSA9ICgoZTMpID0+IHtcbiAgICBsZXQgdDMgPSAwLCByMiA9IDExO1xuICAgIGZvciAoOyB0MyA8IGUzLmxlbmd0aDsgKVxuICAgICAgcjIgPSAxMDEgKiByMiArIGUzLmNoYXJDb2RlQXQodDMrKykgPj4+IDA7XG4gICAgcmV0dXJuIFwiZ29cIiArIHIyO1xuICB9KSh1MikpO1xuICBpZiAoIWNbZF0pIHtcbiAgICBsZXQgdDMgPSB1MiAhPT0gZTIgPyBlMiA6ICgoZTMpID0+IHtcbiAgICAgIGxldCB0NCwgcjIsIG8yID0gW3t9XTtcbiAgICAgIGZvciAoOyB0NCA9IGwuZXhlYyhlMy5yZXBsYWNlKGEsIFwiXCIpKTsgKVxuICAgICAgICB0NFs0XSA/IG8yLnNoaWZ0KCkgOiB0NFszXSA/IChyMiA9IHQ0WzNdLnJlcGxhY2UobiwgXCIgXCIpLnRyaW0oKSwgbzIudW5zaGlmdChvMlswXVtyMl0gPSBvMlswXVtyMl0gfHwge30pKSA6IG8yWzBdW3Q0WzFdXSA9IHQ0WzJdLnJlcGxhY2UobiwgXCIgXCIpLnRyaW0oKTtcbiAgICAgIHJldHVybiBvMlswXTtcbiAgICB9KShlMik7XG4gICAgY1tkXSA9IG8ocDIgPyB7IFtcIkBrZXlmcmFtZXMgXCIgKyBkXTogdDMgfSA6IHQzLCByID8gXCJcIiA6IFwiLlwiICsgZCk7XG4gIH1cbiAgbGV0IGYgPSByICYmIGMuZyA/IGMuZyA6IG51bGw7XG4gIHJldHVybiByICYmIChjLmcgPSBjW2RdKSwgKChlMywgdDMsIHIyLCBsMikgPT4ge1xuICAgIGwyID8gdDMuZGF0YSA9IHQzLmRhdGEucmVwbGFjZShsMiwgZTMpIDogLTEgPT09IHQzLmRhdGEuaW5kZXhPZihlMykgJiYgKHQzLmRhdGEgPSByMiA/IGUzICsgdDMuZGF0YSA6IHQzLmRhdGEgKyBlMyk7XG4gIH0pKGNbZF0sIHQyLCBpMiwgZiksIGQ7XG59LCBwID0gKGUyLCB0MiwgcikgPT4gZTIucmVkdWNlKChlMywgbDIsIGEyKSA9PiB7XG4gIGxldCBuMiA9IHQyW2EyXTtcbiAgaWYgKG4yICYmIG4yLmNhbGwpIHtcbiAgICBsZXQgZTQgPSBuMihyKSwgdDMgPSBlNCAmJiBlNC5wcm9wcyAmJiBlNC5wcm9wcy5jbGFzc05hbWUgfHwgL15nby8udGVzdChlNCkgJiYgZTQ7XG4gICAgbjIgPSB0MyA/IFwiLlwiICsgdDMgOiBlNCAmJiBcIm9iamVjdFwiID09IHR5cGVvZiBlNCA/IGU0LnByb3BzID8gXCJcIiA6IG8oZTQsIFwiXCIpIDogZmFsc2UgPT09IGU0ID8gXCJcIiA6IGU0O1xuICB9XG4gIHJldHVybiBlMyArIGwyICsgKG51bGwgPT0gbjIgPyBcIlwiIDogbjIpO1xufSwgXCJcIik7XG5mdW5jdGlvbiB1KGUyKSB7XG4gIGxldCByID0gdGhpcyB8fCB7fSwgbDIgPSBlMi5jYWxsID8gZTIoci5wKSA6IGUyO1xuICByZXR1cm4gaShsMi51bnNoaWZ0ID8gbDIucmF3ID8gcChsMiwgW10uc2xpY2UuY2FsbChhcmd1bWVudHMsIDEpLCByLnApIDogbDIucmVkdWNlKChlMywgdDIpID0+IE9iamVjdC5hc3NpZ24oZTMsIHQyICYmIHQyLmNhbGwgPyB0MihyLnApIDogdDIpLCB7fSkgOiBsMiwgdChyLnRhcmdldCksIHIuZywgci5vLCByLmspO1xufVxudS5iaW5kKHsgZzogMSB9KTtcbmxldCBoID0gdS5iaW5kKHsgazogMSB9KTtcbmNvbnN0IFRoZW1lQ29udGV4dCA9IGNyZWF0ZUNvbnRleHQoKTtcbmZ1bmN0aW9uIFRoZW1lUHJvdmlkZXIocHJvcHMpIHtcbiAgcmV0dXJuIGNyZWF0ZUNvbXBvbmVudChUaGVtZUNvbnRleHQuUHJvdmlkZXIsIHtcbiAgICB2YWx1ZTogcHJvcHMudGhlbWUsXG4gICAgZ2V0IGNoaWxkcmVuKCkge1xuICAgICAgcmV0dXJuIHByb3BzLmNoaWxkcmVuO1xuICAgIH1cbiAgfSk7XG59XG5mdW5jdGlvbiB1c2VUaGVtZSgpIHtcbiAgcmV0dXJuIHVzZUNvbnRleHQoVGhlbWVDb250ZXh0KTtcbn1cbmZ1bmN0aW9uIG1ha2VTdHlsZWQodGFnKSB7XG4gIGxldCBfY3R4ID0gdGhpcyB8fCB7fTtcbiAgcmV0dXJuICguLi5hcmdzKSA9PiB7XG4gICAgY29uc3QgU3R5bGVkID0gKHByb3BzKSA9PiB7XG4gICAgICBjb25zdCB0aGVtZSA9IHVzZUNvbnRleHQoVGhlbWVDb250ZXh0KTtcbiAgICAgIGNvbnN0IHdpdGhUaGVtZSA9IG1lcmdlUHJvcHMocHJvcHMsIHsgdGhlbWUgfSk7XG4gICAgICBjb25zdCBjbG9uZSA9IG1lcmdlUHJvcHMod2l0aFRoZW1lLCB7XG4gICAgICAgIGdldCBjbGFzcygpIHtcbiAgICAgICAgICBjb25zdCBwQ2xhc3MgPSB3aXRoVGhlbWUuY2xhc3MsIGFwcGVuZCA9IFwiY2xhc3NcIiBpbiB3aXRoVGhlbWUgJiYgL15nb1swLTldKy8udGVzdChwQ2xhc3MpO1xuICAgICAgICAgIGxldCBjbGFzc05hbWUyID0gdS5hcHBseShcbiAgICAgICAgICAgIHsgdGFyZ2V0OiBfY3R4LnRhcmdldCwgbzogYXBwZW5kLCBwOiB3aXRoVGhlbWUsIGc6IF9jdHguZyB9LFxuICAgICAgICAgICAgYXJnc1xuICAgICAgICAgICk7XG4gICAgICAgICAgcmV0dXJuIFtwQ2xhc3MsIGNsYXNzTmFtZTJdLmZpbHRlcihCb29sZWFuKS5qb2luKFwiIFwiKTtcbiAgICAgICAgfVxuICAgICAgfSk7XG4gICAgICBjb25zdCBbbG9jYWwsIG5ld1Byb3BzXSA9IHNwbGl0UHJvcHMoY2xvbmUsIFtcImFzXCIsIFwidGhlbWVcIl0pO1xuICAgICAgY29uc3QgaHRtbFByb3BzID0gbmV3UHJvcHM7XG4gICAgICBjb25zdCBjcmVhdGVUYWcgPSBsb2NhbC5hcyB8fCB0YWc7XG4gICAgICBsZXQgZWw7XG4gICAgICBpZiAodHlwZW9mIGNyZWF0ZVRhZyA9PT0gXCJmdW5jdGlvblwiKSB7XG4gICAgICAgIGVsID0gY3JlYXRlVGFnKGh0bWxQcm9wcyk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICB7XG4gICAgICAgICAgaWYgKF9jdHguZyA9PSAxKSB7XG4gICAgICAgICAgICBlbCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoY3JlYXRlVGFnKTtcbiAgICAgICAgICAgIHNwcmVhZChlbCwgaHRtbFByb3BzKTtcbiAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgZWwgPSBEeW5hbWljKG1lcmdlUHJvcHMoeyBjb21wb25lbnQ6IGNyZWF0ZVRhZyB9LCBodG1sUHJvcHMpKTtcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIHJldHVybiBlbDtcbiAgICB9O1xuICAgIFN0eWxlZC5jbGFzcyA9IChwcm9wcykgPT4ge1xuICAgICAgcmV0dXJuIHVudHJhY2soKCkgPT4ge1xuICAgICAgICByZXR1cm4gdS5hcHBseSh7IHRhcmdldDogX2N0eC50YXJnZXQsIHA6IHByb3BzLCBnOiBfY3R4LmcgfSwgYXJncyk7XG4gICAgICB9KTtcbiAgICB9O1xuICAgIHJldHVybiBTdHlsZWQ7XG4gIH07XG59XG5jb25zdCBzdHlsZWQgPSBuZXcgUHJveHkobWFrZVN0eWxlZCwge1xuICBnZXQodGFyZ2V0LCB0YWcpIHtcbiAgICByZXR1cm4gdGFyZ2V0KHRhZyk7XG4gIH1cbn0pO1xuZnVuY3Rpb24gY3JlYXRlR2xvYmFsU3R5bGVzKCkge1xuICBjb25zdCBmbiA9IG1ha2VTdHlsZWQuY2FsbCh7IGc6IDEgfSwgXCJkaXZcIikuYXBwbHkobnVsbCwgYXJndW1lbnRzKTtcbiAgcmV0dXJuIGZ1bmN0aW9uIEdsb2JhbFN0eWxlczIocHJvcHMpIHtcbiAgICBmbihwcm9wcyk7XG4gICAgcmV0dXJuIG51bGw7XG4gIH07XG59XG5jb25zdCBnbG9iYWxTdHlsZXNUYWcgPSBcInRjLXJvb3RcIjtcbmNvbnN0IGRpc2FibGVTY3JvbGxDbGFzcyA9IFwidGMtZGlzYWJsZS1zY3JvbGxcIjtcbmNvbnN0IHVzaW5nTW91c2VDbGFzcyA9IFwidGMtdXNpbmctbW91c2VcIjtcbmNvbnN0IEdsb2JhbFN0eWxlcyA9ICgpID0+IHtcbiAgZG9jdW1lbnQuYm9keS5hZGRFdmVudExpc3RlbmVyKFwibW91c2Vkb3duXCIsICgpID0+IGRvY3VtZW50LmJvZHkuY2xhc3NMaXN0LmFkZCh1c2luZ01vdXNlQ2xhc3MpKTtcbiAgZG9jdW1lbnQuYm9keS5hZGRFdmVudExpc3RlbmVyKFwia2V5ZG93blwiLCAoZXZlbnQpID0+IHtcbiAgICBpZiAoZXZlbnQua2V5ID09PSBcIlRhYlwiKSB7XG4gICAgICBkb2N1bWVudC5ib2R5LmNsYXNzTGlzdC5yZW1vdmUodXNpbmdNb3VzZUNsYXNzKTtcbiAgICB9XG4gIH0pO1xuICBjb25zdCBTdHlsZXMgPSBjcmVhdGVHbG9iYWxTdHlsZXNgXG4gICAgJHtnbG9iYWxTdHlsZXNUYWd9ICoge1xuICAgICAgICBtYXJnaW46IDA7XG4gICAgICAgIHBhZGRpbmc6IDA7XG4gICAgICAgIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG4gICAgICAgIFxuICAgICAgICBmb250LWZhbWlseTogLWFwcGxlLXN5c3RlbSwgQmxpbmtNYWNTeXN0ZW1Gb250LCAnUm9ib3RvJywgJ0hlbHZldGljYSBOZXVlJywgQXJpYWwsIFRhaG9tYSwgVmVyZGFuYSwgc2Fucy1zZXJpZjtcbiAgICAgICAgLXdlYmtpdC1mb250LXNtb290aGluZzogYW50aWFsaWFzZWQ7XG4gICAgICAgIC1tb3otb3N4LWZvbnQtc21vb3RoaW5nOiBncmF5c2NhbGU7ICAgICAgICBcbiAgICAgICAgLXdlYmtpdC10YXAtaGlnaGxpZ2h0LWNvbG9yOiB0cmFuc3BhcmVudDtcbiAgICB9XG4gICAgXG4gICAgJHtnbG9iYWxTdHlsZXNUYWd9IGltZyB7XG4gICAgICAtd2Via2l0LXVzZXItc2VsZWN0OiBub25lO1xuICAgICAgLXdlYmtpdC10b3VjaC1jYWxsb3V0OiBub25lO1xuICAgIH0gICBcbiBcbiAgICAke2dsb2JhbFN0eWxlc1RhZ30gKjpmb2N1cyB7XG4gICAgICAgIG91dGxpbmU6ICMwOGYgYXV0byAycHg7XG4gICAgfVxuICAgIFxuICAgICR7Z2xvYmFsU3R5bGVzVGFnfSBsaSB7XG4gICAgICAgIGxpc3Qtc3R5bGU6IG5vbmU7XG4gICAgfVxuICAgIFxuICAgICR7Z2xvYmFsU3R5bGVzVGFnfSBidXR0b24ge1xuICAgICAgICBvdXRsaW5lOiBub25lO1xuICAgIH1cbiAgICBcbiAgICBib2R5LiR7ZGlzYWJsZVNjcm9sbENsYXNzfSB7XG4gICAgICAgIHBvc2l0aW9uOiBmaXhlZDsgXG4gICAgICAgIG92ZXJmbG93LXk6IHNjcm9sbDtcbiAgICAgICAgcmlnaHQ6IDA7XG4gICAgICAgIGxlZnQ6IDA7XG4gICAgfVxuICAgIFxuICAgIGJvZHkuJHt1c2luZ01vdXNlQ2xhc3N9ICR7Z2xvYmFsU3R5bGVzVGFnfSAqOmZvY3VzIHtcbiAgICAgICAgb3V0bGluZTogbm9uZTtcbiAgICB9XG5gO1xuICByZXR1cm4gY3JlYXRlQ29tcG9uZW50KFN0eWxlcywge30pO1xufTtcbmZ1bmN0aW9uIGhleFRvUmdiKGhleCkge1xuICBpZiAoaGV4WzBdID09PSBcIiNcIikge1xuICAgIGhleCA9IGhleC5zbGljZSgxKTtcbiAgfVxuICBjb25zdCBiaWdpbnQgPSBwYXJzZUludChoZXgsIDE2KTtcbiAgY29uc3QgciA9IGJpZ2ludCA+PiAxNiAmIDI1NTtcbiAgY29uc3QgZyA9IGJpZ2ludCA+PiA4ICYgMjU1O1xuICBjb25zdCBiID0gYmlnaW50ICYgMjU1O1xuICByZXR1cm4gW3IsIGcsIGJdLmpvaW4oXCIsXCIpO1xufVxuZnVuY3Rpb24gcmdiYShjb2xvciwgb3BhY2l0eSkge1xuICBpZiAoY29sb3JbMF0gPT09IFwiI1wiKSB7XG4gICAgY29sb3IgPSBoZXhUb1JnYihjb2xvcik7XG4gIH1cbiAgcmV0dXJuIGByZ2JhKCR7Y29sb3J9LCAke29wYWNpdHl9KWA7XG59XG5mdW5jdGlvbiB0b1B4KHZhbHVlKSB7XG4gIHJldHVybiB2YWx1ZS50b1N0cmluZygpICsgXCJweFwiO1xufVxuY29uc3QgX0luTWVtb3J5U3RvcmFnZSA9IGNsYXNzIHtcbiAgY29uc3RydWN0b3IoKSB7XG4gICAgX19wdWJsaWNGaWVsZCh0aGlzLCBcInN0b3JhZ2VcIiwge30pO1xuICB9XG4gIHN0YXRpYyBnZXRJbnN0YW5jZSgpIHtcbiAgICBpZiAoIV9Jbk1lbW9yeVN0b3JhZ2UuaW5zdGFuY2UpIHtcbiAgICAgIF9Jbk1lbW9yeVN0b3JhZ2UuaW5zdGFuY2UgPSBuZXcgX0luTWVtb3J5U3RvcmFnZSgpO1xuICAgIH1cbiAgICByZXR1cm4gX0luTWVtb3J5U3RvcmFnZS5pbnN0YW5jZTtcbiAgfVxuICBnZXQgbGVuZ3RoKCkge1xuICAgIHJldHVybiBPYmplY3Qua2V5cyh0aGlzLnN0b3JhZ2UpLmxlbmd0aDtcbiAgfVxuICBjbGVhcigpIHtcbiAgICB0aGlzLnN0b3JhZ2UgPSB7fTtcbiAgfVxuICBnZXRJdGVtKGtleSkge1xuICAgIHZhciBfYTI7XG4gICAgcmV0dXJuIChfYTIgPSB0aGlzLnN0b3JhZ2Vba2V5XSkgIT0gbnVsbCA/IF9hMiA6IG51bGw7XG4gIH1cbiAga2V5KGluZGV4KSB7XG4gICAgdmFyIF9hMjtcbiAgICBjb25zdCBrZXlzID0gT2JqZWN0LmtleXModGhpcy5zdG9yYWdlKTtcbiAgICBpZiAoaW5kZXggPCAwIHx8IGluZGV4ID49IGtleXMubGVuZ3RoKSB7XG4gICAgICByZXR1cm4gbnVsbDtcbiAgICB9XG4gICAgcmV0dXJuIChfYTIgPSBrZXlzW2luZGV4XSkgIT0gbnVsbCA/IF9hMiA6IG51bGw7XG4gIH1cbiAgcmVtb3ZlSXRlbShrZXkpIHtcbiAgICBkZWxldGUgdGhpcy5zdG9yYWdlW2tleV07XG4gIH1cbiAgc2V0SXRlbShrZXksIHZhbHVlKSB7XG4gICAgdGhpcy5zdG9yYWdlW2tleV0gPSB2YWx1ZTtcbiAgfVxufTtcbmxldCBJbk1lbW9yeVN0b3JhZ2UgPSBfSW5NZW1vcnlTdG9yYWdlO1xuX19wdWJsaWNGaWVsZChJbk1lbW9yeVN0b3JhZ2UsIFwiaW5zdGFuY2VcIik7XG5jbGFzcyBUb25Db25uZWN0VUlFcnJvciBleHRlbmRzIFRvbkNvbm5lY3RFcnJvciB7XG4gIGNvbnN0cnVjdG9yKC4uLmFyZ3MpIHtcbiAgICBzdXBlciguLi5hcmdzKTtcbiAgICBPYmplY3Quc2V0UHJvdG90eXBlT2YodGhpcywgVG9uQ29ubmVjdFVJRXJyb3IucHJvdG90eXBlKTtcbiAgfVxufVxuZnVuY3Rpb24gbG9nRGVidWcoLi4uYXJncykge1xuICB7XG4gICAgdHJ5IHtcbiAgICAgIGNvbnNvbGUuZGVidWcoXCJbVE9OX0NPTk5FQ1RfVUldXCIsIC4uLmFyZ3MpO1xuICAgIH0gY2F0Y2ggKGUyKSB7XG4gICAgfVxuICB9XG59XG5mdW5jdGlvbiBsb2dFcnJvciguLi5hcmdzKSB7XG4gIHtcbiAgICB0cnkge1xuICAgICAgY29uc29sZS5lcnJvcihcIltUT05fQ09OTkVDVF9VSV1cIiwgLi4uYXJncyk7XG4gICAgfSBjYXRjaCAoZTIpIHtcbiAgICB9XG4gIH1cbn1cbmZ1bmN0aW9uIGxvZ1dhcm5pbmcoLi4uYXJncykge1xuICB7XG4gICAgdHJ5IHtcbiAgICAgIGNvbnNvbGUud2FybihcIltUT05fQ09OTkVDVF9VSV1cIiwgLi4uYXJncyk7XG4gICAgfSBjYXRjaCAoZTIpIHtcbiAgICB9XG4gIH1cbn1cbmZ1bmN0aW9uIG9wZW5MaW5rKGhyZWYsIHRhcmdldCA9IFwiX3NlbGZcIikge1xuICBsb2dEZWJ1ZyhcIm9wZW5MaW5rXCIsIGhyZWYsIHRhcmdldCk7XG4gIHdpbmRvdy5vcGVuKGhyZWYsIHRhcmdldCwgXCJub29wZW5lciBub3JlZmVycmVyXCIpO1xufVxuZnVuY3Rpb24gb3BlbkxpbmtCbGFuayhocmVmKSB7XG4gIG9wZW5MaW5rKGhyZWYsIFwiX2JsYW5rXCIpO1xufVxuZnVuY3Rpb24gb3BlbkRlZXBsaW5rV2l0aEZhbGxiYWNrKGhyZWYsIGZhbGxiYWNrKSB7XG4gIGNvbnN0IGRvRmFsbGJhY2sgPSAoKSA9PiB7XG4gICAgaWYgKGlzQnJvd3NlcihcInNhZmFyaVwiKSB8fCBpc09TKFwiYW5kcm9pZFwiKSAmJiBpc0Jyb3dzZXIoXCJmaXJlZm94XCIpKSB7XG4gICAgICByZXR1cm47XG4gICAgfVxuICAgIGZhbGxiYWNrKCk7XG4gIH07XG4gIGNvbnN0IGZhbGxiYWNrVGltZW91dCA9IHNldFRpbWVvdXQoKCkgPT4gZG9GYWxsYmFjaygpLCAyMDApO1xuICB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcihcImJsdXJcIiwgKCkgPT4gY2xlYXJUaW1lb3V0KGZhbGxiYWNrVGltZW91dCksIHsgb25jZTogdHJ1ZSB9KTtcbiAgb3BlbkxpbmsoaHJlZiwgXCJfc2VsZlwiKTtcbn1cbmZ1bmN0aW9uIGdldFN5c3RlbVRoZW1lKCkge1xuICBpZiAod2luZG93Lm1hdGNoTWVkaWEgJiYgd2luZG93Lm1hdGNoTWVkaWEoXCIocHJlZmVycy1jb2xvci1zY2hlbWU6IGxpZ2h0KVwiKS5tYXRjaGVzKSB7XG4gICAgcmV0dXJuIFRIRU1FLkxJR0hUO1xuICB9XG4gIHJldHVybiBUSEVNRS5EQVJLO1xufVxuZnVuY3Rpb24gc3Vic2NyaWJlVG9UaGVtZUNoYW5nZShjYWxsYmFjaykge1xuICBjb25zdCBoYW5kbGVyID0gKGV2ZW50KSA9PiBjYWxsYmFjayhldmVudC5tYXRjaGVzID8gVEhFTUUuREFSSyA6IFRIRU1FLkxJR0hUKTtcbiAgd2luZG93Lm1hdGNoTWVkaWEoXCIocHJlZmVycy1jb2xvci1zY2hlbWU6IGRhcmspXCIpLmFkZEV2ZW50TGlzdGVuZXIoXCJjaGFuZ2VcIiwgaGFuZGxlcik7XG4gIHJldHVybiAoKSA9PiB3aW5kb3cubWF0Y2hNZWRpYShcIihwcmVmZXJzLWNvbG9yLXNjaGVtZTogZGFyaylcIikucmVtb3ZlRXZlbnRMaXN0ZW5lcihcImNoYW5nZVwiLCBoYW5kbGVyKTtcbn1cbmZ1bmN0aW9uIGRpc2FibGVTY3JvbGwoKSB7XG4gIGlmIChkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQuc2Nyb2xsSGVpZ2h0ID09PSBkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQuY2xpZW50SGVpZ2h0KSB7XG4gICAgcmV0dXJuO1xuICB9XG4gIGRvY3VtZW50LmJvZHkuc3R5bGUudG9wID0gdG9QeCgtZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50LnNjcm9sbFRvcCk7XG4gIGRvY3VtZW50LmJvZHkuY2xhc3NMaXN0LmFkZChkaXNhYmxlU2Nyb2xsQ2xhc3MpO1xufVxuZnVuY3Rpb24gZW5hYmxlU2Nyb2xsKCkge1xuICBkb2N1bWVudC5ib2R5LmNsYXNzTGlzdC5yZW1vdmUoZGlzYWJsZVNjcm9sbENsYXNzKTtcbiAgZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50LnNjcm9sbFRvKHsgdG9wOiAtcGFyc2VGbG9hdChnZXRDb21wdXRlZFN0eWxlKGRvY3VtZW50LmJvZHkpLnRvcCkgfSk7XG4gIGRvY3VtZW50LmJvZHkuc3R5bGUudG9wID0gXCJhdXRvXCI7XG59XG5mdW5jdGlvbiBmaXhNb2JpbGVTYWZhcmlBY3RpdmVUcmFuc2l0aW9uKCkge1xuICBpZiAoIWRvY3VtZW50LmJvZHkuaGFzQXR0cmlidXRlKFwib250b3VjaHN0YXJ0XCIpKSB7XG4gICAgZG9jdW1lbnQuYm9keS5zZXRBdHRyaWJ1dGUoXCJvbnRvdWNoc3RhcnRcIiwgXCJcIik7XG4gIH1cbn1cbmZ1bmN0aW9uIGRlZmluZVN0eWxlc1Jvb3QoKSB7XG4gIGN1c3RvbUVsZW1lbnRzLmRlZmluZShnbG9iYWxTdHlsZXNUYWcsIGNsYXNzIFRjUm9vdEVsZW1lbnQgZXh0ZW5kcyBIVE1MRWxlbWVudCB7XG4gIH0pO1xufVxuZnVuY3Rpb24gY3JlYXRlTWFjcm90YXNrKGNhbGxiYWNrKSB7XG4gIHJldHVybiBfX2FzeW5jKHRoaXMsIG51bGwsIGZ1bmN0aW9uKiAoKSB7XG4gICAgeWllbGQgbmV3IFByb21pc2UoKHJlc29sdmUpID0+IHJlcXVlc3RBbmltYXRpb25GcmFtZShyZXNvbHZlKSk7XG4gICAgY2FsbGJhY2soKTtcbiAgfSk7XG59XG5mdW5jdGlvbiBjcmVhdGVNYWNyb3Rhc2tBc3luYyhjYWxsYmFjaykge1xuICByZXR1cm4gX19hc3luYyh0aGlzLCBudWxsLCBmdW5jdGlvbiogKCkge1xuICAgIHlpZWxkIG5ldyBQcm9taXNlKChyZXNvbHZlKSA9PiByZXF1ZXN0QW5pbWF0aW9uRnJhbWUocmVzb2x2ZSkpO1xuICAgIHJldHVybiBjYWxsYmFjaygpO1xuICB9KTtcbn1cbmZ1bmN0aW9uIHByZWxvYWRJbWFnZXMoaW1hZ2VzKSB7XG4gIGlmIChkb2N1bWVudC5yZWFkeVN0YXRlICE9PSBcImNvbXBsZXRlXCIpIHtcbiAgICB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcihcImxvYWRcIiwgKCkgPT4gY3JlYXRlTWFjcm90YXNrKCgpID0+IHByZWxvYWRJbWFnZXMoaW1hZ2VzKSksIHtcbiAgICAgIG9uY2U6IHRydWVcbiAgICB9KTtcbiAgfSBlbHNlIHtcbiAgICBpbWFnZXMuZm9yRWFjaCgoaW1nKSA9PiB7XG4gICAgICBjb25zdCBub2RlID0gbmV3IHdpbmRvdy5JbWFnZSgpO1xuICAgICAgbm9kZS5zcmMgPSBpbWc7XG4gICAgfSk7XG4gIH1cbn1cbmZ1bmN0aW9uIGdldFdpbmRvdyQxKCkge1xuICBpZiAodHlwZW9mIHdpbmRvdyAhPT0gXCJ1bmRlZmluZWRcIikge1xuICAgIHJldHVybiB3aW5kb3c7XG4gIH1cbiAgcmV0dXJuIHZvaWQgMDtcbn1cbmZ1bmN0aW9uIHRyeUdldExvY2FsU3RvcmFnZSgpIHtcbiAgaWYgKGlzTG9jYWxTdG9yYWdlQXZhaWxhYmxlKCkpIHtcbiAgICByZXR1cm4gbG9jYWxTdG9yYWdlO1xuICB9XG4gIGlmIChpc05vZGVKcygpKSB7XG4gICAgdGhyb3cgbmV3IFRvbkNvbm5lY3RVSUVycm9yKFxuICAgICAgXCJgbG9jYWxTdG9yYWdlYCBpcyB1bmF2YWlsYWJsZSwgYnV0IGl0IGlzIHJlcXVpcmVkIGZvciBUb25Db25uZWN0LiBGb3IgbW9yZSBkZXRhaWxzLCBzZWUgaHR0cHM6Ly9naXRodWIuY29tL3Rvbi1jb25uZWN0L3Nkay90cmVlL21haW4vcGFja2FnZXMvc2RrI2luaXQtY29ubmVjdG9yXCJcbiAgICApO1xuICB9XG4gIHJldHVybiBJbk1lbW9yeVN0b3JhZ2UuZ2V0SW5zdGFuY2UoKTtcbn1cbmZ1bmN0aW9uIGlzTG9jYWxTdG9yYWdlQXZhaWxhYmxlKCkge1xuICB0cnkge1xuICAgIHJldHVybiB0eXBlb2YgbG9jYWxTdG9yYWdlICE9PSBcInVuZGVmaW5lZFwiO1xuICB9IGNhdGNoIChlMikge1xuICAgIHJldHVybiBmYWxzZTtcbiAgfVxufVxuZnVuY3Rpb24gaXNOb2RlSnMoKSB7XG4gIHJldHVybiB0eXBlb2YgcHJvY2VzcyAhPT0gXCJ1bmRlZmluZWRcIiAmJiBwcm9jZXNzLnZlcnNpb25zICE9IG51bGwgJiYgcHJvY2Vzcy52ZXJzaW9ucy5ub2RlICE9IG51bGw7XG59XG5mdW5jdGlvbiBnZXRVc2VyQWdlbnQoKSB7XG4gIHZhciBfYTIsIF9iMiwgX2MyO1xuICBjb25zdCByZXN1bHRzID0gbmV3IFVBUGFyc2VyKCkuZ2V0UmVzdWx0KCk7XG4gIGNvbnN0IG9zTmFtZSA9IChfYTIgPSByZXN1bHRzLm9zLm5hbWUpID09IG51bGwgPyB2b2lkIDAgOiBfYTIudG9Mb3dlckNhc2UoKTtcbiAgY29uc3QgZGV2aWNlTW9kZWwgPSAoX2IyID0gcmVzdWx0cy5kZXZpY2UubW9kZWwpID09IG51bGwgPyB2b2lkIDAgOiBfYjIudG9Mb3dlckNhc2UoKTtcbiAgbGV0IG9zO1xuICBzd2l0Y2ggKHRydWUpIHtcbiAgICBjYXNlIGRldmljZU1vZGVsID09PSBcImlwYWRcIjpcbiAgICAgIG9zID0gXCJpcGFkXCI7XG4gICAgICBicmVhaztcbiAgICBjYXNlIG9zTmFtZSA9PT0gXCJpb3NcIjpcbiAgICAgIG9zID0gXCJpb3NcIjtcbiAgICAgIGJyZWFrO1xuICAgIGNhc2Ugb3NOYW1lID09PSBcImFuZHJvaWRcIjpcbiAgICAgIG9zID0gXCJhbmRyb2lkXCI7XG4gICAgICBicmVhaztcbiAgICBjYXNlIG9zTmFtZSA9PT0gXCJtYWMgb3NcIjpcbiAgICAgIG9zID0gXCJtYWNvc1wiO1xuICAgICAgYnJlYWs7XG4gICAgY2FzZSBvc05hbWUgPT09IFwibGludXhcIjpcbiAgICAgIG9zID0gXCJsaW51eFwiO1xuICAgICAgYnJlYWs7XG4gICAgY2FzZSAob3NOYW1lID09IG51bGwgPyB2b2lkIDAgOiBvc05hbWUuaW5jbHVkZXMoXCJ3aW5kb3dzXCIpKTpcbiAgICAgIG9zID0gXCJ3aW5kb3dzXCI7XG4gICAgICBicmVhaztcbiAgfVxuICBjb25zdCBicm93c2VyTmFtZSA9IChfYzIgPSByZXN1bHRzLmJyb3dzZXIubmFtZSkgPT0gbnVsbCA/IHZvaWQgMCA6IF9jMi50b0xvd2VyQ2FzZSgpO1xuICBsZXQgYnJvd3NlcjtcbiAgc3dpdGNoICh0cnVlKSB7XG4gICAgY2FzZSBicm93c2VyTmFtZSA9PT0gXCJjaHJvbWVcIjpcbiAgICAgIGJyb3dzZXIgPSBcImNocm9tZVwiO1xuICAgICAgYnJlYWs7XG4gICAgY2FzZSBicm93c2VyTmFtZSA9PT0gXCJmaXJlZm94XCI6XG4gICAgICBicm93c2VyID0gXCJmaXJlZm94XCI7XG4gICAgICBicmVhaztcbiAgICBjYXNlIChicm93c2VyTmFtZSA9PSBudWxsID8gdm9pZCAwIDogYnJvd3Nlck5hbWUuaW5jbHVkZXMoXCJzYWZhcmlcIikpOlxuICAgICAgYnJvd3NlciA9IFwic2FmYXJpXCI7XG4gICAgICBicmVhaztcbiAgICBjYXNlIChicm93c2VyTmFtZSA9PSBudWxsID8gdm9pZCAwIDogYnJvd3Nlck5hbWUuaW5jbHVkZXMoXCJvcGVyYVwiKSk6XG4gICAgICBicm93c2VyID0gXCJvcGVyYVwiO1xuICAgICAgYnJlYWs7XG4gIH1cbiAgcmV0dXJuIHtcbiAgICBvcyxcbiAgICBicm93c2VyXG4gIH07XG59XG5mdW5jdGlvbiBpc09TKC4uLm9zKSB7XG4gIHJldHVybiBvcy5pbmNsdWRlcyhnZXRVc2VyQWdlbnQoKS5vcyk7XG59XG5mdW5jdGlvbiBpc0Jyb3dzZXIoLi4uYnJvd3Nlcikge1xuICByZXR1cm4gYnJvd3Nlci5pbmNsdWRlcyhnZXRVc2VyQWdlbnQoKS5icm93c2VyKTtcbn1cbmZ1bmN0aW9uIHRvRGVlcGxpbmsodW5pdmVyc2FsTGluaywgZGVlcGxpbmspIHtcbiAgY29uc3QgdXJsID0gbmV3IFVSTCh1bml2ZXJzYWxMaW5rKTtcbiAgcmV0dXJuIGRlZXBsaW5rICsgdXJsLnNlYXJjaDtcbn1cbmNsYXNzIFdhbGxldEluZm9TdG9yYWdlIHtcbiAgY29uc3RydWN0b3IoKSB7XG4gICAgX19wdWJsaWNGaWVsZCh0aGlzLCBcImxvY2FsU3RvcmFnZVwiKTtcbiAgICBfX3B1YmxpY0ZpZWxkKHRoaXMsIFwic3RvcmFnZUtleVwiLCBcInRvbi1jb25uZWN0LXVpX3dhbGxldC1pbmZvXCIpO1xuICAgIHRoaXMubG9jYWxTdG9yYWdlID0gdHJ5R2V0TG9jYWxTdG9yYWdlKCk7XG4gIH1cbiAgc2V0V2FsbGV0SW5mbyh3YWxsZXRJbmZvKSB7XG4gICAgdGhpcy5sb2NhbFN0b3JhZ2Uuc2V0SXRlbSh0aGlzLnN0b3JhZ2VLZXksIEpTT04uc3RyaW5naWZ5KHdhbGxldEluZm8pKTtcbiAgfVxuICBnZXRXYWxsZXRJbmZvKCkge1xuICAgIGNvbnN0IHdhbGxldEluZm9TdHJpbmcgPSB0aGlzLmxvY2FsU3RvcmFnZS5nZXRJdGVtKHRoaXMuc3RvcmFnZUtleSk7XG4gICAgaWYgKCF3YWxsZXRJbmZvU3RyaW5nKSB7XG4gICAgICByZXR1cm4gbnVsbDtcbiAgICB9XG4gICAgcmV0dXJuIEpTT04ucGFyc2Uod2FsbGV0SW5mb1N0cmluZyk7XG4gIH1cbiAgcmVtb3ZlV2FsbGV0SW5mbygpIHtcbiAgICB0aGlzLmxvY2FsU3RvcmFnZS5yZW1vdmVJdGVtKHRoaXMuc3RvcmFnZUtleSk7XG4gIH1cbn1cbmNsYXNzIFByZWZlcnJlZFdhbGxldFN0b3JhZ2Uge1xuICBjb25zdHJ1Y3RvcigpIHtcbiAgICBfX3B1YmxpY0ZpZWxkKHRoaXMsIFwibG9jYWxTdG9yYWdlXCIpO1xuICAgIF9fcHVibGljRmllbGQodGhpcywgXCJzdG9yYWdlS2V5XCIsIFwidG9uLWNvbm5lY3QtdWlfcHJlZmVycmVkLXdhbGxldFwiKTtcbiAgICB0aGlzLmxvY2FsU3RvcmFnZSA9IHRyeUdldExvY2FsU3RvcmFnZSgpO1xuICB9XG4gIHNldFByZWZlcnJlZFdhbGxldEFwcE5hbWUobmFtZSkge1xuICAgIHRoaXMubG9jYWxTdG9yYWdlLnNldEl0ZW0odGhpcy5zdG9yYWdlS2V5LCBuYW1lKTtcbiAgfVxuICBnZXRQcmVmZXJyZWRXYWxsZXRBcHBOYW1lKCkge1xuICAgIHJldHVybiB0aGlzLmxvY2FsU3RvcmFnZS5nZXRJdGVtKHRoaXMuc3RvcmFnZUtleSkgfHwgdm9pZCAwO1xuICB9XG59XG5jbGFzcyBMYXN0U2VsZWN0ZWRXYWxsZXRJbmZvU3RvcmFnZSB7XG4gIGNvbnN0cnVjdG9yKCkge1xuICAgIF9fcHVibGljRmllbGQodGhpcywgXCJsb2NhbFN0b3JhZ2VcIik7XG4gICAgX19wdWJsaWNGaWVsZCh0aGlzLCBcInN0b3JhZ2VLZXlcIiwgXCJ0b24tY29ubmVjdC11aV9sYXN0LXNlbGVjdGVkLXdhbGxldC1pbmZvXCIpO1xuICAgIHRoaXMubG9jYWxTdG9yYWdlID0gdHJ5R2V0TG9jYWxTdG9yYWdlKCk7XG4gIH1cbiAgc2V0TGFzdFNlbGVjdGVkV2FsbGV0SW5mbyh3YWxsZXRJbmZvKSB7XG4gICAgdGhpcy5sb2NhbFN0b3JhZ2Uuc2V0SXRlbSh0aGlzLnN0b3JhZ2VLZXksIEpTT04uc3RyaW5naWZ5KHdhbGxldEluZm8pKTtcbiAgfVxuICBnZXRMYXN0U2VsZWN0ZWRXYWxsZXRJbmZvKCkge1xuICAgIGNvbnN0IHdhbGxldEluZm9TdHJpbmcgPSB0aGlzLmxvY2FsU3RvcmFnZS5nZXRJdGVtKHRoaXMuc3RvcmFnZUtleSk7XG4gICAgaWYgKCF3YWxsZXRJbmZvU3RyaW5nKSB7XG4gICAgICByZXR1cm4gbnVsbDtcbiAgICB9XG4gICAgcmV0dXJuIEpTT04ucGFyc2Uod2FsbGV0SW5mb1N0cmluZyk7XG4gIH1cbiAgcmVtb3ZlTGFzdFNlbGVjdGVkV2FsbGV0SW5mbygpIHtcbiAgICB0aGlzLmxvY2FsU3RvcmFnZS5yZW1vdmVJdGVtKHRoaXMuc3RvcmFnZUtleSk7XG4gIH1cbn1cbmNvbnN0IFt3YWxsZXRzTW9kYWxTdGF0ZSwgc2V0V2FsbGV0c01vZGFsU3RhdGVdID0gY3JlYXRlU2lnbmFsKHtcbiAgc3RhdHVzOiBcImNsb3NlZFwiLFxuICBjbG9zZVJlYXNvbjogbnVsbFxufSk7XG5jb25zdCBnZXRXYWxsZXRzTW9kYWxJc09wZW5lZCA9IGNyZWF0ZU1lbW8oKCkgPT4gd2FsbGV0c01vZGFsU3RhdGUoKS5zdGF0dXMgPT09IFwib3BlbmVkXCIpO1xuY29uc3QgW3NpbmdsZVdhbGxldE1vZGFsU3RhdGUsIHNldFNpbmdsZVdhbGxldE1vZGFsU3RhdGVdID0gY3JlYXRlU2lnbmFsKHtcbiAgc3RhdHVzOiBcImNsb3NlZFwiLFxuICBjbG9zZVJlYXNvbjogbnVsbFxufSk7XG5jb25zdCBnZXRTaW5nbGVXYWxsZXRNb2RhbElzT3BlbmVkID0gY3JlYXRlTWVtbyhcbiAgKCkgPT4gc2luZ2xlV2FsbGV0TW9kYWxTdGF0ZSgpLnN0YXR1cyA9PT0gXCJvcGVuZWRcIlxuKTtcbmNvbnN0IGdldFNpbmdsZVdhbGxldE1vZGFsV2FsbGV0SW5mbyA9IGNyZWF0ZU1lbW8oKCkgPT4ge1xuICBjb25zdCBzdGF0ZSA9IHNpbmdsZVdhbGxldE1vZGFsU3RhdGUoKTtcbiAgaWYgKHN0YXRlLnN0YXR1cyA9PT0gXCJvcGVuZWRcIikge1xuICAgIHJldHVybiBzdGF0ZS53YWxsZXRJbmZvO1xuICB9XG4gIHJldHVybiBudWxsO1xufSk7XG5sZXQgbGFzdFNlbGVjdGVkV2FsbGV0SW5mb1N0b3JhZ2UgPSB0eXBlb2Ygd2luZG93ICE9PSBcInVuZGVmaW5lZFwiID8gbmV3IExhc3RTZWxlY3RlZFdhbGxldEluZm9TdG9yYWdlKCkgOiB2b2lkIDA7XG5jb25zdCBbbGFzdFNlbGVjdGVkV2FsbGV0SW5mbywgX3NldExhc3RTZWxlY3RlZFdhbGxldEluZm9dID0gY3JlYXRlU2lnbmFsKChsYXN0U2VsZWN0ZWRXYWxsZXRJbmZvU3RvcmFnZSA9PSBudWxsID8gdm9pZCAwIDogbGFzdFNlbGVjdGVkV2FsbGV0SW5mb1N0b3JhZ2UuZ2V0TGFzdFNlbGVjdGVkV2FsbGV0SW5mbygpKSB8fCBudWxsKTtcbmNvbnN0IHNldExhc3RTZWxlY3RlZFdhbGxldEluZm8gPSAod2FsbGV0SW5mbykgPT4ge1xuICBpZiAoIWxhc3RTZWxlY3RlZFdhbGxldEluZm9TdG9yYWdlKSB7XG4gICAgbGFzdFNlbGVjdGVkV2FsbGV0SW5mb1N0b3JhZ2UgPSBuZXcgTGFzdFNlbGVjdGVkV2FsbGV0SW5mb1N0b3JhZ2UoKTtcbiAgfVxuICBpZiAod2FsbGV0SW5mbykge1xuICAgIGxhc3RTZWxlY3RlZFdhbGxldEluZm9TdG9yYWdlLnNldExhc3RTZWxlY3RlZFdhbGxldEluZm8od2FsbGV0SW5mbyk7XG4gIH0gZWxzZSB7XG4gICAgbGFzdFNlbGVjdGVkV2FsbGV0SW5mb1N0b3JhZ2UucmVtb3ZlTGFzdFNlbGVjdGVkV2FsbGV0SW5mbygpO1xuICB9XG4gIF9zZXRMYXN0U2VsZWN0ZWRXYWxsZXRJbmZvKHdhbGxldEluZm8pO1xufTtcbmNvbnN0IFthY3Rpb24sIHNldEFjdGlvbl0gPSBjcmVhdGVTaWduYWwobnVsbCk7XG5jb25zdCBjb21tb24kMSA9IHtcbiAgY2xvc2U6IFwiQ2xvc2VcIixcbiAgb3BlbldhbGxldDogXCJPcGVuIHdhbGxldFwiLFxuICBjb3B5TGluazogXCJDb3B5IExpbmtcIixcbiAgbGlua0NvcGllZDogXCJMaW5rIENvcGllZFwiLFxuICBjb3BpZWQ6IFwiQ29waWVkXCIsXG4gIHlvdXJXYWxsZXQ6IFwiWW91ciBXYWxsZXRcIixcbiAgcmV0cnk6IFwiUmV0cnlcIixcbiAgZ2V0OiBcIkdFVFwiLFxuICBtb2JpbGU6IFwiTW9iaWxlXCIsXG4gIGJyb3dzZXJFeHRlbnNpb246IFwiQnJvd3NlciBFeHRlbnNpb25cIixcbiAgZGVza3RvcDogXCJEZXNrdG9wXCJcbn07XG5jb25zdCBidXR0b24kMSA9IHtcbiAgY29ubmVjdFdhbGxldDogXCJDb25uZWN0IFdhbGxldFwiLFxuICBkcm9wZG93bjoge1xuICAgIGNvcHk6IFwiQ29weSBhZGRyZXNzXCIsXG4gICAgY29waWVkOiBcIkFkZHJlc3MgY29waWVkIVwiLFxuICAgIGRpc2Nvbm5lY3Q6IFwiRGlzY29ubmVjdFwiXG4gIH1cbn07XG5jb25zdCBub3RpZmljYXRpb25zJDEgPSB7XG4gIGNvbmZpcm06IHtcbiAgICBoZWFkZXI6IFwiT3BlbiB7eyBuYW1lIH19IHRvXFx4QTBjb25maXJtIHRoZVxceEEwdHJhbnNhY3Rpb24uXCJcbiAgfSxcbiAgdHJhbnNhY3Rpb25TZW50OiB7XG4gICAgaGVhZGVyOiBcIlRyYW5zYWN0aW9uIHNlbnRcIixcbiAgICB0ZXh0OiBcIllvdXIgdHJhbnNhY3Rpb25cXHhBMHdpbGwgYmVcXHhBMHByb2Nlc3NlZCBpblxceEEwYVxceEEwZmV3IHNlY29uZHMuXCJcbiAgfSxcbiAgdHJhbnNhY3Rpb25DYW5jZWxlZDoge1xuICAgIGhlYWRlcjogXCJUcmFuc2FjdGlvbiBjYW5jZWxlZFwiLFxuICAgIHRleHQ6IFwiVGhlcmUgd2lsbCBiZSBubyBjaGFuZ2VzIHRvXFx4QTB5b3VyIGFjY291bnQuXCJcbiAgfVxufTtcbmNvbnN0IHdhbGxldEl0ZW0kMSA9IHtcbiAgd2FsbGV0T246IFwiV2FsbGV0IE9uXCIsXG4gIHJlY2VudDogXCJSZWNlbnRcIixcbiAgaW5zdGFsbGVkOiBcIkluc3RhbGxlZFwiLFxuICBwb3B1bGFyOiBcIlBvcHVsYXJcIlxufTtcbmNvbnN0IHdhbGxldE1vZGFsJDEgPSB7XG4gIGxvYWRpbmc6IFwiTG9hZGluZyB3YWxsZXRzXCIsXG4gIHdhbGxldHM6IFwiV2FsbGV0c1wiLFxuICBtb2JpbGVVbml2ZXJzYWxNb2RhbDoge1xuICAgIGNvbm5lY3RZb3VyV2FsbGV0OiBcIkNvbm5lY3QgeW91ciB3YWxsZXRcIixcbiAgICBvcGVuV2FsbGV0T25UZWxlZ3JhbU9yU2VsZWN0OiBcIk9wZW4gV2FsbGV0IGluIFRlbGVncmFtIG9yIHNlbGVjdCB5b3VyIHdhbGxldCB0byBjb25uZWN0XCIsXG4gICAgb3BlbldhbGxldE9uVGVsZWdyYW06IFwiT3BlbiBXYWxsZXQgaW4gVGVsZWdyYW1cIixcbiAgICBvcGVuTGluazogXCJPcGVuIExpbmtcIixcbiAgICBzY2FuOiBcIlNjYW4gd2l0aCB5b3VyIG1vYmlsZSB3YWxsZXRcIlxuICB9LFxuICBkZXNrdG9wVW5pdmVyc2FsTW9kYWw6IHtcbiAgICBjb25uZWN0WW91cldhbGxldDogXCJDb25uZWN0IHlvdXIgd2FsbGV0XCIsXG4gICAgc2NhbjogXCJTY2FuIHdpdGggeW91ciBtb2JpbGUgd2FsbGV0XCIsXG4gICAgYXZhaWxhYmxlV2FsbGV0czogXCJBdmFpbGFibGUgd2FsbGV0c1wiXG4gIH0sXG4gIG1vYmlsZUNvbm5lY3Rpb25Nb2RhbDoge1xuICAgIHNob3dRUjogXCJTaG93IFFSIENvZGVcIixcbiAgICBzY2FuUVI6IFwiU2NhbiB0aGVcXHhBMFFSIGNvZGUgYmVsb3cgd2l0aCB5b3VyIHBob25lXFx1MjAxOXNcXHhBMG9yXFx4QTB7eyBuYW1lIH19XFx1MjAxOXMgY2FtZXJhXCIsXG4gICAgY29udGludWVJbjogXCJDb250aW51ZSBpbiB7eyBuYW1lIH19XFx1MjAyNlwiLFxuICAgIGNvbm5lY3Rpb25EZWNsaW5lZDogXCJDb25uZWN0aW9uIGRlY2xpbmVkXCJcbiAgfSxcbiAgZGVza3RvcENvbm5lY3Rpb25Nb2RhbDoge1xuICAgIHNjYW5RUjogXCJTY2FuIHRoZVxceEEwUVIgY29kZSBiZWxvdyB3aXRoIHlvdXIgcGhvbmVcXHUyMDE5c1xceEEwb3JcXHhBMHt7IG5hbWUgfX1cXHUyMDE5cyBjYW1lcmFcIixcbiAgICBjb250aW51ZUluRXh0ZW5zaW9uOiBcIkNvbnRpbnVlIGluXFx4QTB7eyBuYW1lIH19IGJyb3dzZXIgZXh0ZW5zaW9uXFx1MjAyNlwiLFxuICAgIGRvbnRIYXZlRXh0ZW5zaW9uOiBcIlNlZW1zIHlvdSBkb24ndCBoYXZlIGluc3RhbGxlZCB7eyBuYW1lIH19XFx4QTBicm93c2VyXFx4QTBleHRlbnNpb25cIixcbiAgICBnZXRXYWxsZXQ6IFwiR2V0IHt7IG5hbWUgfX1cIixcbiAgICBjb250aW51ZU9uRGVza3RvcDogXCJDb250aW51ZSBpblxceEEwe3sgbmFtZSB9fSBvbiBkZXNrdG9wXFx1MjAyNlwiLFxuICAgIG9wZW5XYWxsZXRPblRlbGVncmFtOiBcIk9wZW4gV2FsbGV0IGluIFRlbGVncmFtIG9uIGRlc2t0b3BcIixcbiAgICBjb25uZWN0aW9uRGVjbGluZWQ6IFwiQ29ubmVjdGlvbiBkZWNsaW5lZFwiXG4gIH0sXG4gIGluZm9Nb2RhbDoge1xuICAgIHdoYXRJc0FXYWxsZXQ6IFwiV2hhdCBpcyBhIHdhbGxldFwiLFxuICAgIHNlY3VyZURpZ2l0YWxBc3NldHM6IFwiU2VjdXJlIGRpZ2l0YWwgYXNzZXRzIHN0b3JhZ2VcIixcbiAgICB3YWxsZXRQcm90ZWN0czogXCJBIHdhbGxldCBwcm90ZWN0cyBhbmQgbWFuYWdlcyB5b3VyIGRpZ2l0YWwgYXNzZXRzXFx4QTBpbmNsdWRpbmcgVE9OLCB0b2tlbnMgYW5kIGNvbGxlY3RhYmxlcy5cIixcbiAgICBjb250cm9sSWRlbnRpdHk6IFwiQ29udHJvbCB5b3VyIFdlYjMgaWRlbnRpdHlcIixcbiAgICBtYW5hZ2VJZGVudGl0eTogXCJNYW5hZ2UgeW91ciBkaWdpdGFsIGlkZW50aXR5IGFuZCBhY2Nlc3MgZGVjZW50cmFsaXplZCBhcHBsaWNhdGlvbnMgd2l0aCBlYXNlLiBNYWludGFpbiBjb250cm9sIG92ZXIgeW91ciBkYXRhIGFuZCBlbmdhZ2Ugc2VjdXJlbHkgaW5cXHhBMHRoZVxceEEwYmxvY2tjaGFpbiBlY29zeXN0ZW0uXCIsXG4gICAgZWZmb3J0bGVzc0NyeXB0b1RyYW5zYWN0aW9uczogXCJFZmZvcnRsZXNzIGNyeXB0byB0cmFuc2FjdGlvbnNcIixcbiAgICBlYXNpbHlTZW5kOiBcIkVhc2lseSBzZW5kLCByZWNlaXZlLCBtb25pdG9yIHlvdXIgY3J5cHRvY3VycmVuY2llcy5cXHhBMFN0cmVhbWxpbmUgeW91ciBvcGVyYXRpb25zIHdpdGhcXHhBMGRlY2VudHJhbGl6ZWQgYXBwbGljYXRpb25zLlwiLFxuICAgIGdldEFXYWxsZXQ6IFwiR2V0IGEgV2FsbGV0XCJcbiAgfVxufTtcbmNvbnN0IGFjdGlvbk1vZGFsJDEgPSB7XG4gIGNvbmZpcm1UcmFuc2FjdGlvbjoge1xuICAgIGhlYWRlcjogXCJDb25maXJtIHRoZVxceEEwdHJhbnNhY3Rpb24gaW5cXHhBMHt7IG5hbWUgfX1cIixcbiAgICB0ZXh0OiBcIkl0IHdpbGwgb25seSB0YWtlIGFcXHhBMG1vbWVudC5cIlxuICB9LFxuICB0cmFuc2FjdGlvblNlbnQ6IFwiJG5vdGlmaWNhdGlvbnMudHJhbnNhY3Rpb25TZW50XCIsXG4gIHRyYW5zYWN0aW9uQ2FuY2VsZWQ6IFwiJG5vdGlmaWNhdGlvbnMudHJhbnNhY3Rpb25DYW5jZWxlZFwiXG59O1xuY29uc3QgZW4gPSB7XG4gIGNvbW1vbjogY29tbW9uJDEsXG4gIGJ1dHRvbjogYnV0dG9uJDEsXG4gIG5vdGlmaWNhdGlvbnM6IG5vdGlmaWNhdGlvbnMkMSxcbiAgd2FsbGV0SXRlbTogd2FsbGV0SXRlbSQxLFxuICB3YWxsZXRNb2RhbDogd2FsbGV0TW9kYWwkMSxcbiAgYWN0aW9uTW9kYWw6IGFjdGlvbk1vZGFsJDFcbn07XG5jb25zdCBjb21tb24gPSB7XG4gIGNsb3NlOiBcIlxcdTA0MTdcXHUwNDMwXFx1MDQzQVxcdTA0NDBcXHUwNDRCXFx1MDQ0MlxcdTA0NENcIixcbiAgb3BlbldhbGxldDogXCJcXHUwNDFFXFx1MDQ0MlxcdTA0M0FcXHUwNDQwXFx1MDQ0QlxcdTA0NDJcXHUwNDRDIFxcdTA0M0FcXHUwNDNFXFx1MDQ0OFxcdTA0MzVcXHUwNDNCXFx1MDQ1MVxcdTA0M0FcIixcbiAgY29weUxpbms6IFwiXFx1MDQxQVxcdTA0M0VcXHUwNDNGXFx1MDQzOFxcdTA0NDBcXHUwNDNFXFx1MDQzMlxcdTA0MzBcXHUwNDQyXFx1MDQ0QyBcXHUwNDQxXFx1MDQ0MVxcdTA0NEJcXHUwNDNCXFx1MDQzQVxcdTA0NDNcIixcbiAgbGlua0NvcGllZDogXCJcXHUwNDIxXFx1MDQ0MVxcdTA0NEJcXHUwNDNCXFx1MDQzQVxcdTA0MzAgXFx1MDQ0MVxcdTA0M0FcXHUwNDNFXFx1MDQzRlxcdTA0MzhcXHUwNDQwXFx1MDQzRVxcdTA0MzJcXHUwNDMwXFx1MDQzRFxcdTA0MzBcIixcbiAgY29waWVkOiBcIlxcdTA0MjFcXHUwNDQxXFx1MDQ0QlxcdTA0M0JcXHUwNDNBXFx1MDQzMCBcXHUwNDQxXFx1MDQzQVxcdTA0M0VcXHUwNDNGXFx1MDQzOFxcdTA0NDBcXHUwNDNFXFx1MDQzMlxcdTA0MzBcXHUwNDNEXFx1MDQzMFwiLFxuICB5b3VyV2FsbGV0OiBcIlxcdTA0MTJcXHUwNDMwXFx1MDQ0OCBcXHUwNDNBXFx1MDQzRVxcdTA0NDhcXHUwNDM1XFx1MDQzQlxcdTA0NTFcXHUwNDNBXCIsXG4gIHJldHJ5OiBcIlxcdTA0MUZcXHUwNDNFXFx1MDQzMlxcdTA0NDJcXHUwNDNFXFx1MDQ0MFxcdTA0MzhcXHUwNDQyXFx1MDQ0Q1wiLFxuICBnZXQ6IFwiXFx1MDQyMVxcdTA0M0FcXHUwNDMwXFx1MDQ0N1xcdTA0MzBcXHUwNDQyXFx1MDQ0Q1wiLFxuICBtb2JpbGU6IFwiXFx1MDQxQ1xcdTA0M0VcXHUwNDMxXFx1MDQzOFxcdTA0M0JcXHUwNDRDXFx1MDQzRFxcdTA0NEJcXHUwNDM5XCIsXG4gIGJyb3dzZXJFeHRlbnNpb246IFwiXFx1MDQyMFxcdTA0MzBcXHUwNDQxXFx1MDQ0OFxcdTA0MzhcXHUwNDQwXFx1MDQzNVxcdTA0M0RcXHUwNDM4XFx1MDQzNVwiLFxuICBkZXNrdG9wOiBcIlxcdTA0MTRcXHUwNDM1XFx1MDQ0MVxcdTA0M0FcXHUwNDQyXFx1MDQzRVxcdTA0M0ZcIlxufTtcbmNvbnN0IGJ1dHRvbiA9IHtcbiAgY29ubmVjdFdhbGxldDogXCJcXHUwNDFGXFx1MDQzRVxcdTA0MzRcXHUwNDNBXFx1MDQzQlxcdTA0NEVcXHUwNDQ3XFx1MDQzOFxcdTA0NDJcXHUwNDRDIFxcdTA0M0FcXHUwNDNFXFx1MDQ0OFxcdTA0MzVcXHUwNDNCXFx1MDQ1MVxcdTA0M0FcIixcbiAgZHJvcGRvd246IHtcbiAgICBjb3B5OiBcIlxcdTA0MjFcXHUwNDNBXFx1MDQzRVxcdTA0M0ZcXHUwNDM4XFx1MDQ0MFxcdTA0M0VcXHUwNDMyXFx1MDQzMFxcdTA0NDJcXHUwNDRDIFxcdTA0MzBcXHUwNDM0XFx1MDQ0MFxcdTA0MzVcXHUwNDQxXCIsXG4gICAgY29waWVkOiBcIlxcdTA0MTBcXHUwNDM0XFx1MDQ0MFxcdTA0MzVcXHUwNDQxIFxcdTA0NDFcXHUwNDNBXFx1MDQzRVxcdTA0M0ZcXHUwNDM4XFx1MDQ0MFxcdTA0M0VcXHUwNDMyXFx1MDQzMFxcdTA0M0QhXCIsXG4gICAgZGlzY29ubmVjdDogXCJcXHUwNDFFXFx1MDQ0MlxcdTA0M0FcXHUwNDNCXFx1MDQ0RVxcdTA0NDdcXHUwNDM4XFx1MDQ0MlxcdTA0NEMgXFx1MDQzQVxcdTA0M0VcXHUwNDQ4XFx1MDQzNVxcdTA0M0JcXHUwNDUxXFx1MDQzQVwiXG4gIH1cbn07XG5jb25zdCBub3RpZmljYXRpb25zID0ge1xuICBjb25maXJtOiB7XG4gICAgaGVhZGVyOiBcIlxcdTA0MUVcXHUwNDQyXFx1MDQzQVxcdTA0NDBcXHUwNDNFXFx1MDQzOVxcdTA0NDJcXHUwNDM1IHt7IG5hbWUgfX0sIFxcdTA0NDdcXHUwNDQyXFx1MDQzRVxcdTA0MzFcXHUwNDRCXFx4QTBcXHUwNDNGXFx1MDQzRVxcdTA0MzRcXHUwNDQyXFx1MDQzMlxcdTA0MzVcXHUwNDQwXFx1MDQzNFxcdTA0MzhcXHUwNDQyXFx1MDQ0QyBcXHUwNDQyXFx1MDQ0MFxcdTA0MzBcXHUwNDNEXFx1MDQzN1xcdTA0MzBcXHUwNDNBXFx1MDQ0NlxcdTA0MzhcXHUwNDRFLlwiXG4gIH0sXG4gIHRyYW5zYWN0aW9uU2VudDoge1xuICAgIGhlYWRlcjogXCJcXHUwNDIyXFx1MDQ0MFxcdTA0MzBcXHUwNDNEXFx1MDQzN1xcdTA0MzBcXHUwNDNBXFx1MDQ0NlxcdTA0MzhcXHUwNDRGIFxcdTA0M0VcXHUwNDQyXFx1MDQzRlxcdTA0NDBcXHUwNDMwXFx1MDQzMlxcdTA0M0JcXHUwNDM1XFx1MDQzRFxcdTA0MzBcIixcbiAgICB0ZXh0OiBcIlxcdTA0MTJcXHUwNDMwXFx1MDQ0OFxcdTA0MzAgXFx1MDQ0MlxcdTA0NDBcXHUwNDMwXFx1MDQzRFxcdTA0MzdcXHUwNDMwXFx1MDQzQVxcdTA0NDZcXHUwNDM4XFx1MDQ0RlxceEEwXFx1MDQzMVxcdTA0NDNcXHUwNDM0XFx1MDQzNVxcdTA0NDIgXFx1MDQzRVxcdTA0MzFcXHUwNDQwXFx1MDQzMFxcdTA0MzFcXHUwNDNFXFx1MDQ0MlxcdTA0MzBcXHUwNDNEXFx1MDQzMCBcXHUwNDQ3XFx1MDQzNVxcdTA0NDBcXHUwNDM1XFx1MDQzN1xceEEwXFx1MDQzRFxcdTA0MzVcXHUwNDQxXFx1MDQzQVxcdTA0M0VcXHUwNDNCXFx1MDQ0Q1xcdTA0M0FcXHUwNDNFIFxcdTA0NDFcXHUwNDM1XFx1MDQzQVxcdTA0NDNcXHUwNDNEXFx1MDQzNC5cIlxuICB9LFxuICB0cmFuc2FjdGlvbkNhbmNlbGVkOiB7XG4gICAgaGVhZGVyOiBcIlxcdTA0MjJcXHUwNDQwXFx1MDQzMFxcdTA0M0RcXHUwNDM3XFx1MDQzMFxcdTA0M0FcXHUwNDQ2XFx1MDQzOFxcdTA0NEYgXFx1MDQzRVxcdTA0NDJcXHUwNDNDXFx1MDQzNVxcdTA0M0RcXHUwNDM1XFx1MDQzRFxcdTA0MzBcIixcbiAgICB0ZXh0OiBcIlxcdTA0MjFcXHUwNDNFXFx1MDQ0MVxcdTA0NDJcXHUwNDNFXFx1MDQ0RlxcdTA0M0RcXHUwNDM4XFx1MDQzNSBcXHUwNDMyXFx1MDQzMFxcdTA0NDhcXHUwNDM1XFx1MDQzM1xcdTA0M0UgXFx1MDQ0MVxcdTA0NDdcXHUwNDUxXFx1MDQ0MlxcdTA0MzAgXFx1MDQzRFxcdTA0MzVcXHhBMFxcdTA0MzhcXHUwNDM3XFx1MDQzQ1xcdTA0MzVcXHUwNDNEXFx1MDQzOFxcdTA0NDJcXHUwNDQxXFx1MDQ0Ri5cIlxuICB9XG59O1xuY29uc3Qgd2FsbGV0SXRlbSA9IHtcbiAgd2FsbGV0T246IFwiV2FsbGV0IFxcdTA0MzJcIixcbiAgcmVjZW50OiBcIlxcdTA0MURcXHUwNDM1XFx1MDQzNFxcdTA0MzBcXHUwNDMyXFx1MDQzRFxcdTA0MzhcXHUwNDM5XCIsXG4gIGluc3RhbGxlZDogXCJcXHUwNDIzXFx1MDQ0MVxcdTA0NDJcXHUwNDMwXFx1MDQzRFxcdTA0M0VcXHUwNDMyXFx1MDQzQlxcdTA0MzVcXHUwNDNEXCIsXG4gIHBvcHVsYXI6IFwiXFx1MDQxRlxcdTA0M0VcXHUwNDNGXFx1MDQ0M1xcdTA0M0JcXHUwNDRGXFx1MDQ0MFxcdTA0MzVcXHUwNDNEXCJcbn07XG5jb25zdCB3YWxsZXRNb2RhbCA9IHtcbiAgbG9hZGluZzogXCJcXHUwNDFBXFx1MDQzRVxcdTA0NDhcXHUwNDM1XFx1MDQzQlxcdTA0NENcXHUwNDNBXFx1MDQzOCBcXHUwNDM3XFx1MDQzMFxcdTA0MzNcXHUwNDQwXFx1MDQ0M1xcdTA0MzZcXHUwNDMwXFx1MDQ0RVxcdTA0NDJcXHUwNDQxXFx1MDQ0RlwiLFxuICB3YWxsZXRzOiBcIlxcdTA0MUFcXHUwNDNFXFx1MDQ0OFxcdTA0MzVcXHUwNDNCXFx1MDQ0Q1xcdTA0M0FcXHUwNDM4XCIsXG4gIG1vYmlsZVVuaXZlcnNhbE1vZGFsOiB7XG4gICAgY29ubmVjdFlvdXJXYWxsZXQ6IFwiXFx1MDQxRlxcdTA0M0VcXHUwNDM0XFx1MDQzQVxcdTA0M0JcXHUwNDRFXFx1MDQ0N1xcdTA0MzhcXHUwNDQyXFx1MDQzNSBcXHUwNDNBXFx1MDQzRVxcdTA0NDhcXHUwNDM1XFx1MDQzQlxcdTA0NTFcXHUwNDNBXCIsXG4gICAgb3BlbldhbGxldE9uVGVsZWdyYW1PclNlbGVjdDogXCJcXHUwNDFGXFx1MDQzRVxcdTA0MzRcXHUwNDNBXFx1MDQzQlxcdTA0NEVcXHUwNDQ3XFx1MDQzOFxcdTA0NDJcXHUwNDM1IFdhbGxldCBcXHUwNDMyXFx4QTBUZWxlZ3JhbSBcXHUwNDM4XFx1MDQzQlxcdTA0MzhcXHhBMFxcdTA0MzJcXHUwNDRCXFx1MDQzMVxcdTA0MzVcXHUwNDQwXFx1MDQzNVxcdTA0NDJcXHUwNDM1IFxcdTA0M0FcXHUwNDNFXFx1MDQ0OFxcdTA0MzVcXHUwNDNCXFx1MDQ1MVxcdTA0M0EgXFx1MDQzNFxcdTA0M0JcXHUwNDRGXFx4QTBcXHUwNDNGXFx1MDQzRVxcdTA0MzRcXHUwNDNBXFx1MDQzQlxcdTA0NEVcXHUwNDQ3XFx1MDQzNVxcdTA0M0RcXHUwNDM4XFx1MDQ0RlwiLFxuICAgIG9wZW5XYWxsZXRPblRlbGVncmFtOiBcIlxcdTA0MUVcXHUwNDQyXFx1MDQzQVxcdTA0NDBcXHUwNDRCXFx1MDQ0MlxcdTA0NEMgV2FsbGV0IFxcdTA0MzIgVGVsZWdyYW1cIixcbiAgICBvcGVuTGluazogXCJcXHUwNDFFXFx1MDQ0MlxcdTA0M0FcXHUwNDQwXFx1MDQ0QlxcdTA0NDJcXHUwNDRDIFxcdTA0NDFcXHUwNDQxXFx1MDQ0QlxcdTA0M0JcXHUwNDNBXFx1MDQ0M1wiLFxuICAgIHNjYW46IFwiXFx1MDQxRVxcdTA0NDJcXHUwNDQxXFx1MDQzQVxcdTA0MzBcXHUwNDNEXFx1MDQzOFxcdTA0NDBcXHUwNDQzXFx1MDQzOVxcdTA0NDJcXHUwNDM1IFxcdTA0M0FcXHUwNDMwXFx1MDQzQ1xcdTA0MzVcXHUwNDQwXFx1MDQzRVxcdTA0MzkgXFx1MDQzMlxcdTA0MzBcXHUwNDQ4XFx1MDQzNVxcdTA0MzNcXHUwNDNFXFx4QTBcXHUwNDQyXFx1MDQzNVxcdTA0M0JcXHUwNDM1XFx1MDQ0NFxcdTA0M0VcXHUwNDNEXFx1MDQzMFwiXG4gIH0sXG4gIGRlc2t0b3BVbml2ZXJzYWxNb2RhbDoge1xuICAgIGNvbm5lY3RZb3VyV2FsbGV0OiBcIlxcdTA0MUZcXHUwNDNFXFx1MDQzNFxcdTA0M0FcXHUwNDNCXFx1MDQ0RVxcdTA0NDdcXHUwNDM4XFx1MDQ0MlxcdTA0MzUgXFx1MDQzQVxcdTA0M0VcXHUwNDQ4XFx1MDQzNVxcdTA0M0JcXHUwNDUxXFx1MDQzQVwiLFxuICAgIHNjYW46IFwiXFx1MDQxRVxcdTA0NDJcXHUwNDQxXFx1MDQzQVxcdTA0MzBcXHUwNDNEXFx1MDQzOFxcdTA0NDBcXHUwNDQzXFx1MDQzOVxcdTA0NDJcXHUwNDM1IFFSLVxcdTA0M0FcXHUwNDNFXFx1MDQzNCBcXHUwNDNBXFx1MDQzMFxcdTA0M0NcXHUwNDM1XFx1MDQ0MFxcdTA0M0VcXHUwNDM5IFxcdTA0MzJcXHUwNDMwXFx1MDQ0OFxcdTA0MzVcXHUwNDMzXFx1MDQzRVxceEEwXFx1MDQ0MlxcdTA0MzVcXHUwNDNCXFx1MDQzNVxcdTA0NDRcXHUwNDNFXFx1MDQzRFxcdTA0MzBcIixcbiAgICBhdmFpbGFibGVXYWxsZXRzOiBcIlxcdTA0MTRcXHUwNDNFXFx1MDQ0MVxcdTA0NDJcXHUwNDQzXFx1MDQzRlxcdTA0M0RcXHUwNDRCXFx1MDQzNSBcXHUwNDNBXFx1MDQzRVxcdTA0NDhcXHUwNDM1XFx1MDQzQlxcdTA0NENcXHUwNDNBXFx1MDQzOFwiXG4gIH0sXG4gIG1vYmlsZUNvbm5lY3Rpb25Nb2RhbDoge1xuICAgIHNob3dRUjogXCJcXHUwNDFGXFx1MDQzRVxcdTA0M0FcXHUwNDMwXFx1MDQzN1xcdTA0MzBcXHUwNDQyXFx1MDQ0QyBRUi1cXHUwNDNBXFx1MDQzRVxcdTA0MzRcIixcbiAgICBzY2FuUVI6IFwiXFx1MDQxRVxcdTA0NDJcXHUwNDQxXFx1MDQzQVxcdTA0MzBcXHUwNDNEXFx1MDQzOFxcdTA0NDBcXHUwNDQzXFx1MDQzOVxcdTA0NDJcXHUwNDM1IFFSLVxcdTA0M0FcXHUwNDNFXFx1MDQzNCBcXHUwNDNEXFx1MDQzOFxcdTA0MzZcXHUwNDM1IFxcdTA0M0FcXHUwNDMwXFx1MDQzQ1xcdTA0MzVcXHUwNDQwXFx1MDQzRVxcdTA0MzkgXFx1MDQzMlxceEEwXFx1MDQzRlxcdTA0NDBcXHUwNDM4XFx1MDQzQlxcdTA0M0VcXHUwNDM2XFx1MDQzNVxcdTA0M0RcXHUwNDM4XFx1MDQzOCB7eyBuYW1lIH19LCBcXHUwNDM4XFx1MDQzQlxcdTA0MzhcXHhBMFxcdTA0M0FcXHUwNDMwXFx1MDQzQ1xcdTA0MzVcXHUwNDQwXFx1MDQzRVxcdTA0MzkgXFx1MDQ0MlxcdTA0MzVcXHUwNDNCXFx1MDQzNVxcdTA0NDRcXHUwNDNFXFx1MDQzRFxcdTA0MzBcIixcbiAgICBjb250aW51ZUluOiBcIlxcdTA0MUZcXHUwNDQwXFx1MDQzRVxcdTA0MzRcXHUwNDNFXFx1MDQzQlxcdTA0MzZcXHUwNDM4XFx1MDQ0MlxcdTA0MzUgXFx1MDQzMiB7eyBuYW1lIH19XFx1MjAyNlwiLFxuICAgIGNvbm5lY3Rpb25EZWNsaW5lZDogXCJcXHUwNDFGXFx1MDQzRVxcdTA0MzRcXHUwNDNBXFx1MDQzQlxcdTA0NEVcXHUwNDQ3XFx1MDQzNVxcdTA0M0RcXHUwNDM4XFx1MDQzNSBcXHUwNDNFXFx1MDQ0MlxcdTA0M0FcXHUwNDNCXFx1MDQzRVxcdTA0M0RcXHUwNDM1XFx1MDQzRFxcdTA0M0VcIlxuICB9LFxuICBkZXNrdG9wQ29ubmVjdGlvbk1vZGFsOiB7XG4gICAgc2NhblFSOiBcIlxcdTA0MUVcXHUwNDQyXFx1MDQ0MVxcdTA0M0FcXHUwNDMwXFx1MDQzRFxcdTA0MzhcXHUwNDQwXFx1MDQ0M1xcdTA0MzlcXHUwNDQyXFx1MDQzNSBRUi1cXHUwNDNBXFx1MDQzRVxcdTA0MzQgXFx1MDQzRFxcdTA0MzhcXHUwNDM2XFx1MDQzNSBcXHUwNDNBXFx1MDQzMFxcdTA0M0NcXHUwNDM1XFx1MDQ0MFxcdTA0M0VcXHUwNDM5IFxcdTA0MzJcXHhBMFxcdTA0M0ZcXHUwNDQwXFx1MDQzOFxcdTA0M0JcXHUwNDNFXFx1MDQzNlxcdTA0MzVcXHUwNDNEXFx1MDQzOFxcdTA0Mzgge3sgbmFtZSB9fSwgXFx1MDQzOFxcdTA0M0JcXHUwNDM4XFx4QTBcXHUwNDNBXFx1MDQzMFxcdTA0M0NcXHUwNDM1XFx1MDQ0MFxcdTA0M0VcXHUwNDM5IFxcdTA0NDJcXHUwNDM1XFx1MDQzQlxcdTA0MzVcXHUwNDQ0XFx1MDQzRVxcdTA0M0RcXHUwNDMwXCIsXG4gICAgY29udGludWVJbkV4dGVuc2lvbjogXCJcXHUwNDFFXFx1MDQ0MlxcdTA0M0FcXHUwNDQwXFx1MDQzRVxcdTA0MzlcXHUwNDQyXFx1MDQzNSBcXHUwNDMxXFx1MDQ0MFxcdTA0MzBcXHUwNDQzXFx1MDQzN1xcdTA0MzVcXHUwNDQwXFx1MDQzRFxcdTA0M0VcXHUwNDM1IFxcdTA0NDBcXHUwNDMwXFx1MDQ0MVxcdTA0NDhcXHUwNDM4XFx1MDQ0MFxcdTA0MzVcXHUwNDNEXFx1MDQzOFxcdTA0MzUge3sgbmFtZSB9fVwiLFxuICAgIGRvbnRIYXZlRXh0ZW5zaW9uOiBcIlxcdTA0MUZcXHUwNDNFXFx1MDQ0NVxcdTA0M0VcXHUwNDM2XFx1MDQzNSwgXFx1MDQ0MyBcXHUwNDMyXFx1MDQzMFxcdTA0NDEgXFx1MDQzRFxcdTA0MzVcXHhBMFxcdTA0NDNcXHUwNDQxXFx1MDQ0MlxcdTA0MzBcXHUwNDNEXFx1MDQzRVxcdTA0MzJcXHUwNDNCXFx1MDQzNVxcdTA0M0RcXHUwNDNFIFxcdTA0MzFcXHUwNDQwXFx1MDQzMFxcdTA0NDNcXHUwNDM3XFx1MDQzNVxcdTA0NDBcXHUwNDNEXFx1MDQzRVxcdTA0MzVcXHhBMFxcdTA0NDBcXHUwNDMwXFx1MDQ0MVxcdTA0NDhcXHUwNDM4XFx1MDQ0MFxcdTA0MzVcXHUwNDNEXFx1MDQzOFxcdTA0MzVcXHhBMHt7IG5hbWUgfX1cIixcbiAgICBnZXRXYWxsZXQ6IFwiXFx1MDQyMVxcdTA0M0FcXHUwNDMwXFx1MDQ0N1xcdTA0MzBcXHUwNDQyXFx1MDQ0QyB7eyBuYW1lIH19XCIsXG4gICAgY29udGludWVPbkRlc2t0b3A6IFwiXFx1MDQxRVxcdTA0NDJcXHUwNDNBXFx1MDQ0MFxcdTA0M0VcXHUwNDM5XFx1MDQ0MlxcdTA0MzUge3sgbmFtZSB9fSBcXHUwNDNEXFx1MDQzMFxceEEwXFx1MDQzQVxcdTA0M0VcXHUwNDNDXFx1MDQzRlxcdTA0NENcXHUwNDRFXFx1MDQ0MlxcdTA0MzVcXHUwNDQwXFx1MDQzNVxcdTIwMjZcIixcbiAgICBvcGVuV2FsbGV0T25UZWxlZ3JhbTogXCJcXHUwNDFFXFx1MDQ0MlxcdTA0M0FcXHUwNDQwXFx1MDQ0QlxcdTA0NDJcXHUwNDRDIFdhbGxldCBcXHUwNDMyXFx4QTBUZWxlZ3JhbVwiLFxuICAgIGNvbm5lY3Rpb25EZWNsaW5lZDogXCJcXHUwNDFGXFx1MDQzRVxcdTA0MzRcXHUwNDNBXFx1MDQzQlxcdTA0NEVcXHUwNDQ3XFx1MDQzNVxcdTA0M0RcXHUwNDM4XFx1MDQzNSBcXHUwNDNFXFx1MDQ0MlxcdTA0M0FcXHUwNDNCXFx1MDQzRVxcdTA0M0RcXHUwNDM1XFx1MDQzRFxcdTA0M0VcIlxuICB9LFxuICBpbmZvTW9kYWw6IHtcbiAgICB3aGF0SXNBV2FsbGV0OiBcIlxcdTA0MjdcXHUwNDQyXFx1MDQzRSBcXHUwNDQyXFx1MDQzMFxcdTA0M0FcXHUwNDNFXFx1MDQzNSBcXHUwNDNBXFx1MDQzRVxcdTA0NDhcXHUwNDM1XFx1MDQzQlxcdTA0NTFcXHUwNDNBP1wiLFxuICAgIHNlY3VyZURpZ2l0YWxBc3NldHM6IFwiXFx1MDQxRFxcdTA0MzBcXHUwNDM0XFx1MDQzNVxcdTA0MzZcXHUwNDNEXFx1MDQzRVxcdTA0MzUgXFx1MDQ0NVxcdTA0NDBcXHUwNDMwXFx1MDQzRFxcdTA0MzhcXHUwNDNCXFx1MDQzOFxcdTA0NDlcXHUwNDM1IFxcdTA0NDZcXHUwNDM4XFx1MDQ0NFxcdTA0NDBcXHUwNDNFXFx1MDQzMlxcdTA0NEJcXHUwNDQ1IFxcdTA0MzBcXHUwNDNBXFx1MDQ0MlxcdTA0MzhcXHUwNDMyXFx1MDQzRVxcdTA0MzJcIixcbiAgICB3YWxsZXRQcm90ZWN0czogXCJcXHUwNDFBXFx1MDQzRVxcdTA0NDhcXHUwNDM1XFx1MDQzQlxcdTA0NTFcXHUwNDNBIFxcdTA0MzdcXHUwNDMwXFx1MDQ0OVxcdTA0MzhcXHUwNDQ5XFx1MDQzMFxcdTA0MzVcXHUwNDQyIFxcdTA0MzJcXHUwNDMwXFx1MDQ0OFxcdTA0MzggXFx1MDQ0NlxcdTA0MzhcXHUwNDQ0XFx1MDQ0MFxcdTA0M0VcXHUwNDMyXFx1MDQ0QlxcdTA0MzUgXFx1MDQzMFxcdTA0M0FcXHUwNDQyXFx1MDQzOFxcdTA0MzJcXHUwNDRCLCBcXHUwNDMyXFx1MDQzQVxcdTA0M0JcXHUwNDRFXFx1MDQ0N1xcdTA0MzBcXHUwNDRGIFRPTiwgXFx1MDQ0MlxcdTA0M0VcXHUwNDNBXFx1MDQzNVxcdTA0M0RcXHUwNDRCIFxcdTA0MzhcXHhBMFxcdTA0M0ZcXHUwNDQwXFx1MDQzNVxcdTA0MzRcXHUwNDNDXFx1MDQzNVxcdTA0NDJcXHUwNDRCIFxcdTA0M0FcXHUwNDNFXFx1MDQzQlxcdTA0M0JcXHUwNDM1XFx1MDQzQVxcdTA0NDZcXHUwNDM4XFx1MDQzRVxcdTA0M0RcXHUwNDM4XFx1MDQ0MFxcdTA0M0VcXHUwNDMyXFx1MDQzMFxcdTA0M0RcXHUwNDM4XFx1MDQ0RiwgXFx1MDQzOFxceEEwXFx1MDQ0M1xcdTA0M0ZcXHUwNDQwXFx1MDQzMFxcdTA0MzJcXHUwNDNCXFx1MDQ0RlxcdTA0MzVcXHUwNDQyIFxcdTA0MzhcXHUwNDNDXFx1MDQzOC5cIixcbiAgICBjb250cm9sSWRlbnRpdHk6IFwiXFx1MDQxQVxcdTA0M0VcXHUwNDNEXFx1MDQ0MlxcdTA0NDBcXHUwNDNFXFx1MDQzQlxcdTA0NEMgXFx1MDQ0MVxcdTA0MzJcXHUwNDNFXFx1MDQzNVxcdTA0MzkgXFx1MDQzQlxcdTA0MzhcXHUwNDQ3XFx1MDQzRFxcdTA0M0VcXHUwNDQxXFx1MDQ0MlxcdTA0MzggV2ViM1wiLFxuICAgIG1hbmFnZUlkZW50aXR5OiBcIlxcdTA0MjNcXHUwNDNGXFx1MDQ0MFxcdTA0MzBcXHUwNDMyXFx1MDQzQlxcdTA0NEZcXHUwNDM5XFx1MDQ0MlxcdTA0MzUgXFx1MDQ0MVxcdTA0MzJcXHUwNDNFXFx1MDQzNVxcdTA0MzkgXFx1MDQ0NlxcdTA0MzhcXHUwNDQ0XFx1MDQ0MFxcdTA0M0VcXHUwNDMyXFx1MDQzRVxcdTA0MzkgXFx1MDQzOFxcdTA0MzRcXHUwNDM1XFx1MDQzRFxcdTA0NDJcXHUwNDM4XFx1MDQ0NFxcdTA0MzhcXHUwNDNBXFx1MDQzMFxcdTA0NDZcXHUwNDM4XFx1MDQzNVxcdTA0MzkgXFx1MDQzOFxceEEwXFx1MDQ0MVxceEEwXFx1MDQzQlxcdTA0MzVcXHUwNDMzXFx1MDQzQVxcdTA0M0VcXHUwNDQxXFx1MDQ0MlxcdTA0NENcXHUwNDRFIFxcdTA0M0ZcXHUwNDNFXFx1MDQzQlxcdTA0NDNcXHUwNDQ3XFx1MDQzMFxcdTA0MzlcXHUwNDQyXFx1MDQzNSBcXHUwNDM0XFx1MDQzRVxcdTA0NDFcXHUwNDQyXFx1MDQ0M1xcdTA0M0YgXFx1MDQzQVxceEEwXFx1MDQzNFxcdTA0MzVcXHUwNDQ2XFx1MDQzNVxcdTA0M0RcXHUwNDQyXFx1MDQ0MFxcdTA0MzBcXHUwNDNCXFx1MDQzOFxcdTA0MzdcXHUwNDNFXFx1MDQzMlxcdTA0MzBcXHUwNDNEXFx1MDQzRFxcdTA0NEJcXHUwNDNDIFxcdTA0M0ZcXHUwNDQwXFx1MDQzOFxcdTA0M0JcXHUwNDNFXFx1MDQzNlxcdTA0MzVcXHUwNDNEXFx1MDQzOFxcdTA0NEZcXHUwNDNDLiBcXHUwNDIxXFx1MDQzRVxcdTA0NDVcXHUwNDQwXFx1MDQzMFxcdTA0M0RcXHUwNDRGXFx1MDQzOVxcdTA0NDJcXHUwNDM1IFxcdTA0M0FcXHUwNDNFXFx1MDQzRFxcdTA0NDJcXHUwNDQwXFx1MDQzRVxcdTA0M0JcXHUwNDRDIFxcdTA0M0RcXHUwNDMwXFx1MDQzNFxceEEwXFx1MDQ0MVxcdTA0MzJcXHUwNDNFXFx1MDQzOFxcdTA0M0NcXHUwNDM4IFxcdTA0MzRcXHUwNDMwXFx1MDQzRFxcdTA0M0RcXHUwNDRCXFx1MDQzQ1xcdTA0MzggXFx1MDQzOFxceEEwXFx1MDQzMVxcdTA0MzVcXHUwNDM3XFx1MDQzRVxcdTA0M0ZcXHUwNDMwXFx1MDQ0MVxcdTA0M0RcXHUwNDNFIFxcdTA0NDNcXHUwNDQ3XFx1MDQzMFxcdTA0NDFcXHUwNDQyXFx1MDQzMlxcdTA0NDNcXHUwNDM5XFx1MDQ0MlxcdTA0MzUgXFx1MDQzMlxceEEwXFx1MDQ0RFxcdTA0M0FcXHUwNDNFXFx1MDQ0MVxcdTA0MzhcXHUwNDQxXFx1MDQ0MlxcdTA0MzVcXHUwNDNDXFx1MDQzNVxceEEwXFx1MDQzMVxcdTA0M0JcXHUwNDNFXFx1MDQzQVxcdTA0NDdcXHUwNDM1XFx1MDQzOVxcdTA0M0RcXHUwNDMwLlwiLFxuICAgIGVmZm9ydGxlc3NDcnlwdG9UcmFuc2FjdGlvbnM6IFwiXFx1MDQxRlxcdTA0NDBcXHUwNDNFXFx1MDQ0MVxcdTA0NDJcXHUwNDRCXFx1MDQzNSBcXHUwNDNBXFx1MDQ0MFxcdTA0MzhcXHUwNDNGXFx1MDQ0MlxcdTA0M0VcXHUwNDQyXFx1MDQ0MFxcdTA0MzBcXHUwNDNEXFx1MDQzN1xcdTA0MzBcXHUwNDNBXFx1MDQ0NlxcdTA0MzhcXHUwNDM4XCIsXG4gICAgZWFzaWx5U2VuZDogXCJcXHUwNDFCXFx1MDQzNVxcdTA0MzNcXHUwNDNBXFx1MDQzRSBcXHUwNDNFXFx1MDQ0MlxcdTA0M0ZcXHUwNDQwXFx1MDQzMFxcdTA0MzJcXHUwNDNCXFx1MDQ0RlxcdTA0MzlcXHUwNDQyXFx1MDQzNSwgXFx1MDQzRlxcdTA0M0VcXHUwNDNCXFx1MDQ0M1xcdTA0NDdcXHUwNDMwXFx1MDQzOVxcdTA0NDJcXHUwNDM1IFxcdTA0MzhcXHhBMFxcdTA0M0VcXHUwNDQyXFx1MDQ0MVxcdTA0M0JcXHUwNDM1XFx1MDQzNlxcdTA0MzhcXHUwNDMyXFx1MDQzMFxcdTA0MzlcXHUwNDQyXFx1MDQzNSBcXHUwNDQxXFx1MDQzMlxcdTA0M0VcXHUwNDM4IFxcdTA0M0FcXHUwNDQwXFx1MDQzOFxcdTA0M0ZcXHUwNDQyXFx1MDQzRVxcdTA0MzJcXHUwNDMwXFx1MDQzQlxcdTA0NEVcXHUwNDQyXFx1MDQ0Qi4gXFx1MDQxRVxcdTA0M0ZcXHUwNDQyXFx1MDQzOFxcdTA0M0NcXHUwNDM4XFx1MDQzN1xcdTA0MzhcXHUwNDQwXFx1MDQ0M1xcdTA0MzlcXHUwNDQyXFx1MDQzNSBcXHUwNDQxXFx1MDQzMlxcdTA0M0VcXHUwNDM4IFxcdTA0M0VcXHUwNDNGXFx1MDQzNVxcdTA0NDBcXHUwNDMwXFx1MDQ0NlxcdTA0MzhcXHUwNDM4IFxcdTA0NDFcXHhBMFxcdTA0M0ZcXHUwNDNFXFx1MDQzQ1xcdTA0M0VcXHUwNDQ5XFx1MDQ0Q1xcdTA0NEUgXFx1MDQzNFxcdTA0MzVcXHUwNDQ2XFx1MDQzNVxcdTA0M0RcXHUwNDQyXFx1MDQ0MFxcdTA0MzBcXHUwNDNCXFx1MDQzOFxcdTA0MzdcXHUwNDNFXFx1MDQzMlxcdTA0MzBcXHUwNDNEXFx1MDQzRFxcdTA0NEJcXHUwNDQ1IFxcdTA0M0ZcXHUwNDQwXFx1MDQzOFxcdTA0M0JcXHUwNDNFXFx1MDQzNlxcdTA0MzVcXHUwNDNEXFx1MDQzOFxcdTA0MzkuXCIsXG4gICAgZ2V0QVdhbGxldDogXCJcXHUwNDIxXFx1MDQzQVxcdTA0MzBcXHUwNDQ3XFx1MDQzMFxcdTA0NDJcXHUwNDRDIFxcdTA0M0FcXHUwNDNFXFx1MDQ0OFxcdTA0MzVcXHUwNDNCXFx1MDQ1MVxcdTA0M0FcIlxuICB9XG59O1xuY29uc3QgYWN0aW9uTW9kYWwgPSB7XG4gIGNvbmZpcm1UcmFuc2FjdGlvbjoge1xuICAgIGhlYWRlcjogXCJcXHUwNDFGXFx1MDQzRVxcdTA0MzRcXHUwNDQyXFx1MDQzMlxcdTA0MzVcXHUwNDQwXFx1MDQzNFxcdTA0MzhcXHUwNDQyXFx1MDQzNSBcXHUwNDM0XFx1MDQzNVxcdTA0MzlcXHUwNDQxXFx1MDQ0MlxcdTA0MzJcXHUwNDM4XFx1MDQzNSBcXHUwNDMyXFx4QTB7eyBuYW1lIH19XCIsXG4gICAgdGV4dDogXCJcXHUwNDJEXFx1MDQ0MlxcdTA0M0UgXFx1MDQzN1xcdTA0MzBcXHUwNDM5XFx1MDQzQ1xcdTA0MzVcXHUwNDQyIFxcdTA0M0ZcXHUwNDMwXFx1MDQ0MFxcdTA0NDMgXFx1MDQ0MVxcdTA0MzVcXHUwNDNBXFx1MDQ0M1xcdTA0M0RcXHUwNDM0LlwiXG4gIH0sXG4gIHRyYW5zYWN0aW9uU2VudDogXCIkbm90aWZpY2F0aW9ucy50cmFuc2FjdGlvblNlbnRcIixcbiAgdHJhbnNhY3Rpb25DYW5jZWxlZDogXCIkbm90aWZpY2F0aW9ucy50cmFuc2FjdGlvbkNhbmNlbGVkXCJcbn07XG5jb25zdCBydSA9IHtcbiAgY29tbW9uLFxuICBidXR0b24sXG4gIG5vdGlmaWNhdGlvbnMsXG4gIHdhbGxldEl0ZW0sXG4gIHdhbGxldE1vZGFsLFxuICBhY3Rpb25Nb2RhbFxufTtcbmNvbnN0IGkxOG5EaWN0aW9uYXJ5ID0ge1xuICBlbjogcGFyc2VEaWN0aW9uYXJ5KGVuKSxcbiAgcnU6IHBhcnNlRGljdGlvbmFyeShydSlcbn07XG5mdW5jdGlvbiBwYXJzZURpY3Rpb25hcnkoZGljdGlvbmFyeSkge1xuICBjb25zdCByZWZTeW1ib2wgPSBcIiRcIjtcbiAgY29uc3QgaXRlcmF0ZSA9IChzdWJEaWN0aW9uYXJ5KSA9PiB7XG4gICAgT2JqZWN0LmVudHJpZXMoc3ViRGljdGlvbmFyeSkuZm9yRWFjaCgoW2tleSwgdmFsdWVdKSA9PiB7XG4gICAgICBpZiAodHlwZW9mIHZhbHVlID09PSBcIm9iamVjdFwiICYmIHZhbHVlKSB7XG4gICAgICAgIHJldHVybiBpdGVyYXRlKHZhbHVlKTtcbiAgICAgIH1cbiAgICAgIGlmICh0eXBlb2YgdmFsdWUgPT09IFwic3RyaW5nXCIpIHtcbiAgICAgICAgaWYgKHZhbHVlWzBdID09PSByZWZTeW1ib2wpIHtcbiAgICAgICAgICBjb25zdCBwYXRoID0gdmFsdWUuc2xpY2UoMSkuc3BsaXQoXCIuXCIpO1xuICAgICAgICAgIGxldCBvYmogPSBkaWN0aW9uYXJ5O1xuICAgICAgICAgIHBhdGguZm9yRWFjaCgoaXRlbSkgPT4ge1xuICAgICAgICAgICAgaWYgKGl0ZW0gaW4gb2JqKSB7XG4gICAgICAgICAgICAgIG9iaiA9IG9ialtpdGVtXTtcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihcbiAgICAgICAgICAgICAgICBgQ2Fubm90IHBhcnNlIHRyYW5zbGF0aW9uczogdGhlcmUgaXMgbm8gcHJvcGVydHkgJHtpdGVtfSBpbiB0cmFuc2xhdGlvbmBcbiAgICAgICAgICAgICAgKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9KTtcbiAgICAgICAgICBzdWJEaWN0aW9uYXJ5W2tleV0gPSBvYmo7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHZhbHVlLnNsaWNlKDAsIDIpID09PSBgXFxcXCR7cmVmU3ltYm9sfWApIHtcbiAgICAgICAgICBzdWJEaWN0aW9uYXJ5W2tleV0gPSB2YWx1ZS5zbGljZSgxKTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH0pO1xuICB9O1xuICBpdGVyYXRlKGRpY3Rpb25hcnkpO1xuICByZXR1cm4gZGljdGlvbmFyeTtcbn1cbmNvbnN0IENvbm5lY3RvckNvbnRleHQgPSBjcmVhdGVDb250ZXh0KCk7XG5jb25zdCAkUkFXID0gU3ltYm9sKFwic3RvcmUtcmF3XCIpLCAkTk9ERSA9IFN5bWJvbChcInN0b3JlLW5vZGVcIiksICROQU1FID0gU3ltYm9sKFwic3RvcmUtbmFtZVwiKTtcbmZ1bmN0aW9uIHdyYXAkMSh2YWx1ZSwgbmFtZSkge1xuICBsZXQgcDIgPSB2YWx1ZVskUFJPWFldO1xuICBpZiAoIXAyKSB7XG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KHZhbHVlLCAkUFJPWFksIHtcbiAgICAgIHZhbHVlOiBwMiA9IG5ldyBQcm94eSh2YWx1ZSwgcHJveHlUcmFwcyQxKVxuICAgIH0pO1xuICAgIGlmICghQXJyYXkuaXNBcnJheSh2YWx1ZSkpIHtcbiAgICAgIGNvbnN0IGtleXMgPSBPYmplY3Qua2V5cyh2YWx1ZSksIGRlc2MgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9ycyh2YWx1ZSk7XG4gICAgICBmb3IgKGxldCBpMiA9IDAsIGwyID0ga2V5cy5sZW5ndGg7IGkyIDwgbDI7IGkyKyspIHtcbiAgICAgICAgY29uc3QgcHJvcCA9IGtleXNbaTJdO1xuICAgICAgICBpZiAoZGVzY1twcm9wXS5nZXQpIHtcbiAgICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkodmFsdWUsIHByb3AsIHtcbiAgICAgICAgICAgIGVudW1lcmFibGU6IGRlc2NbcHJvcF0uZW51bWVyYWJsZSxcbiAgICAgICAgICAgIGdldDogZGVzY1twcm9wXS5nZXQuYmluZChwMilcbiAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cbiAgfVxuICByZXR1cm4gcDI7XG59XG5mdW5jdGlvbiBpc1dyYXBwYWJsZShvYmopIHtcbiAgbGV0IHByb3RvO1xuICByZXR1cm4gb2JqICE9IG51bGwgJiYgdHlwZW9mIG9iaiA9PT0gXCJvYmplY3RcIiAmJiAob2JqWyRQUk9YWV0gfHwgIShwcm90byA9IE9iamVjdC5nZXRQcm90b3R5cGVPZihvYmopKSB8fCBwcm90byA9PT0gT2JqZWN0LnByb3RvdHlwZSB8fCBBcnJheS5pc0FycmF5KG9iaikpO1xufVxuZnVuY3Rpb24gdW53cmFwKGl0ZW0sIHNldCA9IC8qIEBfX1BVUkVfXyAqLyBuZXcgU2V0KCkpIHtcbiAgbGV0IHJlc3VsdCwgdW53cmFwcGVkLCB2LCBwcm9wO1xuICBpZiAocmVzdWx0ID0gaXRlbSAhPSBudWxsICYmIGl0ZW1bJFJBV10pXG4gICAgcmV0dXJuIHJlc3VsdDtcbiAgaWYgKCFpc1dyYXBwYWJsZShpdGVtKSB8fCBzZXQuaGFzKGl0ZW0pKVxuICAgIHJldHVybiBpdGVtO1xuICBpZiAoQXJyYXkuaXNBcnJheShpdGVtKSkge1xuICAgIGlmIChPYmplY3QuaXNGcm96ZW4oaXRlbSkpXG4gICAgICBpdGVtID0gaXRlbS5zbGljZSgwKTtcbiAgICBlbHNlXG4gICAgICBzZXQuYWRkKGl0ZW0pO1xuICAgIGZvciAobGV0IGkyID0gMCwgbDIgPSBpdGVtLmxlbmd0aDsgaTIgPCBsMjsgaTIrKykge1xuICAgICAgdiA9IGl0ZW1baTJdO1xuICAgICAgaWYgKCh1bndyYXBwZWQgPSB1bndyYXAodiwgc2V0KSkgIT09IHYpXG4gICAgICAgIGl0ZW1baTJdID0gdW53cmFwcGVkO1xuICAgIH1cbiAgfSBlbHNlIHtcbiAgICBpZiAoT2JqZWN0LmlzRnJvemVuKGl0ZW0pKVxuICAgICAgaXRlbSA9IE9iamVjdC5hc3NpZ24oe30sIGl0ZW0pO1xuICAgIGVsc2VcbiAgICAgIHNldC5hZGQoaXRlbSk7XG4gICAgY29uc3Qga2V5cyA9IE9iamVjdC5rZXlzKGl0ZW0pLCBkZXNjID0gT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcnMoaXRlbSk7XG4gICAgZm9yIChsZXQgaTIgPSAwLCBsMiA9IGtleXMubGVuZ3RoOyBpMiA8IGwyOyBpMisrKSB7XG4gICAgICBwcm9wID0ga2V5c1tpMl07XG4gICAgICBpZiAoZGVzY1twcm9wXS5nZXQpXG4gICAgICAgIGNvbnRpbnVlO1xuICAgICAgdiA9IGl0ZW1bcHJvcF07XG4gICAgICBpZiAoKHVud3JhcHBlZCA9IHVud3JhcCh2LCBzZXQpKSAhPT0gdilcbiAgICAgICAgaXRlbVtwcm9wXSA9IHVud3JhcHBlZDtcbiAgICB9XG4gIH1cbiAgcmV0dXJuIGl0ZW07XG59XG5mdW5jdGlvbiBnZXREYXRhTm9kZXModGFyZ2V0KSB7XG4gIGxldCBub2RlcyA9IHRhcmdldFskTk9ERV07XG4gIGlmICghbm9kZXMpXG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRhcmdldCwgJE5PREUsIHtcbiAgICAgIHZhbHVlOiBub2RlcyA9IHt9XG4gICAgfSk7XG4gIHJldHVybiBub2Rlcztcbn1cbmZ1bmN0aW9uIGdldERhdGFOb2RlKG5vZGVzLCBwcm9wZXJ0eSwgdmFsdWUpIHtcbiAgcmV0dXJuIG5vZGVzW3Byb3BlcnR5XSB8fCAobm9kZXNbcHJvcGVydHldID0gY3JlYXRlRGF0YU5vZGUodmFsdWUpKTtcbn1cbmZ1bmN0aW9uIHByb3h5RGVzY3JpcHRvciQxKHRhcmdldCwgcHJvcGVydHkpIHtcbiAgY29uc3QgZGVzYyA9IFJlZmxlY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKHRhcmdldCwgcHJvcGVydHkpO1xuICBpZiAoIWRlc2MgfHwgZGVzYy5nZXQgfHwgIWRlc2MuY29uZmlndXJhYmxlIHx8IHByb3BlcnR5ID09PSAkUFJPWFkgfHwgcHJvcGVydHkgPT09ICROT0RFIHx8IHByb3BlcnR5ID09PSAkTkFNRSlcbiAgICByZXR1cm4gZGVzYztcbiAgZGVsZXRlIGRlc2MudmFsdWU7XG4gIGRlbGV0ZSBkZXNjLndyaXRhYmxlO1xuICBkZXNjLmdldCA9ICgpID0+IHRhcmdldFskUFJPWFldW3Byb3BlcnR5XTtcbiAgcmV0dXJuIGRlc2M7XG59XG5mdW5jdGlvbiB0cmFja1NlbGYodGFyZ2V0KSB7XG4gIGlmIChnZXRMaXN0ZW5lcigpKSB7XG4gICAgY29uc3Qgbm9kZXMgPSBnZXREYXRhTm9kZXModGFyZ2V0KTtcbiAgICAobm9kZXMuXyB8fCAobm9kZXMuXyA9IGNyZWF0ZURhdGFOb2RlKCkpKSgpO1xuICB9XG59XG5mdW5jdGlvbiBvd25LZXlzKHRhcmdldCkge1xuICB0cmFja1NlbGYodGFyZ2V0KTtcbiAgcmV0dXJuIFJlZmxlY3Qub3duS2V5cyh0YXJnZXQpO1xufVxuZnVuY3Rpb24gY3JlYXRlRGF0YU5vZGUodmFsdWUpIHtcbiAgY29uc3QgW3MyLCBzZXRdID0gY3JlYXRlU2lnbmFsKHZhbHVlLCB7XG4gICAgZXF1YWxzOiBmYWxzZSxcbiAgICBpbnRlcm5hbDogdHJ1ZVxuICB9KTtcbiAgczIuJCA9IHNldDtcbiAgcmV0dXJuIHMyO1xufVxuY29uc3QgcHJveHlUcmFwcyQxID0ge1xuICBnZXQodGFyZ2V0LCBwcm9wZXJ0eSwgcmVjZWl2ZXIpIHtcbiAgICBpZiAocHJvcGVydHkgPT09ICRSQVcpXG4gICAgICByZXR1cm4gdGFyZ2V0O1xuICAgIGlmIChwcm9wZXJ0eSA9PT0gJFBST1hZKVxuICAgICAgcmV0dXJuIHJlY2VpdmVyO1xuICAgIGlmIChwcm9wZXJ0eSA9PT0gJFRSQUNLKSB7XG4gICAgICB0cmFja1NlbGYodGFyZ2V0KTtcbiAgICAgIHJldHVybiByZWNlaXZlcjtcbiAgICB9XG4gICAgY29uc3Qgbm9kZXMgPSBnZXREYXRhTm9kZXModGFyZ2V0KTtcbiAgICBjb25zdCB0cmFja2VkID0gbm9kZXMuaGFzT3duUHJvcGVydHkocHJvcGVydHkpO1xuICAgIGxldCB2YWx1ZSA9IHRyYWNrZWQgPyBub2Rlc1twcm9wZXJ0eV0oKSA6IHRhcmdldFtwcm9wZXJ0eV07XG4gICAgaWYgKHByb3BlcnR5ID09PSAkTk9ERSB8fCBwcm9wZXJ0eSA9PT0gXCJfX3Byb3RvX19cIilcbiAgICAgIHJldHVybiB2YWx1ZTtcbiAgICBpZiAoIXRyYWNrZWQpIHtcbiAgICAgIGNvbnN0IGRlc2MgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKHRhcmdldCwgcHJvcGVydHkpO1xuICAgICAgaWYgKGdldExpc3RlbmVyKCkgJiYgKHR5cGVvZiB2YWx1ZSAhPT0gXCJmdW5jdGlvblwiIHx8IHRhcmdldC5oYXNPd25Qcm9wZXJ0eShwcm9wZXJ0eSkpICYmICEoZGVzYyAmJiBkZXNjLmdldCkpXG4gICAgICAgIHZhbHVlID0gZ2V0RGF0YU5vZGUobm9kZXMsIHByb3BlcnR5LCB2YWx1ZSkoKTtcbiAgICB9XG4gICAgcmV0dXJuIGlzV3JhcHBhYmxlKHZhbHVlKSA/IHdyYXAkMSh2YWx1ZSkgOiB2YWx1ZTtcbiAgfSxcbiAgaGFzKHRhcmdldCwgcHJvcGVydHkpIHtcbiAgICBpZiAocHJvcGVydHkgPT09ICRSQVcgfHwgcHJvcGVydHkgPT09ICRQUk9YWSB8fCBwcm9wZXJ0eSA9PT0gJFRSQUNLIHx8IHByb3BlcnR5ID09PSAkTk9ERSB8fCBwcm9wZXJ0eSA9PT0gXCJfX3Byb3RvX19cIilcbiAgICAgIHJldHVybiB0cnVlO1xuICAgIHRoaXMuZ2V0KHRhcmdldCwgcHJvcGVydHksIHRhcmdldCk7XG4gICAgcmV0dXJuIHByb3BlcnR5IGluIHRhcmdldDtcbiAgfSxcbiAgc2V0KCkge1xuICAgIHJldHVybiB0cnVlO1xuICB9LFxuICBkZWxldGVQcm9wZXJ0eSgpIHtcbiAgICByZXR1cm4gdHJ1ZTtcbiAgfSxcbiAgb3duS2V5cyxcbiAgZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yOiBwcm94eURlc2NyaXB0b3IkMVxufTtcbmZ1bmN0aW9uIHNldFByb3BlcnR5KHN0YXRlLCBwcm9wZXJ0eSwgdmFsdWUsIGRlbGV0aW5nID0gZmFsc2UpIHtcbiAgaWYgKCFkZWxldGluZyAmJiBzdGF0ZVtwcm9wZXJ0eV0gPT09IHZhbHVlKVxuICAgIHJldHVybjtcbiAgY29uc3QgcHJldiA9IHN0YXRlW3Byb3BlcnR5XSwgbGVuID0gc3RhdGUubGVuZ3RoO1xuICBpZiAodmFsdWUgPT09IHZvaWQgMClcbiAgICBkZWxldGUgc3RhdGVbcHJvcGVydHldO1xuICBlbHNlXG4gICAgc3RhdGVbcHJvcGVydHldID0gdmFsdWU7XG4gIGxldCBub2RlcyA9IGdldERhdGFOb2RlcyhzdGF0ZSksIG5vZGU7XG4gIGlmIChub2RlID0gZ2V0RGF0YU5vZGUobm9kZXMsIHByb3BlcnR5LCBwcmV2KSlcbiAgICBub2RlLiQoKCkgPT4gdmFsdWUpO1xuICBpZiAoQXJyYXkuaXNBcnJheShzdGF0ZSkgJiYgc3RhdGUubGVuZ3RoICE9PSBsZW4pXG4gICAgKG5vZGUgPSBnZXREYXRhTm9kZShub2RlcywgXCJsZW5ndGhcIiwgbGVuKSkgJiYgbm9kZS4kKHN0YXRlLmxlbmd0aCk7XG4gIChub2RlID0gbm9kZXMuXykgJiYgbm9kZS4kKCk7XG59XG5mdW5jdGlvbiBtZXJnZVN0b3JlTm9kZShzdGF0ZSwgdmFsdWUpIHtcbiAgY29uc3Qga2V5cyA9IE9iamVjdC5rZXlzKHZhbHVlKTtcbiAgZm9yIChsZXQgaTIgPSAwOyBpMiA8IGtleXMubGVuZ3RoOyBpMiArPSAxKSB7XG4gICAgY29uc3Qga2V5ID0ga2V5c1tpMl07XG4gICAgc2V0UHJvcGVydHkoc3RhdGUsIGtleSwgdmFsdWVba2V5XSk7XG4gIH1cbn1cbmZ1bmN0aW9uIHVwZGF0ZUFycmF5KGN1cnJlbnQsIG5leHQpIHtcbiAgaWYgKHR5cGVvZiBuZXh0ID09PSBcImZ1bmN0aW9uXCIpXG4gICAgbmV4dCA9IG5leHQoY3VycmVudCk7XG4gIG5leHQgPSB1bndyYXAobmV4dCk7XG4gIGlmIChBcnJheS5pc0FycmF5KG5leHQpKSB7XG4gICAgaWYgKGN1cnJlbnQgPT09IG5leHQpXG4gICAgICByZXR1cm47XG4gICAgbGV0IGkyID0gMCwgbGVuID0gbmV4dC5sZW5ndGg7XG4gICAgZm9yICg7IGkyIDwgbGVuOyBpMisrKSB7XG4gICAgICBjb25zdCB2YWx1ZSA9IG5leHRbaTJdO1xuICAgICAgaWYgKGN1cnJlbnRbaTJdICE9PSB2YWx1ZSlcbiAgICAgICAgc2V0UHJvcGVydHkoY3VycmVudCwgaTIsIHZhbHVlKTtcbiAgICB9XG4gICAgc2V0UHJvcGVydHkoY3VycmVudCwgXCJsZW5ndGhcIiwgbGVuKTtcbiAgfSBlbHNlXG4gICAgbWVyZ2VTdG9yZU5vZGUoY3VycmVudCwgbmV4dCk7XG59XG5mdW5jdGlvbiB1cGRhdGVQYXRoKGN1cnJlbnQsIHBhdGgsIHRyYXZlcnNlZCA9IFtdKSB7XG4gIGxldCBwYXJ0LCBwcmV2ID0gY3VycmVudDtcbiAgaWYgKHBhdGgubGVuZ3RoID4gMSkge1xuICAgIHBhcnQgPSBwYXRoLnNoaWZ0KCk7XG4gICAgY29uc3QgcGFydFR5cGUgPSB0eXBlb2YgcGFydCwgaXNBcnJheSA9IEFycmF5LmlzQXJyYXkoY3VycmVudCk7XG4gICAgaWYgKEFycmF5LmlzQXJyYXkocGFydCkpIHtcbiAgICAgIGZvciAobGV0IGkyID0gMDsgaTIgPCBwYXJ0Lmxlbmd0aDsgaTIrKykge1xuICAgICAgICB1cGRhdGVQYXRoKGN1cnJlbnQsIFtwYXJ0W2kyXV0uY29uY2F0KHBhdGgpLCB0cmF2ZXJzZWQpO1xuICAgICAgfVxuICAgICAgcmV0dXJuO1xuICAgIH0gZWxzZSBpZiAoaXNBcnJheSAmJiBwYXJ0VHlwZSA9PT0gXCJmdW5jdGlvblwiKSB7XG4gICAgICBmb3IgKGxldCBpMiA9IDA7IGkyIDwgY3VycmVudC5sZW5ndGg7IGkyKyspIHtcbiAgICAgICAgaWYgKHBhcnQoY3VycmVudFtpMl0sIGkyKSlcbiAgICAgICAgICB1cGRhdGVQYXRoKGN1cnJlbnQsIFtpMl0uY29uY2F0KHBhdGgpLCB0cmF2ZXJzZWQpO1xuICAgICAgfVxuICAgICAgcmV0dXJuO1xuICAgIH0gZWxzZSBpZiAoaXNBcnJheSAmJiBwYXJ0VHlwZSA9PT0gXCJvYmplY3RcIikge1xuICAgICAgY29uc3Qge1xuICAgICAgICBmcm9tID0gMCxcbiAgICAgICAgdG8gPSBjdXJyZW50Lmxlbmd0aCAtIDEsXG4gICAgICAgIGJ5ID0gMVxuICAgICAgfSA9IHBhcnQ7XG4gICAgICBmb3IgKGxldCBpMiA9IGZyb207IGkyIDw9IHRvOyBpMiArPSBieSkge1xuICAgICAgICB1cGRhdGVQYXRoKGN1cnJlbnQsIFtpMl0uY29uY2F0KHBhdGgpLCB0cmF2ZXJzZWQpO1xuICAgICAgfVxuICAgICAgcmV0dXJuO1xuICAgIH0gZWxzZSBpZiAocGF0aC5sZW5ndGggPiAxKSB7XG4gICAgICB1cGRhdGVQYXRoKGN1cnJlbnRbcGFydF0sIHBhdGgsIFtwYXJ0XS5jb25jYXQodHJhdmVyc2VkKSk7XG4gICAgICByZXR1cm47XG4gICAgfVxuICAgIHByZXYgPSBjdXJyZW50W3BhcnRdO1xuICAgIHRyYXZlcnNlZCA9IFtwYXJ0XS5jb25jYXQodHJhdmVyc2VkKTtcbiAgfVxuICBsZXQgdmFsdWUgPSBwYXRoWzBdO1xuICBpZiAodHlwZW9mIHZhbHVlID09PSBcImZ1bmN0aW9uXCIpIHtcbiAgICB2YWx1ZSA9IHZhbHVlKHByZXYsIHRyYXZlcnNlZCk7XG4gICAgaWYgKHZhbHVlID09PSBwcmV2KVxuICAgICAgcmV0dXJuO1xuICB9XG4gIGlmIChwYXJ0ID09PSB2b2lkIDAgJiYgdmFsdWUgPT0gdm9pZCAwKVxuICAgIHJldHVybjtcbiAgdmFsdWUgPSB1bndyYXAodmFsdWUpO1xuICBpZiAocGFydCA9PT0gdm9pZCAwIHx8IGlzV3JhcHBhYmxlKHByZXYpICYmIGlzV3JhcHBhYmxlKHZhbHVlKSAmJiAhQXJyYXkuaXNBcnJheSh2YWx1ZSkpIHtcbiAgICBtZXJnZVN0b3JlTm9kZShwcmV2LCB2YWx1ZSk7XG4gIH0gZWxzZVxuICAgIHNldFByb3BlcnR5KGN1cnJlbnQsIHBhcnQsIHZhbHVlKTtcbn1cbmZ1bmN0aW9uIGNyZWF0ZVN0b3JlKC4uLltzdG9yZSwgb3B0aW9uc10pIHtcbiAgY29uc3QgdW53cmFwcGVkU3RvcmUgPSB1bndyYXAoc3RvcmUgfHwge30pO1xuICBjb25zdCBpc0FycmF5ID0gQXJyYXkuaXNBcnJheSh1bndyYXBwZWRTdG9yZSk7XG4gIGNvbnN0IHdyYXBwZWRTdG9yZSA9IHdyYXAkMSh1bndyYXBwZWRTdG9yZSk7XG4gIGZ1bmN0aW9uIHNldFN0b3JlKC4uLmFyZ3MpIHtcbiAgICBiYXRjaCgoKSA9PiB7XG4gICAgICBpc0FycmF5ICYmIGFyZ3MubGVuZ3RoID09PSAxID8gdXBkYXRlQXJyYXkodW53cmFwcGVkU3RvcmUsIGFyZ3NbMF0pIDogdXBkYXRlUGF0aCh1bndyYXBwZWRTdG9yZSwgYXJncyk7XG4gICAgfSk7XG4gIH1cbiAgcmV0dXJuIFt3cmFwcGVkU3RvcmUsIHNldFN0b3JlXTtcbn1cbmNvbnN0IGRlZmF1bHRMaWdodENvbG9yc1NldCA9IHtcbiAgY29uc3RhbnQ6IHtcbiAgICBibGFjazogXCIjMDAwMDAwXCIsXG4gICAgd2hpdGU6IFwiI0ZGRkZGRlwiXG4gIH0sXG4gIGNvbm5lY3RCdXR0b246IHtcbiAgICBiYWNrZ3JvdW5kOiBcIiMwMDk4RUFcIixcbiAgICBmb3JlZ3JvdW5kOiBcIiNGRkZGRkZcIlxuICB9LFxuICBhY2NlbnQ6IFwiIzAwOThFQVwiLFxuICB0ZWxlZ3JhbUJ1dHRvbjogXCIjMDA5OEVBXCIsXG4gIGljb246IHtcbiAgICBwcmltYXJ5OiBcIiMwRjBGMEZcIixcbiAgICBzZWNvbmRhcnk6IFwiIzdBODk5OVwiLFxuICAgIHRlcnRpYXJ5OiBcIiNDMUNBRDJcIixcbiAgICBzdWNjZXNzOiBcIiMyOUNDNkFcIixcbiAgICBlcnJvcjogXCIjRjVBNzNCXCJcbiAgfSxcbiAgYmFja2dyb3VuZDoge1xuICAgIHByaW1hcnk6IFwiI0ZGRkZGRlwiLFxuICAgIHNlY29uZGFyeTogXCIjRjFGM0Y1XCIsXG4gICAgc2VnbWVudDogXCIjRkZGRkZGXCIsXG4gICAgdGludDogXCIjRjFGM0Y1XCIsXG4gICAgcXI6IFwiI0YxRjNGNVwiXG4gIH0sXG4gIHRleHQ6IHtcbiAgICBwcmltYXJ5OiBcIiMwRjBGMEZcIixcbiAgICBzZWNvbmRhcnk6IFwiIzZBNzc4NVwiXG4gIH1cbn07XG5jb25zdCBkZWZhdWx0RGFya0NvbG9yc1NldCA9IHtcbiAgY29uc3RhbnQ6IHtcbiAgICBibGFjazogXCIjMDAwMDAwXCIsXG4gICAgd2hpdGU6IFwiI0ZGRkZGRlwiXG4gIH0sXG4gIGNvbm5lY3RCdXR0b246IHtcbiAgICBiYWNrZ3JvdW5kOiBcIiMwMDk4RUFcIixcbiAgICBmb3JlZ3JvdW5kOiBcIiNGRkZGRkZcIlxuICB9LFxuICBhY2NlbnQ6IFwiI0U1RTVFQVwiLFxuICB0ZWxlZ3JhbUJ1dHRvbjogXCIjMzFBNkY1XCIsXG4gIGljb246IHtcbiAgICBwcmltYXJ5OiBcIiNFNUU1RUFcIixcbiAgICBzZWNvbmRhcnk6IFwiIzkwOTA5OVwiLFxuICAgIHRlcnRpYXJ5OiBcIiM0MzQzNDdcIixcbiAgICBzdWNjZXNzOiBcIiMyOUNDNkFcIixcbiAgICBlcnJvcjogXCIjRjVBNzNCXCJcbiAgfSxcbiAgYmFja2dyb3VuZDoge1xuICAgIHByaW1hcnk6IFwiIzEyMTIxNFwiLFxuICAgIHNlY29uZGFyeTogXCIjMTgxODFBXCIsXG4gICAgc2VnbWVudDogXCIjMjYyNjI5XCIsXG4gICAgdGludDogXCIjMjIyMjI0XCIsXG4gICAgcXI6IFwiI0ZGRkZGRlwiXG4gIH0sXG4gIHRleHQ6IHtcbiAgICBwcmltYXJ5OiBcIiNFNUU1RUFcIixcbiAgICBzZWNvbmRhcnk6IFwiIzdEN0Q4NVwiXG4gIH1cbn07XG4vKiFcbiAqIGlzLXBsYWluLW9iamVjdCA8aHR0cHM6Ly9naXRodWIuY29tL2pvbnNjaGxpbmtlcnQvaXMtcGxhaW4tb2JqZWN0PlxuICpcbiAqIENvcHlyaWdodCAoYykgMjAxNC0yMDE3LCBKb24gU2NobGlua2VydC5cbiAqIFJlbGVhc2VkIHVuZGVyIHRoZSBNSVQgTGljZW5zZS5cbiAqL1xuZnVuY3Rpb24gaXNPYmplY3QobzIpIHtcbiAgcmV0dXJuIE9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbChvMikgPT09IFwiW29iamVjdCBPYmplY3RdXCI7XG59XG5mdW5jdGlvbiBpc1BsYWluT2JqZWN0KG8yKSB7XG4gIHZhciBjdG9yLCBwcm90O1xuICBpZiAoaXNPYmplY3QobzIpID09PSBmYWxzZSlcbiAgICByZXR1cm4gZmFsc2U7XG4gIGN0b3IgPSBvMi5jb25zdHJ1Y3RvcjtcbiAgaWYgKGN0b3IgPT09IHZvaWQgMClcbiAgICByZXR1cm4gdHJ1ZTtcbiAgcHJvdCA9IGN0b3IucHJvdG90eXBlO1xuICBpZiAoaXNPYmplY3QocHJvdCkgPT09IGZhbHNlKVxuICAgIHJldHVybiBmYWxzZTtcbiAgaWYgKHByb3QuaGFzT3duUHJvcGVydHkoXCJpc1Byb3RvdHlwZU9mXCIpID09PSBmYWxzZSkge1xuICAgIHJldHVybiBmYWxzZTtcbiAgfVxuICByZXR1cm4gdHJ1ZTtcbn1cbmZ1bmN0aW9uIG1lcmdlT3B0aW9ucyhvcHRpb25zLCBkZWZhdWx0T3B0aW9ucykge1xuICBpZiAoIW9wdGlvbnMpIHtcbiAgICByZXR1cm4gZGVmYXVsdE9wdGlvbnM7XG4gIH1cbiAgY29uc3Qgb3ZlcndyaXRlTWVyZ2UgPSAoXywgc291cmNlQXJyYXksIF9fKSA9PiBzb3VyY2VBcnJheTtcbiAgcmV0dXJuIGRlZXBtZXJnZShkZWZhdWx0T3B0aW9ucywgb3B0aW9ucywge1xuICAgIGFycmF5TWVyZ2U6IG92ZXJ3cml0ZU1lcmdlLFxuICAgIGlzTWVyZ2VhYmxlT2JqZWN0OiBpc1BsYWluT2JqZWN0XG4gIH0pO1xufVxuY29uc3QgW3RoZW1lU3RhdGUsIHNldFRoZW1lU3RhdGVdID0gY3JlYXRlU3RvcmUoe1xuICB0aGVtZTogVEhFTUUuTElHSFQsXG4gIGNvbG9yczogZGVmYXVsdExpZ2h0Q29sb3JzU2V0LFxuICBib3JkZXJSYWRpdXM6IFwibVwiXG59KTtcbmNvbnN0IHRoZW1lQ29sb3JzTWFwcGluZ0RlZmF1bHQgPSB7XG4gIFtUSEVNRS5MSUdIVF06IGRlZmF1bHRMaWdodENvbG9yc1NldCxcbiAgW1RIRU1FLkRBUktdOiBkZWZhdWx0RGFya0NvbG9yc1NldFxufTtcbmNvbnN0IHRoZW1lQ3VzdG9tQ29sb3JzID0ge1xuICBbVEhFTUUuTElHSFRdOiB2b2lkIDAsXG4gIFtUSEVNRS5EQVJLXTogdm9pZCAwXG59O1xuZnVuY3Rpb24gc2V0VGhlbWUodGhlbWUsIGNvbG9yc1NldCkge1xuICBpZiAoY29sb3JzU2V0KSB7XG4gICAgdGhlbWVDdXN0b21Db2xvcnNbVEhFTUUuREFSS10gPSBtZXJnZU9wdGlvbnMoXG4gICAgICBjb2xvcnNTZXRbVEhFTUUuREFSS10sXG4gICAgICB0aGVtZUN1c3RvbUNvbG9yc1tUSEVNRS5EQVJLXVxuICAgICk7XG4gICAgdGhlbWVDdXN0b21Db2xvcnNbVEhFTUUuTElHSFRdID0gbWVyZ2VPcHRpb25zKFxuICAgICAgY29sb3JzU2V0W1RIRU1FLkxJR0hUXSxcbiAgICAgIHRoZW1lQ3VzdG9tQ29sb3JzW1RIRU1FLkxJR0hUXVxuICAgICk7XG4gIH1cbiAgc2V0VGhlbWVTdGF0ZSh7XG4gICAgdGhlbWUsXG4gICAgY29sb3JzOiBtZXJnZU9wdGlvbnModGhlbWVDdXN0b21Db2xvcnNbdGhlbWVdLCB0aGVtZUNvbG9yc01hcHBpbmdEZWZhdWx0W3RoZW1lXSlcbiAgfSk7XG59XG5mdW5jdGlvbiBzZXRCb3JkZXJSYWRpdXMoYm9yZGVyUmFkaXVzKSB7XG4gIHNldFRoZW1lU3RhdGUoeyBib3JkZXJSYWRpdXMgfSk7XG59XG5mdW5jdGlvbiBzZXRDb2xvcnMoY29sb3JzU2V0KSB7XG4gIHRoZW1lQ3VzdG9tQ29sb3JzW1RIRU1FLkRBUktdID0gbWVyZ2VPcHRpb25zKFxuICAgIGNvbG9yc1NldFtUSEVNRS5EQVJLXSxcbiAgICB0aGVtZUN1c3RvbUNvbG9yc1tUSEVNRS5EQVJLXVxuICApO1xuICB0aGVtZUN1c3RvbUNvbG9yc1tUSEVNRS5MSUdIVF0gPSBtZXJnZU9wdGlvbnMoXG4gICAgY29sb3JzU2V0W1RIRU1FLkxJR0hUXSxcbiAgICB0aGVtZUN1c3RvbUNvbG9yc1tUSEVNRS5MSUdIVF1cbiAgKTtcbiAgc2V0VGhlbWVTdGF0ZSgoc3RhdGUpID0+ICh7XG4gICAgY29sb3JzOiBtZXJnZU9wdGlvbnMoXG4gICAgICB0aGVtZUN1c3RvbUNvbG9yc1tzdGF0ZS50aGVtZV0sXG4gICAgICB0aGVtZUNvbG9yc01hcHBpbmdEZWZhdWx0W3N0YXRlLnRoZW1lXVxuICAgIClcbiAgfSkpO1xufVxuY29uc3QgSW1hZ2VQbGFjZWhvbGRlciA9IHN0eWxlZC5kaXZgXG4gICAgYmFja2dyb3VuZC1jb2xvcjogJHsocHJvcHMpID0+IHByb3BzLnRoZW1lLmNvbG9ycy5iYWNrZ3JvdW5kLnNlY29uZGFyeX07XG5gO1xuY29uc3QgSW1hZ2UgPSAocHJvcHMpID0+IHtcbiAgbGV0IGltZ1JlZjtcbiAgY29uc3QgW2ltYWdlLCBzZXRJbWFnZV0gPSBjcmVhdGVTaWduYWwobnVsbCk7XG4gIGNyZWF0ZUVmZmVjdCgoKSA9PiB7XG4gICAgY29uc3QgaW1nID0gbmV3IHdpbmRvdy5JbWFnZSgpO1xuICAgIGltZy5zcmMgPSBwcm9wcy5zcmM7XG4gICAgaW1nLmFsdCA9IHByb3BzLmFsdCB8fCBcIlwiO1xuICAgIGltZy5zZXRBdHRyaWJ1dGUoXCJkcmFnZ2FibGVcIiwgXCJmYWxzZVwiKTtcbiAgICBpZiAocHJvcHMuY2xhc3MpIHtcbiAgICAgIGltZy5jbGFzc0xpc3QuYWRkKHByb3BzLmNsYXNzKTtcbiAgICB9XG4gICAgaWYgKGltZy5jb21wbGV0ZSkge1xuICAgICAgcmV0dXJuIHNldEltYWdlKGltZyk7XG4gICAgfVxuICAgIGltZy5hZGRFdmVudExpc3RlbmVyKFwibG9hZFwiLCAoKSA9PiBzZXRJbWFnZShpbWcpKTtcbiAgICByZXR1cm4gKCkgPT4gaW1nLnJlbW92ZUV2ZW50TGlzdGVuZXIoXCJsb2FkXCIsICgpID0+IHNldEltYWdlKGltZykpO1xuICB9KTtcbiAgcmV0dXJuIFtjcmVhdGVDb21wb25lbnQoU2hvdywge1xuICAgIGdldCB3aGVuKCkge1xuICAgICAgcmV0dXJuIGltYWdlKCk7XG4gICAgfSxcbiAgICBnZXQgY2hpbGRyZW4oKSB7XG4gICAgICByZXR1cm4gaW1hZ2UoKTtcbiAgICB9XG4gIH0pLCBjcmVhdGVDb21wb25lbnQoU2hvdywge1xuICAgIGdldCB3aGVuKCkge1xuICAgICAgcmV0dXJuICFpbWFnZSgpO1xuICAgIH0sXG4gICAgZ2V0IGNoaWxkcmVuKCkge1xuICAgICAgcmV0dXJuIGNyZWF0ZUNvbXBvbmVudChJbWFnZVBsYWNlaG9sZGVyLCB7XG4gICAgICAgIGdldCBbXCJjbGFzc1wiXSgpIHtcbiAgICAgICAgICByZXR1cm4gcHJvcHMuY2xhc3M7XG4gICAgICAgIH0sXG4gICAgICAgIHJlZihyJCkge1xuICAgICAgICAgIGNvbnN0IF9yZWYkID0gaW1nUmVmO1xuICAgICAgICAgIHR5cGVvZiBfcmVmJCA9PT0gXCJmdW5jdGlvblwiID8gX3JlZiQociQpIDogaW1nUmVmID0gciQ7XG4gICAgICAgIH1cbiAgICAgIH0pO1xuICAgIH1cbiAgfSldO1xufTtcbmxldCBpbml0UGFyYW1zID0ge307XG50cnkge1xuICBsZXQgbG9jYXRpb25IYXNoID0gbG9jYXRpb24uaGFzaC50b1N0cmluZygpO1xuICBpbml0UGFyYW1zID0gdXJsUGFyc2VIYXNoUGFyYW1zKGxvY2F0aW9uSGFzaCk7XG59IGNhdGNoIChlMikge1xufVxubGV0IHRtYVBsYXRmb3JtID0gXCJ1bmtub3duXCI7XG5pZiAoaW5pdFBhcmFtcyA9PSBudWxsID8gdm9pZCAwIDogaW5pdFBhcmFtcy50Z1dlYkFwcFBsYXRmb3JtKSB7XG4gIHRtYVBsYXRmb3JtID0gKF9hID0gaW5pdFBhcmFtcy50Z1dlYkFwcFBsYXRmb3JtKSAhPSBudWxsID8gX2EgOiBcInVua25vd25cIjtcbn1cbmlmICh0bWFQbGF0Zm9ybSA9PT0gXCJ1bmtub3duXCIpIHtcbiAgY29uc3Qgd2luZG93MiA9IGdldFdpbmRvdyQxKCk7XG4gIHRtYVBsYXRmb3JtID0gKF9kID0gKF9jID0gKF9iID0gd2luZG93MiA9PSBudWxsID8gdm9pZCAwIDogd2luZG93Mi5UZWxlZ3JhbSkgPT0gbnVsbCA/IHZvaWQgMCA6IF9iLldlYkFwcCkgPT0gbnVsbCA/IHZvaWQgMCA6IF9jLnBsYXRmb3JtKSAhPSBudWxsID8gX2QgOiBcInVua25vd25cIjtcbn1cbmxldCB3ZWJBcHBWZXJzaW9uID0gXCI2LjBcIjtcbmlmIChpbml0UGFyYW1zID09IG51bGwgPyB2b2lkIDAgOiBpbml0UGFyYW1zLnRnV2ViQXBwVmVyc2lvbikge1xuICB3ZWJBcHBWZXJzaW9uID0gaW5pdFBhcmFtcy50Z1dlYkFwcFZlcnNpb247XG59XG5pZiAoIXdlYkFwcFZlcnNpb24pIHtcbiAgY29uc3Qgd2luZG93MiA9IGdldFdpbmRvdyQxKCk7XG4gIHdlYkFwcFZlcnNpb24gPSAoX2cgPSAoX2YgPSAoX2UgPSB3aW5kb3cyID09IG51bGwgPyB2b2lkIDAgOiB3aW5kb3cyLlRlbGVncmFtKSA9PSBudWxsID8gdm9pZCAwIDogX2UuV2ViQXBwKSA9PSBudWxsID8gdm9pZCAwIDogX2YudmVyc2lvbikgIT0gbnVsbCA/IF9nIDogXCI2LjBcIjtcbn1cbmZ1bmN0aW9uIGlzVG1hUGxhdGZvcm0oLi4ucGxhdGZvcm1zKSB7XG4gIHJldHVybiBwbGF0Zm9ybXMuaW5jbHVkZXModG1hUGxhdGZvcm0pO1xufVxuZnVuY3Rpb24gaXNJblRNQSgpIHtcbiAgdmFyIF9hMjtcbiAgcmV0dXJuIHRtYVBsYXRmb3JtICE9PSBcInVua25vd25cIiB8fCAhISgoX2EyID0gZ2V0V2luZG93JDEoKSkgPT0gbnVsbCA/IHZvaWQgMCA6IF9hMi5UZWxlZ3JhbVdlYnZpZXdQcm94eSk7XG59XG5mdW5jdGlvbiBpc0luVGVsZWdyYW1Ccm93c2VyKCkge1xuICB2YXIgX2EyO1xuICBjb25zdCBpc1RlbGVncmFtV2VidmlldyA9ICEhKChfYTIgPSBnZXRXaW5kb3ckMSgpKSA9PSBudWxsID8gdm9pZCAwIDogX2EyLlRlbGVncmFtV2Vidmlldyk7XG4gIHJldHVybiAoaXNJblRNQSgpIHx8IGlzVGVsZWdyYW1XZWJ2aWV3KSAmJiB0bWFQbGF0Zm9ybSA9PT0gXCJ1bmtub3duXCI7XG59XG5mdW5jdGlvbiBzZW5kRXhwYW5kKCkge1xuICBwb3N0RXZlbnQoXCJ3ZWJfYXBwX2V4cGFuZFwiLCB7fSk7XG59XG5mdW5jdGlvbiBzZW5kT3BlblRlbGVncmFtTGluayhsaW5rLCBmYWxsYmFjaykge1xuICBjb25zdCB1cmwgPSBuZXcgVVJMKGxpbmspO1xuICBpZiAodXJsLnByb3RvY29sICE9PSBcImh0dHA6XCIgJiYgdXJsLnByb3RvY29sICE9PSBcImh0dHBzOlwiKSB7XG4gICAgaWYgKGZhbGxiYWNrKSB7XG4gICAgICByZXR1cm4gZmFsbGJhY2soKTtcbiAgICB9XG4gICAgdGhyb3cgbmV3IFRvbkNvbm5lY3RVSUVycm9yKGBVcmwgcHJvdG9jb2wgaXMgbm90IHN1cHBvcnRlZDogJHt1cmx9YCk7XG4gIH1cbiAgaWYgKHVybC5ob3N0bmFtZSAhPT0gXCJ0Lm1lXCIpIHtcbiAgICBpZiAoZmFsbGJhY2spIHtcbiAgICAgIHJldHVybiBmYWxsYmFjaygpO1xuICAgIH1cbiAgICB0aHJvdyBuZXcgVG9uQ29ubmVjdFVJRXJyb3IoYFVybCBob3N0IGlzIG5vdCBzdXBwb3J0ZWQ6ICR7dXJsfWApO1xuICB9XG4gIGNvbnN0IHBhdGhGdWxsID0gdXJsLnBhdGhuYW1lICsgdXJsLnNlYXJjaDtcbiAgaWYgKGlzSWZyYW1lKCkgfHwgdmVyc2lvbkF0TGVhc3QoXCI2LjFcIikpIHtcbiAgICBwb3N0RXZlbnQoXCJ3ZWJfYXBwX29wZW5fdGdfbGlua1wiLCB7IHBhdGhfZnVsbDogcGF0aEZ1bGwgfSk7XG4gIH0gZWxzZSB7XG4gICAgb3BlbkxpbmtCbGFuayhcImh0dHBzOi8vdC5tZVwiICsgcGF0aEZ1bGwpO1xuICB9XG59XG5mdW5jdGlvbiBpc0lmcmFtZSgpIHtcbiAgdHJ5IHtcbiAgICBjb25zdCB3aW5kb3cyID0gZ2V0V2luZG93JDEoKTtcbiAgICBpZiAoIXdpbmRvdzIpIHtcbiAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG4gICAgcmV0dXJuIHdpbmRvdzIucGFyZW50ICE9IG51bGwgJiYgd2luZG93MiAhPT0gd2luZG93Mi5wYXJlbnQ7XG4gIH0gY2F0Y2ggKGUyKSB7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG59XG5mdW5jdGlvbiBwb3N0RXZlbnQoZXZlbnRUeXBlLCBldmVudERhdGEpIHtcbiAgdHJ5IHtcbiAgICBjb25zdCB3aW5kb3cyID0gZ2V0V2luZG93JDEoKTtcbiAgICBpZiAoIXdpbmRvdzIpIHtcbiAgICAgIHRocm93IG5ldyBUb25Db25uZWN0VUlFcnJvcihgQ2FuJ3QgcG9zdCBldmVudCB0byBwYXJlbnQgd2luZG93OiB3aW5kb3cgaXMgbm90IGRlZmluZWRgKTtcbiAgICB9XG4gICAgaWYgKHdpbmRvdzIuVGVsZWdyYW1XZWJ2aWV3UHJveHkgIT09IHZvaWQgMCkge1xuICAgICAgbG9nRGVidWcoXCJwb3N0RXZlbnRcIiwgZXZlbnRUeXBlLCBldmVudERhdGEpO1xuICAgICAgd2luZG93Mi5UZWxlZ3JhbVdlYnZpZXdQcm94eS5wb3N0RXZlbnQoZXZlbnRUeXBlLCBKU09OLnN0cmluZ2lmeShldmVudERhdGEpKTtcbiAgICB9IGVsc2UgaWYgKHdpbmRvdzIuZXh0ZXJuYWwgJiYgXCJub3RpZnlcIiBpbiB3aW5kb3cyLmV4dGVybmFsKSB7XG4gICAgICBsb2dEZWJ1ZyhcInBvc3RFdmVudFwiLCBldmVudFR5cGUsIGV2ZW50RGF0YSk7XG4gICAgICB3aW5kb3cyLmV4dGVybmFsLm5vdGlmeShKU09OLnN0cmluZ2lmeSh7IGV2ZW50VHlwZSwgZXZlbnREYXRhIH0pKTtcbiAgICB9IGVsc2UgaWYgKGlzSWZyYW1lKCkpIHtcbiAgICAgIGNvbnN0IHRydXN0ZWRUYXJnZXQgPSBcIipcIjtcbiAgICAgIGNvbnN0IG1lc3NhZ2UgPSBKU09OLnN0cmluZ2lmeSh7IGV2ZW50VHlwZSwgZXZlbnREYXRhIH0pO1xuICAgICAgbG9nRGVidWcoXCJwb3N0RXZlbnRcIiwgZXZlbnRUeXBlLCBldmVudERhdGEpO1xuICAgICAgd2luZG93Mi5wYXJlbnQucG9zdE1lc3NhZ2UobWVzc2FnZSwgdHJ1c3RlZFRhcmdldCk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHRocm93IG5ldyBUb25Db25uZWN0VUlFcnJvcihgQ2FuJ3QgcG9zdCBldmVudCB0byBUTUFgKTtcbiAgICB9XG4gIH0gY2F0Y2ggKGUyKSB7XG4gICAgbG9nRXJyb3IoYENhbid0IHBvc3QgZXZlbnQgdG8gcGFyZW50IHdpbmRvdzogJHtlMn1gKTtcbiAgfVxufVxuZnVuY3Rpb24gdXJsUGFyc2VIYXNoUGFyYW1zKGxvY2F0aW9uSGFzaCkge1xuICBsb2NhdGlvbkhhc2ggPSBsb2NhdGlvbkhhc2gucmVwbGFjZSgvXiMvLCBcIlwiKTtcbiAgbGV0IHBhcmFtcyA9IHt9O1xuICBpZiAoIWxvY2F0aW9uSGFzaC5sZW5ndGgpIHtcbiAgICByZXR1cm4gcGFyYW1zO1xuICB9XG4gIGlmIChsb2NhdGlvbkhhc2guaW5kZXhPZihcIj1cIikgPCAwICYmIGxvY2F0aW9uSGFzaC5pbmRleE9mKFwiP1wiKSA8IDApIHtcbiAgICBwYXJhbXMuX3BhdGggPSB1cmxTYWZlRGVjb2RlKGxvY2F0aW9uSGFzaCk7XG4gICAgcmV0dXJuIHBhcmFtcztcbiAgfVxuICBsZXQgcUluZGV4ID0gbG9jYXRpb25IYXNoLmluZGV4T2YoXCI/XCIpO1xuICBpZiAocUluZGV4ID49IDApIHtcbiAgICBsZXQgcGF0aFBhcmFtID0gbG9jYXRpb25IYXNoLnN1YnN0cigwLCBxSW5kZXgpO1xuICAgIHBhcmFtcy5fcGF0aCA9IHVybFNhZmVEZWNvZGUocGF0aFBhcmFtKTtcbiAgICBsb2NhdGlvbkhhc2ggPSBsb2NhdGlvbkhhc2guc3Vic3RyKHFJbmRleCArIDEpO1xuICB9XG4gIGxldCBxdWVyeV9wYXJhbXMgPSB1cmxQYXJzZVF1ZXJ5U3RyaW5nKGxvY2F0aW9uSGFzaCk7XG4gIGZvciAobGV0IGsgaW4gcXVlcnlfcGFyYW1zKSB7XG4gICAgcGFyYW1zW2tdID0gcXVlcnlfcGFyYW1zW2tdO1xuICB9XG4gIHJldHVybiBwYXJhbXM7XG59XG5mdW5jdGlvbiB1cmxTYWZlRGVjb2RlKHVybGVuY29kZWQpIHtcbiAgdHJ5IHtcbiAgICB1cmxlbmNvZGVkID0gdXJsZW5jb2RlZC5yZXBsYWNlKC9cXCsvZywgXCIlMjBcIik7XG4gICAgcmV0dXJuIGRlY29kZVVSSUNvbXBvbmVudCh1cmxlbmNvZGVkKTtcbiAgfSBjYXRjaCAoZTIpIHtcbiAgICByZXR1cm4gdXJsZW5jb2RlZDtcbiAgfVxufVxuZnVuY3Rpb24gdXJsUGFyc2VRdWVyeVN0cmluZyhxdWVyeVN0cmluZykge1xuICBsZXQgcGFyYW1zID0ge307XG4gIGlmICghcXVlcnlTdHJpbmcubGVuZ3RoKSB7XG4gICAgcmV0dXJuIHBhcmFtcztcbiAgfVxuICBsZXQgcXVlcnlTdHJpbmdQYXJhbXMgPSBxdWVyeVN0cmluZy5zcGxpdChcIiZcIik7XG4gIGxldCBpMiwgcGFyYW0sIHBhcmFtTmFtZSwgcGFyYW1WYWx1ZTtcbiAgZm9yIChpMiA9IDA7IGkyIDwgcXVlcnlTdHJpbmdQYXJhbXMubGVuZ3RoOyBpMisrKSB7XG4gICAgcGFyYW0gPSBxdWVyeVN0cmluZ1BhcmFtc1tpMl0uc3BsaXQoXCI9XCIpO1xuICAgIHBhcmFtTmFtZSA9IHVybFNhZmVEZWNvZGUocGFyYW1bMF0pO1xuICAgIHBhcmFtVmFsdWUgPSBwYXJhbVsxXSA9PSBudWxsID8gbnVsbCA6IHVybFNhZmVEZWNvZGUocGFyYW1bMV0pO1xuICAgIHBhcmFtc1twYXJhbU5hbWVdID0gcGFyYW1WYWx1ZTtcbiAgfVxuICByZXR1cm4gcGFyYW1zO1xufVxuZnVuY3Rpb24gdmVyc2lvbkNvbXBhcmUodjEsIHYyKSB7XG4gIGlmICh0eXBlb2YgdjEgIT09IFwic3RyaW5nXCIpXG4gICAgdjEgPSBcIlwiO1xuICBpZiAodHlwZW9mIHYyICE9PSBcInN0cmluZ1wiKVxuICAgIHYyID0gXCJcIjtcbiAgbGV0IHYxTGlzdCA9IHYxLnJlcGxhY2UoL15cXHMrfFxccyskL2csIFwiXCIpLnNwbGl0KFwiLlwiKTtcbiAgbGV0IHYyTGlzdCA9IHYyLnJlcGxhY2UoL15cXHMrfFxccyskL2csIFwiXCIpLnNwbGl0KFwiLlwiKTtcbiAgbGV0IGEyLCBpMiwgcDEsIHAyO1xuICBhMiA9IE1hdGgubWF4KHYxTGlzdC5sZW5ndGgsIHYyTGlzdC5sZW5ndGgpO1xuICBmb3IgKGkyID0gMDsgaTIgPCBhMjsgaTIrKykge1xuICAgIHAxID0gcGFyc2VJbnQodjFMaXN0W2kyXSkgfHwgMDtcbiAgICBwMiA9IHBhcnNlSW50KHYyTGlzdFtpMl0pIHx8IDA7XG4gICAgaWYgKHAxID09PSBwMilcbiAgICAgIGNvbnRpbnVlO1xuICAgIGlmIChwMSA+IHAyKVxuICAgICAgcmV0dXJuIDE7XG4gICAgcmV0dXJuIC0xO1xuICB9XG4gIHJldHVybiAwO1xufVxuZnVuY3Rpb24gdmVyc2lvbkF0TGVhc3QodmVyKSB7XG4gIHJldHVybiB2ZXJzaW9uQ29tcGFyZSh3ZWJBcHBWZXJzaW9uLCB2ZXIpID49IDA7XG59XG5jb25zdCBtYXhXaWR0aCA9IHtcbiAgbW9iaWxlOiA0NDAsXG4gIHRhYmxldDogMTAyMFxufTtcbmZ1bmN0aW9uIGlzRGV2aWNlKGRldmljZSkge1xuICBjb25zdCB3aW5kb3cyID0gZ2V0V2luZG93JDEoKTtcbiAgaWYgKCF3aW5kb3cyKSB7XG4gICAgcmV0dXJuIGRldmljZSA9PT0gXCJkZXNrdG9wXCI7XG4gIH1cbiAgaWYgKGlzVG1hUGxhdGZvcm0oXCJ3ZWJhXCIpKSB7XG4gICAgcmV0dXJuIHRydWU7XG4gIH1cbiAgY29uc3Qgd2lkdGggPSB3aW5kb3cyLmlubmVyV2lkdGg7XG4gIHN3aXRjaCAoZGV2aWNlKSB7XG4gICAgY2FzZSBcImRlc2t0b3BcIjpcbiAgICAgIHJldHVybiB3aWR0aCA+IG1heFdpZHRoLnRhYmxldDtcbiAgICBjYXNlIFwidGFibGV0XCI6XG4gICAgICByZXR1cm4gd2lkdGggPiBtYXhXaWR0aC5tb2JpbGU7XG4gICAgZGVmYXVsdDpcbiAgICBjYXNlIFwibW9iaWxlXCI6XG4gICAgICByZXR1cm4gd2lkdGggPD0gbWF4V2lkdGgubW9iaWxlIHx8IGlzT1MoXCJpb3NcIiwgXCJhbmRyb2lkXCIsIFwiaXBhZFwiKTtcbiAgfVxufVxuZnVuY3Rpb24gbWVkaWEoZGV2aWNlKSB7XG4gIHN3aXRjaCAoZGV2aWNlKSB7XG4gICAgY2FzZSBcIm1vYmlsZVwiOlxuICAgICAgcmV0dXJuIGBAbWVkaWEgKG1heC13aWR0aDogJHttYXhXaWR0aC5tb2JpbGV9cHgpYDtcbiAgICBjYXNlIFwidGFibGV0XCI6XG4gICAgICByZXR1cm4gYEBtZWRpYSAobWF4LXdpZHRoOiAke21heFdpZHRoLnRhYmxldH1weCkgKG1pbi13aWR0aDogJHttYXhXaWR0aC5tb2JpbGV9cHgpYDtcbiAgICBkZWZhdWx0OlxuICAgIGNhc2UgXCJkZXNrdG9wXCI6XG4gICAgICByZXR1cm4gYEBtZWRpYSAobWluLXdpZHRoOiAke21heFdpZHRoLnRhYmxldH1weClgO1xuICB9XG59XG5jb25zdCBtZWRpYVRvdWNoID0gXCJAbWVkaWEgKGhvdmVyOiBub25lKVwiO1xuY29uc3QgbWVkaWFOb3RUb3VjaCA9IFwiQG1lZGlhIG5vdCBhbGwgYW5kIChob3Zlcjogbm9uZSlcIjtcbmNvbnN0IGJvcmRlcnMkNSA9IHtcbiAgbTogXCIxMDB2aFwiLFxuICBzOiBcIjhweFwiLFxuICBub25lOiBcIjBcIlxufTtcbmNvbnN0IHNjYWxlVmFsdWVzID0ge1xuICBzOiAwLjAyLFxuICBtOiAwLjA0XG59O1xuY29uc3QgQnV0dG9uU3R5bGVkJDEgPSBzdHlsZWQuYnV0dG9uYFxuICAgIGRpc3BsYXk6ICR7KHByb3BzKSA9PiBwcm9wcy5sZWZ0SWNvbiB8fCBwcm9wcy5yaWdodEljb24gPyBcImZsZXhcIiA6IFwiaW5saW5lLWJsb2NrXCJ9O1xuICAgIGdhcDogJHsocHJvcHMpID0+IHByb3BzLmxlZnRJY29uIHx8IHByb3BzLnJpZ2h0SWNvbiA/IFwiNnB4XCIgOiBcInVuc2V0XCJ9O1xuICAgIGFsaWduLWl0ZW1zOiAkeyhwcm9wcykgPT4gcHJvcHMubGVmdEljb24gfHwgcHJvcHMucmlnaHRJY29uID8gXCJjZW50ZXJcIiA6IFwidW5zZXRcIn07XG4gICAganVzdGlmeS1jb250ZW50OiAkeyhwcm9wcykgPT4gcHJvcHMubGVmdEljb24gfHwgcHJvcHMucmlnaHRJY29uID8gXCJzcGFjZS1iZXR3ZWVuXCIgOiBcInVuc2V0XCJ9O1xuICAgIGJhY2tncm91bmQtY29sb3I6ICR7KHByb3BzKSA9PiBwcm9wcy5hcHBlYXJhbmNlID09PSBcImZsYXRcIiA/IFwidHJhbnNwYXJlbnRcIiA6IHByb3BzLmFwcGVhcmFuY2UgPT09IFwic2Vjb25kYXJ5XCIgPyBwcm9wcy50aGVtZS5jb2xvcnMuYmFja2dyb3VuZC50aW50IDogcmdiYShwcm9wcy50aGVtZS5jb2xvcnMuYWNjZW50LCAwLjEyKX07XG4gICAgY29sb3I6ICR7KHByb3BzKSA9PiBwcm9wcy5hcHBlYXJhbmNlID09PSBcInNlY29uZGFyeVwiID8gcHJvcHMudGhlbWUuY29sb3JzLnRleHQucHJpbWFyeSA6IHByb3BzLnRoZW1lLmNvbG9ycy5hY2NlbnR9O1xuXG4gICAgcGFkZGluZzogJHsocHJvcHMpID0+IHByb3BzLmFwcGVhcmFuY2UgPT09IFwiZmxhdFwiID8gXCIwXCIgOiBcIjlweCAxNnB4XCJ9O1xuICAgIHBhZGRpbmctbGVmdDogJHsocHJvcHMpID0+IHByb3BzLmxlZnRJY29uICYmIHByb3BzLmFwcGVhcmFuY2UgIT09IFwiZmxhdFwiID8gXCIxMnB4XCIgOiBcIjE2cHhcIn07XG4gICAgcGFkZGluZy1yaWdodDogJHsocHJvcHMpID0+IHByb3BzLnJpZ2h0SWNvbiAmJiBwcm9wcy5hcHBlYXJhbmNlICE9PSBcImZsYXRcIiA/IFwiMTJweFwiIDogXCIxNnB4XCJ9O1xuICAgIGJvcmRlcjogbm9uZTtcbiAgICBib3JkZXItcmFkaXVzOiAkeyhwcm9wcykgPT4gYm9yZGVycyQ1W3Byb3BzLnRoZW1lLmJvcmRlclJhZGl1c119O1xuICAgIGN1cnNvcjogJHsocHJvcHMpID0+IHByb3BzLmRpc2FibGVkID8gXCJub3QtYWxsb3dlZFwiIDogXCJwb2ludGVyXCJ9O1xuXG4gICAgZm9udC1zaXplOiAxNHB4O1xuICAgIGZvbnQtd2VpZ2h0OiA1MTA7XG4gICAgbGluZS1oZWlnaHQ6IDE4cHg7XG5cbiAgICB0cmFuc2l0aW9uOiB0cmFuc2Zvcm0gMC4xMjVzIGVhc2UtaW4tb3V0O1xuXG4gICAgJHttZWRpYU5vdFRvdWNofSB7XG4gICAgICAgICY6aG92ZXIge1xuICAgICAgICAgICAgdHJhbnNmb3JtOiAkeyhwcm9wcykgPT4gcHJvcHMuZGlzYWJsZWQgPyBcInVuc2V0XCIgOiBgc2NhbGUoJHsxICsgc2NhbGVWYWx1ZXNbcHJvcHMuc2NhbGVdfSlgfTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgICY6YWN0aXZlIHtcbiAgICAgICAgdHJhbnNmb3JtOiAkeyhwcm9wcykgPT4gcHJvcHMuZGlzYWJsZWQgPyBcInVuc2V0XCIgOiBgc2NhbGUoJHsxIC0gc2NhbGVWYWx1ZXNbcHJvcHMuc2NhbGVdfSlgfTtcbiAgICB9XG5cbiAgICAke21lZGlhVG91Y2h9IHtcbiAgICAgICAgJjphY3RpdmUge1xuICAgICAgICAgICAgdHJhbnNmb3JtOiAkeyhwcm9wcykgPT4gcHJvcHMuZGlzYWJsZWQgPyBcInVuc2V0XCIgOiBgc2NhbGUoJHsxIC0gc2NhbGVWYWx1ZXNbcHJvcHMuc2NhbGVdICogMn0pYH07XG4gICAgICAgIH1cbiAgICB9XG5gO1xuZnVuY3Rpb24gdXNlRGF0YUF0dHJpYnV0ZXMocHJvcHMpIHtcbiAgY29uc3Qga2V5cyA9IHVudHJhY2soKCkgPT4gT2JqZWN0LmtleXMocHJvcHMpLmZpbHRlcigoa2V5KSA9PiBrZXkuc3RhcnRzV2l0aChcImRhdGEtXCIpKSk7XG4gIGNvbnN0IFtkYXRhQXR0cnNdID0gc3BsaXRQcm9wcyhwcm9wcywga2V5cyk7XG4gIHJldHVybiBkYXRhQXR0cnM7XG59XG5jb25zdCBCdXR0b24gPSAocHJvcHMpID0+IHtcbiAgY29uc3QgZGF0YUF0dHJzID0gdXNlRGF0YUF0dHJpYnV0ZXMocHJvcHMpO1xuICByZXR1cm4gY3JlYXRlQ29tcG9uZW50KEJ1dHRvblN0eWxlZCQxLCBtZXJnZVByb3BzKHtcbiAgICBnZXQgYXBwZWFyYW5jZSgpIHtcbiAgICAgIHJldHVybiBwcm9wcy5hcHBlYXJhbmNlIHx8IFwicHJpbWFyeVwiO1xuICAgIH0sXG4gICAgZ2V0IFtcImNsYXNzXCJdKCkge1xuICAgICAgcmV0dXJuIHByb3BzLmNsYXNzO1xuICAgIH0sXG4gICAgb25DbGljazogKGUyKSA9PiB7XG4gICAgICB2YXIgX2EyO1xuICAgICAgcmV0dXJuIChfYTIgPSBwcm9wcy5vbkNsaWNrKSA9PSBudWxsID8gdm9pZCAwIDogX2EyLmNhbGwocHJvcHMsIGUyKTtcbiAgICB9LFxuICAgIG9uTW91c2VFbnRlcjogKGUyKSA9PiB7XG4gICAgICB2YXIgX2EyO1xuICAgICAgcmV0dXJuIChfYTIgPSBwcm9wcy5vbk1vdXNlRW50ZXIpID09IG51bGwgPyB2b2lkIDAgOiBfYTIuY2FsbChwcm9wcywgZTIpO1xuICAgIH0sXG4gICAgb25Nb3VzZUxlYXZlOiAoZTIpID0+IHtcbiAgICAgIHZhciBfYTI7XG4gICAgICByZXR1cm4gKF9hMiA9IHByb3BzLm9uTW91c2VMZWF2ZSkgPT0gbnVsbCA/IHZvaWQgMCA6IF9hMi5jYWxsKHByb3BzLCBlMik7XG4gICAgfSxcbiAgICByZWYociQpIHtcbiAgICAgIGNvbnN0IF9yZWYkID0gcHJvcHMucmVmO1xuICAgICAgdHlwZW9mIF9yZWYkID09PSBcImZ1bmN0aW9uXCIgPyBfcmVmJChyJCkgOiBwcm9wcy5yZWYgPSByJDtcbiAgICB9LFxuICAgIGdldCBkaXNhYmxlZCgpIHtcbiAgICAgIHJldHVybiBwcm9wcy5kaXNhYmxlZDtcbiAgICB9LFxuICAgIGdldCBzY2FsZSgpIHtcbiAgICAgIHJldHVybiBwcm9wcy5zY2FsZSB8fCBcIm1cIjtcbiAgICB9LFxuICAgIGdldCBsZWZ0SWNvbigpIHtcbiAgICAgIHJldHVybiAhIXByb3BzLmxlZnRJY29uO1xuICAgIH0sXG4gICAgZ2V0IHJpZ2h0SWNvbigpIHtcbiAgICAgIHJldHVybiAhIXByb3BzLnJpZ2h0SWNvbjtcbiAgICB9LFxuICAgIFwiZGF0YS10Yy1idXR0b25cIjogXCJ0cnVlXCJcbiAgfSwgZGF0YUF0dHJzLCB7XG4gICAgZ2V0IGNoaWxkcmVuKCkge1xuICAgICAgcmV0dXJuIFtjcmVhdGVNZW1vKCgpID0+IHByb3BzLmxlZnRJY29uKSwgY3JlYXRlTWVtbygoKSA9PiBwcm9wcy5jaGlsZHJlbiksIGNyZWF0ZU1lbW8oKCkgPT4gcHJvcHMucmlnaHRJY29uKV07XG4gICAgfVxuICB9KSk7XG59O1xuZnVuY3Rpb24gbmV4dEZyYW1lKGZuKSB7XG4gIHJlcXVlc3RBbmltYXRpb25GcmFtZSgoKSA9PiB7XG4gICAgcmVxdWVzdEFuaW1hdGlvbkZyYW1lKGZuKTtcbiAgfSk7XG59XG5jb25zdCBUcmFuc2l0aW9uID0gKHByb3BzKSA9PiB7XG4gIGxldCBlbDtcbiAgbGV0IGZpcnN0ID0gdHJ1ZTtcbiAgY29uc3QgW3MxLCBzZXQxXSA9IGNyZWF0ZVNpZ25hbCgpO1xuICBjb25zdCBbczIsIHNldDJdID0gY3JlYXRlU2lnbmFsKCk7XG4gIGNvbnN0IHJlc29sdmVkID0gY2hpbGRyZW4oKCkgPT4gcHJvcHMuY2hpbGRyZW4pO1xuICBjb25zdCB7XG4gICAgb25CZWZvcmVFbnRlcixcbiAgICBvbkVudGVyLFxuICAgIG9uQWZ0ZXJFbnRlcixcbiAgICBvbkJlZm9yZUV4aXQsXG4gICAgb25FeGl0LFxuICAgIG9uQWZ0ZXJFeGl0XG4gIH0gPSBwcm9wcztcbiAgY29uc3QgY2xhc3NuYW1lcyA9IGNyZWF0ZU1lbW8oKCkgPT4ge1xuICAgIGNvbnN0IG5hbWUgPSBwcm9wcy5uYW1lIHx8IFwic1wiO1xuICAgIHJldHVybiB7XG4gICAgICBlbnRlckFjdGl2ZUNsYXNzOiBwcm9wcy5lbnRlckFjdGl2ZUNsYXNzIHx8IG5hbWUgKyBcIi1lbnRlci1hY3RpdmVcIixcbiAgICAgIGVudGVyQ2xhc3M6IHByb3BzLmVudGVyQ2xhc3MgfHwgbmFtZSArIFwiLWVudGVyXCIsXG4gICAgICBlbnRlclRvQ2xhc3M6IHByb3BzLmVudGVyVG9DbGFzcyB8fCBuYW1lICsgXCItZW50ZXItdG9cIixcbiAgICAgIGV4aXRBY3RpdmVDbGFzczogcHJvcHMuZXhpdEFjdGl2ZUNsYXNzIHx8IG5hbWUgKyBcIi1leGl0LWFjdGl2ZVwiLFxuICAgICAgZXhpdENsYXNzOiBwcm9wcy5leGl0Q2xhc3MgfHwgbmFtZSArIFwiLWV4aXRcIixcbiAgICAgIGV4aXRUb0NsYXNzOiBwcm9wcy5leGl0VG9DbGFzcyB8fCBuYW1lICsgXCItZXhpdC10b1wiXG4gICAgfTtcbiAgfSk7XG4gIGZ1bmN0aW9uIGVudGVyVHJhbnNpdGlvbihlbDIsIHByZXYpIHtcbiAgICBpZiAoIWZpcnN0IHx8IHByb3BzLmFwcGVhcikge1xuICAgICAgbGV0IGVuZFRyYW5zaXRpb24gPSBmdW5jdGlvbihlMikge1xuICAgICAgICBpZiAoZWwyICYmICghZTIgfHwgZTIudGFyZ2V0ID09PSBlbDIpKSB7XG4gICAgICAgICAgZWwyLnJlbW92ZUV2ZW50TGlzdGVuZXIoXCJ0cmFuc2l0aW9uZW5kXCIsIGVuZFRyYW5zaXRpb24pO1xuICAgICAgICAgIGVsMi5yZW1vdmVFdmVudExpc3RlbmVyKFwiYW5pbWF0aW9uZW5kXCIsIGVuZFRyYW5zaXRpb24pO1xuICAgICAgICAgIGVsMi5jbGFzc0xpc3QucmVtb3ZlKC4uLmVudGVyQWN0aXZlQ2xhc3Nlcyk7XG4gICAgICAgICAgZWwyLmNsYXNzTGlzdC5yZW1vdmUoLi4uZW50ZXJUb0NsYXNzZXMpO1xuICAgICAgICAgIGJhdGNoKCgpID0+IHtcbiAgICAgICAgICAgIHMxKCkgIT09IGVsMiAmJiBzZXQxKGVsMik7XG4gICAgICAgICAgICBzMigpID09PSBlbDIgJiYgc2V0Mih2b2lkIDApO1xuICAgICAgICAgIH0pO1xuICAgICAgICAgIG9uQWZ0ZXJFbnRlciAmJiBvbkFmdGVyRW50ZXIoZWwyKTtcbiAgICAgICAgICBpZiAocHJvcHMubW9kZSA9PT0gXCJpbm91dFwiKVxuICAgICAgICAgICAgZXhpdFRyYW5zaXRpb24oZWwyLCBwcmV2KTtcbiAgICAgICAgfVxuICAgICAgfTtcbiAgICAgIGNvbnN0IGVudGVyQ2xhc3NlcyA9IGNsYXNzbmFtZXMoKS5lbnRlckNsYXNzLnNwbGl0KFwiIFwiKTtcbiAgICAgIGNvbnN0IGVudGVyQWN0aXZlQ2xhc3NlcyA9IGNsYXNzbmFtZXMoKS5lbnRlckFjdGl2ZUNsYXNzLnNwbGl0KFwiIFwiKTtcbiAgICAgIGNvbnN0IGVudGVyVG9DbGFzc2VzID0gY2xhc3NuYW1lcygpLmVudGVyVG9DbGFzcy5zcGxpdChcIiBcIik7XG4gICAgICBvbkJlZm9yZUVudGVyICYmIG9uQmVmb3JlRW50ZXIoZWwyKTtcbiAgICAgIGVsMi5jbGFzc0xpc3QuYWRkKC4uLmVudGVyQ2xhc3Nlcyk7XG4gICAgICBlbDIuY2xhc3NMaXN0LmFkZCguLi5lbnRlckFjdGl2ZUNsYXNzZXMpO1xuICAgICAgbmV4dEZyYW1lKCgpID0+IHtcbiAgICAgICAgZWwyLmNsYXNzTGlzdC5yZW1vdmUoLi4uZW50ZXJDbGFzc2VzKTtcbiAgICAgICAgZWwyLmNsYXNzTGlzdC5hZGQoLi4uZW50ZXJUb0NsYXNzZXMpO1xuICAgICAgICBvbkVudGVyICYmIG9uRW50ZXIoZWwyLCAoKSA9PiBlbmRUcmFuc2l0aW9uKCkpO1xuICAgICAgICBpZiAoIW9uRW50ZXIgfHwgb25FbnRlci5sZW5ndGggPCAyKSB7XG4gICAgICAgICAgZWwyLmFkZEV2ZW50TGlzdGVuZXIoXCJ0cmFuc2l0aW9uZW5kXCIsIGVuZFRyYW5zaXRpb24pO1xuICAgICAgICAgIGVsMi5hZGRFdmVudExpc3RlbmVyKFwiYW5pbWF0aW9uZW5kXCIsIGVuZFRyYW5zaXRpb24pO1xuICAgICAgICB9XG4gICAgICB9KTtcbiAgICB9XG4gICAgcHJldiAmJiAhcHJvcHMubW9kZSA/IHNldDIoZWwyKSA6IHNldDEoZWwyKTtcbiAgfVxuICBmdW5jdGlvbiBleGl0VHJhbnNpdGlvbihlbDIsIHByZXYpIHtcbiAgICBjb25zdCBleGl0Q2xhc3NlcyA9IGNsYXNzbmFtZXMoKS5leGl0Q2xhc3Muc3BsaXQoXCIgXCIpO1xuICAgIGNvbnN0IGV4aXRBY3RpdmVDbGFzc2VzID0gY2xhc3NuYW1lcygpLmV4aXRBY3RpdmVDbGFzcy5zcGxpdChcIiBcIik7XG4gICAgY29uc3QgZXhpdFRvQ2xhc3NlcyA9IGNsYXNzbmFtZXMoKS5leGl0VG9DbGFzcy5zcGxpdChcIiBcIik7XG4gICAgaWYgKCFwcmV2LnBhcmVudE5vZGUpXG4gICAgICByZXR1cm4gZW5kVHJhbnNpdGlvbigpO1xuICAgIG9uQmVmb3JlRXhpdCAmJiBvbkJlZm9yZUV4aXQocHJldik7XG4gICAgcHJldi5jbGFzc0xpc3QuYWRkKC4uLmV4aXRDbGFzc2VzKTtcbiAgICBwcmV2LmNsYXNzTGlzdC5hZGQoLi4uZXhpdEFjdGl2ZUNsYXNzZXMpO1xuICAgIG5leHRGcmFtZSgoKSA9PiB7XG4gICAgICBwcmV2LmNsYXNzTGlzdC5yZW1vdmUoLi4uZXhpdENsYXNzZXMpO1xuICAgICAgcHJldi5jbGFzc0xpc3QuYWRkKC4uLmV4aXRUb0NsYXNzZXMpO1xuICAgIH0pO1xuICAgIG9uRXhpdCAmJiBvbkV4aXQocHJldiwgKCkgPT4gZW5kVHJhbnNpdGlvbigpKTtcbiAgICBpZiAoIW9uRXhpdCB8fCBvbkV4aXQubGVuZ3RoIDwgMikge1xuICAgICAgcHJldi5hZGRFdmVudExpc3RlbmVyKFwidHJhbnNpdGlvbmVuZFwiLCBlbmRUcmFuc2l0aW9uKTtcbiAgICAgIHByZXYuYWRkRXZlbnRMaXN0ZW5lcihcImFuaW1hdGlvbmVuZFwiLCBlbmRUcmFuc2l0aW9uKTtcbiAgICB9XG4gICAgZnVuY3Rpb24gZW5kVHJhbnNpdGlvbihlMikge1xuICAgICAgaWYgKCFlMiB8fCBlMi50YXJnZXQgPT09IHByZXYpIHtcbiAgICAgICAgcHJldi5yZW1vdmVFdmVudExpc3RlbmVyKFwidHJhbnNpdGlvbmVuZFwiLCBlbmRUcmFuc2l0aW9uKTtcbiAgICAgICAgcHJldi5yZW1vdmVFdmVudExpc3RlbmVyKFwiYW5pbWF0aW9uZW5kXCIsIGVuZFRyYW5zaXRpb24pO1xuICAgICAgICBwcmV2LmNsYXNzTGlzdC5yZW1vdmUoLi4uZXhpdEFjdGl2ZUNsYXNzZXMpO1xuICAgICAgICBwcmV2LmNsYXNzTGlzdC5yZW1vdmUoLi4uZXhpdFRvQ2xhc3Nlcyk7XG4gICAgICAgIHMxKCkgPT09IHByZXYgJiYgc2V0MSh2b2lkIDApO1xuICAgICAgICBvbkFmdGVyRXhpdCAmJiBvbkFmdGVyRXhpdChwcmV2KTtcbiAgICAgICAgaWYgKHByb3BzLm1vZGUgPT09IFwib3V0aW5cIilcbiAgICAgICAgICBlbnRlclRyYW5zaXRpb24oZWwyLCBwcmV2KTtcbiAgICAgIH1cbiAgICB9XG4gIH1cbiAgY3JlYXRlQ29tcHV0ZWQoKHByZXYpID0+IHtcbiAgICBlbCA9IHJlc29sdmVkKCk7XG4gICAgd2hpbGUgKHR5cGVvZiBlbCA9PT0gXCJmdW5jdGlvblwiKVxuICAgICAgZWwgPSBlbCgpO1xuICAgIHJldHVybiB1bnRyYWNrKCgpID0+IHtcbiAgICAgIGlmIChlbCAmJiBlbCAhPT0gcHJldikge1xuICAgICAgICBpZiAocHJvcHMubW9kZSAhPT0gXCJvdXRpblwiKVxuICAgICAgICAgIGVudGVyVHJhbnNpdGlvbihlbCwgcHJldik7XG4gICAgICAgIGVsc2UgaWYgKGZpcnN0KVxuICAgICAgICAgIHNldDEoZWwpO1xuICAgICAgfVxuICAgICAgaWYgKHByZXYgJiYgcHJldiAhPT0gZWwgJiYgcHJvcHMubW9kZSAhPT0gXCJpbm91dFwiKVxuICAgICAgICBleGl0VHJhbnNpdGlvbihlbCwgcHJldik7XG4gICAgICBmaXJzdCA9IGZhbHNlO1xuICAgICAgcmV0dXJuIGVsO1xuICAgIH0pO1xuICB9KTtcbiAgcmV0dXJuIFtzMSwgczJdO1xufTtcbmZ1bmN0aW9uIGdldFJlY3QoZWxlbWVudCkge1xuICBjb25zdCB7XG4gICAgdG9wLFxuICAgIGJvdHRvbSxcbiAgICBsZWZ0LFxuICAgIHJpZ2h0LFxuICAgIHdpZHRoLFxuICAgIGhlaWdodFxuICB9ID0gZWxlbWVudC5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKTtcbiAgY29uc3QgcGFyZW50UmVjdCA9IGVsZW1lbnQucGFyZW50Tm9kZS5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKTtcbiAgcmV0dXJuIHtcbiAgICB0b3A6IHRvcCAtIHBhcmVudFJlY3QudG9wLFxuICAgIGJvdHRvbSxcbiAgICBsZWZ0OiBsZWZ0IC0gcGFyZW50UmVjdC5sZWZ0LFxuICAgIHJpZ2h0LFxuICAgIHdpZHRoLFxuICAgIGhlaWdodFxuICB9O1xufVxuY29uc3QgVHJhbnNpdGlvbkdyb3VwID0gKHByb3BzKSA9PiB7XG4gIGNvbnN0IHJlc29sdmVkID0gY2hpbGRyZW4oKCkgPT4gcHJvcHMuY2hpbGRyZW4pO1xuICBjb25zdCBjbGFzc25hbWVzID0gY3JlYXRlTWVtbygoKSA9PiB7XG4gICAgY29uc3QgbmFtZSA9IHByb3BzLm5hbWUgfHwgXCJzXCI7XG4gICAgcmV0dXJuIHtcbiAgICAgIGVudGVyQWN0aXZlQ2xhc3M6IHByb3BzLmVudGVyQWN0aXZlQ2xhc3MgfHwgbmFtZSArIFwiLWVudGVyLWFjdGl2ZVwiLFxuICAgICAgZW50ZXJDbGFzczogcHJvcHMuZW50ZXJDbGFzcyB8fCBuYW1lICsgXCItZW50ZXJcIixcbiAgICAgIGVudGVyVG9DbGFzczogcHJvcHMuZW50ZXJUb0NsYXNzIHx8IG5hbWUgKyBcIi1lbnRlci10b1wiLFxuICAgICAgZXhpdEFjdGl2ZUNsYXNzOiBwcm9wcy5leGl0QWN0aXZlQ2xhc3MgfHwgbmFtZSArIFwiLWV4aXQtYWN0aXZlXCIsXG4gICAgICBleGl0Q2xhc3M6IHByb3BzLmV4aXRDbGFzcyB8fCBuYW1lICsgXCItZXhpdFwiLFxuICAgICAgZXhpdFRvQ2xhc3M6IHByb3BzLmV4aXRUb0NsYXNzIHx8IG5hbWUgKyBcIi1leGl0LXRvXCIsXG4gICAgICBtb3ZlQ2xhc3M6IHByb3BzLm1vdmVDbGFzcyB8fCBuYW1lICsgXCItbW92ZVwiXG4gICAgfTtcbiAgfSk7XG4gIGNvbnN0IHtcbiAgICBvbkJlZm9yZUVudGVyLFxuICAgIG9uRW50ZXIsXG4gICAgb25BZnRlckVudGVyLFxuICAgIG9uQmVmb3JlRXhpdCxcbiAgICBvbkV4aXQsXG4gICAgb25BZnRlckV4aXRcbiAgfSA9IHByb3BzO1xuICBjb25zdCBbY29tYmluZWQsIHNldENvbWJpbmVkXSA9IGNyZWF0ZVNpZ25hbCgpO1xuICBsZXQgcDIgPSBbXTtcbiAgbGV0IGZpcnN0ID0gdHJ1ZTtcbiAgY3JlYXRlQ29tcHV0ZWQoKCkgPT4ge1xuICAgIGNvbnN0IGMyID0gcmVzb2x2ZWQoKTtcbiAgICBjb25zdCBjb21iID0gWy4uLmMyXTtcbiAgICBjb25zdCBuZXh0ID0gbmV3IFNldChjMik7XG4gICAgY29uc3QgcHJldiA9IG5ldyBTZXQocDIpO1xuICAgIGNvbnN0IGVudGVyQ2xhc3NlcyA9IGNsYXNzbmFtZXMoKS5lbnRlckNsYXNzLnNwbGl0KFwiIFwiKTtcbiAgICBjb25zdCBlbnRlckFjdGl2ZUNsYXNzZXMgPSBjbGFzc25hbWVzKCkuZW50ZXJBY3RpdmVDbGFzcy5zcGxpdChcIiBcIik7XG4gICAgY29uc3QgZW50ZXJUb0NsYXNzZXMgPSBjbGFzc25hbWVzKCkuZW50ZXJUb0NsYXNzLnNwbGl0KFwiIFwiKTtcbiAgICBjb25zdCBleGl0Q2xhc3NlcyA9IGNsYXNzbmFtZXMoKS5leGl0Q2xhc3Muc3BsaXQoXCIgXCIpO1xuICAgIGNvbnN0IGV4aXRBY3RpdmVDbGFzc2VzID0gY2xhc3NuYW1lcygpLmV4aXRBY3RpdmVDbGFzcy5zcGxpdChcIiBcIik7XG4gICAgY29uc3QgZXhpdFRvQ2xhc3NlcyA9IGNsYXNzbmFtZXMoKS5leGl0VG9DbGFzcy5zcGxpdChcIiBcIik7XG4gICAgZm9yIChsZXQgaTIgPSAwOyBpMiA8IGMyLmxlbmd0aDsgaTIrKykge1xuICAgICAgY29uc3QgZWwgPSBjMltpMl07XG4gICAgICBpZiAoIWZpcnN0ICYmICFwcmV2LmhhcyhlbCkpIHtcbiAgICAgICAgbGV0IGVuZFRyYW5zaXRpb24gPSBmdW5jdGlvbihlMikge1xuICAgICAgICAgIGlmIChlbCAmJiAoIWUyIHx8IGUyLnRhcmdldCA9PT0gZWwpKSB7XG4gICAgICAgICAgICBlbC5yZW1vdmVFdmVudExpc3RlbmVyKFwidHJhbnNpdGlvbmVuZFwiLCBlbmRUcmFuc2l0aW9uKTtcbiAgICAgICAgICAgIGVsLnJlbW92ZUV2ZW50TGlzdGVuZXIoXCJhbmltYXRpb25lbmRcIiwgZW5kVHJhbnNpdGlvbik7XG4gICAgICAgICAgICBlbC5jbGFzc0xpc3QucmVtb3ZlKC4uLmVudGVyQWN0aXZlQ2xhc3Nlcyk7XG4gICAgICAgICAgICBlbC5jbGFzc0xpc3QucmVtb3ZlKC4uLmVudGVyVG9DbGFzc2VzKTtcbiAgICAgICAgICAgIG9uQWZ0ZXJFbnRlciAmJiBvbkFmdGVyRW50ZXIoZWwpO1xuICAgICAgICAgIH1cbiAgICAgICAgfTtcbiAgICAgICAgb25CZWZvcmVFbnRlciAmJiBvbkJlZm9yZUVudGVyKGVsKTtcbiAgICAgICAgZWwuY2xhc3NMaXN0LmFkZCguLi5lbnRlckNsYXNzZXMpO1xuICAgICAgICBlbC5jbGFzc0xpc3QuYWRkKC4uLmVudGVyQWN0aXZlQ2xhc3Nlcyk7XG4gICAgICAgIG5leHRGcmFtZSgoKSA9PiB7XG4gICAgICAgICAgZWwuY2xhc3NMaXN0LnJlbW92ZSguLi5lbnRlckNsYXNzZXMpO1xuICAgICAgICAgIGVsLmNsYXNzTGlzdC5hZGQoLi4uZW50ZXJUb0NsYXNzZXMpO1xuICAgICAgICAgIG9uRW50ZXIgJiYgb25FbnRlcihlbCwgKCkgPT4gZW5kVHJhbnNpdGlvbigpKTtcbiAgICAgICAgICBpZiAoIW9uRW50ZXIgfHwgb25FbnRlci5sZW5ndGggPCAyKSB7XG4gICAgICAgICAgICBlbC5hZGRFdmVudExpc3RlbmVyKFwidHJhbnNpdGlvbmVuZFwiLCBlbmRUcmFuc2l0aW9uKTtcbiAgICAgICAgICAgIGVsLmFkZEV2ZW50TGlzdGVuZXIoXCJhbmltYXRpb25lbmRcIiwgZW5kVHJhbnNpdGlvbik7XG4gICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICAgIH1cbiAgICB9XG4gICAgZm9yIChsZXQgaTIgPSAwOyBpMiA8IHAyLmxlbmd0aDsgaTIrKykge1xuICAgICAgY29uc3Qgb2xkID0gcDJbaTJdO1xuICAgICAgaWYgKCFuZXh0LmhhcyhvbGQpICYmIG9sZC5wYXJlbnROb2RlKSB7XG4gICAgICAgIGxldCBlbmRUcmFuc2l0aW9uID0gZnVuY3Rpb24oZTIpIHtcbiAgICAgICAgICBpZiAoIWUyIHx8IGUyLnRhcmdldCA9PT0gb2xkKSB7XG4gICAgICAgICAgICBvbGQucmVtb3ZlRXZlbnRMaXN0ZW5lcihcInRyYW5zaXRpb25lbmRcIiwgZW5kVHJhbnNpdGlvbik7XG4gICAgICAgICAgICBvbGQucmVtb3ZlRXZlbnRMaXN0ZW5lcihcImFuaW1hdGlvbmVuZFwiLCBlbmRUcmFuc2l0aW9uKTtcbiAgICAgICAgICAgIG9sZC5jbGFzc0xpc3QucmVtb3ZlKC4uLmV4aXRBY3RpdmVDbGFzc2VzKTtcbiAgICAgICAgICAgIG9sZC5jbGFzc0xpc3QucmVtb3ZlKC4uLmV4aXRUb0NsYXNzZXMpO1xuICAgICAgICAgICAgb25BZnRlckV4aXQgJiYgb25BZnRlckV4aXQob2xkKTtcbiAgICAgICAgICAgIHAyID0gcDIuZmlsdGVyKChpMykgPT4gaTMgIT09IG9sZCk7XG4gICAgICAgICAgICBzZXRDb21iaW5lZChwMik7XG4gICAgICAgICAgfVxuICAgICAgICB9O1xuICAgICAgICBjb21iLnNwbGljZShpMiwgMCwgb2xkKTtcbiAgICAgICAgb25CZWZvcmVFeGl0ICYmIG9uQmVmb3JlRXhpdChvbGQpO1xuICAgICAgICBvbGQuY2xhc3NMaXN0LmFkZCguLi5leGl0Q2xhc3Nlcyk7XG4gICAgICAgIG9sZC5jbGFzc0xpc3QuYWRkKC4uLmV4aXRBY3RpdmVDbGFzc2VzKTtcbiAgICAgICAgbmV4dEZyYW1lKCgpID0+IHtcbiAgICAgICAgICBvbGQuY2xhc3NMaXN0LnJlbW92ZSguLi5leGl0Q2xhc3Nlcyk7XG4gICAgICAgICAgb2xkLmNsYXNzTGlzdC5hZGQoLi4uZXhpdFRvQ2xhc3Nlcyk7XG4gICAgICAgIH0pO1xuICAgICAgICBvbkV4aXQgJiYgb25FeGl0KG9sZCwgKCkgPT4gZW5kVHJhbnNpdGlvbigpKTtcbiAgICAgICAgaWYgKCFvbkV4aXQgfHwgb25FeGl0Lmxlbmd0aCA8IDIpIHtcbiAgICAgICAgICBvbGQuYWRkRXZlbnRMaXN0ZW5lcihcInRyYW5zaXRpb25lbmRcIiwgZW5kVHJhbnNpdGlvbik7XG4gICAgICAgICAgb2xkLmFkZEV2ZW50TGlzdGVuZXIoXCJhbmltYXRpb25lbmRcIiwgZW5kVHJhbnNpdGlvbik7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG4gICAgcDIgPSBjb21iO1xuICAgIHNldENvbWJpbmVkKGNvbWIpO1xuICB9KTtcbiAgY3JlYXRlRWZmZWN0KChub2RlcykgPT4ge1xuICAgIGNvbnN0IGMyID0gY29tYmluZWQoKTtcbiAgICBjMi5mb3JFYWNoKChjaGlsZCkgPT4ge1xuICAgICAgbGV0IG4yO1xuICAgICAgaWYgKCEobjIgPSBub2Rlcy5nZXQoY2hpbGQpKSkge1xuICAgICAgICBub2Rlcy5zZXQoY2hpbGQsIG4yID0ge1xuICAgICAgICAgIHBvczogZ2V0UmVjdChjaGlsZCksXG4gICAgICAgICAgbmV3OiAhZmlyc3RcbiAgICAgICAgfSk7XG4gICAgICB9IGVsc2UgaWYgKG4yLm5ldykge1xuICAgICAgICBuMi5uZXcgPSBmYWxzZTtcbiAgICAgICAgbjIubmV3UG9zID0gZ2V0UmVjdChjaGlsZCk7XG4gICAgICB9XG4gICAgICBpZiAobjIubmV3KSB7XG4gICAgICAgIGNoaWxkLmFkZEV2ZW50TGlzdGVuZXIoXCJ0cmFuc2l0aW9uZW5kXCIsICgpID0+IHtcbiAgICAgICAgICBuMi5uZXcgPSBmYWxzZTtcbiAgICAgICAgICBjaGlsZC5wYXJlbnROb2RlICYmIChuMi5uZXdQb3MgPSBnZXRSZWN0KGNoaWxkKSk7XG4gICAgICAgIH0sIHtcbiAgICAgICAgICBvbmNlOiB0cnVlXG4gICAgICAgIH0pO1xuICAgICAgfVxuICAgICAgbjIubmV3UG9zICYmIChuMi5wb3MgPSBuMi5uZXdQb3MpO1xuICAgICAgbjIubmV3UG9zID0gZ2V0UmVjdChjaGlsZCk7XG4gICAgfSk7XG4gICAgaWYgKGZpcnN0KSB7XG4gICAgICBmaXJzdCA9IGZhbHNlO1xuICAgICAgcmV0dXJuIG5vZGVzO1xuICAgIH1cbiAgICBjMi5mb3JFYWNoKChjaGlsZCkgPT4ge1xuICAgICAgY29uc3QgYzMgPSBub2Rlcy5nZXQoY2hpbGQpO1xuICAgICAgY29uc3Qgb2xkUG9zID0gYzMucG9zO1xuICAgICAgY29uc3QgbmV3UG9zID0gYzMubmV3UG9zO1xuICAgICAgY29uc3QgZHggPSBvbGRQb3MubGVmdCAtIG5ld1Bvcy5sZWZ0O1xuICAgICAgY29uc3QgZHkgPSBvbGRQb3MudG9wIC0gbmV3UG9zLnRvcDtcbiAgICAgIGlmIChkeCB8fCBkeSkge1xuICAgICAgICBjMy5tb3ZlZCA9IHRydWU7XG4gICAgICAgIGNvbnN0IHMyID0gY2hpbGQuc3R5bGU7XG4gICAgICAgIHMyLnRyYW5zZm9ybSA9IGB0cmFuc2xhdGUoJHtkeH1weCwke2R5fXB4KWA7XG4gICAgICAgIHMyLnRyYW5zaXRpb25EdXJhdGlvbiA9IFwiMHNcIjtcbiAgICAgIH1cbiAgICB9KTtcbiAgICBkb2N1bWVudC5ib2R5Lm9mZnNldEhlaWdodDtcbiAgICBjMi5mb3JFYWNoKChjaGlsZCkgPT4ge1xuICAgICAgY29uc3QgYzMgPSBub2Rlcy5nZXQoY2hpbGQpO1xuICAgICAgaWYgKGMzLm1vdmVkKSB7XG4gICAgICAgIGxldCBlbmRUcmFuc2l0aW9uID0gZnVuY3Rpb24oZTIpIHtcbiAgICAgICAgICBpZiAoZTIgJiYgZTIudGFyZ2V0ICE9PSBjaGlsZCB8fCAhY2hpbGQucGFyZW50Tm9kZSlcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICBpZiAoIWUyIHx8IC90cmFuc2Zvcm0kLy50ZXN0KGUyLnByb3BlcnR5TmFtZSkpIHtcbiAgICAgICAgICAgIGNoaWxkLnJlbW92ZUV2ZW50TGlzdGVuZXIoXCJ0cmFuc2l0aW9uZW5kXCIsIGVuZFRyYW5zaXRpb24pO1xuICAgICAgICAgICAgY2hpbGQuY2xhc3NMaXN0LnJlbW92ZSguLi5tb3ZlQ2xhc3Nlcyk7XG4gICAgICAgICAgfVxuICAgICAgICB9O1xuICAgICAgICBjMy5tb3ZlZCA9IGZhbHNlO1xuICAgICAgICBjb25zdCBzMiA9IGNoaWxkLnN0eWxlO1xuICAgICAgICBjb25zdCBtb3ZlQ2xhc3NlcyA9IGNsYXNzbmFtZXMoKS5tb3ZlQ2xhc3Muc3BsaXQoXCIgXCIpO1xuICAgICAgICBjaGlsZC5jbGFzc0xpc3QuYWRkKC4uLm1vdmVDbGFzc2VzKTtcbiAgICAgICAgczIudHJhbnNmb3JtID0gczIudHJhbnNpdGlvbkR1cmF0aW9uID0gXCJcIjtcbiAgICAgICAgY2hpbGQuYWRkRXZlbnRMaXN0ZW5lcihcInRyYW5zaXRpb25lbmRcIiwgZW5kVHJhbnNpdGlvbik7XG4gICAgICB9XG4gICAgfSk7XG4gICAgcmV0dXJuIG5vZGVzO1xuICB9LCAvKiBAX19QVVJFX18gKi8gbmV3IE1hcCgpKTtcbiAgcmV0dXJuIGNvbWJpbmVkO1xufTtcbmZ1bmN0aW9uIGNsaWNrT3V0c2lkZSQxKGVsLCBhY2Nlc3Nvcikge1xuICBjb25zdCBvbkNsaWNrID0gKGUyKSA9PiB7XG4gICAgdmFyIF9hMjtcbiAgICByZXR1cm4gIWVsLmNvbnRhaW5zKGUyLnRhcmdldCkgJiYgKChfYTIgPSBhY2Nlc3NvcigpKSA9PSBudWxsID8gdm9pZCAwIDogX2EyKCkpO1xuICB9O1xuICBkb2N1bWVudC5ib2R5LmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCBvbkNsaWNrKTtcbiAgb25DbGVhbnVwKCgpID0+IGRvY3VtZW50LmJvZHkucmVtb3ZlRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsIG9uQ2xpY2spKTtcbn1cbmZ1bmN0aW9uIGVzY1ByZXNzZWQoXywgYWNjZXNzb3IpIHtcbiAgY29uc3Qgb25LZXlQcmVzcyA9IChlMikgPT4ge1xuICAgIHZhciBfYTIsIF9iMjtcbiAgICBpZiAoZTIua2V5ID09PSBcIkVzY2FwZVwiKSB7XG4gICAgICAoX2EyID0gZG9jdW1lbnQuYWN0aXZlRWxlbWVudCkgPT0gbnVsbCA/IHZvaWQgMCA6IF9hMi5ibHVyKCk7XG4gICAgICAoX2IyID0gYWNjZXNzb3IoKSkgPT0gbnVsbCA/IHZvaWQgMCA6IF9iMigpO1xuICAgIH1cbiAgfTtcbiAgZG9jdW1lbnQuYm9keS5hZGRFdmVudExpc3RlbmVyKFwia2V5ZG93blwiLCBvbktleVByZXNzKTtcbiAgb25DbGVhbnVwKCgpID0+IGRvY3VtZW50LmJvZHkucmVtb3ZlRXZlbnRMaXN0ZW5lcihcImtleWRvd25cIiwgb25LZXlQcmVzcykpO1xufVxuZnVuY3Rpb24gYW5kcm9pZEJhY2tIYW5kbGVyJDEoXywgY29uZmlnKSB7XG4gIGNvbnN0IHtcbiAgICBpc0VuYWJsZWQsXG4gICAgb25DbG9zZVxuICB9ID0gY29uZmlnKCk7XG4gIGlmICghaXNFbmFibGVkKSB7XG4gICAgcmV0dXJuO1xuICB9XG4gIGNvbnN0IHVzZXJPU0lzQW5kcm9pZCA9IGdldFVzZXJBZ2VudCgpLm9zID09PSBcImFuZHJvaWRcIjtcbiAgaWYgKCF1c2VyT1NJc0FuZHJvaWQpIHtcbiAgICByZXR1cm47XG4gIH1cbiAgd2luZG93Lmhpc3RvcnkucHVzaFN0YXRlKFJPVVRFX1NUQVRFLCBcIlwiKTtcbiAgY29uc3QgcG9wc3RhdGVIYW5kbGVyID0gKGV2ZW50KSA9PiB7XG4gICAgZXZlbnQucHJldmVudERlZmF1bHQoKTtcbiAgICBvbkNsb3NlKCk7XG4gIH07XG4gIHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKFwicG9wc3RhdGVcIiwgcG9wc3RhdGVIYW5kbGVyLCB7XG4gICAgb25jZTogdHJ1ZVxuICB9KTtcbiAgb25DbGVhbnVwKCgpID0+IHtcbiAgICB3aW5kb3cucmVtb3ZlRXZlbnRMaXN0ZW5lcihcInBvcHN0YXRlXCIsIHBvcHN0YXRlSGFuZGxlcik7XG4gICAgY3JlYXRlTWFjcm90YXNrKCgpID0+IHtcbiAgICAgIHZhciBfYTI7XG4gICAgICBpZiAoKChfYTIgPSB3aW5kb3cuaGlzdG9yeS5zdGF0ZSkgPT0gbnVsbCA/IHZvaWQgMCA6IF9hMltST1VURV9TVEFURV9LRVldKSA9PT0gdHJ1ZSkge1xuICAgICAgICB3aW5kb3cuaGlzdG9yeS5iYWNrKCk7XG4gICAgICB9XG4gICAgfSk7XG4gIH0pO1xufVxuY29uc3QgUk9VVEVfU1RBVEVfS0VZID0gXCJhbmRyb2lkQmFja0hhbmRsZXJcIjtcbmNvbnN0IFJPVVRFX1NUQVRFID0ge1xuICBbUk9VVEVfU1RBVEVfS0VZXTogdHJ1ZVxufTtcbmNvbnN0IF90bXBsJCR3ID0gLyogQF9fUFVSRV9fICovIHRlbXBsYXRlJDEoYDxzdmc+PHBhdGggZmlsbC1ydWxlPVwiZXZlbm9kZFwiIGNsaXAtcnVsZT1cImV2ZW5vZGRcIiBkPVwiTTEwLjIxMjIgMTQuMzQwN0MxMC41Mzg0IDE0LjA4NTQgMTAuNTk1OSAxMy42MTQgMTAuMzQwNiAxMy4yODc4TDYuMjAyMzcgOC4wMDAwM0wxMC4zNDA2IDIuNzEyMjdDMTAuNTk1OSAyLjM4NjA3IDEwLjUzODQgMS45MTQ2OSAxMC4yMTIyIDEuNjU5NEM5Ljg4NjA0IDEuNDA0MTIgOS40MTQ2NSAxLjQ2MTYxIDkuMTU5MzcgMS43ODc4TDQuNjU5MzcgNy41Mzc4QzQuNDQ2ODggNy44MDkzMiA0LjQ0Njg4IDguMTkwNzQgNC42NTkzNyA4LjQ2MjI2TDkuMTU5MzcgMTQuMjEyM0M5LjQxNDY1IDE0LjUzODUgOS44ODYwNCAxNC41OTU5IDEwLjIxMjIgMTQuMzQwN1pcIj48L3BhdGg+PC9zdmc+YCwgNCwgdHJ1ZSk7XG5jb25zdCByb3RhdGlvbkRlZ3JlZXMgPSB7XG4gIGxlZnQ6IDAsXG4gIHRvcDogOTAsXG4gIHJpZ2h0OiAxODAsXG4gIGJvdHRvbTogMjcwXG59O1xuY29uc3QgQXJyb3dJY29uID0gKHByb3BzKSA9PiB7XG4gIGNvbnN0IHRoZW1lID0gdXNlVGhlbWUoKTtcbiAgY29uc3QgZmlsbCA9ICgpID0+IHByb3BzLmZpbGwgfHwgdGhlbWUuY29sb3JzLmljb24uc2Vjb25kYXJ5O1xuICBjb25zdCBkaXJlY3Rpb24gPSAoKSA9PiBwcm9wcy5kaXJlY3Rpb24gfHwgXCJsZWZ0XCI7XG4gIGNvbnN0IFN2ZyA9IHN0eWxlZChcInN2Z1wiKWBcbiAgICAgICAgdHJhbnNmb3JtOiByb3RhdGUoJHsocHJvcHMyKSA9PiByb3RhdGlvbkRlZ3JlZXNbcHJvcHMyLnN2Z0RpcmVjdGlvbl19ZGVnKTtcbiAgICAgICAgdHJhbnNpdGlvbjogdHJhbnNmb3JtIDAuMXMgZWFzZS1pbi1vdXQ7XG4gICAgYDtcbiAgcmV0dXJuIGNyZWF0ZUNvbXBvbmVudChTdmcsIHtcbiAgICB4bWxuczogXCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wiLFxuICAgIHdpZHRoOiBcIjE2XCIsXG4gICAgaGVpZ2h0OiBcIjE2XCIsXG4gICAgdmlld0JveDogXCIwIDAgMTYgMTZcIixcbiAgICBmaWxsOiBcIm5vbmVcIixcbiAgICBnZXQgc3ZnRGlyZWN0aW9uKCkge1xuICAgICAgcmV0dXJuIGRpcmVjdGlvbigpO1xuICAgIH0sXG4gICAgZ2V0IGNoaWxkcmVuKCkge1xuICAgICAgY29uc3QgX2VsJCA9IF90bXBsJCR3LmNsb25lTm9kZSh0cnVlKTtcbiAgICAgIGNyZWF0ZVJlbmRlckVmZmVjdCgoKSA9PiBzZXRBdHRyaWJ1dGUoX2VsJCwgXCJmaWxsXCIsIGZpbGwoKSkpO1xuICAgICAgcmV0dXJuIF9lbCQ7XG4gICAgfVxuICB9KTtcbn07XG5jb25zdCBfdG1wbCQkdiA9IC8qIEBfX1BVUkVfXyAqLyB0ZW1wbGF0ZSQxKGA8c3ZnIHhtbG5zPVwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcIiB3aWR0aD1cIjE2XCIgaGVpZ2h0PVwiMTZcIiB2aWV3Qm94PVwiMCAwIDE2IDE2XCIgZmlsbD1cIm5vbmVcIj48cGF0aCBmaWxsLXJ1bGU9XCJldmVub2RkXCIgY2xpcC1ydWxlPVwiZXZlbm9kZFwiIGQ9XCJNMi43MTk2NiAyLjcxOTY4QzMuMDEyNTUgMi40MjY3OCAzLjQ4NzQzIDIuNDI2NzcgMy43ODAzMiAyLjcxOTY2TDguMDAwMDIgNi45MzkyNUwxMi4yMTk3IDIuNzE5NjdDMTIuNTEyNiAyLjQyNjc3IDEyLjk4NzQgMi40MjY3OCAxMy4yODAzIDIuNzE5NjdDMTMuNTczMiAzLjAxMjU3IDEzLjU3MzIgMy40ODc0NCAxMy4yODAzIDMuNzgwMzNMOS4wNjA2OCA3Ljk5OTkxTDEzLjI4MDMgMTIuMjE5N0MxMy41NzMyIDEyLjUxMjYgMTMuNTczMiAxMi45ODc0IDEzLjI4MDMgMTMuMjgwM0MxMi45ODc0IDEzLjU3MzIgMTIuNTEyNiAxMy41NzMyIDEyLjIxOTcgMTMuMjgwM0w4LjAwMDAyIDkuMDYwNTdMMy43ODAzMyAxMy4yODAzQzMuNDg3NDQgMTMuNTczMiAzLjAxMjU3IDEzLjU3MzIgMi43MTk2NyAxMy4yODAzQzIuNDI2NzggMTIuOTg3NCAyLjQyNjc3IDEyLjUxMjYgMi43MTk2NyAxMi4yMTk3TDYuOTM5MzYgNy45OTk5MUwyLjcxOTY4IDMuNzgwMzRDMi40MjY3OCAzLjQ4NzQ1IDIuNDI2NzcgMy4wMTI1NyAyLjcxOTY2IDIuNzE5NjhaXCI+PC9wYXRoPjwvc3ZnPmApO1xuY29uc3QgQ2xvc2VJY29uID0gKHByb3BzKSA9PiB7XG4gIGNvbnN0IHRoZW1lID0gdXNlVGhlbWUoKTtcbiAgY29uc3QgZmlsbCA9ICgpID0+IHByb3BzLmZpbGwgfHwgdGhlbWUuY29sb3JzLmljb24uc2Vjb25kYXJ5O1xuICByZXR1cm4gKCgpID0+IHtcbiAgICBjb25zdCBfZWwkID0gX3RtcGwkJHYuY2xvbmVOb2RlKHRydWUpLCBfZWwkMiA9IF9lbCQuZmlyc3RDaGlsZDtcbiAgICBjcmVhdGVSZW5kZXJFZmZlY3QoKCkgPT4gc2V0QXR0cmlidXRlKF9lbCQyLCBcImZpbGxcIiwgZmlsbCgpKSk7XG4gICAgcmV0dXJuIF9lbCQ7XG4gIH0pKCk7XG59O1xuY29uc3QgSWNvbkJ1dHRvblN0eWxlZCA9IHN0eWxlZC5idXR0b25gXG4gICAgcGFkZGluZzogMDtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgd2lkdGg6IDMycHg7XG4gICAgaGVpZ2h0OiAzMnB4O1xuICAgIGJvcmRlci1yYWRpdXM6IDUwJTtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkeyhwcm9wcykgPT4gcHJvcHMudGhlbWUuY29sb3JzLmJhY2tncm91bmQudGludH07XG4gICAgYm9yZGVyOiBub25lO1xuICAgIGN1cnNvcjogcG9pbnRlcjtcblxuICAgIHRyYW5zaXRpb246IHRyYW5zZm9ybSAwLjEyNXMgZWFzZS1pbi1vdXQ7XG5cbiAgICAke21lZGlhTm90VG91Y2h9IHtcbiAgICAgICAgJjpob3ZlciB7XG4gICAgICAgICAgICB0cmFuc2Zvcm06IHNjYWxlKDEuMDQpO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgJjphY3RpdmUge1xuICAgICAgICB0cmFuc2Zvcm06IHNjYWxlKDAuOTYpO1xuICAgIH1cblxuICAgICR7bWVkaWFUb3VjaH0ge1xuICAgICAgICAmOmFjdGl2ZSB7XG4gICAgICAgICAgICB0cmFuc2Zvcm06IHNjYWxlKDAuOTIpO1xuICAgICAgICB9XG4gICAgfVxuYDtcbmNvbnN0IEljb25CdXR0b24gPSAocHJvcHMpID0+IHtcbiAgY29uc3QgZGF0YUF0dHJzID0gdXNlRGF0YUF0dHJpYnV0ZXMocHJvcHMpO1xuICBjb25zdCBpY29uID0gKCkgPT4gcHJvcHMuaWNvbiB8fCBcImNsb3NlXCI7XG4gIHJldHVybiBjcmVhdGVDb21wb25lbnQoSWNvbkJ1dHRvblN0eWxlZCwgbWVyZ2VQcm9wcyh7XG4gICAgZ2V0IFtcImNsYXNzXCJdKCkge1xuICAgICAgcmV0dXJuIHByb3BzLmNsYXNzO1xuICAgIH0sXG4gICAgb25DbGljazogKCkgPT4gcHJvcHMub25DbGljaygpLFxuICAgIFwiZGF0YS10Yy1pY29uLWJ1dHRvblwiOiBcInRydWVcIlxuICB9LCBkYXRhQXR0cnMsIHtcbiAgICBnZXQgY2hpbGRyZW4oKSB7XG4gICAgICByZXR1cm4gW2NyZWF0ZUNvbXBvbmVudChTaG93LCB7XG4gICAgICAgIGdldCB3aGVuKCkge1xuICAgICAgICAgIHJldHVybiAhIXByb3BzLmNoaWxkcmVuO1xuICAgICAgICB9LFxuICAgICAgICBnZXQgY2hpbGRyZW4oKSB7XG4gICAgICAgICAgcmV0dXJuIHByb3BzLmNoaWxkcmVuO1xuICAgICAgICB9XG4gICAgICB9KSwgY3JlYXRlQ29tcG9uZW50KFNob3csIHtcbiAgICAgICAgZ2V0IHdoZW4oKSB7XG4gICAgICAgICAgcmV0dXJuICFwcm9wcy5jaGlsZHJlbjtcbiAgICAgICAgfSxcbiAgICAgICAgZ2V0IGNoaWxkcmVuKCkge1xuICAgICAgICAgIHJldHVybiBjcmVhdGVDb21wb25lbnQoU3dpdGNoLCB7XG4gICAgICAgICAgICBnZXQgY2hpbGRyZW4oKSB7XG4gICAgICAgICAgICAgIHJldHVybiBbY3JlYXRlQ29tcG9uZW50KE1hdGNoLCB7XG4gICAgICAgICAgICAgICAgZ2V0IHdoZW4oKSB7XG4gICAgICAgICAgICAgICAgICByZXR1cm4gaWNvbigpID09PSBcImNsb3NlXCI7XG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICBnZXQgY2hpbGRyZW4oKSB7XG4gICAgICAgICAgICAgICAgICByZXR1cm4gY3JlYXRlQ29tcG9uZW50KENsb3NlSWNvbiwge1xuICAgICAgICAgICAgICAgICAgICBnZXQgZmlsbCgpIHtcbiAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gcHJvcHMuZmlsbDtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICB9KSwgY3JlYXRlQ29tcG9uZW50KE1hdGNoLCB7XG4gICAgICAgICAgICAgICAgZ2V0IHdoZW4oKSB7XG4gICAgICAgICAgICAgICAgICByZXR1cm4gaWNvbigpID09PSBcImFycm93XCI7XG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICBnZXQgY2hpbGRyZW4oKSB7XG4gICAgICAgICAgICAgICAgICByZXR1cm4gY3JlYXRlQ29tcG9uZW50KEFycm93SWNvbiwge1xuICAgICAgICAgICAgICAgICAgICBnZXQgZmlsbCgpIHtcbiAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gcHJvcHMuZmlsbDtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICB9KSwgY3JlYXRlQ29tcG9uZW50KE1hdGNoLCB7XG4gICAgICAgICAgICAgICAgZ2V0IHdoZW4oKSB7XG4gICAgICAgICAgICAgICAgICByZXR1cm4gaWNvbigpID09PSBcInF1ZXN0aW9uXCI7XG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICBnZXQgY2hpbGRyZW4oKSB7XG4gICAgICAgICAgICAgICAgICByZXR1cm4gY3JlYXRlQ29tcG9uZW50KFF1ZXN0aW9uSWNvbiwge1xuICAgICAgICAgICAgICAgICAgICBnZXQgZmlsbCgpIHtcbiAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gcHJvcHMuZmlsbDtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICB9KSwgY3JlYXRlQ29tcG9uZW50KE1hdGNoLCB7XG4gICAgICAgICAgICAgICAgZ2V0IHdoZW4oKSB7XG4gICAgICAgICAgICAgICAgICByZXR1cm4gdHlwZW9mIGljb24oKSAhPT0gXCJzdHJpbmdcIjtcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIGdldCBjaGlsZHJlbigpIHtcbiAgICAgICAgICAgICAgICAgIHJldHVybiBpY29uKCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICB9KV07XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICAgIH0pXTtcbiAgICB9XG4gIH0pKTtcbn07XG5jb25zdCBib3JkZXJzJDQgPSB7XG4gIG06IFwiMjRweFwiLFxuICBzOiBcIjE2cHhcIixcbiAgbm9uZTogXCIwXCJcbn07XG5jb25zdCBNb2RhbEJhY2tncm91bmRTdHlsZWQgPSBzdHlsZWQuZGl2YFxuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgcG9zaXRpb246IGZpeGVkO1xuICAgIHotaW5kZXg6IDEwMDA7XG4gICAgbGVmdDogMDtcbiAgICB0b3A6IDA7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgaGVpZ2h0OiAxMDAlO1xuICAgIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMCwgMCwgMCwgMC40KTtcbiAgICBwYWRkaW5nOiAyMHB4IDA7XG4gICAgb3ZlcmZsb3cteTogYXV0bztcblxuICAgICR7bWVkaWEoXCJtb2JpbGVcIil9IHtcbiAgICAgICAgcGFkZGluZy1ib3R0b206IDA7XG4gICAgfVxuYDtcbmNvbnN0IE1vZGFsV3JhcHBlckNsYXNzID0gdWBcbiAgICBib3gtc2hhZG93OiAwIDRweCAxNnB4IHJnYmEoMCwgMCwgMCwgMC4wOCksIDAgMTZweCA2NHB4IHJnYmEoMCwgMCwgMCwgMC4xNik7XG4gICAgd2lkdGg6IGZpdC1jb250ZW50O1xuICAgIG1hcmdpbjogYXV0bztcblxuICAgICR7bWVkaWEoXCJtb2JpbGVcIil9IHtcbiAgICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICAgIGhlaWdodDogZml0LWNvbnRlbnQ7XG4gICAgICAgIG1hcmdpbjogYXV0byAwIDAgMDtcbiAgICB9XG5gO1xuY29uc3QgTW9kYWxCb2R5U3R5bGVkID0gc3R5bGVkLmRpdmBcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgbWluLWhlaWdodDogMTAwcHg7XG4gICAgd2lkdGg6IDQxNnB4O1xuICAgIHBhZGRpbmc6IDQ0cHggNTZweCAyNHB4O1xuXG4gICAgYm94LXNoYWRvdzogMCAycHggOHB4IDAgcmdiYSgwLCAwLCAwLCAwLjA0KTtcblxuICAgIGJhY2tncm91bmQtY29sb3I6ICR7KHByb3BzKSA9PiBwcm9wcy50aGVtZS5jb2xvcnMuYmFja2dyb3VuZC5wcmltYXJ5fTtcbiAgICBib3JkZXItcmFkaXVzOiAkeyhwcm9wcykgPT4gYm9yZGVycyQ0W3Byb3BzLnRoZW1lLmJvcmRlclJhZGl1c119O1xuXG4gICAgJHttZWRpYShcIm1vYmlsZVwiKX0ge1xuICAgICAgICB3aWR0aDogMTAwJTtcbiAgICB9XG5gO1xuY29uc3QgQ2xvc2VCdXR0b25TdHlsZWQgPSBzdHlsZWQoSWNvbkJ1dHRvbilgXG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIHJpZ2h0OiAxNnB4O1xuICAgIHRvcDogMTZweDtcbmA7XG5jb25zdCBNb2RhbEZvb3RlclN0eWxlZCA9IHN0eWxlZC5kaXZgXG4gICAgZGlzcGxheTogZmxleDtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICBwYWRkaW5nOiAxNnB4IDE2cHggMTZweCAxOHB4O1xuICAgIGJvcmRlci1yYWRpdXM6IDAgMCAkeyhwcm9wcykgPT4gYm9yZGVycyQ0W3Byb3BzLnRoZW1lLmJvcmRlclJhZGl1c119XG4gICAgICAgICR7KHByb3BzKSA9PiBib3JkZXJzJDRbcHJvcHMudGhlbWUuYm9yZGVyUmFkaXVzXX07XG5gO1xuY29uc3QgUXVlc3Rpb25CdXR0b25TdHlsZWQgPSBzdHlsZWQoSWNvbkJ1dHRvbilgXG4gICAgYmFja2dyb3VuZC1jb2xvcjogJHsocHJvcHMpID0+IHJnYmEocHJvcHMudGhlbWUuY29sb3JzLmljb24uc2Vjb25kYXJ5LCAwLjEyKX07XG5gO1xuY2xhc3MgQW5pbWF0aW9uVGltZWxpbmVOb29wIHtcbiAgY29uc3RydWN0b3IoKSB7XG4gICAgX19wdWJsaWNGaWVsZCh0aGlzLCBcImN1cnJlbnRUaW1lXCIsIDApO1xuICB9XG59XG5jb25zdCBfQW5pbWF0aW9uTm9vcCA9IGNsYXNzIHtcbiAgY29uc3RydWN0b3IoKSB7XG4gICAgX19wdWJsaWNGaWVsZCh0aGlzLCBcImN1cnJlbnRUaW1lXCIsIDApO1xuICAgIF9fcHVibGljRmllbGQodGhpcywgXCJwbGF5YmFja1JhdGVcIiwgMSk7XG4gICAgX19wdWJsaWNGaWVsZCh0aGlzLCBcInN0YXJ0VGltZVwiLCBudWxsKTtcbiAgICBfX3B1YmxpY0ZpZWxkKHRoaXMsIFwidGltZWxpbmVcIiwgbmV3IEFuaW1hdGlvblRpbWVsaW5lTm9vcCgpKTtcbiAgICBfX3B1YmxpY0ZpZWxkKHRoaXMsIFwiZmluaXNoZWRcIiwgUHJvbWlzZS5yZXNvbHZlKHRoaXMpKTtcbiAgICBfX3B1YmxpY0ZpZWxkKHRoaXMsIFwiZWZmZWN0XCIsIG51bGwpO1xuICAgIF9fcHVibGljRmllbGQodGhpcywgXCJpZFwiLCBcIlwiKTtcbiAgICBfX3B1YmxpY0ZpZWxkKHRoaXMsIFwicGVuZGluZ1wiLCBmYWxzZSk7XG4gICAgX19wdWJsaWNGaWVsZCh0aGlzLCBcInBsYXlTdGF0ZVwiLCBcImZpbmlzaGVkXCIpO1xuICAgIF9fcHVibGljRmllbGQodGhpcywgXCJyZXBsYWNlU3RhdGVcIiwgXCJhY3RpdmVcIik7XG4gICAgX19wdWJsaWNGaWVsZCh0aGlzLCBcInJlYWR5XCIsIFByb21pc2UucmVzb2x2ZSh0aGlzKSk7XG4gICAgX19wdWJsaWNGaWVsZCh0aGlzLCBcIm9uY2FuY2VsXCIsIG51bGwpO1xuICAgIF9fcHVibGljRmllbGQodGhpcywgXCJvbmZpbmlzaFwiLCBudWxsKTtcbiAgICBfX3B1YmxpY0ZpZWxkKHRoaXMsIFwib25yZW1vdmVcIiwgbnVsbCk7XG4gIH1cbiAgc3RhdGljIGNyZWF0ZSgpIHtcbiAgICBpZiAoIV9BbmltYXRpb25Ob29wLl9pbnN0YW5jZSkge1xuICAgICAgbG9nV2FybmluZyhcbiAgICAgICAgXCJBbmltYXRpb24gaXMgbm90IHN1cHBvcnRlZCBpbiB0aGlzIGVudmlyb25tZW50OiBwbGVhc2UgY29uc2lkZXIgdXNpbmcgdGhlIGB3ZWItYW5pbWF0aW9ucy1qc2AgcG9seWZpbGwgdG8gcHJvdmlkZSBhIGZhbGxiYWNrIGltcGxlbWVudGF0aW9uIG9mIHRoZSBXZWIgQW5pbWF0aW9ucyBBUEkuXCJcbiAgICAgICk7XG4gICAgICBfQW5pbWF0aW9uTm9vcC5faW5zdGFuY2UgPSBuZXcgX0FuaW1hdGlvbk5vb3AoKTtcbiAgICB9XG4gICAgcmV0dXJuIF9BbmltYXRpb25Ob29wLl9pbnN0YW5jZTtcbiAgfVxuICBjYW5jZWwoKSB7XG4gIH1cbiAgZmluaXNoKCkge1xuICB9XG4gIHBhdXNlKCkge1xuICB9XG4gIHBsYXkoKSB7XG4gIH1cbiAgcmV2ZXJzZSgpIHtcbiAgfVxuICBhZGRFdmVudExpc3RlbmVyKF90eXBlLCBfbGlzdGVuZXIsIF9vcHRpb25zKSB7XG4gIH1cbiAgZGlzcGF0Y2hFdmVudChfZXZlbnQpIHtcbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cbiAgcmVtb3ZlRXZlbnRMaXN0ZW5lcihfdHlwZSwgX2NhbGxiYWNrLCBfb3B0aW9ucykge1xuICB9XG4gIHVwZGF0ZVBsYXliYWNrUmF0ZShfcGxheWJhY2tSYXRlKSB7XG4gIH1cbiAgY29tbWl0U3R5bGVzKCkge1xuICB9XG4gIHBlcnNpc3QoKSB7XG4gIH1cbn07XG5sZXQgQW5pbWF0aW9uTm9vcCA9IF9BbmltYXRpb25Ob29wO1xuX19wdWJsaWNGaWVsZChBbmltYXRpb25Ob29wLCBcIl9pbnN0YW5jZVwiLCBudWxsKTtcbmZ1bmN0aW9uIGFuaW1hdGUoZWxlbWVudCwga2V5ZnJhbWVzLCBvcHRpb25zKSB7XG4gIGlmIChcImFuaW1hdGVcIiBpbiBlbGVtZW50KSB7XG4gICAgcmV0dXJuIGVsZW1lbnQuYW5pbWF0ZShrZXlmcmFtZXMsIG9wdGlvbnMpO1xuICB9XG4gIHJldHVybiBBbmltYXRpb25Ob29wLmNyZWF0ZSgpO1xufVxuY29uc3QgX3RtcGwkJHUgPSAvKiBAX19QVVJFX18gKi8gdGVtcGxhdGUkMShgPGRpdj48L2Rpdj5gKTtcbmNvbnN0IGNsaWNrT3V0c2lkZSA9IGNsaWNrT3V0c2lkZSQxO1xuY29uc3Qga2V5UHJlc3NlZCA9IGVzY1ByZXNzZWQ7XG5jb25zdCBhbmRyb2lkQmFja0hhbmRsZXIgPSBhbmRyb2lkQmFja0hhbmRsZXIkMTtcbmNvbnN0IE1vZGFsID0gKHByb3BzKSA9PiB7XG4gIGNvbnN0IHRoZW1lID0gdXNlVGhlbWUoKTtcbiAgY29uc3QgZGF0YUF0dHJzID0gdXNlRGF0YUF0dHJpYnV0ZXMocHJvcHMpO1xuICBjcmVhdGVFZmZlY3QoKCkgPT4ge1xuICAgIGlmIChwcm9wcy5vcGVuZWQpIHtcbiAgICAgIGRpc2FibGVTY3JvbGwoKTtcbiAgICB9IGVsc2Uge1xuICAgICAgZW5hYmxlU2Nyb2xsKCk7XG4gICAgfVxuICB9KTtcbiAgcmV0dXJuIGNyZWF0ZUNvbXBvbmVudChUcmFuc2l0aW9uLCB7XG4gICAgb25CZWZvcmVFbnRlcjogKGVsKSA9PiB7XG4gICAgICBjb25zdCBkdXJhdGlvbiA9IGlzRGV2aWNlKFwibW9iaWxlXCIpID8gMjAwIDogMTAwO1xuICAgICAgYW5pbWF0ZShlbCwgW3tcbiAgICAgICAgb3BhY2l0eTogMFxuICAgICAgfSwge1xuICAgICAgICBvcGFjaXR5OiAxXG4gICAgICB9XSwge1xuICAgICAgICBkdXJhdGlvblxuICAgICAgfSk7XG4gICAgICBpZiAoaXNEZXZpY2UoXCJtb2JpbGVcIikpIHtcbiAgICAgICAgYW5pbWF0ZShlbC5maXJzdEVsZW1lbnRDaGlsZCwgW3tcbiAgICAgICAgICB0cmFuc2Zvcm06IFwidHJhbnNsYXRlWSgzOTBweClcIlxuICAgICAgICB9LCB7XG4gICAgICAgICAgdHJhbnNmb3JtOiBcInRyYW5zbGF0ZVkoMClcIlxuICAgICAgICB9XSwge1xuICAgICAgICAgIGR1cmF0aW9uXG4gICAgICAgIH0pO1xuICAgICAgfVxuICAgIH0sXG4gICAgb25FeGl0OiAoZWwsIGRvbmUpID0+IHtcbiAgICAgIGNvbnN0IGR1cmF0aW9uID0gaXNEZXZpY2UoXCJtb2JpbGVcIikgPyAyMDAgOiAxMDA7XG4gICAgICBjb25zdCBiYWNrZ3JvdW5kQW5pbWF0aW9uID0gYW5pbWF0ZShlbCwgW3tcbiAgICAgICAgb3BhY2l0eTogMVxuICAgICAgfSwge1xuICAgICAgICBvcGFjaXR5OiAwXG4gICAgICB9XSwge1xuICAgICAgICBkdXJhdGlvblxuICAgICAgfSk7XG4gICAgICBpZiAoaXNEZXZpY2UoXCJtb2JpbGVcIikpIHtcbiAgICAgICAgY29uc3QgY29udGVudEFuaW1hdGlvbiA9IGFuaW1hdGUoZWwuZmlyc3RFbGVtZW50Q2hpbGQsIFt7XG4gICAgICAgICAgdHJhbnNmb3JtOiBcInRyYW5zbGF0ZVkoMClcIlxuICAgICAgICB9LCB7XG4gICAgICAgICAgdHJhbnNmb3JtOiBcInRyYW5zbGF0ZVkoMzkwcHgpXCJcbiAgICAgICAgfV0sIHtcbiAgICAgICAgICBkdXJhdGlvblxuICAgICAgICB9KTtcbiAgICAgICAgUHJvbWlzZS5hbGwoW2JhY2tncm91bmRBbmltYXRpb24uZmluaXNoZWQsIGNvbnRlbnRBbmltYXRpb24uZmluaXNoZWRdKS50aGVuKGRvbmUpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgYmFja2dyb3VuZEFuaW1hdGlvbi5maW5pc2hlZC50aGVuKGRvbmUpO1xuICAgICAgfVxuICAgIH0sXG4gICAgZ2V0IGNoaWxkcmVuKCkge1xuICAgICAgcmV0dXJuIGNyZWF0ZUNvbXBvbmVudChTaG93LCB7XG4gICAgICAgIGdldCB3aGVuKCkge1xuICAgICAgICAgIHJldHVybiBwcm9wcy5vcGVuZWQ7XG4gICAgICAgIH0sXG4gICAgICAgIGdldCBjaGlsZHJlbigpIHtcbiAgICAgICAgICByZXR1cm4gY3JlYXRlQ29tcG9uZW50KE1vZGFsQmFja2dyb3VuZFN0eWxlZCwgbWVyZ2VQcm9wcyh7XG4gICAgICAgICAgICBcImRhdGEtdGMtbW9kYWxcIjogXCJ0cnVlXCJcbiAgICAgICAgICB9LCBkYXRhQXR0cnMsIHtcbiAgICAgICAgICAgIGdldCBjaGlsZHJlbigpIHtcbiAgICAgICAgICAgICAgY29uc3QgX2VsJCA9IF90bXBsJCR1LmNsb25lTm9kZSh0cnVlKTtcbiAgICAgICAgICAgICAgdXNlKGFuZHJvaWRCYWNrSGFuZGxlciwgX2VsJCwgKCkgPT4gKHtcbiAgICAgICAgICAgICAgICBpc0VuYWJsZWQ6IHByb3BzLmVuYWJsZUFuZHJvaWRCYWNrSGFuZGxlcixcbiAgICAgICAgICAgICAgICBvbkNsb3NlOiAoKSA9PiBwcm9wcy5vbkNsb3NlKClcbiAgICAgICAgICAgICAgfSkpO1xuICAgICAgICAgICAgICB1c2Uoa2V5UHJlc3NlZCwgX2VsJCwgKCkgPT4gKCkgPT4gcHJvcHMub25DbG9zZSgpKTtcbiAgICAgICAgICAgICAgdXNlKGNsaWNrT3V0c2lkZSwgX2VsJCwgKCkgPT4gKCkgPT4gcHJvcHMub25DbG9zZSgpKTtcbiAgICAgICAgICAgICAgaW5zZXJ0KF9lbCQsIGNyZWF0ZUNvbXBvbmVudChNb2RhbEJvZHlTdHlsZWQsIHtcbiAgICAgICAgICAgICAgICBnZXQgW1wiY2xhc3NcIl0oKSB7XG4gICAgICAgICAgICAgICAgICByZXR1cm4gcHJvcHMuY2xhc3M7XG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICBnZXQgY2hpbGRyZW4oKSB7XG4gICAgICAgICAgICAgICAgICByZXR1cm4gW2NyZWF0ZUNvbXBvbmVudChDbG9zZUJ1dHRvblN0eWxlZCwge1xuICAgICAgICAgICAgICAgICAgICBpY29uOiBcImNsb3NlXCIsXG4gICAgICAgICAgICAgICAgICAgIG9uQ2xpY2s6ICgpID0+IHByb3BzLm9uQ2xvc2UoKVxuICAgICAgICAgICAgICAgICAgfSksIGNyZWF0ZU1lbW8oKCkgPT4gcHJvcHMuY2hpbGRyZW4pXTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgIH0pLCBudWxsKTtcbiAgICAgICAgICAgICAgaW5zZXJ0KF9lbCQsIGNyZWF0ZUNvbXBvbmVudChTaG93LCB7XG4gICAgICAgICAgICAgICAgZ2V0IHdoZW4oKSB7XG4gICAgICAgICAgICAgICAgICByZXR1cm4gcHJvcHMub25DbGlja1F1ZXN0aW9uO1xuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgZ2V0IGNoaWxkcmVuKCkge1xuICAgICAgICAgICAgICAgICAgcmV0dXJuIGNyZWF0ZUNvbXBvbmVudChNb2RhbEZvb3RlclN0eWxlZCwge1xuICAgICAgICAgICAgICAgICAgICBnZXQgY2hpbGRyZW4oKSB7XG4gICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIFtjcmVhdGVDb21wb25lbnQoVG9uQ29ubmVjdEJyYW5kLCB7fSksIGNyZWF0ZUNvbXBvbmVudChRdWVzdGlvbkJ1dHRvblN0eWxlZCwge1xuICAgICAgICAgICAgICAgICAgICAgICAgZ2V0IG9uQ2xpY2soKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBwcm9wcy5vbkNsaWNrUXVlc3Rpb247XG4gICAgICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgaWNvbjogXCJxdWVzdGlvblwiXG4gICAgICAgICAgICAgICAgICAgICAgfSldO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgIH0pLCBudWxsKTtcbiAgICAgICAgICAgICAgY3JlYXRlUmVuZGVyRWZmZWN0KCgpID0+IGNsYXNzTmFtZShfZWwkLCBjbihNb2RhbFdyYXBwZXJDbGFzcywgdWBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYm9yZGVyLXJhZGl1czogJHtib3JkZXJzJDRbdGhlbWUuYm9yZGVyUmFkaXVzXX07XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6ICR7dGhlbWUuY29sb3JzLmJhY2tncm91bmQudGludH07XG5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJHttZWRpYShcIm1vYmlsZVwiKX0ge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYm9yZGVyLXJhZGl1czogJHtib3JkZXJzJDRbdGhlbWUuYm9yZGVyUmFkaXVzXX1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAke2JvcmRlcnMkNFt0aGVtZS5ib3JkZXJSYWRpdXNdfSAwIDA7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBgKSkpO1xuICAgICAgICAgICAgICByZXR1cm4gX2VsJDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9KSk7XG4gICAgICAgIH1cbiAgICAgIH0pO1xuICAgIH1cbiAgfSk7XG59O1xuY29uc3Qgd3JhcHBlckJvcmRlclJhZGl1cyA9IHtcbiAgbTogXCIyMnB4XCIsXG4gIHM6IFwiMTJweFwiLFxuICBub25lOiBcIjBcIlxufTtcbmNvbnN0IHNsaWRlckJvcmRlclJhZGl1cyA9IHtcbiAgbTogXCIxOHB4XCIsXG4gIHM6IFwiOHB4XCIsXG4gIG5vbmU6IFwiMFwiXG59O1xuY29uc3QgVGFiQmFyU3R5bGVkID0gc3R5bGVkLmRpdmBcbiAgICBkaXNwbGF5OiBncmlkO1xuICAgIGdyaWQtdGVtcGxhdGU6IDFmciAvIDFmciAxZnI7XG4gICAgd2lkdGg6IGZpdC1jb250ZW50O1xuICAgIGp1c3RpZnktaXRlbXM6IGNlbnRlcjtcbiAgICBnYXA6IDRweDtcblxuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICBwYWRkaW5nOiA0cHg7XG4gICAgYm9yZGVyLXJhZGl1czogJHsocHJvcHMpID0+IHdyYXBwZXJCb3JkZXJSYWRpdXNbcHJvcHMudGhlbWUuYm9yZGVyUmFkaXVzXX07XG5cbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkeyhwcm9wcykgPT4gcHJvcHMudGhlbWUuY29sb3JzLmJhY2tncm91bmQuc2Vjb25kYXJ5fTtcbmA7XG5jb25zdCBTbGlkZXJTdHlsZWQgPSBzdHlsZWQuZGl2YFxuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICB0b3A6IDRweDtcbiAgICBsZWZ0OiA0cHg7XG5cbiAgICBoZWlnaHQ6IGNhbGMoMTAwJSAtIDhweCk7XG4gICAgd2lkdGg6IGNhbGMoNTAlIC0gNHB4KTtcblxuICAgIGJvcmRlci1yYWRpdXM6ICR7KHByb3BzKSA9PiBzbGlkZXJCb3JkZXJSYWRpdXNbcHJvcHMudGhlbWUuYm9yZGVyUmFkaXVzXX07XG4gICAgYmFja2dyb3VuZC1jb2xvcjogJHsocHJvcHMpID0+IHByb3BzLnRoZW1lLmNvbG9ycy5iYWNrZ3JvdW5kLnNlZ21lbnR9O1xuXG4gICAgdHJhbnNmb3JtOiAkeyhwcm9wcykgPT4gcHJvcHMucmlnaHQgPyBcInRyYW5zbGF0ZVgoMTAwJSlcIiA6IFwidHJhbnNsYXRlWCgwKVwifTtcblxuICAgIHRyYW5zaXRpb246IHRyYW5zZm9ybSAwLjEzcyBlYXNlLWluLW91dDtcbmA7XG5jb25zdCBJbnB1dFN0eWxlZCA9IHN0eWxlZC5pbnB1dGBcbiAgICBkaXNwbGF5OiBub25lO1xuYDtcbmNvbnN0IExhYmVsU3R5bGVkID0gc3R5bGVkLmxhYmVsYFxuICAgIHBhZGRpbmc6IDlweCAxMnB4O1xuICAgIHotaW5kZXg6IDE7XG5cbiAgICBjdXJzb3I6ICR7KHByb3BzKSA9PiBwcm9wcy5pc0FjdGl2ZSA/IFwiZGVmYXVsdFwiIDogXCJwb2ludGVyXCJ9O1xuXG4gICAgdHJhbnNpdGlvbjogdHJhbnNmb3JtIDAuMTNzIGVhc2UtaW4tb3V0O1xuXG4gICAgJjpob3ZlciB7XG4gICAgICAgIHRyYW5zZm9ybTogJHsocHJvcHMpID0+IHByb3BzLmlzQWN0aXZlID8gXCJub25lXCIgOiBcInNjYWxlKDEuMDI1KVwifTtcbiAgICB9XG5cbiAgICA+ICoge1xuICAgICAgICAkeyhwcm9wcykgPT4gIXByb3BzLmlzQWN0aXZlID8gYGNvbG9yOiAke3Byb3BzLnRoZW1lLmNvbG9ycy50ZXh0LnNlY29uZGFyeX07YCA6IFwiXCJ9XG4gICAgfVxuYDtcbmNvbnN0IFRhYkJhciA9IChwcm9wcykgPT4ge1xuICBjb25zdCBncm91cE5hbWUgPSBcInRhYkJhclwiICsgTWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpICogMWU0KTtcbiAgcmV0dXJuIGNyZWF0ZUNvbXBvbmVudChUYWJCYXJTdHlsZWQsIHtcbiAgICBnZXQgW1wiY2xhc3NcIl0oKSB7XG4gICAgICByZXR1cm4gcHJvcHMuY2xhc3M7XG4gICAgfSxcbiAgICBcImRhdGEtdGMtdGFiLWJhclwiOiBcInRydWVcIixcbiAgICBnZXQgY2hpbGRyZW4oKSB7XG4gICAgICByZXR1cm4gW2NyZWF0ZUNvbXBvbmVudChTbGlkZXJTdHlsZWQsIHtcbiAgICAgICAgZ2V0IHJpZ2h0KCkge1xuICAgICAgICAgIHJldHVybiBwcm9wcy5zZWxlY3RlZFRhYkluZGV4ID09PSAxO1xuICAgICAgICB9XG4gICAgICB9KSwgY3JlYXRlQ29tcG9uZW50KExhYmVsU3R5bGVkLCB7XG4gICAgICAgIGdldCBpc0FjdGl2ZSgpIHtcbiAgICAgICAgICByZXR1cm4gcHJvcHMuc2VsZWN0ZWRUYWJJbmRleCA9PT0gMDtcbiAgICAgICAgfSxcbiAgICAgICAgZ2V0IGNoaWxkcmVuKCkge1xuICAgICAgICAgIHJldHVybiBbY3JlYXRlQ29tcG9uZW50KElucHV0U3R5bGVkLCB7XG4gICAgICAgICAgICB0eXBlOiBcInJhZGlvXCIsXG4gICAgICAgICAgICBuYW1lOiBncm91cE5hbWUsXG4gICAgICAgICAgICBnZXQgY2hlY2tlZCgpIHtcbiAgICAgICAgICAgICAgcmV0dXJuIHByb3BzLnNlbGVjdGVkVGFiSW5kZXggPT09IDA7XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgb25JbnB1dDogKCkgPT4ge1xuICAgICAgICAgICAgICB2YXIgX2EyO1xuICAgICAgICAgICAgICByZXR1cm4gKF9hMiA9IHByb3BzLm9uU2VsZWN0ZWRUYWJJbmRleENoYW5nZSkgPT0gbnVsbCA/IHZvaWQgMCA6IF9hMi5jYWxsKHByb3BzLCAwKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9KSwgY3JlYXRlTWVtbygoKSA9PiBwcm9wcy50YWIxKV07XG4gICAgICAgIH1cbiAgICAgIH0pLCBjcmVhdGVDb21wb25lbnQoTGFiZWxTdHlsZWQsIHtcbiAgICAgICAgZ2V0IGlzQWN0aXZlKCkge1xuICAgICAgICAgIHJldHVybiBwcm9wcy5zZWxlY3RlZFRhYkluZGV4ID09PSAxO1xuICAgICAgICB9LFxuICAgICAgICBnZXQgY2hpbGRyZW4oKSB7XG4gICAgICAgICAgcmV0dXJuIFtjcmVhdGVDb21wb25lbnQoSW5wdXRTdHlsZWQsIHtcbiAgICAgICAgICAgIHR5cGU6IFwicmFkaW9cIixcbiAgICAgICAgICAgIGdldCBjaGVja2VkKCkge1xuICAgICAgICAgICAgICByZXR1cm4gcHJvcHMuc2VsZWN0ZWRUYWJJbmRleCA9PT0gMTtcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBuYW1lOiBncm91cE5hbWUsXG4gICAgICAgICAgICBvbklucHV0OiAoKSA9PiB7XG4gICAgICAgICAgICAgIHZhciBfYTI7XG4gICAgICAgICAgICAgIHJldHVybiAoX2EyID0gcHJvcHMub25TZWxlY3RlZFRhYkluZGV4Q2hhbmdlKSA9PSBudWxsID8gdm9pZCAwIDogX2EyLmNhbGwocHJvcHMsIDEpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH0pLCBjcmVhdGVNZW1vKCgpID0+IHByb3BzLnRhYjIpXTtcbiAgICAgICAgfVxuICAgICAgfSldO1xuICAgIH1cbiAgfSk7XG59O1xuY29uc3QgYmFja2dyb3VuZEJvcmRlcnMgPSB7XG4gIG06IFwiMTZweFwiLFxuICBzOiBcIjEycHhcIixcbiAgbm9uZTogXCIwXCJcbn07XG5jb25zdCBpbWFnZUJvcmRlcnMgPSB7XG4gIG06IFwiMTJweFwiLFxuICBzOiBcIjhweFwiLFxuICBub25lOiBcIjBcIlxufTtcbmNvbnN0IHFyTm9ybWFsU2l6ZSA9IDI1NjtcbmNvbnN0IGltZ1NpemVEZWZhdWx0ID0gNjA7XG5jb25zdCBwaWNTaXplRGVmYXVsdCA9IDQ4O1xuY29uc3QgcXJQYWRkaW5nVG9wID0gMjQ7XG5jb25zdCBDb3B5SWNvbkJ1dHRvbiA9IHN0eWxlZC5kaXZgXG4gICAgd2lkdGg6IDUycHg7XG4gICAgaGVpZ2h0OiA1MnB4O1xuICAgIGJhY2tncm91bmQ6IHRyYW5zcGFyZW50O1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICByaWdodDogMDtcbiAgICBib3R0b206IDA7XG5cbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gICAgdHJhbnNpdGlvbjogdHJhbnNmb3JtIDAuMTI1cyBlYXNlLWluLW91dDtcbmA7XG5jb25zdCBRckNvZGVCYWNrZ3JvdW5kID0gc3R5bGVkLmJ1dHRvbmBcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgIGJhY2tncm91bmQtY29sb3I6ICR7KHByb3BzKSA9PiBwcm9wcy50aGVtZS5jb2xvcnMuYmFja2dyb3VuZC5xcn07XG4gICAgYm9yZGVyLXJhZGl1czogJHsocHJvcHMpID0+IGJhY2tncm91bmRCb3JkZXJzW3Byb3BzLnRoZW1lLmJvcmRlclJhZGl1c119O1xuICAgIHBhZGRpbmc6ICR7dG9QeChxclBhZGRpbmdUb3ApfSAwO1xuICAgIGhlaWdodDogJHt0b1B4KHFyTm9ybWFsU2l6ZSArIHFyUGFkZGluZ1RvcCAqIDIpfTtcbiAgICB3aWR0aDogMTAwJTtcblxuICAgIG92ZXJmbG93OiBoaWRkZW47XG4gICAgY3Vyc29yOiBwb2ludGVyO1xuICAgIGJvcmRlcjogbm9uZTtcblxuICAgICR7bWVkaWFOb3RUb3VjaH0ge1xuICAgICAgICAmOmhvdmVyIHtcbiAgICAgICAgICAgICR7Q29weUljb25CdXR0b24uY2xhc3N9IHtcbiAgICAgICAgICAgICAgICB0cmFuc2Zvcm06IHNjYWxlKDEuMDQpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuXG4gICAgJjphY3RpdmUge1xuICAgICAgICAke0NvcHlJY29uQnV0dG9uLmNsYXNzfSB7XG4gICAgICAgICAgICB0cmFuc2Zvcm06IHNjYWxlKDAuOTYpO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgJHttZWRpYVRvdWNofSB7XG4gICAgICAgICY6YWN0aXZlIHtcbiAgICAgICAgICAgICR7Q29weUljb25CdXR0b24uY2xhc3N9IHtcbiAgICAgICAgICAgICAgICB0cmFuc2Zvcm06IHNjYWxlKDAuOTIpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuYDtcbmNvbnN0IFFyQ29kZVdyYXBwZXIkMiA9IHN0eWxlZC5kaXZgXG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuXG4gICAgd2lkdGg6IGZpdC1jb250ZW50O1xuICAgIG1hcmdpbjogMCBhdXRvO1xuXG4gICAgPiBkaXY6Zmlyc3QtY2hpbGQge1xuICAgICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgICB9XG5cbiAgICByZWN0IHtcbiAgICAgICAgZmlsbDogdHJhbnNwYXJlbnQ7XG4gICAgfVxuXG4gICAgcGF0aCB7XG4gICAgICAgIGZpbGw6ICR7KHByb3BzKSA9PiBwcm9wcy50aGVtZS5jb2xvcnMuY29uc3RhbnQuYmxhY2t9O1xuICAgIH1cbmA7XG5jb25zdCBJbWFnZUJhY2tncm91bmQgPSBzdHlsZWQuZGl2YFxuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICB3aWR0aDogJHt0b1B4KGltZ1NpemVEZWZhdWx0KX07XG4gICAgaGVpZ2h0OiAke3RvUHgoaW1nU2l6ZURlZmF1bHQpfTtcbiAgICBiYWNrZ3JvdW5kOiAkeyhwcm9wcykgPT4gcHJvcHMudGhlbWUuY29sb3JzLmJhY2tncm91bmQucXJ9O1xuXG4gICAgZGlzcGxheTogZmxleDtcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuYDtcbmNvbnN0IEltYWdlU3R5bGVkJDMgPSBzdHlsZWQoSW1hZ2UpYFxuICAgIHdpZHRoOiAkeyhwcm9wcykgPT4gdG9QeChwcm9wcy5zaXplKX07XG4gICAgaGVpZ2h0OiAkeyhwcm9wcykgPT4gdG9QeChwcm9wcy5zaXplKX07XG4gICAgYm9yZGVyLXJhZGl1czogJHsocHJvcHMpID0+IGltYWdlQm9yZGVyc1twcm9wcy50aGVtZS5ib3JkZXJSYWRpdXNdfTtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkeyhwcm9wcykgPT4gcHJvcHMudGhlbWUuY29sb3JzLmJhY2tncm91bmQucXJ9O1xuYDtcbmNvbnN0IENvcGllZEJveFN0eWxlZCA9IHN0eWxlZC5kaXZgXG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIGJvdHRvbTogMTRweDtcbiAgICBsZWZ0OiA1MCU7XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGUoLTUwJSwgMCk7XG5cbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGdhcDogNnB4O1xuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgYm9yZGVyLXJhZGl1czogMThweDtcbiAgICBtaW4td2lkdGg6IDEyNnB4O1xuICAgIHBhZGRpbmc6IDlweCAxNnB4IDlweCAxMHB4O1xuXG4gICAgZmlsdGVyOiBkcm9wLXNoYWRvdygwcHggMnB4IDhweCByZ2JhKDAsIDAsIDAsIDAuMDgpKTtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkeyhwcm9wcykgPT4gcHJvcHMudGhlbWUuY29sb3JzLmJhY2tncm91bmQuc2VnbWVudH07XG5gO1xudmFyIHFyY29kZSQxID0geyBleHBvcnRzOiB7fSB9O1xuKGZ1bmN0aW9uKG1vZHVsZSwgZXhwb3J0cykge1xuICB2YXIgcXJjb2RlMiA9IGZ1bmN0aW9uKCkge1xuICAgIHZhciBxcmNvZGUzID0gZnVuY3Rpb24odHlwZU51bWJlciwgZXJyb3JDb3JyZWN0aW9uTGV2ZWwpIHtcbiAgICAgIHZhciBQQUQwID0gMjM2O1xuICAgICAgdmFyIFBBRDEgPSAxNztcbiAgICAgIHZhciBfdHlwZU51bWJlciA9IHR5cGVOdW1iZXI7XG4gICAgICB2YXIgX2Vycm9yQ29ycmVjdGlvbkxldmVsID0gUVJFcnJvckNvcnJlY3Rpb25MZXZlbFtlcnJvckNvcnJlY3Rpb25MZXZlbF07XG4gICAgICB2YXIgX21vZHVsZXMgPSBudWxsO1xuICAgICAgdmFyIF9tb2R1bGVDb3VudCA9IDA7XG4gICAgICB2YXIgX2RhdGFDYWNoZSA9IG51bGw7XG4gICAgICB2YXIgX2RhdGFMaXN0ID0gW107XG4gICAgICB2YXIgX3RoaXMgPSB7fTtcbiAgICAgIHZhciBtYWtlSW1wbCA9IGZ1bmN0aW9uKHRlc3QsIG1hc2tQYXR0ZXJuKSB7XG4gICAgICAgIF9tb2R1bGVDb3VudCA9IF90eXBlTnVtYmVyICogNCArIDE3O1xuICAgICAgICBfbW9kdWxlcyA9IGZ1bmN0aW9uKG1vZHVsZUNvdW50KSB7XG4gICAgICAgICAgdmFyIG1vZHVsZXMgPSBuZXcgQXJyYXkobW9kdWxlQ291bnQpO1xuICAgICAgICAgIGZvciAodmFyIHJvdyA9IDA7IHJvdyA8IG1vZHVsZUNvdW50OyByb3cgKz0gMSkge1xuICAgICAgICAgICAgbW9kdWxlc1tyb3ddID0gbmV3IEFycmF5KG1vZHVsZUNvdW50KTtcbiAgICAgICAgICAgIGZvciAodmFyIGNvbCA9IDA7IGNvbCA8IG1vZHVsZUNvdW50OyBjb2wgKz0gMSkge1xuICAgICAgICAgICAgICBtb2R1bGVzW3Jvd11bY29sXSA9IG51bGw7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfVxuICAgICAgICAgIHJldHVybiBtb2R1bGVzO1xuICAgICAgICB9KF9tb2R1bGVDb3VudCk7XG4gICAgICAgIHNldHVwUG9zaXRpb25Qcm9iZVBhdHRlcm4oMCwgMCk7XG4gICAgICAgIHNldHVwUG9zaXRpb25Qcm9iZVBhdHRlcm4oX21vZHVsZUNvdW50IC0gNywgMCk7XG4gICAgICAgIHNldHVwUG9zaXRpb25Qcm9iZVBhdHRlcm4oMCwgX21vZHVsZUNvdW50IC0gNyk7XG4gICAgICAgIHNldHVwUG9zaXRpb25BZGp1c3RQYXR0ZXJuKCk7XG4gICAgICAgIHNldHVwVGltaW5nUGF0dGVybigpO1xuICAgICAgICBzZXR1cFR5cGVJbmZvKHRlc3QsIG1hc2tQYXR0ZXJuKTtcbiAgICAgICAgaWYgKF90eXBlTnVtYmVyID49IDcpIHtcbiAgICAgICAgICBzZXR1cFR5cGVOdW1iZXIodGVzdCk7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKF9kYXRhQ2FjaGUgPT0gbnVsbCkge1xuICAgICAgICAgIF9kYXRhQ2FjaGUgPSBjcmVhdGVEYXRhKF90eXBlTnVtYmVyLCBfZXJyb3JDb3JyZWN0aW9uTGV2ZWwsIF9kYXRhTGlzdCk7XG4gICAgICAgIH1cbiAgICAgICAgbWFwRGF0YShfZGF0YUNhY2hlLCBtYXNrUGF0dGVybik7XG4gICAgICB9O1xuICAgICAgdmFyIHNldHVwUG9zaXRpb25Qcm9iZVBhdHRlcm4gPSBmdW5jdGlvbihyb3csIGNvbCkge1xuICAgICAgICBmb3IgKHZhciByID0gLTE7IHIgPD0gNzsgciArPSAxKSB7XG4gICAgICAgICAgaWYgKHJvdyArIHIgPD0gLTEgfHwgX21vZHVsZUNvdW50IDw9IHJvdyArIHIpXG4gICAgICAgICAgICBjb250aW51ZTtcbiAgICAgICAgICBmb3IgKHZhciBjMiA9IC0xOyBjMiA8PSA3OyBjMiArPSAxKSB7XG4gICAgICAgICAgICBpZiAoY29sICsgYzIgPD0gLTEgfHwgX21vZHVsZUNvdW50IDw9IGNvbCArIGMyKVxuICAgICAgICAgICAgICBjb250aW51ZTtcbiAgICAgICAgICAgIGlmICgwIDw9IHIgJiYgciA8PSA2ICYmIChjMiA9PSAwIHx8IGMyID09IDYpIHx8IDAgPD0gYzIgJiYgYzIgPD0gNiAmJiAociA9PSAwIHx8IHIgPT0gNikgfHwgMiA8PSByICYmIHIgPD0gNCAmJiAyIDw9IGMyICYmIGMyIDw9IDQpIHtcbiAgICAgICAgICAgICAgX21vZHVsZXNbcm93ICsgcl1bY29sICsgYzJdID0gdHJ1ZTtcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgIF9tb2R1bGVzW3JvdyArIHJdW2NvbCArIGMyXSA9IGZhbHNlO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfTtcbiAgICAgIHZhciBnZXRCZXN0TWFza1BhdHRlcm4gPSBmdW5jdGlvbigpIHtcbiAgICAgICAgdmFyIG1pbkxvc3RQb2ludCA9IDA7XG4gICAgICAgIHZhciBwYXR0ZXJuID0gMDtcbiAgICAgICAgZm9yICh2YXIgaTIgPSAwOyBpMiA8IDg7IGkyICs9IDEpIHtcbiAgICAgICAgICBtYWtlSW1wbCh0cnVlLCBpMik7XG4gICAgICAgICAgdmFyIGxvc3RQb2ludCA9IFFSVXRpbC5nZXRMb3N0UG9pbnQoX3RoaXMpO1xuICAgICAgICAgIGlmIChpMiA9PSAwIHx8IG1pbkxvc3RQb2ludCA+IGxvc3RQb2ludCkge1xuICAgICAgICAgICAgbWluTG9zdFBvaW50ID0gbG9zdFBvaW50O1xuICAgICAgICAgICAgcGF0dGVybiA9IGkyO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gcGF0dGVybjtcbiAgICAgIH07XG4gICAgICB2YXIgc2V0dXBUaW1pbmdQYXR0ZXJuID0gZnVuY3Rpb24oKSB7XG4gICAgICAgIGZvciAodmFyIHIgPSA4OyByIDwgX21vZHVsZUNvdW50IC0gODsgciArPSAxKSB7XG4gICAgICAgICAgaWYgKF9tb2R1bGVzW3JdWzZdICE9IG51bGwpIHtcbiAgICAgICAgICAgIGNvbnRpbnVlO1xuICAgICAgICAgIH1cbiAgICAgICAgICBfbW9kdWxlc1tyXVs2XSA9IHIgJSAyID09IDA7XG4gICAgICAgIH1cbiAgICAgICAgZm9yICh2YXIgYzIgPSA4OyBjMiA8IF9tb2R1bGVDb3VudCAtIDg7IGMyICs9IDEpIHtcbiAgICAgICAgICBpZiAoX21vZHVsZXNbNl1bYzJdICE9IG51bGwpIHtcbiAgICAgICAgICAgIGNvbnRpbnVlO1xuICAgICAgICAgIH1cbiAgICAgICAgICBfbW9kdWxlc1s2XVtjMl0gPSBjMiAlIDIgPT0gMDtcbiAgICAgICAgfVxuICAgICAgfTtcbiAgICAgIHZhciBzZXR1cFBvc2l0aW9uQWRqdXN0UGF0dGVybiA9IGZ1bmN0aW9uKCkge1xuICAgICAgICB2YXIgcG9zID0gUVJVdGlsLmdldFBhdHRlcm5Qb3NpdGlvbihfdHlwZU51bWJlcik7XG4gICAgICAgIGZvciAodmFyIGkyID0gMDsgaTIgPCBwb3MubGVuZ3RoOyBpMiArPSAxKSB7XG4gICAgICAgICAgZm9yICh2YXIgaiA9IDA7IGogPCBwb3MubGVuZ3RoOyBqICs9IDEpIHtcbiAgICAgICAgICAgIHZhciByb3cgPSBwb3NbaTJdO1xuICAgICAgICAgICAgdmFyIGNvbCA9IHBvc1tqXTtcbiAgICAgICAgICAgIGlmIChfbW9kdWxlc1tyb3ddW2NvbF0gIT0gbnVsbCkge1xuICAgICAgICAgICAgICBjb250aW51ZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGZvciAodmFyIHIgPSAtMjsgciA8PSAyOyByICs9IDEpIHtcbiAgICAgICAgICAgICAgZm9yICh2YXIgYzIgPSAtMjsgYzIgPD0gMjsgYzIgKz0gMSkge1xuICAgICAgICAgICAgICAgIGlmIChyID09IC0yIHx8IHIgPT0gMiB8fCBjMiA9PSAtMiB8fCBjMiA9PSAyIHx8IHIgPT0gMCAmJiBjMiA9PSAwKSB7XG4gICAgICAgICAgICAgICAgICBfbW9kdWxlc1tyb3cgKyByXVtjb2wgKyBjMl0gPSB0cnVlO1xuICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICBfbW9kdWxlc1tyb3cgKyByXVtjb2wgKyBjMl0gPSBmYWxzZTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH07XG4gICAgICB2YXIgc2V0dXBUeXBlTnVtYmVyID0gZnVuY3Rpb24odGVzdCkge1xuICAgICAgICB2YXIgYml0cyA9IFFSVXRpbC5nZXRCQ0hUeXBlTnVtYmVyKF90eXBlTnVtYmVyKTtcbiAgICAgICAgZm9yICh2YXIgaTIgPSAwOyBpMiA8IDE4OyBpMiArPSAxKSB7XG4gICAgICAgICAgdmFyIG1vZCA9ICF0ZXN0ICYmIChiaXRzID4+IGkyICYgMSkgPT0gMTtcbiAgICAgICAgICBfbW9kdWxlc1tNYXRoLmZsb29yKGkyIC8gMyldW2kyICUgMyArIF9tb2R1bGVDb3VudCAtIDggLSAzXSA9IG1vZDtcbiAgICAgICAgfVxuICAgICAgICBmb3IgKHZhciBpMiA9IDA7IGkyIDwgMTg7IGkyICs9IDEpIHtcbiAgICAgICAgICB2YXIgbW9kID0gIXRlc3QgJiYgKGJpdHMgPj4gaTIgJiAxKSA9PSAxO1xuICAgICAgICAgIF9tb2R1bGVzW2kyICUgMyArIF9tb2R1bGVDb3VudCAtIDggLSAzXVtNYXRoLmZsb29yKGkyIC8gMyldID0gbW9kO1xuICAgICAgICB9XG4gICAgICB9O1xuICAgICAgdmFyIHNldHVwVHlwZUluZm8gPSBmdW5jdGlvbih0ZXN0LCBtYXNrUGF0dGVybikge1xuICAgICAgICB2YXIgZGF0YSA9IF9lcnJvckNvcnJlY3Rpb25MZXZlbCA8PCAzIHwgbWFza1BhdHRlcm47XG4gICAgICAgIHZhciBiaXRzID0gUVJVdGlsLmdldEJDSFR5cGVJbmZvKGRhdGEpO1xuICAgICAgICBmb3IgKHZhciBpMiA9IDA7IGkyIDwgMTU7IGkyICs9IDEpIHtcbiAgICAgICAgICB2YXIgbW9kID0gIXRlc3QgJiYgKGJpdHMgPj4gaTIgJiAxKSA9PSAxO1xuICAgICAgICAgIGlmIChpMiA8IDYpIHtcbiAgICAgICAgICAgIF9tb2R1bGVzW2kyXVs4XSA9IG1vZDtcbiAgICAgICAgICB9IGVsc2UgaWYgKGkyIDwgOCkge1xuICAgICAgICAgICAgX21vZHVsZXNbaTIgKyAxXVs4XSA9IG1vZDtcbiAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgX21vZHVsZXNbX21vZHVsZUNvdW50IC0gMTUgKyBpMl1bOF0gPSBtb2Q7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIGZvciAodmFyIGkyID0gMDsgaTIgPCAxNTsgaTIgKz0gMSkge1xuICAgICAgICAgIHZhciBtb2QgPSAhdGVzdCAmJiAoYml0cyA+PiBpMiAmIDEpID09IDE7XG4gICAgICAgICAgaWYgKGkyIDwgOCkge1xuICAgICAgICAgICAgX21vZHVsZXNbOF1bX21vZHVsZUNvdW50IC0gaTIgLSAxXSA9IG1vZDtcbiAgICAgICAgICB9IGVsc2UgaWYgKGkyIDwgOSkge1xuICAgICAgICAgICAgX21vZHVsZXNbOF1bMTUgLSBpMiAtIDEgKyAxXSA9IG1vZDtcbiAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgX21vZHVsZXNbOF1bMTUgLSBpMiAtIDFdID0gbW9kO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBfbW9kdWxlc1tfbW9kdWxlQ291bnQgLSA4XVs4XSA9ICF0ZXN0O1xuICAgICAgfTtcbiAgICAgIHZhciBtYXBEYXRhID0gZnVuY3Rpb24oZGF0YSwgbWFza1BhdHRlcm4pIHtcbiAgICAgICAgdmFyIGluYyA9IC0xO1xuICAgICAgICB2YXIgcm93ID0gX21vZHVsZUNvdW50IC0gMTtcbiAgICAgICAgdmFyIGJpdEluZGV4ID0gNztcbiAgICAgICAgdmFyIGJ5dGVJbmRleCA9IDA7XG4gICAgICAgIHZhciBtYXNrRnVuYyA9IFFSVXRpbC5nZXRNYXNrRnVuY3Rpb24obWFza1BhdHRlcm4pO1xuICAgICAgICBmb3IgKHZhciBjb2wgPSBfbW9kdWxlQ291bnQgLSAxOyBjb2wgPiAwOyBjb2wgLT0gMikge1xuICAgICAgICAgIGlmIChjb2wgPT0gNilcbiAgICAgICAgICAgIGNvbCAtPSAxO1xuICAgICAgICAgIHdoaWxlICh0cnVlKSB7XG4gICAgICAgICAgICBmb3IgKHZhciBjMiA9IDA7IGMyIDwgMjsgYzIgKz0gMSkge1xuICAgICAgICAgICAgICBpZiAoX21vZHVsZXNbcm93XVtjb2wgLSBjMl0gPT0gbnVsbCkge1xuICAgICAgICAgICAgICAgIHZhciBkYXJrID0gZmFsc2U7XG4gICAgICAgICAgICAgICAgaWYgKGJ5dGVJbmRleCA8IGRhdGEubGVuZ3RoKSB7XG4gICAgICAgICAgICAgICAgICBkYXJrID0gKGRhdGFbYnl0ZUluZGV4XSA+Pj4gYml0SW5kZXggJiAxKSA9PSAxO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB2YXIgbWFzayA9IG1hc2tGdW5jKHJvdywgY29sIC0gYzIpO1xuICAgICAgICAgICAgICAgIGlmIChtYXNrKSB7XG4gICAgICAgICAgICAgICAgICBkYXJrID0gIWRhcms7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIF9tb2R1bGVzW3Jvd11bY29sIC0gYzJdID0gZGFyaztcbiAgICAgICAgICAgICAgICBiaXRJbmRleCAtPSAxO1xuICAgICAgICAgICAgICAgIGlmIChiaXRJbmRleCA9PSAtMSkge1xuICAgICAgICAgICAgICAgICAgYnl0ZUluZGV4ICs9IDE7XG4gICAgICAgICAgICAgICAgICBiaXRJbmRleCA9IDc7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByb3cgKz0gaW5jO1xuICAgICAgICAgICAgaWYgKHJvdyA8IDAgfHwgX21vZHVsZUNvdW50IDw9IHJvdykge1xuICAgICAgICAgICAgICByb3cgLT0gaW5jO1xuICAgICAgICAgICAgICBpbmMgPSAtaW5jO1xuICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH07XG4gICAgICB2YXIgY3JlYXRlQnl0ZXMgPSBmdW5jdGlvbihidWZmZXIsIHJzQmxvY2tzKSB7XG4gICAgICAgIHZhciBvZmZzZXQgPSAwO1xuICAgICAgICB2YXIgbWF4RGNDb3VudCA9IDA7XG4gICAgICAgIHZhciBtYXhFY0NvdW50ID0gMDtcbiAgICAgICAgdmFyIGRjZGF0YSA9IG5ldyBBcnJheShyc0Jsb2Nrcy5sZW5ndGgpO1xuICAgICAgICB2YXIgZWNkYXRhID0gbmV3IEFycmF5KHJzQmxvY2tzLmxlbmd0aCk7XG4gICAgICAgIGZvciAodmFyIHIgPSAwOyByIDwgcnNCbG9ja3MubGVuZ3RoOyByICs9IDEpIHtcbiAgICAgICAgICB2YXIgZGNDb3VudCA9IHJzQmxvY2tzW3JdLmRhdGFDb3VudDtcbiAgICAgICAgICB2YXIgZWNDb3VudCA9IHJzQmxvY2tzW3JdLnRvdGFsQ291bnQgLSBkY0NvdW50O1xuICAgICAgICAgIG1heERjQ291bnQgPSBNYXRoLm1heChtYXhEY0NvdW50LCBkY0NvdW50KTtcbiAgICAgICAgICBtYXhFY0NvdW50ID0gTWF0aC5tYXgobWF4RWNDb3VudCwgZWNDb3VudCk7XG4gICAgICAgICAgZGNkYXRhW3JdID0gbmV3IEFycmF5KGRjQ291bnQpO1xuICAgICAgICAgIGZvciAodmFyIGkyID0gMDsgaTIgPCBkY2RhdGFbcl0ubGVuZ3RoOyBpMiArPSAxKSB7XG4gICAgICAgICAgICBkY2RhdGFbcl1baTJdID0gMjU1ICYgYnVmZmVyLmdldEJ1ZmZlcigpW2kyICsgb2Zmc2V0XTtcbiAgICAgICAgICB9XG4gICAgICAgICAgb2Zmc2V0ICs9IGRjQ291bnQ7XG4gICAgICAgICAgdmFyIHJzUG9seSA9IFFSVXRpbC5nZXRFcnJvckNvcnJlY3RQb2x5bm9taWFsKGVjQ291bnQpO1xuICAgICAgICAgIHZhciByYXdQb2x5ID0gcXJQb2x5bm9taWFsKGRjZGF0YVtyXSwgcnNQb2x5LmdldExlbmd0aCgpIC0gMSk7XG4gICAgICAgICAgdmFyIG1vZFBvbHkgPSByYXdQb2x5Lm1vZChyc1BvbHkpO1xuICAgICAgICAgIGVjZGF0YVtyXSA9IG5ldyBBcnJheShyc1BvbHkuZ2V0TGVuZ3RoKCkgLSAxKTtcbiAgICAgICAgICBmb3IgKHZhciBpMiA9IDA7IGkyIDwgZWNkYXRhW3JdLmxlbmd0aDsgaTIgKz0gMSkge1xuICAgICAgICAgICAgdmFyIG1vZEluZGV4ID0gaTIgKyBtb2RQb2x5LmdldExlbmd0aCgpIC0gZWNkYXRhW3JdLmxlbmd0aDtcbiAgICAgICAgICAgIGVjZGF0YVtyXVtpMl0gPSBtb2RJbmRleCA+PSAwID8gbW9kUG9seS5nZXRBdChtb2RJbmRleCkgOiAwO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICB2YXIgdG90YWxDb2RlQ291bnQgPSAwO1xuICAgICAgICBmb3IgKHZhciBpMiA9IDA7IGkyIDwgcnNCbG9ja3MubGVuZ3RoOyBpMiArPSAxKSB7XG4gICAgICAgICAgdG90YWxDb2RlQ291bnQgKz0gcnNCbG9ja3NbaTJdLnRvdGFsQ291bnQ7XG4gICAgICAgIH1cbiAgICAgICAgdmFyIGRhdGEgPSBuZXcgQXJyYXkodG90YWxDb2RlQ291bnQpO1xuICAgICAgICB2YXIgaW5kZXggPSAwO1xuICAgICAgICBmb3IgKHZhciBpMiA9IDA7IGkyIDwgbWF4RGNDb3VudDsgaTIgKz0gMSkge1xuICAgICAgICAgIGZvciAodmFyIHIgPSAwOyByIDwgcnNCbG9ja3MubGVuZ3RoOyByICs9IDEpIHtcbiAgICAgICAgICAgIGlmIChpMiA8IGRjZGF0YVtyXS5sZW5ndGgpIHtcbiAgICAgICAgICAgICAgZGF0YVtpbmRleF0gPSBkY2RhdGFbcl1baTJdO1xuICAgICAgICAgICAgICBpbmRleCArPSAxO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBmb3IgKHZhciBpMiA9IDA7IGkyIDwgbWF4RWNDb3VudDsgaTIgKz0gMSkge1xuICAgICAgICAgIGZvciAodmFyIHIgPSAwOyByIDwgcnNCbG9ja3MubGVuZ3RoOyByICs9IDEpIHtcbiAgICAgICAgICAgIGlmIChpMiA8IGVjZGF0YVtyXS5sZW5ndGgpIHtcbiAgICAgICAgICAgICAgZGF0YVtpbmRleF0gPSBlY2RhdGFbcl1baTJdO1xuICAgICAgICAgICAgICBpbmRleCArPSAxO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gZGF0YTtcbiAgICAgIH07XG4gICAgICB2YXIgY3JlYXRlRGF0YSA9IGZ1bmN0aW9uKHR5cGVOdW1iZXIyLCBlcnJvckNvcnJlY3Rpb25MZXZlbDIsIGRhdGFMaXN0KSB7XG4gICAgICAgIHZhciByc0Jsb2NrcyA9IFFSUlNCbG9jay5nZXRSU0Jsb2Nrcyh0eXBlTnVtYmVyMiwgZXJyb3JDb3JyZWN0aW9uTGV2ZWwyKTtcbiAgICAgICAgdmFyIGJ1ZmZlciA9IHFyQml0QnVmZmVyKCk7XG4gICAgICAgIGZvciAodmFyIGkyID0gMDsgaTIgPCBkYXRhTGlzdC5sZW5ndGg7IGkyICs9IDEpIHtcbiAgICAgICAgICB2YXIgZGF0YSA9IGRhdGFMaXN0W2kyXTtcbiAgICAgICAgICBidWZmZXIucHV0KGRhdGEuZ2V0TW9kZSgpLCA0KTtcbiAgICAgICAgICBidWZmZXIucHV0KGRhdGEuZ2V0TGVuZ3RoKCksIFFSVXRpbC5nZXRMZW5ndGhJbkJpdHMoZGF0YS5nZXRNb2RlKCksIHR5cGVOdW1iZXIyKSk7XG4gICAgICAgICAgZGF0YS53cml0ZShidWZmZXIpO1xuICAgICAgICB9XG4gICAgICAgIHZhciB0b3RhbERhdGFDb3VudCA9IDA7XG4gICAgICAgIGZvciAodmFyIGkyID0gMDsgaTIgPCByc0Jsb2Nrcy5sZW5ndGg7IGkyICs9IDEpIHtcbiAgICAgICAgICB0b3RhbERhdGFDb3VudCArPSByc0Jsb2Nrc1tpMl0uZGF0YUNvdW50O1xuICAgICAgICB9XG4gICAgICAgIGlmIChidWZmZXIuZ2V0TGVuZ3RoSW5CaXRzKCkgPiB0b3RhbERhdGFDb3VudCAqIDgpIHtcbiAgICAgICAgICB0aHJvdyBcImNvZGUgbGVuZ3RoIG92ZXJmbG93LiAoXCIgKyBidWZmZXIuZ2V0TGVuZ3RoSW5CaXRzKCkgKyBcIj5cIiArIHRvdGFsRGF0YUNvdW50ICogOCArIFwiKVwiO1xuICAgICAgICB9XG4gICAgICAgIGlmIChidWZmZXIuZ2V0TGVuZ3RoSW5CaXRzKCkgKyA0IDw9IHRvdGFsRGF0YUNvdW50ICogOCkge1xuICAgICAgICAgIGJ1ZmZlci5wdXQoMCwgNCk7XG4gICAgICAgIH1cbiAgICAgICAgd2hpbGUgKGJ1ZmZlci5nZXRMZW5ndGhJbkJpdHMoKSAlIDggIT0gMCkge1xuICAgICAgICAgIGJ1ZmZlci5wdXRCaXQoZmFsc2UpO1xuICAgICAgICB9XG4gICAgICAgIHdoaWxlICh0cnVlKSB7XG4gICAgICAgICAgaWYgKGJ1ZmZlci5nZXRMZW5ndGhJbkJpdHMoKSA+PSB0b3RhbERhdGFDb3VudCAqIDgpIHtcbiAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgIH1cbiAgICAgICAgICBidWZmZXIucHV0KFBBRDAsIDgpO1xuICAgICAgICAgIGlmIChidWZmZXIuZ2V0TGVuZ3RoSW5CaXRzKCkgPj0gdG90YWxEYXRhQ291bnQgKiA4KSB7XG4gICAgICAgICAgICBicmVhaztcbiAgICAgICAgICB9XG4gICAgICAgICAgYnVmZmVyLnB1dChQQUQxLCA4KTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gY3JlYXRlQnl0ZXMoYnVmZmVyLCByc0Jsb2Nrcyk7XG4gICAgICB9O1xuICAgICAgX3RoaXMuYWRkRGF0YSA9IGZ1bmN0aW9uKGRhdGEsIG1vZGUpIHtcbiAgICAgICAgbW9kZSA9IG1vZGUgfHwgXCJCeXRlXCI7XG4gICAgICAgIHZhciBuZXdEYXRhID0gbnVsbDtcbiAgICAgICAgc3dpdGNoIChtb2RlKSB7XG4gICAgICAgICAgY2FzZSBcIk51bWVyaWNcIjpcbiAgICAgICAgICAgIG5ld0RhdGEgPSBxck51bWJlcihkYXRhKTtcbiAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgIGNhc2UgXCJBbHBoYW51bWVyaWNcIjpcbiAgICAgICAgICAgIG5ld0RhdGEgPSBxckFscGhhTnVtKGRhdGEpO1xuICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgY2FzZSBcIkJ5dGVcIjpcbiAgICAgICAgICAgIG5ld0RhdGEgPSBxcjhCaXRCeXRlKGRhdGEpO1xuICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgY2FzZSBcIkthbmppXCI6XG4gICAgICAgICAgICBuZXdEYXRhID0gcXJLYW5qaShkYXRhKTtcbiAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgICB0aHJvdyBcIm1vZGU6XCIgKyBtb2RlO1xuICAgICAgICB9XG4gICAgICAgIF9kYXRhTGlzdC5wdXNoKG5ld0RhdGEpO1xuICAgICAgICBfZGF0YUNhY2hlID0gbnVsbDtcbiAgICAgIH07XG4gICAgICBfdGhpcy5pc0RhcmsgPSBmdW5jdGlvbihyb3csIGNvbCkge1xuICAgICAgICBpZiAocm93IDwgMCB8fCBfbW9kdWxlQ291bnQgPD0gcm93IHx8IGNvbCA8IDAgfHwgX21vZHVsZUNvdW50IDw9IGNvbCkge1xuICAgICAgICAgIHRocm93IHJvdyArIFwiLFwiICsgY29sO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBfbW9kdWxlc1tyb3ddW2NvbF07XG4gICAgICB9O1xuICAgICAgX3RoaXMuZ2V0TW9kdWxlQ291bnQgPSBmdW5jdGlvbigpIHtcbiAgICAgICAgcmV0dXJuIF9tb2R1bGVDb3VudDtcbiAgICAgIH07XG4gICAgICBfdGhpcy5tYWtlID0gZnVuY3Rpb24oKSB7XG4gICAgICAgIGlmIChfdHlwZU51bWJlciA8IDEpIHtcbiAgICAgICAgICB2YXIgdHlwZU51bWJlcjIgPSAxO1xuICAgICAgICAgIGZvciAoOyB0eXBlTnVtYmVyMiA8IDQwOyB0eXBlTnVtYmVyMisrKSB7XG4gICAgICAgICAgICB2YXIgcnNCbG9ja3MgPSBRUlJTQmxvY2suZ2V0UlNCbG9ja3ModHlwZU51bWJlcjIsIF9lcnJvckNvcnJlY3Rpb25MZXZlbCk7XG4gICAgICAgICAgICB2YXIgYnVmZmVyID0gcXJCaXRCdWZmZXIoKTtcbiAgICAgICAgICAgIGZvciAodmFyIGkyID0gMDsgaTIgPCBfZGF0YUxpc3QubGVuZ3RoOyBpMisrKSB7XG4gICAgICAgICAgICAgIHZhciBkYXRhID0gX2RhdGFMaXN0W2kyXTtcbiAgICAgICAgICAgICAgYnVmZmVyLnB1dChkYXRhLmdldE1vZGUoKSwgNCk7XG4gICAgICAgICAgICAgIGJ1ZmZlci5wdXQoZGF0YS5nZXRMZW5ndGgoKSwgUVJVdGlsLmdldExlbmd0aEluQml0cyhkYXRhLmdldE1vZGUoKSwgdHlwZU51bWJlcjIpKTtcbiAgICAgICAgICAgICAgZGF0YS53cml0ZShidWZmZXIpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgdmFyIHRvdGFsRGF0YUNvdW50ID0gMDtcbiAgICAgICAgICAgIGZvciAodmFyIGkyID0gMDsgaTIgPCByc0Jsb2Nrcy5sZW5ndGg7IGkyKyspIHtcbiAgICAgICAgICAgICAgdG90YWxEYXRhQ291bnQgKz0gcnNCbG9ja3NbaTJdLmRhdGFDb3VudDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmIChidWZmZXIuZ2V0TGVuZ3RoSW5CaXRzKCkgPD0gdG90YWxEYXRhQ291bnQgKiA4KSB7XG4gICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH1cbiAgICAgICAgICBfdHlwZU51bWJlciA9IHR5cGVOdW1iZXIyO1xuICAgICAgICB9XG4gICAgICAgIG1ha2VJbXBsKGZhbHNlLCBnZXRCZXN0TWFza1BhdHRlcm4oKSk7XG4gICAgICB9O1xuICAgICAgX3RoaXMuY3JlYXRlVGFibGVUYWcgPSBmdW5jdGlvbihjZWxsU2l6ZSwgbWFyZ2luKSB7XG4gICAgICAgIGNlbGxTaXplID0gY2VsbFNpemUgfHwgMjtcbiAgICAgICAgbWFyZ2luID0gdHlwZW9mIG1hcmdpbiA9PSBcInVuZGVmaW5lZFwiID8gY2VsbFNpemUgKiA0IDogbWFyZ2luO1xuICAgICAgICB2YXIgcXJIdG1sID0gXCJcIjtcbiAgICAgICAgcXJIdG1sICs9ICc8dGFibGUgc3R5bGU9XCInO1xuICAgICAgICBxckh0bWwgKz0gXCIgYm9yZGVyLXdpZHRoOiAwcHg7IGJvcmRlci1zdHlsZTogbm9uZTtcIjtcbiAgICAgICAgcXJIdG1sICs9IFwiIGJvcmRlci1jb2xsYXBzZTogY29sbGFwc2U7XCI7XG4gICAgICAgIHFySHRtbCArPSBcIiBwYWRkaW5nOiAwcHg7IG1hcmdpbjogXCIgKyBtYXJnaW4gKyBcInB4O1wiO1xuICAgICAgICBxckh0bWwgKz0gJ1wiPic7XG4gICAgICAgIHFySHRtbCArPSBcIjx0Ym9keT5cIjtcbiAgICAgICAgZm9yICh2YXIgciA9IDA7IHIgPCBfdGhpcy5nZXRNb2R1bGVDb3VudCgpOyByICs9IDEpIHtcbiAgICAgICAgICBxckh0bWwgKz0gXCI8dHI+XCI7XG4gICAgICAgICAgZm9yICh2YXIgYzIgPSAwOyBjMiA8IF90aGlzLmdldE1vZHVsZUNvdW50KCk7IGMyICs9IDEpIHtcbiAgICAgICAgICAgIHFySHRtbCArPSAnPHRkIHN0eWxlPVwiJztcbiAgICAgICAgICAgIHFySHRtbCArPSBcIiBib3JkZXItd2lkdGg6IDBweDsgYm9yZGVyLXN0eWxlOiBub25lO1wiO1xuICAgICAgICAgICAgcXJIdG1sICs9IFwiIGJvcmRlci1jb2xsYXBzZTogY29sbGFwc2U7XCI7XG4gICAgICAgICAgICBxckh0bWwgKz0gXCIgcGFkZGluZzogMHB4OyBtYXJnaW46IDBweDtcIjtcbiAgICAgICAgICAgIHFySHRtbCArPSBcIiB3aWR0aDogXCIgKyBjZWxsU2l6ZSArIFwicHg7XCI7XG4gICAgICAgICAgICBxckh0bWwgKz0gXCIgaGVpZ2h0OiBcIiArIGNlbGxTaXplICsgXCJweDtcIjtcbiAgICAgICAgICAgIHFySHRtbCArPSBcIiBiYWNrZ3JvdW5kLWNvbG9yOiBcIjtcbiAgICAgICAgICAgIHFySHRtbCArPSBfdGhpcy5pc0RhcmsociwgYzIpID8gXCIjMDAwMDAwXCIgOiBcIiNmZmZmZmZcIjtcbiAgICAgICAgICAgIHFySHRtbCArPSBcIjtcIjtcbiAgICAgICAgICAgIHFySHRtbCArPSAnXCIvPic7XG4gICAgICAgICAgfVxuICAgICAgICAgIHFySHRtbCArPSBcIjwvdHI+XCI7XG4gICAgICAgIH1cbiAgICAgICAgcXJIdG1sICs9IFwiPC90Ym9keT5cIjtcbiAgICAgICAgcXJIdG1sICs9IFwiPC90YWJsZT5cIjtcbiAgICAgICAgcmV0dXJuIHFySHRtbDtcbiAgICAgIH07XG4gICAgICBfdGhpcy5jcmVhdGVTdmdUYWcgPSBmdW5jdGlvbihjZWxsU2l6ZSwgbWFyZ2luLCBhbHQsIHRpdGxlKSB7XG4gICAgICAgIHZhciBvcHRzID0ge307XG4gICAgICAgIGlmICh0eXBlb2YgYXJndW1lbnRzWzBdID09IFwib2JqZWN0XCIpIHtcbiAgICAgICAgICBvcHRzID0gYXJndW1lbnRzWzBdO1xuICAgICAgICAgIGNlbGxTaXplID0gb3B0cy5jZWxsU2l6ZTtcbiAgICAgICAgICBtYXJnaW4gPSBvcHRzLm1hcmdpbjtcbiAgICAgICAgICBhbHQgPSBvcHRzLmFsdDtcbiAgICAgICAgICB0aXRsZSA9IG9wdHMudGl0bGU7XG4gICAgICAgIH1cbiAgICAgICAgY2VsbFNpemUgPSBjZWxsU2l6ZSB8fCAyO1xuICAgICAgICBtYXJnaW4gPSB0eXBlb2YgbWFyZ2luID09IFwidW5kZWZpbmVkXCIgPyBjZWxsU2l6ZSAqIDQgOiBtYXJnaW47XG4gICAgICAgIGFsdCA9IHR5cGVvZiBhbHQgPT09IFwic3RyaW5nXCIgPyB7IHRleHQ6IGFsdCB9IDogYWx0IHx8IHt9O1xuICAgICAgICBhbHQudGV4dCA9IGFsdC50ZXh0IHx8IG51bGw7XG4gICAgICAgIGFsdC5pZCA9IGFsdC50ZXh0ID8gYWx0LmlkIHx8IFwicXJjb2RlLWRlc2NyaXB0aW9uXCIgOiBudWxsO1xuICAgICAgICB0aXRsZSA9IHR5cGVvZiB0aXRsZSA9PT0gXCJzdHJpbmdcIiA/IHsgdGV4dDogdGl0bGUgfSA6IHRpdGxlIHx8IHt9O1xuICAgICAgICB0aXRsZS50ZXh0ID0gdGl0bGUudGV4dCB8fCBudWxsO1xuICAgICAgICB0aXRsZS5pZCA9IHRpdGxlLnRleHQgPyB0aXRsZS5pZCB8fCBcInFyY29kZS10aXRsZVwiIDogbnVsbDtcbiAgICAgICAgdmFyIHNpemUgPSBfdGhpcy5nZXRNb2R1bGVDb3VudCgpICogY2VsbFNpemUgKyBtYXJnaW4gKiAyO1xuICAgICAgICB2YXIgYzIsIG1jLCByLCBtciwgcXJTdmcgPSBcIlwiLCByZWN0O1xuICAgICAgICByZWN0ID0gXCJsXCIgKyBjZWxsU2l6ZSArIFwiLDAgMCxcIiArIGNlbGxTaXplICsgXCIgLVwiICsgY2VsbFNpemUgKyBcIiwwIDAsLVwiICsgY2VsbFNpemUgKyBcInogXCI7XG4gICAgICAgIHFyU3ZnICs9ICc8c3ZnIHZlcnNpb249XCIxLjFcIiB4bWxucz1cImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXCInO1xuICAgICAgICBxclN2ZyArPSAhb3B0cy5zY2FsYWJsZSA/ICcgd2lkdGg9XCInICsgc2l6ZSArICdweFwiIGhlaWdodD1cIicgKyBzaXplICsgJ3B4XCInIDogXCJcIjtcbiAgICAgICAgcXJTdmcgKz0gJyB2aWV3Qm94PVwiMCAwICcgKyBzaXplICsgXCIgXCIgKyBzaXplICsgJ1wiICc7XG4gICAgICAgIHFyU3ZnICs9ICcgcHJlc2VydmVBc3BlY3RSYXRpbz1cInhNaW5ZTWluIG1lZXRcIic7XG4gICAgICAgIHFyU3ZnICs9IHRpdGxlLnRleHQgfHwgYWx0LnRleHQgPyAnIHJvbGU9XCJpbWdcIiBhcmlhLWxhYmVsbGVkYnk9XCInICsgZXNjYXBlWG1sKFt0aXRsZS5pZCwgYWx0LmlkXS5qb2luKFwiIFwiKS50cmltKCkpICsgJ1wiJyA6IFwiXCI7XG4gICAgICAgIHFyU3ZnICs9IFwiPlwiO1xuICAgICAgICBxclN2ZyArPSB0aXRsZS50ZXh0ID8gJzx0aXRsZSBpZD1cIicgKyBlc2NhcGVYbWwodGl0bGUuaWQpICsgJ1wiPicgKyBlc2NhcGVYbWwodGl0bGUudGV4dCkgKyBcIjwvdGl0bGU+XCIgOiBcIlwiO1xuICAgICAgICBxclN2ZyArPSBhbHQudGV4dCA/ICc8ZGVzY3JpcHRpb24gaWQ9XCInICsgZXNjYXBlWG1sKGFsdC5pZCkgKyAnXCI+JyArIGVzY2FwZVhtbChhbHQudGV4dCkgKyBcIjwvZGVzY3JpcHRpb24+XCIgOiBcIlwiO1xuICAgICAgICBxclN2ZyArPSAnPHJlY3Qgd2lkdGg9XCIxMDAlXCIgaGVpZ2h0PVwiMTAwJVwiIGZpbGw9XCJ3aGl0ZVwiIGN4PVwiMFwiIGN5PVwiMFwiLz4nO1xuICAgICAgICBxclN2ZyArPSAnPHBhdGggZD1cIic7XG4gICAgICAgIGZvciAociA9IDA7IHIgPCBfdGhpcy5nZXRNb2R1bGVDb3VudCgpOyByICs9IDEpIHtcbiAgICAgICAgICBtciA9IHIgKiBjZWxsU2l6ZSArIG1hcmdpbjtcbiAgICAgICAgICBmb3IgKGMyID0gMDsgYzIgPCBfdGhpcy5nZXRNb2R1bGVDb3VudCgpOyBjMiArPSAxKSB7XG4gICAgICAgICAgICBpZiAoX3RoaXMuaXNEYXJrKHIsIGMyKSkge1xuICAgICAgICAgICAgICBtYyA9IGMyICogY2VsbFNpemUgKyBtYXJnaW47XG4gICAgICAgICAgICAgIHFyU3ZnICs9IFwiTVwiICsgbWMgKyBcIixcIiArIG1yICsgcmVjdDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgcXJTdmcgKz0gJ1wiIHN0cm9rZT1cInRyYW5zcGFyZW50XCIgZmlsbD1cImJsYWNrXCIvPic7XG4gICAgICAgIHFyU3ZnICs9IFwiPC9zdmc+XCI7XG4gICAgICAgIHJldHVybiBxclN2ZztcbiAgICAgIH07XG4gICAgICBfdGhpcy5jcmVhdGVEYXRhVVJMID0gZnVuY3Rpb24oY2VsbFNpemUsIG1hcmdpbikge1xuICAgICAgICBjZWxsU2l6ZSA9IGNlbGxTaXplIHx8IDI7XG4gICAgICAgIG1hcmdpbiA9IHR5cGVvZiBtYXJnaW4gPT0gXCJ1bmRlZmluZWRcIiA/IGNlbGxTaXplICogNCA6IG1hcmdpbjtcbiAgICAgICAgdmFyIHNpemUgPSBfdGhpcy5nZXRNb2R1bGVDb3VudCgpICogY2VsbFNpemUgKyBtYXJnaW4gKiAyO1xuICAgICAgICB2YXIgbWluMiA9IG1hcmdpbjtcbiAgICAgICAgdmFyIG1heDIgPSBzaXplIC0gbWFyZ2luO1xuICAgICAgICByZXR1cm4gY3JlYXRlRGF0YVVSTChzaXplLCBzaXplLCBmdW5jdGlvbih4LCB5KSB7XG4gICAgICAgICAgaWYgKG1pbjIgPD0geCAmJiB4IDwgbWF4MiAmJiBtaW4yIDw9IHkgJiYgeSA8IG1heDIpIHtcbiAgICAgICAgICAgIHZhciBjMiA9IE1hdGguZmxvb3IoKHggLSBtaW4yKSAvIGNlbGxTaXplKTtcbiAgICAgICAgICAgIHZhciByID0gTWF0aC5mbG9vcigoeSAtIG1pbjIpIC8gY2VsbFNpemUpO1xuICAgICAgICAgICAgcmV0dXJuIF90aGlzLmlzRGFyayhyLCBjMikgPyAwIDogMTtcbiAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgcmV0dXJuIDE7XG4gICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICAgIH07XG4gICAgICBfdGhpcy5jcmVhdGVJbWdUYWcgPSBmdW5jdGlvbihjZWxsU2l6ZSwgbWFyZ2luLCBhbHQpIHtcbiAgICAgICAgY2VsbFNpemUgPSBjZWxsU2l6ZSB8fCAyO1xuICAgICAgICBtYXJnaW4gPSB0eXBlb2YgbWFyZ2luID09IFwidW5kZWZpbmVkXCIgPyBjZWxsU2l6ZSAqIDQgOiBtYXJnaW47XG4gICAgICAgIHZhciBzaXplID0gX3RoaXMuZ2V0TW9kdWxlQ291bnQoKSAqIGNlbGxTaXplICsgbWFyZ2luICogMjtcbiAgICAgICAgdmFyIGltZyA9IFwiXCI7XG4gICAgICAgIGltZyArPSBcIjxpbWdcIjtcbiAgICAgICAgaW1nICs9ICcgc3JjPVwiJztcbiAgICAgICAgaW1nICs9IF90aGlzLmNyZWF0ZURhdGFVUkwoY2VsbFNpemUsIG1hcmdpbik7XG4gICAgICAgIGltZyArPSAnXCInO1xuICAgICAgICBpbWcgKz0gJyB3aWR0aD1cIic7XG4gICAgICAgIGltZyArPSBzaXplO1xuICAgICAgICBpbWcgKz0gJ1wiJztcbiAgICAgICAgaW1nICs9ICcgaGVpZ2h0PVwiJztcbiAgICAgICAgaW1nICs9IHNpemU7XG4gICAgICAgIGltZyArPSAnXCInO1xuICAgICAgICBpZiAoYWx0KSB7XG4gICAgICAgICAgaW1nICs9ICcgYWx0PVwiJztcbiAgICAgICAgICBpbWcgKz0gZXNjYXBlWG1sKGFsdCk7XG4gICAgICAgICAgaW1nICs9ICdcIic7XG4gICAgICAgIH1cbiAgICAgICAgaW1nICs9IFwiLz5cIjtcbiAgICAgICAgcmV0dXJuIGltZztcbiAgICAgIH07XG4gICAgICB2YXIgZXNjYXBlWG1sID0gZnVuY3Rpb24oczIpIHtcbiAgICAgICAgdmFyIGVzY2FwZWQgPSBcIlwiO1xuICAgICAgICBmb3IgKHZhciBpMiA9IDA7IGkyIDwgczIubGVuZ3RoOyBpMiArPSAxKSB7XG4gICAgICAgICAgdmFyIGMyID0gczIuY2hhckF0KGkyKTtcbiAgICAgICAgICBzd2l0Y2ggKGMyKSB7XG4gICAgICAgICAgICBjYXNlIFwiPFwiOlxuICAgICAgICAgICAgICBlc2NhcGVkICs9IFwiJmx0O1wiO1xuICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgIGNhc2UgXCI+XCI6XG4gICAgICAgICAgICAgIGVzY2FwZWQgKz0gXCImZ3Q7XCI7XG4gICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgY2FzZSBcIiZcIjpcbiAgICAgICAgICAgICAgZXNjYXBlZCArPSBcIiZhbXA7XCI7XG4gICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgY2FzZSAnXCInOlxuICAgICAgICAgICAgICBlc2NhcGVkICs9IFwiJnF1b3Q7XCI7XG4gICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICAgICAgZXNjYXBlZCArPSBjMjtcbiAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIHJldHVybiBlc2NhcGVkO1xuICAgICAgfTtcbiAgICAgIHZhciBfY3JlYXRlSGFsZkFTQ0lJID0gZnVuY3Rpb24obWFyZ2luKSB7XG4gICAgICAgIHZhciBjZWxsU2l6ZSA9IDE7XG4gICAgICAgIG1hcmdpbiA9IHR5cGVvZiBtYXJnaW4gPT0gXCJ1bmRlZmluZWRcIiA/IGNlbGxTaXplICogMiA6IG1hcmdpbjtcbiAgICAgICAgdmFyIHNpemUgPSBfdGhpcy5nZXRNb2R1bGVDb3VudCgpICogY2VsbFNpemUgKyBtYXJnaW4gKiAyO1xuICAgICAgICB2YXIgbWluMiA9IG1hcmdpbjtcbiAgICAgICAgdmFyIG1heDIgPSBzaXplIC0gbWFyZ2luO1xuICAgICAgICB2YXIgeSwgeCwgcjEsIHIyLCBwMjtcbiAgICAgICAgdmFyIGJsb2NrcyA9IHtcbiAgICAgICAgICBcIlxcdTI1ODhcXHUyNTg4XCI6IFwiXFx1MjU4OFwiLFxuICAgICAgICAgIFwiXFx1MjU4OCBcIjogXCJcXHUyNTgwXCIsXG4gICAgICAgICAgXCIgXFx1MjU4OFwiOiBcIlxcdTI1ODRcIixcbiAgICAgICAgICBcIiAgXCI6IFwiIFwiXG4gICAgICAgIH07XG4gICAgICAgIHZhciBibG9ja3NMYXN0TGluZU5vTWFyZ2luID0ge1xuICAgICAgICAgIFwiXFx1MjU4OFxcdTI1ODhcIjogXCJcXHUyNTgwXCIsXG4gICAgICAgICAgXCJcXHUyNTg4IFwiOiBcIlxcdTI1ODBcIixcbiAgICAgICAgICBcIiBcXHUyNTg4XCI6IFwiIFwiLFxuICAgICAgICAgIFwiICBcIjogXCIgXCJcbiAgICAgICAgfTtcbiAgICAgICAgdmFyIGFzY2lpID0gXCJcIjtcbiAgICAgICAgZm9yICh5ID0gMDsgeSA8IHNpemU7IHkgKz0gMikge1xuICAgICAgICAgIHIxID0gTWF0aC5mbG9vcigoeSAtIG1pbjIpIC8gY2VsbFNpemUpO1xuICAgICAgICAgIHIyID0gTWF0aC5mbG9vcigoeSArIDEgLSBtaW4yKSAvIGNlbGxTaXplKTtcbiAgICAgICAgICBmb3IgKHggPSAwOyB4IDwgc2l6ZTsgeCArPSAxKSB7XG4gICAgICAgICAgICBwMiA9IFwiXFx1MjU4OFwiO1xuICAgICAgICAgICAgaWYgKG1pbjIgPD0geCAmJiB4IDwgbWF4MiAmJiBtaW4yIDw9IHkgJiYgeSA8IG1heDIgJiYgX3RoaXMuaXNEYXJrKHIxLCBNYXRoLmZsb29yKCh4IC0gbWluMikgLyBjZWxsU2l6ZSkpKSB7XG4gICAgICAgICAgICAgIHAyID0gXCIgXCI7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAobWluMiA8PSB4ICYmIHggPCBtYXgyICYmIG1pbjIgPD0geSArIDEgJiYgeSArIDEgPCBtYXgyICYmIF90aGlzLmlzRGFyayhyMiwgTWF0aC5mbG9vcigoeCAtIG1pbjIpIC8gY2VsbFNpemUpKSkge1xuICAgICAgICAgICAgICBwMiArPSBcIiBcIjtcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgIHAyICs9IFwiXFx1MjU4OFwiO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgYXNjaWkgKz0gbWFyZ2luIDwgMSAmJiB5ICsgMSA+PSBtYXgyID8gYmxvY2tzTGFzdExpbmVOb01hcmdpbltwMl0gOiBibG9ja3NbcDJdO1xuICAgICAgICAgIH1cbiAgICAgICAgICBhc2NpaSArPSBcIlxcblwiO1xuICAgICAgICB9XG4gICAgICAgIGlmIChzaXplICUgMiAmJiBtYXJnaW4gPiAwKSB7XG4gICAgICAgICAgcmV0dXJuIGFzY2lpLnN1YnN0cmluZygwLCBhc2NpaS5sZW5ndGggLSBzaXplIC0gMSkgKyBBcnJheShzaXplICsgMSkuam9pbihcIlxcdTI1ODBcIik7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIGFzY2lpLnN1YnN0cmluZygwLCBhc2NpaS5sZW5ndGggLSAxKTtcbiAgICAgIH07XG4gICAgICBfdGhpcy5jcmVhdGVBU0NJSSA9IGZ1bmN0aW9uKGNlbGxTaXplLCBtYXJnaW4pIHtcbiAgICAgICAgY2VsbFNpemUgPSBjZWxsU2l6ZSB8fCAxO1xuICAgICAgICBpZiAoY2VsbFNpemUgPCAyKSB7XG4gICAgICAgICAgcmV0dXJuIF9jcmVhdGVIYWxmQVNDSUkobWFyZ2luKTtcbiAgICAgICAgfVxuICAgICAgICBjZWxsU2l6ZSAtPSAxO1xuICAgICAgICBtYXJnaW4gPSB0eXBlb2YgbWFyZ2luID09IFwidW5kZWZpbmVkXCIgPyBjZWxsU2l6ZSAqIDIgOiBtYXJnaW47XG4gICAgICAgIHZhciBzaXplID0gX3RoaXMuZ2V0TW9kdWxlQ291bnQoKSAqIGNlbGxTaXplICsgbWFyZ2luICogMjtcbiAgICAgICAgdmFyIG1pbjIgPSBtYXJnaW47XG4gICAgICAgIHZhciBtYXgyID0gc2l6ZSAtIG1hcmdpbjtcbiAgICAgICAgdmFyIHksIHgsIHIsIHAyO1xuICAgICAgICB2YXIgd2hpdGUgPSBBcnJheShjZWxsU2l6ZSArIDEpLmpvaW4oXCJcXHUyNTg4XFx1MjU4OFwiKTtcbiAgICAgICAgdmFyIGJsYWNrID0gQXJyYXkoY2VsbFNpemUgKyAxKS5qb2luKFwiICBcIik7XG4gICAgICAgIHZhciBhc2NpaSA9IFwiXCI7XG4gICAgICAgIHZhciBsaW5lID0gXCJcIjtcbiAgICAgICAgZm9yICh5ID0gMDsgeSA8IHNpemU7IHkgKz0gMSkge1xuICAgICAgICAgIHIgPSBNYXRoLmZsb29yKCh5IC0gbWluMikgLyBjZWxsU2l6ZSk7XG4gICAgICAgICAgbGluZSA9IFwiXCI7XG4gICAgICAgICAgZm9yICh4ID0gMDsgeCA8IHNpemU7IHggKz0gMSkge1xuICAgICAgICAgICAgcDIgPSAxO1xuICAgICAgICAgICAgaWYgKG1pbjIgPD0geCAmJiB4IDwgbWF4MiAmJiBtaW4yIDw9IHkgJiYgeSA8IG1heDIgJiYgX3RoaXMuaXNEYXJrKHIsIE1hdGguZmxvb3IoKHggLSBtaW4yKSAvIGNlbGxTaXplKSkpIHtcbiAgICAgICAgICAgICAgcDIgPSAwO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgbGluZSArPSBwMiA/IHdoaXRlIDogYmxhY2s7XG4gICAgICAgICAgfVxuICAgICAgICAgIGZvciAociA9IDA7IHIgPCBjZWxsU2l6ZTsgciArPSAxKSB7XG4gICAgICAgICAgICBhc2NpaSArPSBsaW5lICsgXCJcXG5cIjtcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIGFzY2lpLnN1YnN0cmluZygwLCBhc2NpaS5sZW5ndGggLSAxKTtcbiAgICAgIH07XG4gICAgICBfdGhpcy5yZW5kZXJUbzJkQ29udGV4dCA9IGZ1bmN0aW9uKGNvbnRleHQsIGNlbGxTaXplKSB7XG4gICAgICAgIGNlbGxTaXplID0gY2VsbFNpemUgfHwgMjtcbiAgICAgICAgdmFyIGxlbmd0aCA9IF90aGlzLmdldE1vZHVsZUNvdW50KCk7XG4gICAgICAgIGZvciAodmFyIHJvdyA9IDA7IHJvdyA8IGxlbmd0aDsgcm93KyspIHtcbiAgICAgICAgICBmb3IgKHZhciBjb2wgPSAwOyBjb2wgPCBsZW5ndGg7IGNvbCsrKSB7XG4gICAgICAgICAgICBjb250ZXh0LmZpbGxTdHlsZSA9IF90aGlzLmlzRGFyayhyb3csIGNvbCkgPyBcImJsYWNrXCIgOiBcIndoaXRlXCI7XG4gICAgICAgICAgICBjb250ZXh0LmZpbGxSZWN0KHJvdyAqIGNlbGxTaXplLCBjb2wgKiBjZWxsU2l6ZSwgY2VsbFNpemUsIGNlbGxTaXplKTtcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH07XG4gICAgICByZXR1cm4gX3RoaXM7XG4gICAgfTtcbiAgICBxcmNvZGUzLnN0cmluZ1RvQnl0ZXNGdW5jcyA9IHtcbiAgICAgIFwiZGVmYXVsdFwiOiBmdW5jdGlvbihzMikge1xuICAgICAgICB2YXIgYnl0ZXMgPSBbXTtcbiAgICAgICAgZm9yICh2YXIgaTIgPSAwOyBpMiA8IHMyLmxlbmd0aDsgaTIgKz0gMSkge1xuICAgICAgICAgIHZhciBjMiA9IHMyLmNoYXJDb2RlQXQoaTIpO1xuICAgICAgICAgIGJ5dGVzLnB1c2goYzIgJiAyNTUpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBieXRlcztcbiAgICAgIH1cbiAgICB9O1xuICAgIHFyY29kZTMuc3RyaW5nVG9CeXRlcyA9IHFyY29kZTMuc3RyaW5nVG9CeXRlc0Z1bmNzW1wiZGVmYXVsdFwiXTtcbiAgICBxcmNvZGUzLmNyZWF0ZVN0cmluZ1RvQnl0ZXMgPSBmdW5jdGlvbih1bmljb2RlRGF0YSwgbnVtQ2hhcnMpIHtcbiAgICAgIHZhciB1bmljb2RlTWFwID0gZnVuY3Rpb24oKSB7XG4gICAgICAgIHZhciBiaW4gPSBiYXNlNjREZWNvZGVJbnB1dFN0cmVhbSh1bmljb2RlRGF0YSk7XG4gICAgICAgIHZhciByZWFkID0gZnVuY3Rpb24oKSB7XG4gICAgICAgICAgdmFyIGIgPSBiaW4ucmVhZCgpO1xuICAgICAgICAgIGlmIChiID09IC0xKVxuICAgICAgICAgICAgdGhyb3cgXCJlb2ZcIjtcbiAgICAgICAgICByZXR1cm4gYjtcbiAgICAgICAgfTtcbiAgICAgICAgdmFyIGNvdW50ID0gMDtcbiAgICAgICAgdmFyIHVuaWNvZGVNYXAyID0ge307XG4gICAgICAgIHdoaWxlICh0cnVlKSB7XG4gICAgICAgICAgdmFyIGIwID0gYmluLnJlYWQoKTtcbiAgICAgICAgICBpZiAoYjAgPT0gLTEpXG4gICAgICAgICAgICBicmVhaztcbiAgICAgICAgICB2YXIgYjEgPSByZWFkKCk7XG4gICAgICAgICAgdmFyIGIyID0gcmVhZCgpO1xuICAgICAgICAgIHZhciBiMyA9IHJlYWQoKTtcbiAgICAgICAgICB2YXIgayA9IFN0cmluZy5mcm9tQ2hhckNvZGUoYjAgPDwgOCB8IGIxKTtcbiAgICAgICAgICB2YXIgdiA9IGIyIDw8IDggfCBiMztcbiAgICAgICAgICB1bmljb2RlTWFwMltrXSA9IHY7XG4gICAgICAgICAgY291bnQgKz0gMTtcbiAgICAgICAgfVxuICAgICAgICBpZiAoY291bnQgIT0gbnVtQ2hhcnMpIHtcbiAgICAgICAgICB0aHJvdyBjb3VudCArIFwiICE9IFwiICsgbnVtQ2hhcnM7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHVuaWNvZGVNYXAyO1xuICAgICAgfSgpO1xuICAgICAgdmFyIHVua25vd25DaGFyID0gXCI/XCIuY2hhckNvZGVBdCgwKTtcbiAgICAgIHJldHVybiBmdW5jdGlvbihzMikge1xuICAgICAgICB2YXIgYnl0ZXMgPSBbXTtcbiAgICAgICAgZm9yICh2YXIgaTIgPSAwOyBpMiA8IHMyLmxlbmd0aDsgaTIgKz0gMSkge1xuICAgICAgICAgIHZhciBjMiA9IHMyLmNoYXJDb2RlQXQoaTIpO1xuICAgICAgICAgIGlmIChjMiA8IDEyOCkge1xuICAgICAgICAgICAgYnl0ZXMucHVzaChjMik7XG4gICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHZhciBiID0gdW5pY29kZU1hcFtzMi5jaGFyQXQoaTIpXTtcbiAgICAgICAgICAgIGlmICh0eXBlb2YgYiA9PSBcIm51bWJlclwiKSB7XG4gICAgICAgICAgICAgIGlmICgoYiAmIDI1NSkgPT0gYikge1xuICAgICAgICAgICAgICAgIGJ5dGVzLnB1c2goYik7XG4gICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgYnl0ZXMucHVzaChiID4+PiA4KTtcbiAgICAgICAgICAgICAgICBieXRlcy5wdXNoKGIgJiAyNTUpO1xuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICBieXRlcy5wdXNoKHVua25vd25DaGFyKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIGJ5dGVzO1xuICAgICAgfTtcbiAgICB9O1xuICAgIHZhciBRUk1vZGUgPSB7XG4gICAgICBNT0RFX05VTUJFUjogMSA8PCAwLFxuICAgICAgTU9ERV9BTFBIQV9OVU06IDEgPDwgMSxcbiAgICAgIE1PREVfOEJJVF9CWVRFOiAxIDw8IDIsXG4gICAgICBNT0RFX0tBTkpJOiAxIDw8IDNcbiAgICB9O1xuICAgIHZhciBRUkVycm9yQ29ycmVjdGlvbkxldmVsID0ge1xuICAgICAgTDogMSxcbiAgICAgIE06IDAsXG4gICAgICBROiAzLFxuICAgICAgSDogMlxuICAgIH07XG4gICAgdmFyIFFSTWFza1BhdHRlcm4gPSB7XG4gICAgICBQQVRURVJOMDAwOiAwLFxuICAgICAgUEFUVEVSTjAwMTogMSxcbiAgICAgIFBBVFRFUk4wMTA6IDIsXG4gICAgICBQQVRURVJOMDExOiAzLFxuICAgICAgUEFUVEVSTjEwMDogNCxcbiAgICAgIFBBVFRFUk4xMDE6IDUsXG4gICAgICBQQVRURVJOMTEwOiA2LFxuICAgICAgUEFUVEVSTjExMTogN1xuICAgIH07XG4gICAgdmFyIFFSVXRpbCA9IGZ1bmN0aW9uKCkge1xuICAgICAgdmFyIFBBVFRFUk5fUE9TSVRJT05fVEFCTEUgPSBbXG4gICAgICAgIFtdLFxuICAgICAgICBbNiwgMThdLFxuICAgICAgICBbNiwgMjJdLFxuICAgICAgICBbNiwgMjZdLFxuICAgICAgICBbNiwgMzBdLFxuICAgICAgICBbNiwgMzRdLFxuICAgICAgICBbNiwgMjIsIDM4XSxcbiAgICAgICAgWzYsIDI0LCA0Ml0sXG4gICAgICAgIFs2LCAyNiwgNDZdLFxuICAgICAgICBbNiwgMjgsIDUwXSxcbiAgICAgICAgWzYsIDMwLCA1NF0sXG4gICAgICAgIFs2LCAzMiwgNThdLFxuICAgICAgICBbNiwgMzQsIDYyXSxcbiAgICAgICAgWzYsIDI2LCA0NiwgNjZdLFxuICAgICAgICBbNiwgMjYsIDQ4LCA3MF0sXG4gICAgICAgIFs2LCAyNiwgNTAsIDc0XSxcbiAgICAgICAgWzYsIDMwLCA1NCwgNzhdLFxuICAgICAgICBbNiwgMzAsIDU2LCA4Ml0sXG4gICAgICAgIFs2LCAzMCwgNTgsIDg2XSxcbiAgICAgICAgWzYsIDM0LCA2MiwgOTBdLFxuICAgICAgICBbNiwgMjgsIDUwLCA3MiwgOTRdLFxuICAgICAgICBbNiwgMjYsIDUwLCA3NCwgOThdLFxuICAgICAgICBbNiwgMzAsIDU0LCA3OCwgMTAyXSxcbiAgICAgICAgWzYsIDI4LCA1NCwgODAsIDEwNl0sXG4gICAgICAgIFs2LCAzMiwgNTgsIDg0LCAxMTBdLFxuICAgICAgICBbNiwgMzAsIDU4LCA4NiwgMTE0XSxcbiAgICAgICAgWzYsIDM0LCA2MiwgOTAsIDExOF0sXG4gICAgICAgIFs2LCAyNiwgNTAsIDc0LCA5OCwgMTIyXSxcbiAgICAgICAgWzYsIDMwLCA1NCwgNzgsIDEwMiwgMTI2XSxcbiAgICAgICAgWzYsIDI2LCA1MiwgNzgsIDEwNCwgMTMwXSxcbiAgICAgICAgWzYsIDMwLCA1NiwgODIsIDEwOCwgMTM0XSxcbiAgICAgICAgWzYsIDM0LCA2MCwgODYsIDExMiwgMTM4XSxcbiAgICAgICAgWzYsIDMwLCA1OCwgODYsIDExNCwgMTQyXSxcbiAgICAgICAgWzYsIDM0LCA2MiwgOTAsIDExOCwgMTQ2XSxcbiAgICAgICAgWzYsIDMwLCA1NCwgNzgsIDEwMiwgMTI2LCAxNTBdLFxuICAgICAgICBbNiwgMjQsIDUwLCA3NiwgMTAyLCAxMjgsIDE1NF0sXG4gICAgICAgIFs2LCAyOCwgNTQsIDgwLCAxMDYsIDEzMiwgMTU4XSxcbiAgICAgICAgWzYsIDMyLCA1OCwgODQsIDExMCwgMTM2LCAxNjJdLFxuICAgICAgICBbNiwgMjYsIDU0LCA4MiwgMTEwLCAxMzgsIDE2Nl0sXG4gICAgICAgIFs2LCAzMCwgNTgsIDg2LCAxMTQsIDE0MiwgMTcwXVxuICAgICAgXTtcbiAgICAgIHZhciBHMTUgPSAxIDw8IDEwIHwgMSA8PCA4IHwgMSA8PCA1IHwgMSA8PCA0IHwgMSA8PCAyIHwgMSA8PCAxIHwgMSA8PCAwO1xuICAgICAgdmFyIEcxOCA9IDEgPDwgMTIgfCAxIDw8IDExIHwgMSA8PCAxMCB8IDEgPDwgOSB8IDEgPDwgOCB8IDEgPDwgNSB8IDEgPDwgMiB8IDEgPDwgMDtcbiAgICAgIHZhciBHMTVfTUFTSyA9IDEgPDwgMTQgfCAxIDw8IDEyIHwgMSA8PCAxMCB8IDEgPDwgNCB8IDEgPDwgMTtcbiAgICAgIHZhciBfdGhpcyA9IHt9O1xuICAgICAgdmFyIGdldEJDSERpZ2l0ID0gZnVuY3Rpb24oZGF0YSkge1xuICAgICAgICB2YXIgZGlnaXQgPSAwO1xuICAgICAgICB3aGlsZSAoZGF0YSAhPSAwKSB7XG4gICAgICAgICAgZGlnaXQgKz0gMTtcbiAgICAgICAgICBkYXRhID4+Pj0gMTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gZGlnaXQ7XG4gICAgICB9O1xuICAgICAgX3RoaXMuZ2V0QkNIVHlwZUluZm8gPSBmdW5jdGlvbihkYXRhKSB7XG4gICAgICAgIHZhciBkID0gZGF0YSA8PCAxMDtcbiAgICAgICAgd2hpbGUgKGdldEJDSERpZ2l0KGQpIC0gZ2V0QkNIRGlnaXQoRzE1KSA+PSAwKSB7XG4gICAgICAgICAgZCBePSBHMTUgPDwgZ2V0QkNIRGlnaXQoZCkgLSBnZXRCQ0hEaWdpdChHMTUpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiAoZGF0YSA8PCAxMCB8IGQpIF4gRzE1X01BU0s7XG4gICAgICB9O1xuICAgICAgX3RoaXMuZ2V0QkNIVHlwZU51bWJlciA9IGZ1bmN0aW9uKGRhdGEpIHtcbiAgICAgICAgdmFyIGQgPSBkYXRhIDw8IDEyO1xuICAgICAgICB3aGlsZSAoZ2V0QkNIRGlnaXQoZCkgLSBnZXRCQ0hEaWdpdChHMTgpID49IDApIHtcbiAgICAgICAgICBkIF49IEcxOCA8PCBnZXRCQ0hEaWdpdChkKSAtIGdldEJDSERpZ2l0KEcxOCk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIGRhdGEgPDwgMTIgfCBkO1xuICAgICAgfTtcbiAgICAgIF90aGlzLmdldFBhdHRlcm5Qb3NpdGlvbiA9IGZ1bmN0aW9uKHR5cGVOdW1iZXIpIHtcbiAgICAgICAgcmV0dXJuIFBBVFRFUk5fUE9TSVRJT05fVEFCTEVbdHlwZU51bWJlciAtIDFdO1xuICAgICAgfTtcbiAgICAgIF90aGlzLmdldE1hc2tGdW5jdGlvbiA9IGZ1bmN0aW9uKG1hc2tQYXR0ZXJuKSB7XG4gICAgICAgIHN3aXRjaCAobWFza1BhdHRlcm4pIHtcbiAgICAgICAgICBjYXNlIFFSTWFza1BhdHRlcm4uUEFUVEVSTjAwMDpcbiAgICAgICAgICAgIHJldHVybiBmdW5jdGlvbihpMiwgaikge1xuICAgICAgICAgICAgICByZXR1cm4gKGkyICsgaikgJSAyID09IDA7XG4gICAgICAgICAgICB9O1xuICAgICAgICAgIGNhc2UgUVJNYXNrUGF0dGVybi5QQVRURVJOMDAxOlxuICAgICAgICAgICAgcmV0dXJuIGZ1bmN0aW9uKGkyLCBqKSB7XG4gICAgICAgICAgICAgIHJldHVybiBpMiAlIDIgPT0gMDtcbiAgICAgICAgICAgIH07XG4gICAgICAgICAgY2FzZSBRUk1hc2tQYXR0ZXJuLlBBVFRFUk4wMTA6XG4gICAgICAgICAgICByZXR1cm4gZnVuY3Rpb24oaTIsIGopIHtcbiAgICAgICAgICAgICAgcmV0dXJuIGogJSAzID09IDA7XG4gICAgICAgICAgICB9O1xuICAgICAgICAgIGNhc2UgUVJNYXNrUGF0dGVybi5QQVRURVJOMDExOlxuICAgICAgICAgICAgcmV0dXJuIGZ1bmN0aW9uKGkyLCBqKSB7XG4gICAgICAgICAgICAgIHJldHVybiAoaTIgKyBqKSAlIDMgPT0gMDtcbiAgICAgICAgICAgIH07XG4gICAgICAgICAgY2FzZSBRUk1hc2tQYXR0ZXJuLlBBVFRFUk4xMDA6XG4gICAgICAgICAgICByZXR1cm4gZnVuY3Rpb24oaTIsIGopIHtcbiAgICAgICAgICAgICAgcmV0dXJuIChNYXRoLmZsb29yKGkyIC8gMikgKyBNYXRoLmZsb29yKGogLyAzKSkgJSAyID09IDA7XG4gICAgICAgICAgICB9O1xuICAgICAgICAgIGNhc2UgUVJNYXNrUGF0dGVybi5QQVRURVJOMTAxOlxuICAgICAgICAgICAgcmV0dXJuIGZ1bmN0aW9uKGkyLCBqKSB7XG4gICAgICAgICAgICAgIHJldHVybiBpMiAqIGogJSAyICsgaTIgKiBqICUgMyA9PSAwO1xuICAgICAgICAgICAgfTtcbiAgICAgICAgICBjYXNlIFFSTWFza1BhdHRlcm4uUEFUVEVSTjExMDpcbiAgICAgICAgICAgIHJldHVybiBmdW5jdGlvbihpMiwgaikge1xuICAgICAgICAgICAgICByZXR1cm4gKGkyICogaiAlIDIgKyBpMiAqIGogJSAzKSAlIDIgPT0gMDtcbiAgICAgICAgICAgIH07XG4gICAgICAgICAgY2FzZSBRUk1hc2tQYXR0ZXJuLlBBVFRFUk4xMTE6XG4gICAgICAgICAgICByZXR1cm4gZnVuY3Rpb24oaTIsIGopIHtcbiAgICAgICAgICAgICAgcmV0dXJuIChpMiAqIGogJSAzICsgKGkyICsgaikgJSAyKSAlIDIgPT0gMDtcbiAgICAgICAgICAgIH07XG4gICAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICAgIHRocm93IFwiYmFkIG1hc2tQYXR0ZXJuOlwiICsgbWFza1BhdHRlcm47XG4gICAgICAgIH1cbiAgICAgIH07XG4gICAgICBfdGhpcy5nZXRFcnJvckNvcnJlY3RQb2x5bm9taWFsID0gZnVuY3Rpb24oZXJyb3JDb3JyZWN0TGVuZ3RoKSB7XG4gICAgICAgIHZhciBhMiA9IHFyUG9seW5vbWlhbChbMV0sIDApO1xuICAgICAgICBmb3IgKHZhciBpMiA9IDA7IGkyIDwgZXJyb3JDb3JyZWN0TGVuZ3RoOyBpMiArPSAxKSB7XG4gICAgICAgICAgYTIgPSBhMi5tdWx0aXBseShxclBvbHlub21pYWwoWzEsIFFSTWF0aC5nZXhwKGkyKV0sIDApKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gYTI7XG4gICAgICB9O1xuICAgICAgX3RoaXMuZ2V0TGVuZ3RoSW5CaXRzID0gZnVuY3Rpb24obW9kZSwgdHlwZSkge1xuICAgICAgICBpZiAoMSA8PSB0eXBlICYmIHR5cGUgPCAxMCkge1xuICAgICAgICAgIHN3aXRjaCAobW9kZSkge1xuICAgICAgICAgICAgY2FzZSBRUk1vZGUuTU9ERV9OVU1CRVI6XG4gICAgICAgICAgICAgIHJldHVybiAxMDtcbiAgICAgICAgICAgIGNhc2UgUVJNb2RlLk1PREVfQUxQSEFfTlVNOlxuICAgICAgICAgICAgICByZXR1cm4gOTtcbiAgICAgICAgICAgIGNhc2UgUVJNb2RlLk1PREVfOEJJVF9CWVRFOlxuICAgICAgICAgICAgICByZXR1cm4gODtcbiAgICAgICAgICAgIGNhc2UgUVJNb2RlLk1PREVfS0FOSkk6XG4gICAgICAgICAgICAgIHJldHVybiA4O1xuICAgICAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICAgICAgdGhyb3cgXCJtb2RlOlwiICsgbW9kZTtcbiAgICAgICAgICB9XG4gICAgICAgIH0gZWxzZSBpZiAodHlwZSA8IDI3KSB7XG4gICAgICAgICAgc3dpdGNoIChtb2RlKSB7XG4gICAgICAgICAgICBjYXNlIFFSTW9kZS5NT0RFX05VTUJFUjpcbiAgICAgICAgICAgICAgcmV0dXJuIDEyO1xuICAgICAgICAgICAgY2FzZSBRUk1vZGUuTU9ERV9BTFBIQV9OVU06XG4gICAgICAgICAgICAgIHJldHVybiAxMTtcbiAgICAgICAgICAgIGNhc2UgUVJNb2RlLk1PREVfOEJJVF9CWVRFOlxuICAgICAgICAgICAgICByZXR1cm4gMTY7XG4gICAgICAgICAgICBjYXNlIFFSTW9kZS5NT0RFX0tBTkpJOlxuICAgICAgICAgICAgICByZXR1cm4gMTA7XG4gICAgICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgICAgICB0aHJvdyBcIm1vZGU6XCIgKyBtb2RlO1xuICAgICAgICAgIH1cbiAgICAgICAgfSBlbHNlIGlmICh0eXBlIDwgNDEpIHtcbiAgICAgICAgICBzd2l0Y2ggKG1vZGUpIHtcbiAgICAgICAgICAgIGNhc2UgUVJNb2RlLk1PREVfTlVNQkVSOlxuICAgICAgICAgICAgICByZXR1cm4gMTQ7XG4gICAgICAgICAgICBjYXNlIFFSTW9kZS5NT0RFX0FMUEhBX05VTTpcbiAgICAgICAgICAgICAgcmV0dXJuIDEzO1xuICAgICAgICAgICAgY2FzZSBRUk1vZGUuTU9ERV84QklUX0JZVEU6XG4gICAgICAgICAgICAgIHJldHVybiAxNjtcbiAgICAgICAgICAgIGNhc2UgUVJNb2RlLk1PREVfS0FOSkk6XG4gICAgICAgICAgICAgIHJldHVybiAxMjtcbiAgICAgICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgICAgIHRocm93IFwibW9kZTpcIiArIG1vZGU7XG4gICAgICAgICAgfVxuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIHRocm93IFwidHlwZTpcIiArIHR5cGU7XG4gICAgICAgIH1cbiAgICAgIH07XG4gICAgICBfdGhpcy5nZXRMb3N0UG9pbnQgPSBmdW5jdGlvbihxcmNvZGU0KSB7XG4gICAgICAgIHZhciBtb2R1bGVDb3VudCA9IHFyY29kZTQuZ2V0TW9kdWxlQ291bnQoKTtcbiAgICAgICAgdmFyIGxvc3RQb2ludCA9IDA7XG4gICAgICAgIGZvciAodmFyIHJvdyA9IDA7IHJvdyA8IG1vZHVsZUNvdW50OyByb3cgKz0gMSkge1xuICAgICAgICAgIGZvciAodmFyIGNvbCA9IDA7IGNvbCA8IG1vZHVsZUNvdW50OyBjb2wgKz0gMSkge1xuICAgICAgICAgICAgdmFyIHNhbWVDb3VudCA9IDA7XG4gICAgICAgICAgICB2YXIgZGFyayA9IHFyY29kZTQuaXNEYXJrKHJvdywgY29sKTtcbiAgICAgICAgICAgIGZvciAodmFyIHIgPSAtMTsgciA8PSAxOyByICs9IDEpIHtcbiAgICAgICAgICAgICAgaWYgKHJvdyArIHIgPCAwIHx8IG1vZHVsZUNvdW50IDw9IHJvdyArIHIpIHtcbiAgICAgICAgICAgICAgICBjb250aW51ZTtcbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICBmb3IgKHZhciBjMiA9IC0xOyBjMiA8PSAxOyBjMiArPSAxKSB7XG4gICAgICAgICAgICAgICAgaWYgKGNvbCArIGMyIDwgMCB8fCBtb2R1bGVDb3VudCA8PSBjb2wgKyBjMikge1xuICAgICAgICAgICAgICAgICAgY29udGludWU7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGlmIChyID09IDAgJiYgYzIgPT0gMCkge1xuICAgICAgICAgICAgICAgICAgY29udGludWU7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGlmIChkYXJrID09IHFyY29kZTQuaXNEYXJrKHJvdyArIHIsIGNvbCArIGMyKSkge1xuICAgICAgICAgICAgICAgICAgc2FtZUNvdW50ICs9IDE7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAoc2FtZUNvdW50ID4gNSkge1xuICAgICAgICAgICAgICBsb3N0UG9pbnQgKz0gMyArIHNhbWVDb3VudCAtIDU7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIGZvciAodmFyIHJvdyA9IDA7IHJvdyA8IG1vZHVsZUNvdW50IC0gMTsgcm93ICs9IDEpIHtcbiAgICAgICAgICBmb3IgKHZhciBjb2wgPSAwOyBjb2wgPCBtb2R1bGVDb3VudCAtIDE7IGNvbCArPSAxKSB7XG4gICAgICAgICAgICB2YXIgY291bnQgPSAwO1xuICAgICAgICAgICAgaWYgKHFyY29kZTQuaXNEYXJrKHJvdywgY29sKSlcbiAgICAgICAgICAgICAgY291bnQgKz0gMTtcbiAgICAgICAgICAgIGlmIChxcmNvZGU0LmlzRGFyayhyb3cgKyAxLCBjb2wpKVxuICAgICAgICAgICAgICBjb3VudCArPSAxO1xuICAgICAgICAgICAgaWYgKHFyY29kZTQuaXNEYXJrKHJvdywgY29sICsgMSkpXG4gICAgICAgICAgICAgIGNvdW50ICs9IDE7XG4gICAgICAgICAgICBpZiAocXJjb2RlNC5pc0Rhcmsocm93ICsgMSwgY29sICsgMSkpXG4gICAgICAgICAgICAgIGNvdW50ICs9IDE7XG4gICAgICAgICAgICBpZiAoY291bnQgPT0gMCB8fCBjb3VudCA9PSA0KSB7XG4gICAgICAgICAgICAgIGxvc3RQb2ludCArPSAzO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBmb3IgKHZhciByb3cgPSAwOyByb3cgPCBtb2R1bGVDb3VudDsgcm93ICs9IDEpIHtcbiAgICAgICAgICBmb3IgKHZhciBjb2wgPSAwOyBjb2wgPCBtb2R1bGVDb3VudCAtIDY7IGNvbCArPSAxKSB7XG4gICAgICAgICAgICBpZiAocXJjb2RlNC5pc0Rhcmsocm93LCBjb2wpICYmICFxcmNvZGU0LmlzRGFyayhyb3csIGNvbCArIDEpICYmIHFyY29kZTQuaXNEYXJrKHJvdywgY29sICsgMikgJiYgcXJjb2RlNC5pc0Rhcmsocm93LCBjb2wgKyAzKSAmJiBxcmNvZGU0LmlzRGFyayhyb3csIGNvbCArIDQpICYmICFxcmNvZGU0LmlzRGFyayhyb3csIGNvbCArIDUpICYmIHFyY29kZTQuaXNEYXJrKHJvdywgY29sICsgNikpIHtcbiAgICAgICAgICAgICAgbG9zdFBvaW50ICs9IDQwO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBmb3IgKHZhciBjb2wgPSAwOyBjb2wgPCBtb2R1bGVDb3VudDsgY29sICs9IDEpIHtcbiAgICAgICAgICBmb3IgKHZhciByb3cgPSAwOyByb3cgPCBtb2R1bGVDb3VudCAtIDY7IHJvdyArPSAxKSB7XG4gICAgICAgICAgICBpZiAocXJjb2RlNC5pc0Rhcmsocm93LCBjb2wpICYmICFxcmNvZGU0LmlzRGFyayhyb3cgKyAxLCBjb2wpICYmIHFyY29kZTQuaXNEYXJrKHJvdyArIDIsIGNvbCkgJiYgcXJjb2RlNC5pc0Rhcmsocm93ICsgMywgY29sKSAmJiBxcmNvZGU0LmlzRGFyayhyb3cgKyA0LCBjb2wpICYmICFxcmNvZGU0LmlzRGFyayhyb3cgKyA1LCBjb2wpICYmIHFyY29kZTQuaXNEYXJrKHJvdyArIDYsIGNvbCkpIHtcbiAgICAgICAgICAgICAgbG9zdFBvaW50ICs9IDQwO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICB2YXIgZGFya0NvdW50ID0gMDtcbiAgICAgICAgZm9yICh2YXIgY29sID0gMDsgY29sIDwgbW9kdWxlQ291bnQ7IGNvbCArPSAxKSB7XG4gICAgICAgICAgZm9yICh2YXIgcm93ID0gMDsgcm93IDwgbW9kdWxlQ291bnQ7IHJvdyArPSAxKSB7XG4gICAgICAgICAgICBpZiAocXJjb2RlNC5pc0Rhcmsocm93LCBjb2wpKSB7XG4gICAgICAgICAgICAgIGRhcmtDb3VudCArPSAxO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICB2YXIgcmF0aW8gPSBNYXRoLmFicygxMDAgKiBkYXJrQ291bnQgLyBtb2R1bGVDb3VudCAvIG1vZHVsZUNvdW50IC0gNTApIC8gNTtcbiAgICAgICAgbG9zdFBvaW50ICs9IHJhdGlvICogMTA7XG4gICAgICAgIHJldHVybiBsb3N0UG9pbnQ7XG4gICAgICB9O1xuICAgICAgcmV0dXJuIF90aGlzO1xuICAgIH0oKTtcbiAgICB2YXIgUVJNYXRoID0gZnVuY3Rpb24oKSB7XG4gICAgICB2YXIgRVhQX1RBQkxFID0gbmV3IEFycmF5KDI1Nik7XG4gICAgICB2YXIgTE9HX1RBQkxFID0gbmV3IEFycmF5KDI1Nik7XG4gICAgICBmb3IgKHZhciBpMiA9IDA7IGkyIDwgODsgaTIgKz0gMSkge1xuICAgICAgICBFWFBfVEFCTEVbaTJdID0gMSA8PCBpMjtcbiAgICAgIH1cbiAgICAgIGZvciAodmFyIGkyID0gODsgaTIgPCAyNTY7IGkyICs9IDEpIHtcbiAgICAgICAgRVhQX1RBQkxFW2kyXSA9IEVYUF9UQUJMRVtpMiAtIDRdIF4gRVhQX1RBQkxFW2kyIC0gNV0gXiBFWFBfVEFCTEVbaTIgLSA2XSBeIEVYUF9UQUJMRVtpMiAtIDhdO1xuICAgICAgfVxuICAgICAgZm9yICh2YXIgaTIgPSAwOyBpMiA8IDI1NTsgaTIgKz0gMSkge1xuICAgICAgICBMT0dfVEFCTEVbRVhQX1RBQkxFW2kyXV0gPSBpMjtcbiAgICAgIH1cbiAgICAgIHZhciBfdGhpcyA9IHt9O1xuICAgICAgX3RoaXMuZ2xvZyA9IGZ1bmN0aW9uKG4yKSB7XG4gICAgICAgIGlmIChuMiA8IDEpIHtcbiAgICAgICAgICB0aHJvdyBcImdsb2coXCIgKyBuMiArIFwiKVwiO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBMT0dfVEFCTEVbbjJdO1xuICAgICAgfTtcbiAgICAgIF90aGlzLmdleHAgPSBmdW5jdGlvbihuMikge1xuICAgICAgICB3aGlsZSAobjIgPCAwKSB7XG4gICAgICAgICAgbjIgKz0gMjU1O1xuICAgICAgICB9XG4gICAgICAgIHdoaWxlIChuMiA+PSAyNTYpIHtcbiAgICAgICAgICBuMiAtPSAyNTU7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIEVYUF9UQUJMRVtuMl07XG4gICAgICB9O1xuICAgICAgcmV0dXJuIF90aGlzO1xuICAgIH0oKTtcbiAgICBmdW5jdGlvbiBxclBvbHlub21pYWwobnVtLCBzaGlmdCkge1xuICAgICAgaWYgKHR5cGVvZiBudW0ubGVuZ3RoID09IFwidW5kZWZpbmVkXCIpIHtcbiAgICAgICAgdGhyb3cgbnVtLmxlbmd0aCArIFwiL1wiICsgc2hpZnQ7XG4gICAgICB9XG4gICAgICB2YXIgX251bSA9IGZ1bmN0aW9uKCkge1xuICAgICAgICB2YXIgb2Zmc2V0ID0gMDtcbiAgICAgICAgd2hpbGUgKG9mZnNldCA8IG51bS5sZW5ndGggJiYgbnVtW29mZnNldF0gPT0gMCkge1xuICAgICAgICAgIG9mZnNldCArPSAxO1xuICAgICAgICB9XG4gICAgICAgIHZhciBfbnVtMiA9IG5ldyBBcnJheShudW0ubGVuZ3RoIC0gb2Zmc2V0ICsgc2hpZnQpO1xuICAgICAgICBmb3IgKHZhciBpMiA9IDA7IGkyIDwgbnVtLmxlbmd0aCAtIG9mZnNldDsgaTIgKz0gMSkge1xuICAgICAgICAgIF9udW0yW2kyXSA9IG51bVtpMiArIG9mZnNldF07XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIF9udW0yO1xuICAgICAgfSgpO1xuICAgICAgdmFyIF90aGlzID0ge307XG4gICAgICBfdGhpcy5nZXRBdCA9IGZ1bmN0aW9uKGluZGV4KSB7XG4gICAgICAgIHJldHVybiBfbnVtW2luZGV4XTtcbiAgICAgIH07XG4gICAgICBfdGhpcy5nZXRMZW5ndGggPSBmdW5jdGlvbigpIHtcbiAgICAgICAgcmV0dXJuIF9udW0ubGVuZ3RoO1xuICAgICAgfTtcbiAgICAgIF90aGlzLm11bHRpcGx5ID0gZnVuY3Rpb24oZTIpIHtcbiAgICAgICAgdmFyIG51bTIgPSBuZXcgQXJyYXkoX3RoaXMuZ2V0TGVuZ3RoKCkgKyBlMi5nZXRMZW5ndGgoKSAtIDEpO1xuICAgICAgICBmb3IgKHZhciBpMiA9IDA7IGkyIDwgX3RoaXMuZ2V0TGVuZ3RoKCk7IGkyICs9IDEpIHtcbiAgICAgICAgICBmb3IgKHZhciBqID0gMDsgaiA8IGUyLmdldExlbmd0aCgpOyBqICs9IDEpIHtcbiAgICAgICAgICAgIG51bTJbaTIgKyBqXSBePSBRUk1hdGguZ2V4cChRUk1hdGguZ2xvZyhfdGhpcy5nZXRBdChpMikpICsgUVJNYXRoLmdsb2coZTIuZ2V0QXQoaikpKTtcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHFyUG9seW5vbWlhbChudW0yLCAwKTtcbiAgICAgIH07XG4gICAgICBfdGhpcy5tb2QgPSBmdW5jdGlvbihlMikge1xuICAgICAgICBpZiAoX3RoaXMuZ2V0TGVuZ3RoKCkgLSBlMi5nZXRMZW5ndGgoKSA8IDApIHtcbiAgICAgICAgICByZXR1cm4gX3RoaXM7XG4gICAgICAgIH1cbiAgICAgICAgdmFyIHJhdGlvID0gUVJNYXRoLmdsb2coX3RoaXMuZ2V0QXQoMCkpIC0gUVJNYXRoLmdsb2coZTIuZ2V0QXQoMCkpO1xuICAgICAgICB2YXIgbnVtMiA9IG5ldyBBcnJheShfdGhpcy5nZXRMZW5ndGgoKSk7XG4gICAgICAgIGZvciAodmFyIGkyID0gMDsgaTIgPCBfdGhpcy5nZXRMZW5ndGgoKTsgaTIgKz0gMSkge1xuICAgICAgICAgIG51bTJbaTJdID0gX3RoaXMuZ2V0QXQoaTIpO1xuICAgICAgICB9XG4gICAgICAgIGZvciAodmFyIGkyID0gMDsgaTIgPCBlMi5nZXRMZW5ndGgoKTsgaTIgKz0gMSkge1xuICAgICAgICAgIG51bTJbaTJdIF49IFFSTWF0aC5nZXhwKFFSTWF0aC5nbG9nKGUyLmdldEF0KGkyKSkgKyByYXRpbyk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHFyUG9seW5vbWlhbChudW0yLCAwKS5tb2QoZTIpO1xuICAgICAgfTtcbiAgICAgIHJldHVybiBfdGhpcztcbiAgICB9XG4gICAgdmFyIFFSUlNCbG9jayA9IGZ1bmN0aW9uKCkge1xuICAgICAgdmFyIFJTX0JMT0NLX1RBQkxFID0gW1xuICAgICAgICBbMSwgMjYsIDE5XSxcbiAgICAgICAgWzEsIDI2LCAxNl0sXG4gICAgICAgIFsxLCAyNiwgMTNdLFxuICAgICAgICBbMSwgMjYsIDldLFxuICAgICAgICBbMSwgNDQsIDM0XSxcbiAgICAgICAgWzEsIDQ0LCAyOF0sXG4gICAgICAgIFsxLCA0NCwgMjJdLFxuICAgICAgICBbMSwgNDQsIDE2XSxcbiAgICAgICAgWzEsIDcwLCA1NV0sXG4gICAgICAgIFsxLCA3MCwgNDRdLFxuICAgICAgICBbMiwgMzUsIDE3XSxcbiAgICAgICAgWzIsIDM1LCAxM10sXG4gICAgICAgIFsxLCAxMDAsIDgwXSxcbiAgICAgICAgWzIsIDUwLCAzMl0sXG4gICAgICAgIFsyLCA1MCwgMjRdLFxuICAgICAgICBbNCwgMjUsIDldLFxuICAgICAgICBbMSwgMTM0LCAxMDhdLFxuICAgICAgICBbMiwgNjcsIDQzXSxcbiAgICAgICAgWzIsIDMzLCAxNSwgMiwgMzQsIDE2XSxcbiAgICAgICAgWzIsIDMzLCAxMSwgMiwgMzQsIDEyXSxcbiAgICAgICAgWzIsIDg2LCA2OF0sXG4gICAgICAgIFs0LCA0MywgMjddLFxuICAgICAgICBbNCwgNDMsIDE5XSxcbiAgICAgICAgWzQsIDQzLCAxNV0sXG4gICAgICAgIFsyLCA5OCwgNzhdLFxuICAgICAgICBbNCwgNDksIDMxXSxcbiAgICAgICAgWzIsIDMyLCAxNCwgNCwgMzMsIDE1XSxcbiAgICAgICAgWzQsIDM5LCAxMywgMSwgNDAsIDE0XSxcbiAgICAgICAgWzIsIDEyMSwgOTddLFxuICAgICAgICBbMiwgNjAsIDM4LCAyLCA2MSwgMzldLFxuICAgICAgICBbNCwgNDAsIDE4LCAyLCA0MSwgMTldLFxuICAgICAgICBbNCwgNDAsIDE0LCAyLCA0MSwgMTVdLFxuICAgICAgICBbMiwgMTQ2LCAxMTZdLFxuICAgICAgICBbMywgNTgsIDM2LCAyLCA1OSwgMzddLFxuICAgICAgICBbNCwgMzYsIDE2LCA0LCAzNywgMTddLFxuICAgICAgICBbNCwgMzYsIDEyLCA0LCAzNywgMTNdLFxuICAgICAgICBbMiwgODYsIDY4LCAyLCA4NywgNjldLFxuICAgICAgICBbNCwgNjksIDQzLCAxLCA3MCwgNDRdLFxuICAgICAgICBbNiwgNDMsIDE5LCAyLCA0NCwgMjBdLFxuICAgICAgICBbNiwgNDMsIDE1LCAyLCA0NCwgMTZdLFxuICAgICAgICBbNCwgMTAxLCA4MV0sXG4gICAgICAgIFsxLCA4MCwgNTAsIDQsIDgxLCA1MV0sXG4gICAgICAgIFs0LCA1MCwgMjIsIDQsIDUxLCAyM10sXG4gICAgICAgIFszLCAzNiwgMTIsIDgsIDM3LCAxM10sXG4gICAgICAgIFsyLCAxMTYsIDkyLCAyLCAxMTcsIDkzXSxcbiAgICAgICAgWzYsIDU4LCAzNiwgMiwgNTksIDM3XSxcbiAgICAgICAgWzQsIDQ2LCAyMCwgNiwgNDcsIDIxXSxcbiAgICAgICAgWzcsIDQyLCAxNCwgNCwgNDMsIDE1XSxcbiAgICAgICAgWzQsIDEzMywgMTA3XSxcbiAgICAgICAgWzgsIDU5LCAzNywgMSwgNjAsIDM4XSxcbiAgICAgICAgWzgsIDQ0LCAyMCwgNCwgNDUsIDIxXSxcbiAgICAgICAgWzEyLCAzMywgMTEsIDQsIDM0LCAxMl0sXG4gICAgICAgIFszLCAxNDUsIDExNSwgMSwgMTQ2LCAxMTZdLFxuICAgICAgICBbNCwgNjQsIDQwLCA1LCA2NSwgNDFdLFxuICAgICAgICBbMTEsIDM2LCAxNiwgNSwgMzcsIDE3XSxcbiAgICAgICAgWzExLCAzNiwgMTIsIDUsIDM3LCAxM10sXG4gICAgICAgIFs1LCAxMDksIDg3LCAxLCAxMTAsIDg4XSxcbiAgICAgICAgWzUsIDY1LCA0MSwgNSwgNjYsIDQyXSxcbiAgICAgICAgWzUsIDU0LCAyNCwgNywgNTUsIDI1XSxcbiAgICAgICAgWzExLCAzNiwgMTIsIDcsIDM3LCAxM10sXG4gICAgICAgIFs1LCAxMjIsIDk4LCAxLCAxMjMsIDk5XSxcbiAgICAgICAgWzcsIDczLCA0NSwgMywgNzQsIDQ2XSxcbiAgICAgICAgWzE1LCA0MywgMTksIDIsIDQ0LCAyMF0sXG4gICAgICAgIFszLCA0NSwgMTUsIDEzLCA0NiwgMTZdLFxuICAgICAgICBbMSwgMTM1LCAxMDcsIDUsIDEzNiwgMTA4XSxcbiAgICAgICAgWzEwLCA3NCwgNDYsIDEsIDc1LCA0N10sXG4gICAgICAgIFsxLCA1MCwgMjIsIDE1LCA1MSwgMjNdLFxuICAgICAgICBbMiwgNDIsIDE0LCAxNywgNDMsIDE1XSxcbiAgICAgICAgWzUsIDE1MCwgMTIwLCAxLCAxNTEsIDEyMV0sXG4gICAgICAgIFs5LCA2OSwgNDMsIDQsIDcwLCA0NF0sXG4gICAgICAgIFsxNywgNTAsIDIyLCAxLCA1MSwgMjNdLFxuICAgICAgICBbMiwgNDIsIDE0LCAxOSwgNDMsIDE1XSxcbiAgICAgICAgWzMsIDE0MSwgMTEzLCA0LCAxNDIsIDExNF0sXG4gICAgICAgIFszLCA3MCwgNDQsIDExLCA3MSwgNDVdLFxuICAgICAgICBbMTcsIDQ3LCAyMSwgNCwgNDgsIDIyXSxcbiAgICAgICAgWzksIDM5LCAxMywgMTYsIDQwLCAxNF0sXG4gICAgICAgIFszLCAxMzUsIDEwNywgNSwgMTM2LCAxMDhdLFxuICAgICAgICBbMywgNjcsIDQxLCAxMywgNjgsIDQyXSxcbiAgICAgICAgWzE1LCA1NCwgMjQsIDUsIDU1LCAyNV0sXG4gICAgICAgIFsxNSwgNDMsIDE1LCAxMCwgNDQsIDE2XSxcbiAgICAgICAgWzQsIDE0NCwgMTE2LCA0LCAxNDUsIDExN10sXG4gICAgICAgIFsxNywgNjgsIDQyXSxcbiAgICAgICAgWzE3LCA1MCwgMjIsIDYsIDUxLCAyM10sXG4gICAgICAgIFsxOSwgNDYsIDE2LCA2LCA0NywgMTddLFxuICAgICAgICBbMiwgMTM5LCAxMTEsIDcsIDE0MCwgMTEyXSxcbiAgICAgICAgWzE3LCA3NCwgNDZdLFxuICAgICAgICBbNywgNTQsIDI0LCAxNiwgNTUsIDI1XSxcbiAgICAgICAgWzM0LCAzNywgMTNdLFxuICAgICAgICBbNCwgMTUxLCAxMjEsIDUsIDE1MiwgMTIyXSxcbiAgICAgICAgWzQsIDc1LCA0NywgMTQsIDc2LCA0OF0sXG4gICAgICAgIFsxMSwgNTQsIDI0LCAxNCwgNTUsIDI1XSxcbiAgICAgICAgWzE2LCA0NSwgMTUsIDE0LCA0NiwgMTZdLFxuICAgICAgICBbNiwgMTQ3LCAxMTcsIDQsIDE0OCwgMTE4XSxcbiAgICAgICAgWzYsIDczLCA0NSwgMTQsIDc0LCA0Nl0sXG4gICAgICAgIFsxMSwgNTQsIDI0LCAxNiwgNTUsIDI1XSxcbiAgICAgICAgWzMwLCA0NiwgMTYsIDIsIDQ3LCAxN10sXG4gICAgICAgIFs4LCAxMzIsIDEwNiwgNCwgMTMzLCAxMDddLFxuICAgICAgICBbOCwgNzUsIDQ3LCAxMywgNzYsIDQ4XSxcbiAgICAgICAgWzcsIDU0LCAyNCwgMjIsIDU1LCAyNV0sXG4gICAgICAgIFsyMiwgNDUsIDE1LCAxMywgNDYsIDE2XSxcbiAgICAgICAgWzEwLCAxNDIsIDExNCwgMiwgMTQzLCAxMTVdLFxuICAgICAgICBbMTksIDc0LCA0NiwgNCwgNzUsIDQ3XSxcbiAgICAgICAgWzI4LCA1MCwgMjIsIDYsIDUxLCAyM10sXG4gICAgICAgIFszMywgNDYsIDE2LCA0LCA0NywgMTddLFxuICAgICAgICBbOCwgMTUyLCAxMjIsIDQsIDE1MywgMTIzXSxcbiAgICAgICAgWzIyLCA3MywgNDUsIDMsIDc0LCA0Nl0sXG4gICAgICAgIFs4LCA1MywgMjMsIDI2LCA1NCwgMjRdLFxuICAgICAgICBbMTIsIDQ1LCAxNSwgMjgsIDQ2LCAxNl0sXG4gICAgICAgIFszLCAxNDcsIDExNywgMTAsIDE0OCwgMTE4XSxcbiAgICAgICAgWzMsIDczLCA0NSwgMjMsIDc0LCA0Nl0sXG4gICAgICAgIFs0LCA1NCwgMjQsIDMxLCA1NSwgMjVdLFxuICAgICAgICBbMTEsIDQ1LCAxNSwgMzEsIDQ2LCAxNl0sXG4gICAgICAgIFs3LCAxNDYsIDExNiwgNywgMTQ3LCAxMTddLFxuICAgICAgICBbMjEsIDczLCA0NSwgNywgNzQsIDQ2XSxcbiAgICAgICAgWzEsIDUzLCAyMywgMzcsIDU0LCAyNF0sXG4gICAgICAgIFsxOSwgNDUsIDE1LCAyNiwgNDYsIDE2XSxcbiAgICAgICAgWzUsIDE0NSwgMTE1LCAxMCwgMTQ2LCAxMTZdLFxuICAgICAgICBbMTksIDc1LCA0NywgMTAsIDc2LCA0OF0sXG4gICAgICAgIFsxNSwgNTQsIDI0LCAyNSwgNTUsIDI1XSxcbiAgICAgICAgWzIzLCA0NSwgMTUsIDI1LCA0NiwgMTZdLFxuICAgICAgICBbMTMsIDE0NSwgMTE1LCAzLCAxNDYsIDExNl0sXG4gICAgICAgIFsyLCA3NCwgNDYsIDI5LCA3NSwgNDddLFxuICAgICAgICBbNDIsIDU0LCAyNCwgMSwgNTUsIDI1XSxcbiAgICAgICAgWzIzLCA0NSwgMTUsIDI4LCA0NiwgMTZdLFxuICAgICAgICBbMTcsIDE0NSwgMTE1XSxcbiAgICAgICAgWzEwLCA3NCwgNDYsIDIzLCA3NSwgNDddLFxuICAgICAgICBbMTAsIDU0LCAyNCwgMzUsIDU1LCAyNV0sXG4gICAgICAgIFsxOSwgNDUsIDE1LCAzNSwgNDYsIDE2XSxcbiAgICAgICAgWzE3LCAxNDUsIDExNSwgMSwgMTQ2LCAxMTZdLFxuICAgICAgICBbMTQsIDc0LCA0NiwgMjEsIDc1LCA0N10sXG4gICAgICAgIFsyOSwgNTQsIDI0LCAxOSwgNTUsIDI1XSxcbiAgICAgICAgWzExLCA0NSwgMTUsIDQ2LCA0NiwgMTZdLFxuICAgICAgICBbMTMsIDE0NSwgMTE1LCA2LCAxNDYsIDExNl0sXG4gICAgICAgIFsxNCwgNzQsIDQ2LCAyMywgNzUsIDQ3XSxcbiAgICAgICAgWzQ0LCA1NCwgMjQsIDcsIDU1LCAyNV0sXG4gICAgICAgIFs1OSwgNDYsIDE2LCAxLCA0NywgMTddLFxuICAgICAgICBbMTIsIDE1MSwgMTIxLCA3LCAxNTIsIDEyMl0sXG4gICAgICAgIFsxMiwgNzUsIDQ3LCAyNiwgNzYsIDQ4XSxcbiAgICAgICAgWzM5LCA1NCwgMjQsIDE0LCA1NSwgMjVdLFxuICAgICAgICBbMjIsIDQ1LCAxNSwgNDEsIDQ2LCAxNl0sXG4gICAgICAgIFs2LCAxNTEsIDEyMSwgMTQsIDE1MiwgMTIyXSxcbiAgICAgICAgWzYsIDc1LCA0NywgMzQsIDc2LCA0OF0sXG4gICAgICAgIFs0NiwgNTQsIDI0LCAxMCwgNTUsIDI1XSxcbiAgICAgICAgWzIsIDQ1LCAxNSwgNjQsIDQ2LCAxNl0sXG4gICAgICAgIFsxNywgMTUyLCAxMjIsIDQsIDE1MywgMTIzXSxcbiAgICAgICAgWzI5LCA3NCwgNDYsIDE0LCA3NSwgNDddLFxuICAgICAgICBbNDksIDU0LCAyNCwgMTAsIDU1LCAyNV0sXG4gICAgICAgIFsyNCwgNDUsIDE1LCA0NiwgNDYsIDE2XSxcbiAgICAgICAgWzQsIDE1MiwgMTIyLCAxOCwgMTUzLCAxMjNdLFxuICAgICAgICBbMTMsIDc0LCA0NiwgMzIsIDc1LCA0N10sXG4gICAgICAgIFs0OCwgNTQsIDI0LCAxNCwgNTUsIDI1XSxcbiAgICAgICAgWzQyLCA0NSwgMTUsIDMyLCA0NiwgMTZdLFxuICAgICAgICBbMjAsIDE0NywgMTE3LCA0LCAxNDgsIDExOF0sXG4gICAgICAgIFs0MCwgNzUsIDQ3LCA3LCA3NiwgNDhdLFxuICAgICAgICBbNDMsIDU0LCAyNCwgMjIsIDU1LCAyNV0sXG4gICAgICAgIFsxMCwgNDUsIDE1LCA2NywgNDYsIDE2XSxcbiAgICAgICAgWzE5LCAxNDgsIDExOCwgNiwgMTQ5LCAxMTldLFxuICAgICAgICBbMTgsIDc1LCA0NywgMzEsIDc2LCA0OF0sXG4gICAgICAgIFszNCwgNTQsIDI0LCAzNCwgNTUsIDI1XSxcbiAgICAgICAgWzIwLCA0NSwgMTUsIDYxLCA0NiwgMTZdXG4gICAgICBdO1xuICAgICAgdmFyIHFyUlNCbG9jayA9IGZ1bmN0aW9uKHRvdGFsQ291bnQsIGRhdGFDb3VudCkge1xuICAgICAgICB2YXIgX3RoaXMyID0ge307XG4gICAgICAgIF90aGlzMi50b3RhbENvdW50ID0gdG90YWxDb3VudDtcbiAgICAgICAgX3RoaXMyLmRhdGFDb3VudCA9IGRhdGFDb3VudDtcbiAgICAgICAgcmV0dXJuIF90aGlzMjtcbiAgICAgIH07XG4gICAgICB2YXIgX3RoaXMgPSB7fTtcbiAgICAgIHZhciBnZXRSc0Jsb2NrVGFibGUgPSBmdW5jdGlvbih0eXBlTnVtYmVyLCBlcnJvckNvcnJlY3Rpb25MZXZlbCkge1xuICAgICAgICBzd2l0Y2ggKGVycm9yQ29ycmVjdGlvbkxldmVsKSB7XG4gICAgICAgICAgY2FzZSBRUkVycm9yQ29ycmVjdGlvbkxldmVsLkw6XG4gICAgICAgICAgICByZXR1cm4gUlNfQkxPQ0tfVEFCTEVbKHR5cGVOdW1iZXIgLSAxKSAqIDQgKyAwXTtcbiAgICAgICAgICBjYXNlIFFSRXJyb3JDb3JyZWN0aW9uTGV2ZWwuTTpcbiAgICAgICAgICAgIHJldHVybiBSU19CTE9DS19UQUJMRVsodHlwZU51bWJlciAtIDEpICogNCArIDFdO1xuICAgICAgICAgIGNhc2UgUVJFcnJvckNvcnJlY3Rpb25MZXZlbC5ROlxuICAgICAgICAgICAgcmV0dXJuIFJTX0JMT0NLX1RBQkxFWyh0eXBlTnVtYmVyIC0gMSkgKiA0ICsgMl07XG4gICAgICAgICAgY2FzZSBRUkVycm9yQ29ycmVjdGlvbkxldmVsLkg6XG4gICAgICAgICAgICByZXR1cm4gUlNfQkxPQ0tfVEFCTEVbKHR5cGVOdW1iZXIgLSAxKSAqIDQgKyAzXTtcbiAgICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgICAgcmV0dXJuIHZvaWQgMDtcbiAgICAgICAgfVxuICAgICAgfTtcbiAgICAgIF90aGlzLmdldFJTQmxvY2tzID0gZnVuY3Rpb24odHlwZU51bWJlciwgZXJyb3JDb3JyZWN0aW9uTGV2ZWwpIHtcbiAgICAgICAgdmFyIHJzQmxvY2sgPSBnZXRSc0Jsb2NrVGFibGUodHlwZU51bWJlciwgZXJyb3JDb3JyZWN0aW9uTGV2ZWwpO1xuICAgICAgICBpZiAodHlwZW9mIHJzQmxvY2sgPT0gXCJ1bmRlZmluZWRcIikge1xuICAgICAgICAgIHRocm93IFwiYmFkIHJzIGJsb2NrIEAgdHlwZU51bWJlcjpcIiArIHR5cGVOdW1iZXIgKyBcIi9lcnJvckNvcnJlY3Rpb25MZXZlbDpcIiArIGVycm9yQ29ycmVjdGlvbkxldmVsO1xuICAgICAgICB9XG4gICAgICAgIHZhciBsZW5ndGggPSByc0Jsb2NrLmxlbmd0aCAvIDM7XG4gICAgICAgIHZhciBsaXN0ID0gW107XG4gICAgICAgIGZvciAodmFyIGkyID0gMDsgaTIgPCBsZW5ndGg7IGkyICs9IDEpIHtcbiAgICAgICAgICB2YXIgY291bnQgPSByc0Jsb2NrW2kyICogMyArIDBdO1xuICAgICAgICAgIHZhciB0b3RhbENvdW50ID0gcnNCbG9ja1tpMiAqIDMgKyAxXTtcbiAgICAgICAgICB2YXIgZGF0YUNvdW50ID0gcnNCbG9ja1tpMiAqIDMgKyAyXTtcbiAgICAgICAgICBmb3IgKHZhciBqID0gMDsgaiA8IGNvdW50OyBqICs9IDEpIHtcbiAgICAgICAgICAgIGxpc3QucHVzaChxclJTQmxvY2sodG90YWxDb3VudCwgZGF0YUNvdW50KSk7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIHJldHVybiBsaXN0O1xuICAgICAgfTtcbiAgICAgIHJldHVybiBfdGhpcztcbiAgICB9KCk7XG4gICAgdmFyIHFyQml0QnVmZmVyID0gZnVuY3Rpb24oKSB7XG4gICAgICB2YXIgX2J1ZmZlciA9IFtdO1xuICAgICAgdmFyIF9sZW5ndGggPSAwO1xuICAgICAgdmFyIF90aGlzID0ge307XG4gICAgICBfdGhpcy5nZXRCdWZmZXIgPSBmdW5jdGlvbigpIHtcbiAgICAgICAgcmV0dXJuIF9idWZmZXI7XG4gICAgICB9O1xuICAgICAgX3RoaXMuZ2V0QXQgPSBmdW5jdGlvbihpbmRleCkge1xuICAgICAgICB2YXIgYnVmSW5kZXggPSBNYXRoLmZsb29yKGluZGV4IC8gOCk7XG4gICAgICAgIHJldHVybiAoX2J1ZmZlcltidWZJbmRleF0gPj4+IDcgLSBpbmRleCAlIDggJiAxKSA9PSAxO1xuICAgICAgfTtcbiAgICAgIF90aGlzLnB1dCA9IGZ1bmN0aW9uKG51bSwgbGVuZ3RoKSB7XG4gICAgICAgIGZvciAodmFyIGkyID0gMDsgaTIgPCBsZW5ndGg7IGkyICs9IDEpIHtcbiAgICAgICAgICBfdGhpcy5wdXRCaXQoKG51bSA+Pj4gbGVuZ3RoIC0gaTIgLSAxICYgMSkgPT0gMSk7XG4gICAgICAgIH1cbiAgICAgIH07XG4gICAgICBfdGhpcy5nZXRMZW5ndGhJbkJpdHMgPSBmdW5jdGlvbigpIHtcbiAgICAgICAgcmV0dXJuIF9sZW5ndGg7XG4gICAgICB9O1xuICAgICAgX3RoaXMucHV0Qml0ID0gZnVuY3Rpb24oYml0KSB7XG4gICAgICAgIHZhciBidWZJbmRleCA9IE1hdGguZmxvb3IoX2xlbmd0aCAvIDgpO1xuICAgICAgICBpZiAoX2J1ZmZlci5sZW5ndGggPD0gYnVmSW5kZXgpIHtcbiAgICAgICAgICBfYnVmZmVyLnB1c2goMCk7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKGJpdCkge1xuICAgICAgICAgIF9idWZmZXJbYnVmSW5kZXhdIHw9IDEyOCA+Pj4gX2xlbmd0aCAlIDg7XG4gICAgICAgIH1cbiAgICAgICAgX2xlbmd0aCArPSAxO1xuICAgICAgfTtcbiAgICAgIHJldHVybiBfdGhpcztcbiAgICB9O1xuICAgIHZhciBxck51bWJlciA9IGZ1bmN0aW9uKGRhdGEpIHtcbiAgICAgIHZhciBfbW9kZSA9IFFSTW9kZS5NT0RFX05VTUJFUjtcbiAgICAgIHZhciBfZGF0YSA9IGRhdGE7XG4gICAgICB2YXIgX3RoaXMgPSB7fTtcbiAgICAgIF90aGlzLmdldE1vZGUgPSBmdW5jdGlvbigpIHtcbiAgICAgICAgcmV0dXJuIF9tb2RlO1xuICAgICAgfTtcbiAgICAgIF90aGlzLmdldExlbmd0aCA9IGZ1bmN0aW9uKGJ1ZmZlcikge1xuICAgICAgICByZXR1cm4gX2RhdGEubGVuZ3RoO1xuICAgICAgfTtcbiAgICAgIF90aGlzLndyaXRlID0gZnVuY3Rpb24oYnVmZmVyKSB7XG4gICAgICAgIHZhciBkYXRhMiA9IF9kYXRhO1xuICAgICAgICB2YXIgaTIgPSAwO1xuICAgICAgICB3aGlsZSAoaTIgKyAyIDwgZGF0YTIubGVuZ3RoKSB7XG4gICAgICAgICAgYnVmZmVyLnB1dChzdHJUb051bShkYXRhMi5zdWJzdHJpbmcoaTIsIGkyICsgMykpLCAxMCk7XG4gICAgICAgICAgaTIgKz0gMztcbiAgICAgICAgfVxuICAgICAgICBpZiAoaTIgPCBkYXRhMi5sZW5ndGgpIHtcbiAgICAgICAgICBpZiAoZGF0YTIubGVuZ3RoIC0gaTIgPT0gMSkge1xuICAgICAgICAgICAgYnVmZmVyLnB1dChzdHJUb051bShkYXRhMi5zdWJzdHJpbmcoaTIsIGkyICsgMSkpLCA0KTtcbiAgICAgICAgICB9IGVsc2UgaWYgKGRhdGEyLmxlbmd0aCAtIGkyID09IDIpIHtcbiAgICAgICAgICAgIGJ1ZmZlci5wdXQoc3RyVG9OdW0oZGF0YTIuc3Vic3RyaW5nKGkyLCBpMiArIDIpKSwgNyk7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9O1xuICAgICAgdmFyIHN0clRvTnVtID0gZnVuY3Rpb24oczIpIHtcbiAgICAgICAgdmFyIG51bSA9IDA7XG4gICAgICAgIGZvciAodmFyIGkyID0gMDsgaTIgPCBzMi5sZW5ndGg7IGkyICs9IDEpIHtcbiAgICAgICAgICBudW0gPSBudW0gKiAxMCArIGNoYXRUb051bShzMi5jaGFyQXQoaTIpKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gbnVtO1xuICAgICAgfTtcbiAgICAgIHZhciBjaGF0VG9OdW0gPSBmdW5jdGlvbihjMikge1xuICAgICAgICBpZiAoXCIwXCIgPD0gYzIgJiYgYzIgPD0gXCI5XCIpIHtcbiAgICAgICAgICByZXR1cm4gYzIuY2hhckNvZGVBdCgwKSAtIFwiMFwiLmNoYXJDb2RlQXQoMCk7XG4gICAgICAgIH1cbiAgICAgICAgdGhyb3cgXCJpbGxlZ2FsIGNoYXIgOlwiICsgYzI7XG4gICAgICB9O1xuICAgICAgcmV0dXJuIF90aGlzO1xuICAgIH07XG4gICAgdmFyIHFyQWxwaGFOdW0gPSBmdW5jdGlvbihkYXRhKSB7XG4gICAgICB2YXIgX21vZGUgPSBRUk1vZGUuTU9ERV9BTFBIQV9OVU07XG4gICAgICB2YXIgX2RhdGEgPSBkYXRhO1xuICAgICAgdmFyIF90aGlzID0ge307XG4gICAgICBfdGhpcy5nZXRNb2RlID0gZnVuY3Rpb24oKSB7XG4gICAgICAgIHJldHVybiBfbW9kZTtcbiAgICAgIH07XG4gICAgICBfdGhpcy5nZXRMZW5ndGggPSBmdW5jdGlvbihidWZmZXIpIHtcbiAgICAgICAgcmV0dXJuIF9kYXRhLmxlbmd0aDtcbiAgICAgIH07XG4gICAgICBfdGhpcy53cml0ZSA9IGZ1bmN0aW9uKGJ1ZmZlcikge1xuICAgICAgICB2YXIgczIgPSBfZGF0YTtcbiAgICAgICAgdmFyIGkyID0gMDtcbiAgICAgICAgd2hpbGUgKGkyICsgMSA8IHMyLmxlbmd0aCkge1xuICAgICAgICAgIGJ1ZmZlci5wdXQoXG4gICAgICAgICAgICBnZXRDb2RlKHMyLmNoYXJBdChpMikpICogNDUgKyBnZXRDb2RlKHMyLmNoYXJBdChpMiArIDEpKSxcbiAgICAgICAgICAgIDExXG4gICAgICAgICAgKTtcbiAgICAgICAgICBpMiArPSAyO1xuICAgICAgICB9XG4gICAgICAgIGlmIChpMiA8IHMyLmxlbmd0aCkge1xuICAgICAgICAgIGJ1ZmZlci5wdXQoZ2V0Q29kZShzMi5jaGFyQXQoaTIpKSwgNik7XG4gICAgICAgIH1cbiAgICAgIH07XG4gICAgICB2YXIgZ2V0Q29kZSA9IGZ1bmN0aW9uKGMyKSB7XG4gICAgICAgIGlmIChcIjBcIiA8PSBjMiAmJiBjMiA8PSBcIjlcIikge1xuICAgICAgICAgIHJldHVybiBjMi5jaGFyQ29kZUF0KDApIC0gXCIwXCIuY2hhckNvZGVBdCgwKTtcbiAgICAgICAgfSBlbHNlIGlmIChcIkFcIiA8PSBjMiAmJiBjMiA8PSBcIlpcIikge1xuICAgICAgICAgIHJldHVybiBjMi5jaGFyQ29kZUF0KDApIC0gXCJBXCIuY2hhckNvZGVBdCgwKSArIDEwO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIHN3aXRjaCAoYzIpIHtcbiAgICAgICAgICAgIGNhc2UgXCIgXCI6XG4gICAgICAgICAgICAgIHJldHVybiAzNjtcbiAgICAgICAgICAgIGNhc2UgXCIkXCI6XG4gICAgICAgICAgICAgIHJldHVybiAzNztcbiAgICAgICAgICAgIGNhc2UgXCIlXCI6XG4gICAgICAgICAgICAgIHJldHVybiAzODtcbiAgICAgICAgICAgIGNhc2UgXCIqXCI6XG4gICAgICAgICAgICAgIHJldHVybiAzOTtcbiAgICAgICAgICAgIGNhc2UgXCIrXCI6XG4gICAgICAgICAgICAgIHJldHVybiA0MDtcbiAgICAgICAgICAgIGNhc2UgXCItXCI6XG4gICAgICAgICAgICAgIHJldHVybiA0MTtcbiAgICAgICAgICAgIGNhc2UgXCIuXCI6XG4gICAgICAgICAgICAgIHJldHVybiA0MjtcbiAgICAgICAgICAgIGNhc2UgXCIvXCI6XG4gICAgICAgICAgICAgIHJldHVybiA0MztcbiAgICAgICAgICAgIGNhc2UgXCI6XCI6XG4gICAgICAgICAgICAgIHJldHVybiA0NDtcbiAgICAgICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgICAgIHRocm93IFwiaWxsZWdhbCBjaGFyIDpcIiArIGMyO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfTtcbiAgICAgIHJldHVybiBfdGhpcztcbiAgICB9O1xuICAgIHZhciBxcjhCaXRCeXRlID0gZnVuY3Rpb24oZGF0YSkge1xuICAgICAgdmFyIF9tb2RlID0gUVJNb2RlLk1PREVfOEJJVF9CWVRFO1xuICAgICAgdmFyIF9ieXRlcyA9IHFyY29kZTMuc3RyaW5nVG9CeXRlcyhkYXRhKTtcbiAgICAgIHZhciBfdGhpcyA9IHt9O1xuICAgICAgX3RoaXMuZ2V0TW9kZSA9IGZ1bmN0aW9uKCkge1xuICAgICAgICByZXR1cm4gX21vZGU7XG4gICAgICB9O1xuICAgICAgX3RoaXMuZ2V0TGVuZ3RoID0gZnVuY3Rpb24oYnVmZmVyKSB7XG4gICAgICAgIHJldHVybiBfYnl0ZXMubGVuZ3RoO1xuICAgICAgfTtcbiAgICAgIF90aGlzLndyaXRlID0gZnVuY3Rpb24oYnVmZmVyKSB7XG4gICAgICAgIGZvciAodmFyIGkyID0gMDsgaTIgPCBfYnl0ZXMubGVuZ3RoOyBpMiArPSAxKSB7XG4gICAgICAgICAgYnVmZmVyLnB1dChfYnl0ZXNbaTJdLCA4KTtcbiAgICAgICAgfVxuICAgICAgfTtcbiAgICAgIHJldHVybiBfdGhpcztcbiAgICB9O1xuICAgIHZhciBxckthbmppID0gZnVuY3Rpb24oZGF0YSkge1xuICAgICAgdmFyIF9tb2RlID0gUVJNb2RlLk1PREVfS0FOSkk7XG4gICAgICB2YXIgc3RyaW5nVG9CeXRlcyA9IHFyY29kZTMuc3RyaW5nVG9CeXRlc0Z1bmNzW1wiU0pJU1wiXTtcbiAgICAgIGlmICghc3RyaW5nVG9CeXRlcykge1xuICAgICAgICB0aHJvdyBcInNqaXMgbm90IHN1cHBvcnRlZC5cIjtcbiAgICAgIH1cbiAgICAgICFmdW5jdGlvbihjMiwgY29kZSkge1xuICAgICAgICB2YXIgdGVzdCA9IHN0cmluZ1RvQnl0ZXMoYzIpO1xuICAgICAgICBpZiAodGVzdC5sZW5ndGggIT0gMiB8fCAodGVzdFswXSA8PCA4IHwgdGVzdFsxXSkgIT0gY29kZSkge1xuICAgICAgICAgIHRocm93IFwic2ppcyBub3Qgc3VwcG9ydGVkLlwiO1xuICAgICAgICB9XG4gICAgICB9KFwiXFx1NTNDQlwiLCAzODcyNik7XG4gICAgICB2YXIgX2J5dGVzID0gc3RyaW5nVG9CeXRlcyhkYXRhKTtcbiAgICAgIHZhciBfdGhpcyA9IHt9O1xuICAgICAgX3RoaXMuZ2V0TW9kZSA9IGZ1bmN0aW9uKCkge1xuICAgICAgICByZXR1cm4gX21vZGU7XG4gICAgICB9O1xuICAgICAgX3RoaXMuZ2V0TGVuZ3RoID0gZnVuY3Rpb24oYnVmZmVyKSB7XG4gICAgICAgIHJldHVybiB+fihfYnl0ZXMubGVuZ3RoIC8gMik7XG4gICAgICB9O1xuICAgICAgX3RoaXMud3JpdGUgPSBmdW5jdGlvbihidWZmZXIpIHtcbiAgICAgICAgdmFyIGRhdGEyID0gX2J5dGVzO1xuICAgICAgICB2YXIgaTIgPSAwO1xuICAgICAgICB3aGlsZSAoaTIgKyAxIDwgZGF0YTIubGVuZ3RoKSB7XG4gICAgICAgICAgdmFyIGMyID0gKDI1NSAmIGRhdGEyW2kyXSkgPDwgOCB8IDI1NSAmIGRhdGEyW2kyICsgMV07XG4gICAgICAgICAgaWYgKDMzMDg4IDw9IGMyICYmIGMyIDw9IDQwOTU2KSB7XG4gICAgICAgICAgICBjMiAtPSAzMzA4ODtcbiAgICAgICAgICB9IGVsc2UgaWYgKDU3NDA4IDw9IGMyICYmIGMyIDw9IDYwMzUxKSB7XG4gICAgICAgICAgICBjMiAtPSA0OTQ3MjtcbiAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgdGhyb3cgXCJpbGxlZ2FsIGNoYXIgYXQgXCIgKyAoaTIgKyAxKSArIFwiL1wiICsgYzI7XG4gICAgICAgICAgfVxuICAgICAgICAgIGMyID0gKGMyID4+PiA4ICYgMjU1KSAqIDE5MiArIChjMiAmIDI1NSk7XG4gICAgICAgICAgYnVmZmVyLnB1dChjMiwgMTMpO1xuICAgICAgICAgIGkyICs9IDI7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKGkyIDwgZGF0YTIubGVuZ3RoKSB7XG4gICAgICAgICAgdGhyb3cgXCJpbGxlZ2FsIGNoYXIgYXQgXCIgKyAoaTIgKyAxKTtcbiAgICAgICAgfVxuICAgICAgfTtcbiAgICAgIHJldHVybiBfdGhpcztcbiAgICB9O1xuICAgIHZhciBieXRlQXJyYXlPdXRwdXRTdHJlYW0gPSBmdW5jdGlvbigpIHtcbiAgICAgIHZhciBfYnl0ZXMgPSBbXTtcbiAgICAgIHZhciBfdGhpcyA9IHt9O1xuICAgICAgX3RoaXMud3JpdGVCeXRlID0gZnVuY3Rpb24oYikge1xuICAgICAgICBfYnl0ZXMucHVzaChiICYgMjU1KTtcbiAgICAgIH07XG4gICAgICBfdGhpcy53cml0ZVNob3J0ID0gZnVuY3Rpb24oaTIpIHtcbiAgICAgICAgX3RoaXMud3JpdGVCeXRlKGkyKTtcbiAgICAgICAgX3RoaXMud3JpdGVCeXRlKGkyID4+PiA4KTtcbiAgICAgIH07XG4gICAgICBfdGhpcy53cml0ZUJ5dGVzID0gZnVuY3Rpb24oYiwgb2ZmLCBsZW4pIHtcbiAgICAgICAgb2ZmID0gb2ZmIHx8IDA7XG4gICAgICAgIGxlbiA9IGxlbiB8fCBiLmxlbmd0aDtcbiAgICAgICAgZm9yICh2YXIgaTIgPSAwOyBpMiA8IGxlbjsgaTIgKz0gMSkge1xuICAgICAgICAgIF90aGlzLndyaXRlQnl0ZShiW2kyICsgb2ZmXSk7XG4gICAgICAgIH1cbiAgICAgIH07XG4gICAgICBfdGhpcy53cml0ZVN0cmluZyA9IGZ1bmN0aW9uKHMyKSB7XG4gICAgICAgIGZvciAodmFyIGkyID0gMDsgaTIgPCBzMi5sZW5ndGg7IGkyICs9IDEpIHtcbiAgICAgICAgICBfdGhpcy53cml0ZUJ5dGUoczIuY2hhckNvZGVBdChpMikpO1xuICAgICAgICB9XG4gICAgICB9O1xuICAgICAgX3RoaXMudG9CeXRlQXJyYXkgPSBmdW5jdGlvbigpIHtcbiAgICAgICAgcmV0dXJuIF9ieXRlcztcbiAgICAgIH07XG4gICAgICBfdGhpcy50b1N0cmluZyA9IGZ1bmN0aW9uKCkge1xuICAgICAgICB2YXIgczIgPSBcIlwiO1xuICAgICAgICBzMiArPSBcIltcIjtcbiAgICAgICAgZm9yICh2YXIgaTIgPSAwOyBpMiA8IF9ieXRlcy5sZW5ndGg7IGkyICs9IDEpIHtcbiAgICAgICAgICBpZiAoaTIgPiAwKSB7XG4gICAgICAgICAgICBzMiArPSBcIixcIjtcbiAgICAgICAgICB9XG4gICAgICAgICAgczIgKz0gX2J5dGVzW2kyXTtcbiAgICAgICAgfVxuICAgICAgICBzMiArPSBcIl1cIjtcbiAgICAgICAgcmV0dXJuIHMyO1xuICAgICAgfTtcbiAgICAgIHJldHVybiBfdGhpcztcbiAgICB9O1xuICAgIHZhciBiYXNlNjRFbmNvZGVPdXRwdXRTdHJlYW0gPSBmdW5jdGlvbigpIHtcbiAgICAgIHZhciBfYnVmZmVyID0gMDtcbiAgICAgIHZhciBfYnVmbGVuID0gMDtcbiAgICAgIHZhciBfbGVuZ3RoID0gMDtcbiAgICAgIHZhciBfYmFzZTY0ID0gXCJcIjtcbiAgICAgIHZhciBfdGhpcyA9IHt9O1xuICAgICAgdmFyIHdyaXRlRW5jb2RlZCA9IGZ1bmN0aW9uKGIpIHtcbiAgICAgICAgX2Jhc2U2NCArPSBTdHJpbmcuZnJvbUNoYXJDb2RlKGVuY29kZShiICYgNjMpKTtcbiAgICAgIH07XG4gICAgICB2YXIgZW5jb2RlID0gZnVuY3Rpb24objIpIHtcbiAgICAgICAgaWYgKG4yIDwgMClcbiAgICAgICAgICA7XG4gICAgICAgIGVsc2UgaWYgKG4yIDwgMjYpIHtcbiAgICAgICAgICByZXR1cm4gNjUgKyBuMjtcbiAgICAgICAgfSBlbHNlIGlmIChuMiA8IDUyKSB7XG4gICAgICAgICAgcmV0dXJuIDk3ICsgKG4yIC0gMjYpO1xuICAgICAgICB9IGVsc2UgaWYgKG4yIDwgNjIpIHtcbiAgICAgICAgICByZXR1cm4gNDggKyAobjIgLSA1Mik7XG4gICAgICAgIH0gZWxzZSBpZiAobjIgPT0gNjIpIHtcbiAgICAgICAgICByZXR1cm4gNDM7XG4gICAgICAgIH0gZWxzZSBpZiAobjIgPT0gNjMpIHtcbiAgICAgICAgICByZXR1cm4gNDc7XG4gICAgICAgIH1cbiAgICAgICAgdGhyb3cgXCJuOlwiICsgbjI7XG4gICAgICB9O1xuICAgICAgX3RoaXMud3JpdGVCeXRlID0gZnVuY3Rpb24objIpIHtcbiAgICAgICAgX2J1ZmZlciA9IF9idWZmZXIgPDwgOCB8IG4yICYgMjU1O1xuICAgICAgICBfYnVmbGVuICs9IDg7XG4gICAgICAgIF9sZW5ndGggKz0gMTtcbiAgICAgICAgd2hpbGUgKF9idWZsZW4gPj0gNikge1xuICAgICAgICAgIHdyaXRlRW5jb2RlZChfYnVmZmVyID4+PiBfYnVmbGVuIC0gNik7XG4gICAgICAgICAgX2J1ZmxlbiAtPSA2O1xuICAgICAgICB9XG4gICAgICB9O1xuICAgICAgX3RoaXMuZmx1c2ggPSBmdW5jdGlvbigpIHtcbiAgICAgICAgaWYgKF9idWZsZW4gPiAwKSB7XG4gICAgICAgICAgd3JpdGVFbmNvZGVkKF9idWZmZXIgPDwgNiAtIF9idWZsZW4pO1xuICAgICAgICAgIF9idWZmZXIgPSAwO1xuICAgICAgICAgIF9idWZsZW4gPSAwO1xuICAgICAgICB9XG4gICAgICAgIGlmIChfbGVuZ3RoICUgMyAhPSAwKSB7XG4gICAgICAgICAgdmFyIHBhZGxlbiA9IDMgLSBfbGVuZ3RoICUgMztcbiAgICAgICAgICBmb3IgKHZhciBpMiA9IDA7IGkyIDwgcGFkbGVuOyBpMiArPSAxKSB7XG4gICAgICAgICAgICBfYmFzZTY0ICs9IFwiPVwiO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfTtcbiAgICAgIF90aGlzLnRvU3RyaW5nID0gZnVuY3Rpb24oKSB7XG4gICAgICAgIHJldHVybiBfYmFzZTY0O1xuICAgICAgfTtcbiAgICAgIHJldHVybiBfdGhpcztcbiAgICB9O1xuICAgIHZhciBiYXNlNjREZWNvZGVJbnB1dFN0cmVhbSA9IGZ1bmN0aW9uKHN0cikge1xuICAgICAgdmFyIF9zdHIgPSBzdHI7XG4gICAgICB2YXIgX3BvcyA9IDA7XG4gICAgICB2YXIgX2J1ZmZlciA9IDA7XG4gICAgICB2YXIgX2J1ZmxlbiA9IDA7XG4gICAgICB2YXIgX3RoaXMgPSB7fTtcbiAgICAgIF90aGlzLnJlYWQgPSBmdW5jdGlvbigpIHtcbiAgICAgICAgd2hpbGUgKF9idWZsZW4gPCA4KSB7XG4gICAgICAgICAgaWYgKF9wb3MgPj0gX3N0ci5sZW5ndGgpIHtcbiAgICAgICAgICAgIGlmIChfYnVmbGVuID09IDApIHtcbiAgICAgICAgICAgICAgcmV0dXJuIC0xO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgdGhyb3cgXCJ1bmV4cGVjdGVkIGVuZCBvZiBmaWxlLi9cIiArIF9idWZsZW47XG4gICAgICAgICAgfVxuICAgICAgICAgIHZhciBjMiA9IF9zdHIuY2hhckF0KF9wb3MpO1xuICAgICAgICAgIF9wb3MgKz0gMTtcbiAgICAgICAgICBpZiAoYzIgPT0gXCI9XCIpIHtcbiAgICAgICAgICAgIF9idWZsZW4gPSAwO1xuICAgICAgICAgICAgcmV0dXJuIC0xO1xuICAgICAgICAgIH0gZWxzZSBpZiAoYzIubWF0Y2goL15cXHMkLykpIHtcbiAgICAgICAgICAgIGNvbnRpbnVlO1xuICAgICAgICAgIH1cbiAgICAgICAgICBfYnVmZmVyID0gX2J1ZmZlciA8PCA2IHwgZGVjb2RlKGMyLmNoYXJDb2RlQXQoMCkpO1xuICAgICAgICAgIF9idWZsZW4gKz0gNjtcbiAgICAgICAgfVxuICAgICAgICB2YXIgbjIgPSBfYnVmZmVyID4+PiBfYnVmbGVuIC0gOCAmIDI1NTtcbiAgICAgICAgX2J1ZmxlbiAtPSA4O1xuICAgICAgICByZXR1cm4gbjI7XG4gICAgICB9O1xuICAgICAgdmFyIGRlY29kZSA9IGZ1bmN0aW9uKGMyKSB7XG4gICAgICAgIGlmICg2NSA8PSBjMiAmJiBjMiA8PSA5MCkge1xuICAgICAgICAgIHJldHVybiBjMiAtIDY1O1xuICAgICAgICB9IGVsc2UgaWYgKDk3IDw9IGMyICYmIGMyIDw9IDEyMikge1xuICAgICAgICAgIHJldHVybiBjMiAtIDk3ICsgMjY7XG4gICAgICAgIH0gZWxzZSBpZiAoNDggPD0gYzIgJiYgYzIgPD0gNTcpIHtcbiAgICAgICAgICByZXR1cm4gYzIgLSA0OCArIDUyO1xuICAgICAgICB9IGVsc2UgaWYgKGMyID09IDQzKSB7XG4gICAgICAgICAgcmV0dXJuIDYyO1xuICAgICAgICB9IGVsc2UgaWYgKGMyID09IDQ3KSB7XG4gICAgICAgICAgcmV0dXJuIDYzO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIHRocm93IFwiYzpcIiArIGMyO1xuICAgICAgICB9XG4gICAgICB9O1xuICAgICAgcmV0dXJuIF90aGlzO1xuICAgIH07XG4gICAgdmFyIGdpZkltYWdlID0gZnVuY3Rpb24od2lkdGgsIGhlaWdodCkge1xuICAgICAgdmFyIF93aWR0aCA9IHdpZHRoO1xuICAgICAgdmFyIF9oZWlnaHQgPSBoZWlnaHQ7XG4gICAgICB2YXIgX2RhdGEgPSBuZXcgQXJyYXkod2lkdGggKiBoZWlnaHQpO1xuICAgICAgdmFyIF90aGlzID0ge307XG4gICAgICBfdGhpcy5zZXRQaXhlbCA9IGZ1bmN0aW9uKHgsIHksIHBpeGVsKSB7XG4gICAgICAgIF9kYXRhW3kgKiBfd2lkdGggKyB4XSA9IHBpeGVsO1xuICAgICAgfTtcbiAgICAgIF90aGlzLndyaXRlID0gZnVuY3Rpb24ob3V0KSB7XG4gICAgICAgIG91dC53cml0ZVN0cmluZyhcIkdJRjg3YVwiKTtcbiAgICAgICAgb3V0LndyaXRlU2hvcnQoX3dpZHRoKTtcbiAgICAgICAgb3V0LndyaXRlU2hvcnQoX2hlaWdodCk7XG4gICAgICAgIG91dC53cml0ZUJ5dGUoMTI4KTtcbiAgICAgICAgb3V0LndyaXRlQnl0ZSgwKTtcbiAgICAgICAgb3V0LndyaXRlQnl0ZSgwKTtcbiAgICAgICAgb3V0LndyaXRlQnl0ZSgwKTtcbiAgICAgICAgb3V0LndyaXRlQnl0ZSgwKTtcbiAgICAgICAgb3V0LndyaXRlQnl0ZSgwKTtcbiAgICAgICAgb3V0LndyaXRlQnl0ZSgyNTUpO1xuICAgICAgICBvdXQud3JpdGVCeXRlKDI1NSk7XG4gICAgICAgIG91dC53cml0ZUJ5dGUoMjU1KTtcbiAgICAgICAgb3V0LndyaXRlU3RyaW5nKFwiLFwiKTtcbiAgICAgICAgb3V0LndyaXRlU2hvcnQoMCk7XG4gICAgICAgIG91dC53cml0ZVNob3J0KDApO1xuICAgICAgICBvdXQud3JpdGVTaG9ydChfd2lkdGgpO1xuICAgICAgICBvdXQud3JpdGVTaG9ydChfaGVpZ2h0KTtcbiAgICAgICAgb3V0LndyaXRlQnl0ZSgwKTtcbiAgICAgICAgdmFyIGx6d01pbkNvZGVTaXplID0gMjtcbiAgICAgICAgdmFyIHJhc3RlciA9IGdldExaV1Jhc3RlcihsendNaW5Db2RlU2l6ZSk7XG4gICAgICAgIG91dC53cml0ZUJ5dGUobHp3TWluQ29kZVNpemUpO1xuICAgICAgICB2YXIgb2Zmc2V0ID0gMDtcbiAgICAgICAgd2hpbGUgKHJhc3Rlci5sZW5ndGggLSBvZmZzZXQgPiAyNTUpIHtcbiAgICAgICAgICBvdXQud3JpdGVCeXRlKDI1NSk7XG4gICAgICAgICAgb3V0LndyaXRlQnl0ZXMocmFzdGVyLCBvZmZzZXQsIDI1NSk7XG4gICAgICAgICAgb2Zmc2V0ICs9IDI1NTtcbiAgICAgICAgfVxuICAgICAgICBvdXQud3JpdGVCeXRlKHJhc3Rlci5sZW5ndGggLSBvZmZzZXQpO1xuICAgICAgICBvdXQud3JpdGVCeXRlcyhyYXN0ZXIsIG9mZnNldCwgcmFzdGVyLmxlbmd0aCAtIG9mZnNldCk7XG4gICAgICAgIG91dC53cml0ZUJ5dGUoMCk7XG4gICAgICAgIG91dC53cml0ZVN0cmluZyhcIjtcIik7XG4gICAgICB9O1xuICAgICAgdmFyIGJpdE91dHB1dFN0cmVhbSA9IGZ1bmN0aW9uKG91dCkge1xuICAgICAgICB2YXIgX291dCA9IG91dDtcbiAgICAgICAgdmFyIF9iaXRMZW5ndGggPSAwO1xuICAgICAgICB2YXIgX2JpdEJ1ZmZlciA9IDA7XG4gICAgICAgIHZhciBfdGhpczIgPSB7fTtcbiAgICAgICAgX3RoaXMyLndyaXRlID0gZnVuY3Rpb24oZGF0YSwgbGVuZ3RoKSB7XG4gICAgICAgICAgaWYgKGRhdGEgPj4+IGxlbmd0aCAhPSAwKSB7XG4gICAgICAgICAgICB0aHJvdyBcImxlbmd0aCBvdmVyXCI7XG4gICAgICAgICAgfVxuICAgICAgICAgIHdoaWxlIChfYml0TGVuZ3RoICsgbGVuZ3RoID49IDgpIHtcbiAgICAgICAgICAgIF9vdXQud3JpdGVCeXRlKDI1NSAmIChkYXRhIDw8IF9iaXRMZW5ndGggfCBfYml0QnVmZmVyKSk7XG4gICAgICAgICAgICBsZW5ndGggLT0gOCAtIF9iaXRMZW5ndGg7XG4gICAgICAgICAgICBkYXRhID4+Pj0gOCAtIF9iaXRMZW5ndGg7XG4gICAgICAgICAgICBfYml0QnVmZmVyID0gMDtcbiAgICAgICAgICAgIF9iaXRMZW5ndGggPSAwO1xuICAgICAgICAgIH1cbiAgICAgICAgICBfYml0QnVmZmVyID0gZGF0YSA8PCBfYml0TGVuZ3RoIHwgX2JpdEJ1ZmZlcjtcbiAgICAgICAgICBfYml0TGVuZ3RoID0gX2JpdExlbmd0aCArIGxlbmd0aDtcbiAgICAgICAgfTtcbiAgICAgICAgX3RoaXMyLmZsdXNoID0gZnVuY3Rpb24oKSB7XG4gICAgICAgICAgaWYgKF9iaXRMZW5ndGggPiAwKSB7XG4gICAgICAgICAgICBfb3V0LndyaXRlQnl0ZShfYml0QnVmZmVyKTtcbiAgICAgICAgICB9XG4gICAgICAgIH07XG4gICAgICAgIHJldHVybiBfdGhpczI7XG4gICAgICB9O1xuICAgICAgdmFyIGdldExaV1Jhc3RlciA9IGZ1bmN0aW9uKGx6d01pbkNvZGVTaXplKSB7XG4gICAgICAgIHZhciBjbGVhckNvZGUgPSAxIDw8IGx6d01pbkNvZGVTaXplO1xuICAgICAgICB2YXIgZW5kQ29kZSA9ICgxIDw8IGx6d01pbkNvZGVTaXplKSArIDE7XG4gICAgICAgIHZhciBiaXRMZW5ndGggPSBsendNaW5Db2RlU2l6ZSArIDE7XG4gICAgICAgIHZhciB0YWJsZSA9IGx6d1RhYmxlKCk7XG4gICAgICAgIGZvciAodmFyIGkyID0gMDsgaTIgPCBjbGVhckNvZGU7IGkyICs9IDEpIHtcbiAgICAgICAgICB0YWJsZS5hZGQoU3RyaW5nLmZyb21DaGFyQ29kZShpMikpO1xuICAgICAgICB9XG4gICAgICAgIHRhYmxlLmFkZChTdHJpbmcuZnJvbUNoYXJDb2RlKGNsZWFyQ29kZSkpO1xuICAgICAgICB0YWJsZS5hZGQoU3RyaW5nLmZyb21DaGFyQ29kZShlbmRDb2RlKSk7XG4gICAgICAgIHZhciBieXRlT3V0ID0gYnl0ZUFycmF5T3V0cHV0U3RyZWFtKCk7XG4gICAgICAgIHZhciBiaXRPdXQgPSBiaXRPdXRwdXRTdHJlYW0oYnl0ZU91dCk7XG4gICAgICAgIGJpdE91dC53cml0ZShjbGVhckNvZGUsIGJpdExlbmd0aCk7XG4gICAgICAgIHZhciBkYXRhSW5kZXggPSAwO1xuICAgICAgICB2YXIgczIgPSBTdHJpbmcuZnJvbUNoYXJDb2RlKF9kYXRhW2RhdGFJbmRleF0pO1xuICAgICAgICBkYXRhSW5kZXggKz0gMTtcbiAgICAgICAgd2hpbGUgKGRhdGFJbmRleCA8IF9kYXRhLmxlbmd0aCkge1xuICAgICAgICAgIHZhciBjMiA9IFN0cmluZy5mcm9tQ2hhckNvZGUoX2RhdGFbZGF0YUluZGV4XSk7XG4gICAgICAgICAgZGF0YUluZGV4ICs9IDE7XG4gICAgICAgICAgaWYgKHRhYmxlLmNvbnRhaW5zKHMyICsgYzIpKSB7XG4gICAgICAgICAgICBzMiA9IHMyICsgYzI7XG4gICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIGJpdE91dC53cml0ZSh0YWJsZS5pbmRleE9mKHMyKSwgYml0TGVuZ3RoKTtcbiAgICAgICAgICAgIGlmICh0YWJsZS5zaXplKCkgPCA0MDk1KSB7XG4gICAgICAgICAgICAgIGlmICh0YWJsZS5zaXplKCkgPT0gMSA8PCBiaXRMZW5ndGgpIHtcbiAgICAgICAgICAgICAgICBiaXRMZW5ndGggKz0gMTtcbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICB0YWJsZS5hZGQoczIgKyBjMik7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBzMiA9IGMyO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBiaXRPdXQud3JpdGUodGFibGUuaW5kZXhPZihzMiksIGJpdExlbmd0aCk7XG4gICAgICAgIGJpdE91dC53cml0ZShlbmRDb2RlLCBiaXRMZW5ndGgpO1xuICAgICAgICBiaXRPdXQuZmx1c2goKTtcbiAgICAgICAgcmV0dXJuIGJ5dGVPdXQudG9CeXRlQXJyYXkoKTtcbiAgICAgIH07XG4gICAgICB2YXIgbHp3VGFibGUgPSBmdW5jdGlvbigpIHtcbiAgICAgICAgdmFyIF9tYXAgPSB7fTtcbiAgICAgICAgdmFyIF9zaXplID0gMDtcbiAgICAgICAgdmFyIF90aGlzMiA9IHt9O1xuICAgICAgICBfdGhpczIuYWRkID0gZnVuY3Rpb24oa2V5KSB7XG4gICAgICAgICAgaWYgKF90aGlzMi5jb250YWlucyhrZXkpKSB7XG4gICAgICAgICAgICB0aHJvdyBcImR1cCBrZXk6XCIgKyBrZXk7XG4gICAgICAgICAgfVxuICAgICAgICAgIF9tYXBba2V5XSA9IF9zaXplO1xuICAgICAgICAgIF9zaXplICs9IDE7XG4gICAgICAgIH07XG4gICAgICAgIF90aGlzMi5zaXplID0gZnVuY3Rpb24oKSB7XG4gICAgICAgICAgcmV0dXJuIF9zaXplO1xuICAgICAgICB9O1xuICAgICAgICBfdGhpczIuaW5kZXhPZiA9IGZ1bmN0aW9uKGtleSkge1xuICAgICAgICAgIHJldHVybiBfbWFwW2tleV07XG4gICAgICAgIH07XG4gICAgICAgIF90aGlzMi5jb250YWlucyA9IGZ1bmN0aW9uKGtleSkge1xuICAgICAgICAgIHJldHVybiB0eXBlb2YgX21hcFtrZXldICE9IFwidW5kZWZpbmVkXCI7XG4gICAgICAgIH07XG4gICAgICAgIHJldHVybiBfdGhpczI7XG4gICAgICB9O1xuICAgICAgcmV0dXJuIF90aGlzO1xuICAgIH07XG4gICAgdmFyIGNyZWF0ZURhdGFVUkwgPSBmdW5jdGlvbih3aWR0aCwgaGVpZ2h0LCBnZXRQaXhlbCkge1xuICAgICAgdmFyIGdpZiA9IGdpZkltYWdlKHdpZHRoLCBoZWlnaHQpO1xuICAgICAgZm9yICh2YXIgeSA9IDA7IHkgPCBoZWlnaHQ7IHkgKz0gMSkge1xuICAgICAgICBmb3IgKHZhciB4ID0gMDsgeCA8IHdpZHRoOyB4ICs9IDEpIHtcbiAgICAgICAgICBnaWYuc2V0UGl4ZWwoeCwgeSwgZ2V0UGl4ZWwoeCwgeSkpO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgICB2YXIgYiA9IGJ5dGVBcnJheU91dHB1dFN0cmVhbSgpO1xuICAgICAgZ2lmLndyaXRlKGIpO1xuICAgICAgdmFyIGJhc2U2NCA9IGJhc2U2NEVuY29kZU91dHB1dFN0cmVhbSgpO1xuICAgICAgdmFyIGJ5dGVzID0gYi50b0J5dGVBcnJheSgpO1xuICAgICAgZm9yICh2YXIgaTIgPSAwOyBpMiA8IGJ5dGVzLmxlbmd0aDsgaTIgKz0gMSkge1xuICAgICAgICBiYXNlNjQud3JpdGVCeXRlKGJ5dGVzW2kyXSk7XG4gICAgICB9XG4gICAgICBiYXNlNjQuZmx1c2goKTtcbiAgICAgIHJldHVybiBcImRhdGE6aW1hZ2UvZ2lmO2Jhc2U2NCxcIiArIGJhc2U2NDtcbiAgICB9O1xuICAgIHJldHVybiBxcmNvZGUzO1xuICB9KCk7XG4gICFmdW5jdGlvbigpIHtcbiAgICBxcmNvZGUyLnN0cmluZ1RvQnl0ZXNGdW5jc1tcIlVURi04XCJdID0gZnVuY3Rpb24oczIpIHtcbiAgICAgIGZ1bmN0aW9uIHRvVVRGOEFycmF5KHN0cikge1xuICAgICAgICB2YXIgdXRmOCA9IFtdO1xuICAgICAgICBmb3IgKHZhciBpMiA9IDA7IGkyIDwgc3RyLmxlbmd0aDsgaTIrKykge1xuICAgICAgICAgIHZhciBjaGFyY29kZSA9IHN0ci5jaGFyQ29kZUF0KGkyKTtcbiAgICAgICAgICBpZiAoY2hhcmNvZGUgPCAxMjgpXG4gICAgICAgICAgICB1dGY4LnB1c2goY2hhcmNvZGUpO1xuICAgICAgICAgIGVsc2UgaWYgKGNoYXJjb2RlIDwgMjA0OCkge1xuICAgICAgICAgICAgdXRmOC5wdXNoKFxuICAgICAgICAgICAgICAxOTIgfCBjaGFyY29kZSA+PiA2LFxuICAgICAgICAgICAgICAxMjggfCBjaGFyY29kZSAmIDYzXG4gICAgICAgICAgICApO1xuICAgICAgICAgIH0gZWxzZSBpZiAoY2hhcmNvZGUgPCA1NTI5NiB8fCBjaGFyY29kZSA+PSA1NzM0NCkge1xuICAgICAgICAgICAgdXRmOC5wdXNoKFxuICAgICAgICAgICAgICAyMjQgfCBjaGFyY29kZSA+PiAxMixcbiAgICAgICAgICAgICAgMTI4IHwgY2hhcmNvZGUgPj4gNiAmIDYzLFxuICAgICAgICAgICAgICAxMjggfCBjaGFyY29kZSAmIDYzXG4gICAgICAgICAgICApO1xuICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBpMisrO1xuICAgICAgICAgICAgY2hhcmNvZGUgPSA2NTUzNiArICgoY2hhcmNvZGUgJiAxMDIzKSA8PCAxMCB8IHN0ci5jaGFyQ29kZUF0KGkyKSAmIDEwMjMpO1xuICAgICAgICAgICAgdXRmOC5wdXNoKFxuICAgICAgICAgICAgICAyNDAgfCBjaGFyY29kZSA+PiAxOCxcbiAgICAgICAgICAgICAgMTI4IHwgY2hhcmNvZGUgPj4gMTIgJiA2MyxcbiAgICAgICAgICAgICAgMTI4IHwgY2hhcmNvZGUgPj4gNiAmIDYzLFxuICAgICAgICAgICAgICAxMjggfCBjaGFyY29kZSAmIDYzXG4gICAgICAgICAgICApO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gdXRmODtcbiAgICAgIH1cbiAgICAgIHJldHVybiB0b1VURjhBcnJheShzMik7XG4gICAgfTtcbiAgfSgpO1xuICAoZnVuY3Rpb24oZmFjdG9yeSkge1xuICAgIHtcbiAgICAgIG1vZHVsZS5leHBvcnRzID0gZmFjdG9yeSgpO1xuICAgIH1cbiAgfSkoZnVuY3Rpb24oKSB7XG4gICAgcmV0dXJuIHFyY29kZTI7XG4gIH0pO1xufSkocXJjb2RlJDEpO1xuY29uc3QgcXJjb2RlID0gcXJjb2RlJDEuZXhwb3J0cztcbmZ1bmN0aW9uIGNvcHlUb0NsaXBib2FyZCh0ZXh0KSB7XG4gIHJldHVybiBfX2FzeW5jKHRoaXMsIG51bGwsIGZ1bmN0aW9uKiAoKSB7XG4gICAgdHJ5IHtcbiAgICAgIGlmICghKG5hdmlnYXRvciA9PSBudWxsID8gdm9pZCAwIDogbmF2aWdhdG9yLmNsaXBib2FyZCkpIHtcbiAgICAgICAgdGhyb3cgbmV3IFRvbkNvbm5lY3RVSUVycm9yKFwiQ2xpcGJvYXJkIEFQSSBub3QgYXZhaWxhYmxlXCIpO1xuICAgICAgfVxuICAgICAgcmV0dXJuIHlpZWxkIG5hdmlnYXRvci5jbGlwYm9hcmQud3JpdGVUZXh0KHRleHQpO1xuICAgIH0gY2F0Y2ggKGUyKSB7XG4gICAgfVxuICAgIGZhbGxiYWNrQ29weVRleHRUb0NsaXBib2FyZCh0ZXh0KTtcbiAgfSk7XG59XG5mdW5jdGlvbiBmYWxsYmFja0NvcHlUZXh0VG9DbGlwYm9hcmQodGV4dCkge1xuICBjb25zdCB0ZXh0QXJlYSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJ0ZXh0YXJlYVwiKTtcbiAgdGV4dEFyZWEudmFsdWUgPSB0ZXh0O1xuICB0ZXh0QXJlYS5zdHlsZS50b3AgPSBcIjBcIjtcbiAgdGV4dEFyZWEuc3R5bGUubGVmdCA9IFwiMFwiO1xuICB0ZXh0QXJlYS5zdHlsZS5wb3NpdGlvbiA9IFwiZml4ZWRcIjtcbiAgZG9jdW1lbnQuYm9keS5hcHBlbmRDaGlsZCh0ZXh0QXJlYSk7XG4gIHRleHRBcmVhLmZvY3VzKCk7XG4gIHRleHRBcmVhLnNlbGVjdCgpO1xuICB0cnkge1xuICAgIGRvY3VtZW50LmV4ZWNDb21tYW5kKFwiY29weVwiKTtcbiAgfSBmaW5hbGx5IHtcbiAgICBkb2N1bWVudC5ib2R5LnJlbW92ZUNoaWxkKHRleHRBcmVhKTtcbiAgfVxufVxuY29uc3QgX3RtcGwkJHQgPSAvKiBAX19QVVJFX18gKi8gdGVtcGxhdGUkMShgPGRpdj48L2Rpdj5gKTtcbmNvbnN0IFFSQ29kZSA9IChwcm9wcykgPT4ge1xuICBsZXQgcXJDb2RlQ2FudmFzUmVmO1xuICBsZXQgcXJDb2RlV3JhcHBlclJlZjtcbiAgbGV0IGltYWdlUmVmO1xuICBjb25zdCBbY29weUJ1dHRvbk9wZW5lZCwgc2V0Q29weUJ1dHRvbk9wZW5lZF0gPSBjcmVhdGVTaWduYWwoZmFsc2UpO1xuICBjb25zdCBbcGljU2l6ZSwgc2V0UGljU2l6ZV0gPSBjcmVhdGVTaWduYWwocGljU2l6ZURlZmF1bHQpO1xuICBjcmVhdGVFZmZlY3QoKCkgPT4ge1xuICAgIGNvbnN0IGVycm9yQ29ycmVjdGlvbkxldmVsID0gXCJMXCI7XG4gICAgY29uc3QgY2VsbFNpemUgPSA0O1xuICAgIGNvbnN0IHFyID0gcXJjb2RlKDAsIGVycm9yQ29ycmVjdGlvbkxldmVsKTtcbiAgICBxci5hZGREYXRhKHByb3BzLnNvdXJjZVVybCk7XG4gICAgcXIubWFrZSgpO1xuICAgIHFyQ29kZUNhbnZhc1JlZi5pbm5lckhUTUwgPSBxci5jcmVhdGVTdmdUYWcoY2VsbFNpemUsIDApO1xuICAgIGNvbnN0IHFyU2l6ZSA9IHFyQ29kZUNhbnZhc1JlZi5maXJzdEVsZW1lbnRDaGlsZC5jbGllbnRXaWR0aDtcbiAgICBjb25zdCBzY2FsZSA9IE1hdGgucm91bmQocXJOb3JtYWxTaXplIC8gcXJTaXplICogMWU1KSAvIDFlNTtcbiAgICBpZiAoaW1hZ2VSZWYpIHtcbiAgICAgIGNvbnN0IGltZ1NpemUgPSBNYXRoLmNlaWwoaW1nU2l6ZURlZmF1bHQgLyAoc2NhbGUgKiBjZWxsU2l6ZSkpICogY2VsbFNpemU7XG4gICAgICBjb25zdCBpbWdPZmZzZXQgPSB0b1B4KE1hdGguY2VpbCgocXJTaXplIC0gaW1nU2l6ZSkgLyAoMiAqIGNlbGxTaXplKSkgKiBjZWxsU2l6ZSk7XG4gICAgICBpbWFnZVJlZi5zdHlsZS50b3AgPSBpbWdPZmZzZXQ7XG4gICAgICBpbWFnZVJlZi5zdHlsZS5sZWZ0ID0gaW1nT2Zmc2V0O1xuICAgICAgaW1hZ2VSZWYuc3R5bGUuaGVpZ2h0ID0gdG9QeChpbWdTaXplKTtcbiAgICAgIGltYWdlUmVmLnN0eWxlLndpZHRoID0gdG9QeChpbWdTaXplKTtcbiAgICAgIHNldFBpY1NpemUoTWF0aC5yb3VuZChwaWNTaXplRGVmYXVsdCAvIHNjYWxlKSk7XG4gICAgfVxuICAgIHFyQ29kZVdyYXBwZXJSZWYuc3R5bGUudHJhbnNmb3JtID0gYHNjYWxlKCR7c2NhbGV9KWA7XG4gIH0pO1xuICBsZXQgdGltZW91dElkID0gbnVsbDtcbiAgY29uc3Qgb25Db3B5Q2xpY2sgPSAoKSA9PiB7XG4gICAgc2V0Q29weUJ1dHRvbk9wZW5lZCh0cnVlKTtcbiAgICBjb3B5VG9DbGlwYm9hcmQocHJvcHMuc291cmNlVXJsKTtcbiAgICBpZiAodGltZW91dElkICE9IG51bGwpIHtcbiAgICAgIGNsZWFyVGltZW91dCh0aW1lb3V0SWQpO1xuICAgIH1cbiAgICB0aW1lb3V0SWQgPSBzZXRUaW1lb3V0KCgpID0+IHNldENvcHlCdXR0b25PcGVuZWQoZmFsc2UpLCAxNTAwKTtcbiAgfTtcbiAgcmV0dXJuIGNyZWF0ZUNvbXBvbmVudChRckNvZGVCYWNrZ3JvdW5kLCB7XG4gICAgZ2V0IFtcImNsYXNzXCJdKCkge1xuICAgICAgcmV0dXJuIHByb3BzLmNsYXNzO1xuICAgIH0sXG4gICAgb25DbGljazogb25Db3B5Q2xpY2ssXG4gICAgZ2V0IGNoaWxkcmVuKCkge1xuICAgICAgcmV0dXJuIFtjcmVhdGVDb21wb25lbnQoUXJDb2RlV3JhcHBlciQyLCB7XG4gICAgICAgIHJlZihyJCkge1xuICAgICAgICAgIGNvbnN0IF9yZWYkID0gcXJDb2RlV3JhcHBlclJlZjtcbiAgICAgICAgICB0eXBlb2YgX3JlZiQgPT09IFwiZnVuY3Rpb25cIiA/IF9yZWYkKHIkKSA6IHFyQ29kZVdyYXBwZXJSZWYgPSByJDtcbiAgICAgICAgfSxcbiAgICAgICAgZ2V0IGNoaWxkcmVuKCkge1xuICAgICAgICAgIHJldHVybiBbKCgpID0+IHtcbiAgICAgICAgICAgIGNvbnN0IF9lbCQgPSBfdG1wbCQkdC5jbG9uZU5vZGUodHJ1ZSk7XG4gICAgICAgICAgICBjb25zdCBfcmVmJDIgPSBxckNvZGVDYW52YXNSZWY7XG4gICAgICAgICAgICB0eXBlb2YgX3JlZiQyID09PSBcImZ1bmN0aW9uXCIgPyB1c2UoX3JlZiQyLCBfZWwkKSA6IHFyQ29kZUNhbnZhc1JlZiA9IF9lbCQ7XG4gICAgICAgICAgICByZXR1cm4gX2VsJDtcbiAgICAgICAgICB9KSgpLCBjcmVhdGVDb21wb25lbnQoU2hvdywge1xuICAgICAgICAgICAgZ2V0IHdoZW4oKSB7XG4gICAgICAgICAgICAgIHJldHVybiBwcm9wcy5pbWFnZVVybDtcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBnZXQgY2hpbGRyZW4oKSB7XG4gICAgICAgICAgICAgIHJldHVybiBjcmVhdGVDb21wb25lbnQoSW1hZ2VCYWNrZ3JvdW5kLCB7XG4gICAgICAgICAgICAgICAgcmVmKHIkKSB7XG4gICAgICAgICAgICAgICAgICBjb25zdCBfcmVmJDMgPSBpbWFnZVJlZjtcbiAgICAgICAgICAgICAgICAgIHR5cGVvZiBfcmVmJDMgPT09IFwiZnVuY3Rpb25cIiA/IF9yZWYkMyhyJCkgOiBpbWFnZVJlZiA9IHIkO1xuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgZ2V0IGNoaWxkcmVuKCkge1xuICAgICAgICAgICAgICAgICAgcmV0dXJuIGNyZWF0ZUNvbXBvbmVudChJbWFnZVN0eWxlZCQzLCB7XG4gICAgICAgICAgICAgICAgICAgIGdldCBzcmMoKSB7XG4gICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHByb3BzLmltYWdlVXJsO1xuICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICBhbHQ6IFwiXCIsXG4gICAgICAgICAgICAgICAgICAgIGdldCBzaXplKCkge1xuICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBwaWNTaXplKCk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfSldO1xuICAgICAgICB9XG4gICAgICB9KSwgY3JlYXRlQ29tcG9uZW50KFRyYW5zaXRpb24sIHtcbiAgICAgICAgb25CZWZvcmVFbnRlcjogKGVsKSA9PiB7XG4gICAgICAgICAgYW5pbWF0ZShlbCwgW3tcbiAgICAgICAgICAgIG9wYWNpdHk6IDAsXG4gICAgICAgICAgICB0cmFuc2Zvcm06IFwidHJhbnNsYXRlKC01MCUsIDQ0cHgpXCJcbiAgICAgICAgICB9LCB7XG4gICAgICAgICAgICBvcGFjaXR5OiAxLFxuICAgICAgICAgICAgdHJhbnNmb3JtOiBcInRyYW5zbGF0ZSgtNTAlLCAwKVwiXG4gICAgICAgICAgfV0sIHtcbiAgICAgICAgICAgIGR1cmF0aW9uOiAxNTAsXG4gICAgICAgICAgICBlYXNpbmc6IFwiZWFzZS1vdXRcIlxuICAgICAgICAgIH0pO1xuICAgICAgICB9LFxuICAgICAgICBvbkV4aXQ6IChlbCwgZG9uZSkgPT4ge1xuICAgICAgICAgIGFuaW1hdGUoZWwsIFt7XG4gICAgICAgICAgICBvcGFjaXR5OiAxLFxuICAgICAgICAgICAgdHJhbnNmb3JtOiBcInRyYW5zbGF0ZSgtNTAlLCAwKVwiXG4gICAgICAgICAgfSwge1xuICAgICAgICAgICAgb3BhY2l0eTogMCxcbiAgICAgICAgICAgIHRyYW5zZm9ybTogXCJ0cmFuc2xhdGUoLTUwJSwgNDRweClcIlxuICAgICAgICAgIH1dLCB7XG4gICAgICAgICAgICBkdXJhdGlvbjogMTUwLFxuICAgICAgICAgICAgZWFzaW5nOiBcImVhc2Utb3V0XCJcbiAgICAgICAgICB9KS5maW5pc2hlZC50aGVuKCgpID0+IHtcbiAgICAgICAgICAgIGRvbmUoKTtcbiAgICAgICAgICB9KTtcbiAgICAgICAgfSxcbiAgICAgICAgZ2V0IGNoaWxkcmVuKCkge1xuICAgICAgICAgIHJldHVybiBjcmVhdGVDb21wb25lbnQoU2hvdywge1xuICAgICAgICAgICAgZ2V0IHdoZW4oKSB7XG4gICAgICAgICAgICAgIHJldHVybiBjb3B5QnV0dG9uT3BlbmVkKCkgJiYgIXByb3BzLmRpc2FibGVDb3B5O1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIGdldCBjaGlsZHJlbigpIHtcbiAgICAgICAgICAgICAgcmV0dXJuIGNyZWF0ZUNvbXBvbmVudChDb3BpZWRCb3hTdHlsZWQsIHtcbiAgICAgICAgICAgICAgICBnZXQgY2hpbGRyZW4oKSB7XG4gICAgICAgICAgICAgICAgICByZXR1cm4gW2NyZWF0ZUNvbXBvbmVudChTdWNjZXNzSWNvbiwge1xuICAgICAgICAgICAgICAgICAgICBzaXplOiBcInhzXCJcbiAgICAgICAgICAgICAgICAgIH0pLCBjcmVhdGVDb21wb25lbnQoVGV4dCwge1xuICAgICAgICAgICAgICAgICAgICB0cmFuc2xhdGlvbktleTogXCJjb21tb24ubGlua0NvcGllZFwiLFxuICAgICAgICAgICAgICAgICAgICBjaGlsZHJlbjogXCJMaW5rIENvcGllZFwiXG4gICAgICAgICAgICAgICAgICB9KV07XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgICAgfSksIGNyZWF0ZUNvbXBvbmVudChTaG93LCB7XG4gICAgICAgIGdldCB3aGVuKCkge1xuICAgICAgICAgIHJldHVybiAhcHJvcHMuZGlzYWJsZUNvcHk7XG4gICAgICAgIH0sXG4gICAgICAgIGdldCBjaGlsZHJlbigpIHtcbiAgICAgICAgICByZXR1cm4gY3JlYXRlQ29tcG9uZW50KENvcHlJY29uQnV0dG9uLCB7XG4gICAgICAgICAgICBnZXQgY2hpbGRyZW4oKSB7XG4gICAgICAgICAgICAgIHJldHVybiBjcmVhdGVDb21wb25lbnQoQ29weUxpZ2h0SWNvbiwge30pO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgICB9KV07XG4gICAgfVxuICB9KTtcbn07XG52YXIgZGVlcFJlYWRPYmplY3QgPSAob2JqLCBwYXRoLCBkZWZhdWx0VmFsdWUpID0+IHtcbiAgY29uc3QgdmFsdWUgPSBwYXRoLnRyaW0oKS5zcGxpdChcIi5cIikucmVkdWNlKChhMiwgYikgPT4gYTIgPyBhMltiXSA6IHZvaWQgMCwgb2JqKTtcbiAgcmV0dXJuIHZhbHVlICE9PSB2b2lkIDAgPyB2YWx1ZSA6IGRlZmF1bHRWYWx1ZTtcbn07XG52YXIgdGVtcGxhdGUgPSAoc3RyLCBwYXJhbXMsIHJlZyA9IC97eyguKj8pfX0vZykgPT4gc3RyLnJlcGxhY2UocmVnLCAoXywga2V5KSA9PiBkZWVwUmVhZE9iamVjdChwYXJhbXMsIGtleSwgXCJcIikpO1xudmFyIGNyZWF0ZUkxOG5Db250ZXh0ID0gKGluaXQgPSB7fSwgbGFuZyA9IG5hdmlnYXRvci5sYW5ndWFnZSBpbiBpbml0ID8gbmF2aWdhdG9yLmxhbmd1YWdlIDogT2JqZWN0LmtleXMoaW5pdClbMF0pID0+IHtcbiAgY29uc3QgW2xvY2FsZSwgc2V0TG9jYWxlXSA9IGNyZWF0ZVNpZ25hbChsYW5nKTtcbiAgY29uc3QgW2RpY3QsIHNldERpY3RdID0gY3JlYXRlU3RvcmUoaW5pdCk7XG4gIGNvbnN0IHRyYW5zbGF0ZSA9IChrZXksIHBhcmFtcywgZGVmYXVsdFZhbHVlKSA9PiB7XG4gICAgY29uc3QgdmFsID0gZGVlcFJlYWRPYmplY3QoZGljdFtsb2NhbGUoKV0sIGtleSwgZGVmYXVsdFZhbHVlIHx8IFwiXCIpO1xuICAgIGlmICh0eXBlb2YgdmFsID09PSBcImZ1bmN0aW9uXCIpXG4gICAgICByZXR1cm4gdmFsKHBhcmFtcyk7XG4gICAgaWYgKHR5cGVvZiB2YWwgPT09IFwic3RyaW5nXCIpXG4gICAgICByZXR1cm4gdGVtcGxhdGUodmFsLCBwYXJhbXMgfHwge30pO1xuICAgIHJldHVybiB2YWw7XG4gIH07XG4gIGNvbnN0IGFjdGlvbnMgPSB7XG4gICAgYWRkKGxhbmcyLCB0YWJsZSkge1xuICAgICAgc2V0RGljdChsYW5nMiwgKHQyKSA9PiBPYmplY3QuYXNzaWduKHQyIHx8IHt9LCB0YWJsZSkpO1xuICAgIH0sXG4gICAgbG9jYWxlOiAobGFuZzIpID0+IGxhbmcyID8gc2V0TG9jYWxlKGxhbmcyKSA6IGxvY2FsZSgpLFxuICAgIGRpY3Q6IChsYW5nMikgPT4gZGVlcFJlYWRPYmplY3QoZGljdCwgbGFuZzIpXG4gIH07XG4gIHJldHVybiBbdHJhbnNsYXRlLCBhY3Rpb25zXTtcbn07XG52YXIgSTE4bkNvbnRleHQgPSBjcmVhdGVDb250ZXh0KHt9KTtcbnZhciB1c2VJMThuID0gKCkgPT4gdXNlQ29udGV4dChJMThuQ29udGV4dCk7XG5jb25zdCBUZXh0U3R5bGVkJDMgPSBzdHlsZWQuZGl2YFxuICAgIGZvbnQtc3R5bGU6IG5vcm1hbDtcbiAgICBmb250LXdlaWdodDogJHsocHJvcHMpID0+IHByb3BzLmZvbnRXZWlnaHR9O1xuICAgIGZvbnQtc2l6ZTogJHsocHJvcHMpID0+IHByb3BzLmZvbnRTaXplfTtcbiAgICBsaW5lLWhlaWdodDogJHsocHJvcHMpID0+IHByb3BzLmxpbmVIZWlnaHR9O1xuXG4gICAgY29sb3I6ICR7KHByb3BzKSA9PiBwcm9wcy5jb2xvcn07XG5gO1xuY29uc3QgVGV4dCA9IChpbnB1dHMpID0+IHtcbiAgY29uc3QgdGhlbWUgPSB1c2VUaGVtZSgpO1xuICBjb25zdCBbdDJdID0gdXNlSTE4bigpO1xuICBsZXQgdGV4dFJlZjtcbiAgY29uc3QgY29sb3IgPSAoKSA9PiBpbnB1dHMuY29sb3IgfHwgdGhlbWUuY29sb3JzLnRleHQucHJpbWFyeTtcbiAgY29uc3QgcHJvcHMgPSBtZXJnZVByb3BzKHtcbiAgICBmb250U2l6ZTogXCIxNHB4XCIsXG4gICAgZm9udFdlaWdodDogXCI1MTBcIixcbiAgICBsaW5lSGVpZ2h0OiBcIjEzMCVcIlxuICB9LCBpbnB1dHMpO1xuICBjcmVhdGVFZmZlY3QoKCkgPT4ge1xuICAgIGlmICghdGV4dFJlZikge1xuICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICBpZiAocHJvcHMuY3Vyc29yID09PSBcInVuc2V0XCIpIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG4gICAgaWYgKGdldENvbXB1dGVkU3R5bGUodGV4dFJlZikuY3Vyc29yICE9PSBcInBvaW50ZXJcIikge1xuICAgICAgdGV4dFJlZi5zdHlsZS5jdXJzb3IgPSBcImRlZmF1bHRcIjtcbiAgICB9XG4gIH0pO1xuICByZXR1cm4gY3JlYXRlQ29tcG9uZW50KFRleHRTdHlsZWQkMywge1xuICAgIGdldCBmb250U2l6ZSgpIHtcbiAgICAgIHJldHVybiBwcm9wcy5mb250U2l6ZTtcbiAgICB9LFxuICAgIGdldCBmb250V2VpZ2h0KCkge1xuICAgICAgcmV0dXJuIHByb3BzLmZvbnRXZWlnaHQ7XG4gICAgfSxcbiAgICBnZXQgbGluZUhlaWdodCgpIHtcbiAgICAgIHJldHVybiBwcm9wcy5saW5lSGVpZ2h0O1xuICAgIH0sXG4gICAgZ2V0IGNvbG9yKCkge1xuICAgICAgcmV0dXJuIGNvbG9yKCk7XG4gICAgfSxcbiAgICBnZXQgW1wiY2xhc3NcIl0oKSB7XG4gICAgICByZXR1cm4gcHJvcHMuY2xhc3M7XG4gICAgfSxcbiAgICByZWYociQpIHtcbiAgICAgIGNvbnN0IF9yZWYkID0gdGV4dFJlZjtcbiAgICAgIHR5cGVvZiBfcmVmJCA9PT0gXCJmdW5jdGlvblwiID8gX3JlZiQociQpIDogdGV4dFJlZiA9IHIkO1xuICAgIH0sXG4gICAgXCJkYXRhLXRjLXRleHRcIjogXCJ0cnVlXCIsXG4gICAgZ2V0IGNoaWxkcmVuKCkge1xuICAgICAgdmFyIF9hMjtcbiAgICAgIHJldHVybiBjcmVhdGVNZW1vKCgpID0+ICEhcHJvcHMudHJhbnNsYXRpb25LZXkpKCkgPyB0Mihwcm9wcy50cmFuc2xhdGlvbktleSwgcHJvcHMudHJhbnNsYXRpb25WYWx1ZXMsIChfYTIgPSBwcm9wcy5jaGlsZHJlbikgPT0gbnVsbCA/IHZvaWQgMCA6IF9hMi50b1N0cmluZygpKSA6IHByb3BzLmNoaWxkcmVuO1xuICAgIH1cbiAgfSk7XG59O1xuY29uc3QgSW1hZ2VDb250YWluZXIgPSBzdHlsZWQuZGl2YFxuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcblxuICAgICY6OmFmdGVyIHtcbiAgICAgICAgY29udGVudDogJyc7XG4gICAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICAgIHRvcDogMDtcbiAgICAgICAgYm90dG9tOiAwO1xuICAgICAgICBsZWZ0OiAwO1xuICAgICAgICByaWdodDogMDtcbiAgICAgICAgYm9yZGVyOiAwLjVweCBzb2xpZCByZ2JhKDAsIDAsIDAsIDAuMDgpO1xuXG4gICAgICAgIGJvcmRlci1yYWRpdXM6IGluaGVyaXQ7XG4gICAgfVxuYDtcbmNvbnN0IEltYWdlU3R5bGVkJDIgPSBzdHlsZWQoSW1hZ2UpYFxuICAgIHdpZHRoOiAxMDAlO1xuICAgIGhlaWdodDogMTAwJTtcbiAgICBib3JkZXItcmFkaXVzOiBpbmhlcml0O1xuYDtcbmNvbnN0IFdhbGxldEltYWdlID0gKHByb3BzKSA9PiB7XG4gIHJldHVybiBjcmVhdGVDb21wb25lbnQoSW1hZ2VDb250YWluZXIsIHtcbiAgICBnZXQgW1wiY2xhc3NcIl0oKSB7XG4gICAgICByZXR1cm4gcHJvcHMuY2xhc3M7XG4gICAgfSxcbiAgICBnZXQgY2hpbGRyZW4oKSB7XG4gICAgICByZXR1cm4gY3JlYXRlQ29tcG9uZW50KEltYWdlU3R5bGVkJDIsIHtcbiAgICAgICAgZ2V0IHNyYygpIHtcbiAgICAgICAgICByZXR1cm4gcHJvcHMuc3JjO1xuICAgICAgICB9XG4gICAgICB9KTtcbiAgICB9XG4gIH0pO1xufTtcbmNvbnN0IGJvcmRlcnMkMyA9IHtcbiAgbTogXCIxNnB4XCIsXG4gIHM6IFwiMTJweFwiLFxuICBub25lOiBcIjBcIlxufTtcbmNvbnN0IGJhZGdlQm9yZGVycyA9IHtcbiAgbTogXCI2cHhcIixcbiAgczogXCI2cHhcIixcbiAgbm9uZTogXCIwXCJcbn07XG5jb25zdCBXYWxsZXRJdGVtU3R5bGVkID0gc3R5bGVkLmJ1dHRvbmBcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgY3Vyc29yOiBwb2ludGVyO1xuICAgIGJvcmRlcjogbm9uZTtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB1bnNldDtcbiAgICBwYWRkaW5nOiA4cHggNHB4O1xuICAgIHdpZHRoOiA5MnB4O1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuXG4gICAgdHJhbnNpdGlvbjogdHJhbnNmb3JtIDAuMTI1cyBlYXNlLWluLW91dDtcblxuICAgICR7bWVkaWFOb3RUb3VjaH0ge1xuICAgICAgICAmOmhvdmVyIHtcbiAgICAgICAgICAgIHRyYW5zZm9ybTogc2NhbGUoMS4wNCk7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICAmOmFjdGl2ZSB7XG4gICAgICAgIHRyYW5zZm9ybTogc2NhbGUoMC45Nik7XG4gICAgfVxuXG4gICAgJHttZWRpYShcIm1vYmlsZVwiKX0ge1xuICAgICAgICBwYWRkaW5nOiA4cHggNHB4O1xuICAgICAgICB3aWR0aDogODJweDtcbiAgICB9XG5cbiAgICAke21lZGlhVG91Y2h9IHtcbiAgICAgICAgJjphY3RpdmUge1xuICAgICAgICAgICAgdHJhbnNmb3JtOiBzY2FsZSgwLjkyKTtcbiAgICAgICAgfVxuICAgIH1cbmA7XG5jb25zdCBJbWFnZVN0eWxlZCQxID0gc3R5bGVkKFdhbGxldEltYWdlKWBcbiAgICB3aWR0aDogNjBweDtcbiAgICBoZWlnaHQ6IDYwcHg7XG4gICAgYm9yZGVyLXJhZGl1czogJHsocHJvcHMpID0+IGJvcmRlcnMkM1twcm9wcy50aGVtZS5ib3JkZXJSYWRpdXNdfTtcblxuICAgIG1hcmdpbi1ib3R0b206IDhweDtcbmA7XG5jb25zdCBCYWRnZVN0eWxlZCA9IHN0eWxlZChJbWFnZSlgXG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIHJpZ2h0OiAxMHB4O1xuICAgIHRvcDogNTBweDtcbiAgICB3aWR0aDogMjRweDtcbiAgICBoZWlnaHQ6IDI0cHg7XG4gICAgYm9yZGVyLXJhZGl1czogJHsocHJvcHMpID0+IGJhZGdlQm9yZGVyc1twcm9wcy50aGVtZS5ib3JkZXJSYWRpdXNdfTtcbiAgICBib3gtc2hhZG93OiAwIDJweCA4cHggMCByZ2JhKDAsIDAsIDAsIDAuMDgpO1xuYDtcbmNvbnN0IFN0eWxlZFRleHQgPSBzdHlsZWQoVGV4dClgXG4gICAgbWF4LXdpZHRoOiA5MHB4O1xuICAgIGZvbnQtd2VpZ2h0OiA1MTA7XG4gICAgd2hpdGUtc3BhY2U6IG5vd3JhcDtcbiAgICB0ZXh0LW92ZXJmbG93OiBlbGxpcHNpcztcbiAgICBvdmVyZmxvdzogaGlkZGVuO1xuXG4gICAgJHttZWRpYShcIm1vYmlsZVwiKX0ge1xuICAgICAgICBtYXgtd2lkdGg6IDgwcHg7XG4gICAgfVxuYDtcbmNvbnN0IFN0eWxlZFNlY29uZExpbmUgPSBzdHlsZWQoVGV4dClgXG4gICAgZm9udC13ZWlnaHQ6ICR7KHByb3BzKSA9PiBwcm9wcy5jb2xvclByaW1hcnkgPyBcIjUxMFwiIDogXCI0MDBcIn07XG4gICAgbWF4LXdpZHRoOiA5MHB4O1xuICAgIHdoaXRlLXNwYWNlOiBub3dyYXA7XG4gICAgdGV4dC1vdmVyZmxvdzogZWxsaXBzaXM7XG4gICAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgICBjb2xvcjogJHsocHJvcHMpID0+IHByb3BzLmNvbG9yUHJpbWFyeSA/IHByb3BzLnRoZW1lLmNvbG9ycy50ZXh0LnByaW1hcnkgOiBwcm9wcy50aGVtZS5jb2xvcnMudGV4dC5zZWNvbmRhcnl9O1xuXG4gICAgJHttZWRpYShcIm1vYmlsZVwiKX0ge1xuICAgICAgICBtYXgtd2lkdGg6IDgwcHg7XG4gICAgfVxuYDtcbmNvbnN0IF90bXBsJCRzID0gLyogQF9fUFVSRV9fICovIHRlbXBsYXRlJDEoYDxkaXY+PC9kaXY+YCk7XG5jb25zdCBXYWxsZXRJdGVtID0gKHByb3BzKSA9PiB7XG4gIGxldCBjdHhSZWYgPSBudWxsO1xuICBjb25zdCBhZGp1c3RMZXR0ZXJTcGFjaW5nID0gKCkgPT4ge1xuICAgIGNvbnN0IG5hbWUgPSBjdHhSZWYgPT0gbnVsbCA/IHZvaWQgMCA6IGN0eFJlZi5xdWVyeVNlbGVjdG9yKFwiZGl2XCIpO1xuICAgIGlmIChuYW1lICYmIG5hbWUuc2Nyb2xsV2lkdGggPiBuYW1lLmNsaWVudFdpZHRoKSB7XG4gICAgICBsZXQgc3BhY2luZyA9IDA7XG4gICAgICBjb25zdCBtaW5TcGFjaW5nID0gLTAuNDtcbiAgICAgIGNvbnN0IHN0ZXAgPSAwLjA1O1xuICAgICAgd2hpbGUgKG5hbWUuc2Nyb2xsV2lkdGggPiBuYW1lLmNsaWVudFdpZHRoICYmIHNwYWNpbmcgPj0gbWluU3BhY2luZykge1xuICAgICAgICBzcGFjaW5nIC09IHN0ZXA7XG4gICAgICAgIG5hbWUuc3R5bGUubGV0dGVyU3BhY2luZyA9IGAke3NwYWNpbmd9cHhgO1xuICAgICAgfVxuICAgICAgaWYgKHNwYWNpbmcgIT09IDApIHtcbiAgICAgICAgc3BhY2luZyAtPSBzdGVwO1xuICAgICAgICBuYW1lLnN0eWxlLmxldHRlclNwYWNpbmcgPSBgJHtzcGFjaW5nfXB4YDtcbiAgICAgIH1cbiAgICB9XG4gIH07XG4gIG9uTW91bnQoKCkgPT4gYWRqdXN0TGV0dGVyU3BhY2luZygpKTtcbiAgY3JlYXRlRWZmZWN0KCgpID0+IHtcbiAgICBhZGp1c3RMZXR0ZXJTcGFjaW5nKCk7XG4gIH0pO1xuICByZXR1cm4gY3JlYXRlQ29tcG9uZW50KFdhbGxldEl0ZW1TdHlsZWQsIHtcbiAgICBnZXQgW1wiY2xhc3NcIl0oKSB7XG4gICAgICByZXR1cm4gcHJvcHMuY2xhc3M7XG4gICAgfSxcbiAgICBvbkNsaWNrOiAoKSA9PiBwcm9wcy5vbkNsaWNrKCksXG4gICAgXCJkYXRhLXRjLXdhbGxldC1pdGVtXCI6IFwidHJ1ZVwiLFxuICAgIGdldCBjaGlsZHJlbigpIHtcbiAgICAgIHJldHVybiBbY3JlYXRlTWVtbygoKSA9PiBjcmVhdGVNZW1vKCgpID0+IHR5cGVvZiBwcm9wcy5pY29uID09PSBcInN0cmluZ1wiKSgpID8gY3JlYXRlQ29tcG9uZW50KEltYWdlU3R5bGVkJDEsIHtcbiAgICAgICAgZ2V0IHNyYygpIHtcbiAgICAgICAgICByZXR1cm4gcHJvcHMuaWNvbjtcbiAgICAgICAgfVxuICAgICAgfSkgOiBwcm9wcy5pY29uKSwgY3JlYXRlTWVtbygoKSA9PiBjcmVhdGVNZW1vKCgpID0+ICEhcHJvcHMuYmFkZ2VVcmwpKCkgJiYgY3JlYXRlQ29tcG9uZW50KEJhZGdlU3R5bGVkLCB7XG4gICAgICAgIGdldCBzcmMoKSB7XG4gICAgICAgICAgcmV0dXJuIHByb3BzLmJhZGdlVXJsO1xuICAgICAgICB9XG4gICAgICB9KSksICgoKSA9PiB7XG4gICAgICAgIGNvbnN0IF9lbCQgPSBfdG1wbCQkcy5jbG9uZU5vZGUodHJ1ZSk7XG4gICAgICAgIHVzZSgoZWwpID0+IGN0eFJlZiA9IGVsLCBfZWwkKTtcbiAgICAgICAgaW5zZXJ0KF9lbCQsIGNyZWF0ZUNvbXBvbmVudChTdHlsZWRUZXh0LCB7XG4gICAgICAgICAgZ2V0IGNoaWxkcmVuKCkge1xuICAgICAgICAgICAgcmV0dXJuIHByb3BzLm5hbWU7XG4gICAgICAgICAgfVxuICAgICAgICB9KSk7XG4gICAgICAgIHJldHVybiBfZWwkO1xuICAgICAgfSkoKSwgY3JlYXRlTWVtbygoKSA9PiBjcmVhdGVNZW1vKCgpID0+ICEhcHJvcHMuc2Vjb25kTGluZSkoKSAmJiBjcmVhdGVDb21wb25lbnQoU3R5bGVkU2Vjb25kTGluZSwge1xuICAgICAgICBnZXQgY29sb3JQcmltYXJ5KCkge1xuICAgICAgICAgIHZhciBfYTI7XG4gICAgICAgICAgcmV0dXJuIChfYTIgPSBwcm9wcy5zZWNvbmRMaW5lQ29sb3JQcmltYXJ5KSAhPSBudWxsID8gX2EyIDogdHJ1ZTtcbiAgICAgICAgfSxcbiAgICAgICAgZ2V0IGNoaWxkcmVuKCkge1xuICAgICAgICAgIHJldHVybiBwcm9wcy5zZWNvbmRMaW5lO1xuICAgICAgICB9XG4gICAgICB9KSldO1xuICAgIH1cbiAgfSk7XG59O1xuY29uc3QgSDFTdHlsZWQkOSA9IHN0eWxlZC5oMWBcbiAgICBmb250LXN0eWxlOiBub3JtYWw7XG4gICAgZm9udC13ZWlnaHQ6IDU5MDtcbiAgICBmb250LXNpemU6IDIwcHg7XG4gICAgbGluZS1oZWlnaHQ6IDI4cHg7XG5cbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG5cbiAgICBjb2xvcjogJHsocHJvcHMpID0+IHByb3BzLnRoZW1lLmNvbG9ycy50ZXh0LnByaW1hcnl9O1xuXG4gICAgbWFyZ2luLXRvcDogMDtcbiAgICBtYXJnaW4tYm90dG9tOiAwO1xuXG4gICAgY3Vyc29yOiBkZWZhdWx0O1xuYDtcbmNvbnN0IEgxID0gKHByb3BzKSA9PiB7XG4gIGNvbnN0IFt0Ml0gPSB1c2VJMThuKCk7XG4gIHJldHVybiBjcmVhdGVDb21wb25lbnQoSDFTdHlsZWQkOSwge1xuICAgIGdldCBbXCJjbGFzc1wiXSgpIHtcbiAgICAgIHJldHVybiBwcm9wcy5jbGFzcztcbiAgICB9LFxuICAgIFwiZGF0YS10Yy1oMVwiOiBcInRydWVcIixcbiAgICBnZXQgY2hpbGRyZW4oKSB7XG4gICAgICB2YXIgX2EyO1xuICAgICAgcmV0dXJuIGNyZWF0ZU1lbW8oKCkgPT4gISFwcm9wcy50cmFuc2xhdGlvbktleSkoKSA/IHQyKHByb3BzLnRyYW5zbGF0aW9uS2V5LCBwcm9wcy50cmFuc2xhdGlvblZhbHVlcywgKF9hMiA9IHByb3BzLmNoaWxkcmVuKSA9PSBudWxsID8gdm9pZCAwIDogX2EyLnRvU3RyaW5nKCkpIDogcHJvcHMuY2hpbGRyZW47XG4gICAgfVxuICB9KTtcbn07XG5jb25zdCBIMlN0eWxlZCQ1ID0gc3R5bGVkLmgyYFxuICAgIGZvbnQtc3R5bGU6IG5vcm1hbDtcbiAgICBmb250LXdlaWdodDogNDAwO1xuICAgIGZvbnQtc2l6ZTogMTZweDtcbiAgICBsaW5lLWhlaWdodDogMjJweDtcblxuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcblxuICAgIGNvbG9yOiAkeyhwcm9wcykgPT4gcHJvcHMudGhlbWUuY29sb3JzLnRleHQuc2Vjb25kYXJ5fTtcblxuICAgIG1hcmdpbi10b3A6IDA7XG4gICAgbWFyZ2luLWJvdHRvbTogMzJweDtcblxuICAgIGN1cnNvcjogZGVmYXVsdDtcbmA7XG5jb25zdCBIMiA9IChwcm9wcykgPT4ge1xuICBjb25zdCBbdDJdID0gdXNlSTE4bigpO1xuICByZXR1cm4gY3JlYXRlQ29tcG9uZW50KEgyU3R5bGVkJDUsIHtcbiAgICBnZXQgW1wiY2xhc3NcIl0oKSB7XG4gICAgICByZXR1cm4gcHJvcHMuY2xhc3M7XG4gICAgfSxcbiAgICBcImRhdGEtdGMtaDJcIjogXCJ0cnVlXCIsXG4gICAgZ2V0IGNoaWxkcmVuKCkge1xuICAgICAgdmFyIF9hMjtcbiAgICAgIHJldHVybiBjcmVhdGVNZW1vKCgpID0+ICEhcHJvcHMudHJhbnNsYXRpb25LZXkpKCkgPyB0Mihwcm9wcy50cmFuc2xhdGlvbktleSwgcHJvcHMudHJhbnNsYXRpb25WYWx1ZXMsIChfYTIgPSBwcm9wcy5jaGlsZHJlbikgPT0gbnVsbCA/IHZvaWQgMCA6IF9hMi50b1N0cmluZygpKSA6IHByb3BzLmNoaWxkcmVuO1xuICAgIH1cbiAgfSk7XG59O1xuY29uc3QgSDNTdHlsZWQkMSA9IHN0eWxlZC5oM2BcbiAgICBmb250LXN0eWxlOiBub3JtYWw7XG4gICAgZm9udC13ZWlnaHQ6IDUxMDtcbiAgICBmb250LXNpemU6IDE2cHg7XG4gICAgbGluZS1oZWlnaHQ6IDIwcHg7XG5cbiAgICBjb2xvcjogJHsocHJvcHMpID0+IHByb3BzLnRoZW1lLmNvbG9ycy50ZXh0LnByaW1hcnl9O1xuXG4gICAgbWFyZ2luLXRvcDogMDtcbiAgICBtYXJnaW4tYm90dG9tOiAwO1xuXG4gICAgY3Vyc29yOiBkZWZhdWx0O1xuYDtcbmNvbnN0IEgzID0gKHByb3BzKSA9PiB7XG4gIGNvbnN0IFt0Ml0gPSB1c2VJMThuKCk7XG4gIHJldHVybiBjcmVhdGVDb21wb25lbnQoSDNTdHlsZWQkMSwge1xuICAgIFwiZGF0YS10Yy1oM1wiOiBcInRydWVcIixcbiAgICBnZXQgW1wiY2xhc3NcIl0oKSB7XG4gICAgICByZXR1cm4gcHJvcHMuY2xhc3M7XG4gICAgfSxcbiAgICBnZXQgY2hpbGRyZW4oKSB7XG4gICAgICB2YXIgX2EyO1xuICAgICAgcmV0dXJuIGNyZWF0ZU1lbW8oKCkgPT4gISFwcm9wcy50cmFuc2xhdGlvbktleSkoKSA/IHQyKHByb3BzLnRyYW5zbGF0aW9uS2V5LCBwcm9wcy50cmFuc2xhdGlvblZhbHVlcywgKF9hMiA9IHByb3BzLmNoaWxkcmVuKSA9PSBudWxsID8gdm9pZCAwIDogX2EyLnRvU3RyaW5nKCkpIDogcHJvcHMuY2hpbGRyZW47XG4gICAgfVxuICB9KTtcbn07XG5jb25zdCBfdG1wbCQkciA9IC8qIEBfX1BVUkVfXyAqLyB0ZW1wbGF0ZSQxKGA8c3ZnIHhtbG5zPVwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcIiB3aWR0aD1cIjI4XCIgaGVpZ2h0PVwiMjhcIiB2aWV3Qm94PVwiMCAwIDI4IDI4XCI+PHBhdGggZmlsbC1ydWxlPVwiZXZlbm9kZFwiIGNsaXAtcnVsZT1cImV2ZW5vZGRcIiBkPVwiTTkuNzUgNy41QzkuMzM1NzkgNy41IDkgNy4xNjQyMSA5IDYuNzVDOSA2LjMzNTc5IDkuMzM1NzkgNiA5Ljc1IDZIMjEuMjVDMjEuNjY0MiA2IDIyIDYuMzM1NzkgMjIgNi43NVYxOC4yNUMyMiAxOC42NjQyIDIxLjY2NDIgMTkgMjEuMjUgMTlDMjAuODM1OCAxOSAyMC41IDE4LjY2NDIgMjAuNSAxOC4yNVY4LjU2MDY2TDYuMjgwMzMgMjIuNzgwM0M1Ljk4NzQ0IDIzLjA3MzIgNS41MTI1NiAyMy4wNzMyIDUuMjE5NjcgMjIuNzgwM0M0LjkyNjc4IDIyLjQ4NzQgNC45MjY3OCAyMi4wMTI2IDUuMjE5NjcgMjEuNzE5N0wxOS40MzkzIDcuNUg5Ljc1WlwiPjwvcGF0aD48L3N2Zz5gKTtcbmNvbnN0IExvbmdBcnJvd0ljb24gPSAocHJvcHMpID0+IHtcbiAgY29uc3QgdGhlbWUgPSB1c2VUaGVtZSgpO1xuICBjb25zdCBmaWxsID0gKCkgPT4gcHJvcHMuZmlsbCB8fCB0aGVtZS5jb2xvcnMuaWNvbi5zZWNvbmRhcnk7XG4gIHJldHVybiAoKCkgPT4ge1xuICAgIGNvbnN0IF9lbCQgPSBfdG1wbCQkci5jbG9uZU5vZGUodHJ1ZSksIF9lbCQyID0gX2VsJC5maXJzdENoaWxkO1xuICAgIGNyZWF0ZVJlbmRlckVmZmVjdCgoX3AkKSA9PiB7XG4gICAgICBjb25zdCBfdiQgPSBmaWxsKCksIF92JDIgPSBmaWxsKCk7XG4gICAgICBfdiQgIT09IF9wJC5fdiQgJiYgc2V0QXR0cmlidXRlKF9lbCQsIFwiZmlsbFwiLCBfcCQuX3YkID0gX3YkKTtcbiAgICAgIF92JDIgIT09IF9wJC5fdiQyICYmIHNldEF0dHJpYnV0ZShfZWwkMiwgXCJmaWxsXCIsIF9wJC5fdiQyID0gX3YkMik7XG4gICAgICByZXR1cm4gX3AkO1xuICAgIH0sIHtcbiAgICAgIF92JDogdm9pZCAwLFxuICAgICAgX3YkMjogdm9pZCAwXG4gICAgfSk7XG4gICAgcmV0dXJuIF9lbCQ7XG4gIH0pKCk7XG59O1xuY29uc3QgX3RtcGwkJHEgPSAvKiBAX19QVVJFX18gKi8gdGVtcGxhdGUkMShgPHN2ZyB3aWR0aD1cIjI0XCIgaGVpZ2h0PVwiMjRcIiB2aWV3Qm94PVwiMCAwIDI0IDI0XCIgZmlsbD1cIm5vbmVcIiB4bWxucz1cImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXCI+PHBhdGggZmlsbC1ydWxlPVwiZXZlbm9kZFwiIGNsaXAtcnVsZT1cImV2ZW5vZGRcIiBkPVwiTTE0LjE4MzkgMTcuNzA2OUMxMy42NDA1IDE4LjY1MDcgMTMuMzY4OCAxOS4xMjI2IDEzLjA1OTEgMTkuMzQ4QzEyLjQyNzggMTkuODA3NCAxMS41NzIzIDE5LjgwNzQgMTAuOTQxIDE5LjM0OEMxMC42MzEyIDE5LjEyMjYgMTAuMzU5NSAxOC42NTA3IDkuODE2MTMgMTcuNzA2OUw1LjUyMDY2IDEwLjI0NjRDNC43Njg2NCA4Ljk0MDI0IDQuMzkyNjMgOC4yODcxNyA0LjMzNzYyIDcuNzU4OTRDNC4yMjU1IDYuNjgyMzYgNC44MTg5NCA1LjY1NTkxIDUuODA3ODggNS4yMTU4OUM2LjI5MzA5IDUgNy4wNDY2NyA1IDguNTUzODMgNUgxNS40NDYyQzE2Ljk1MzQgNSAxNy43MDY5IDUgMTguMTkyMiA1LjIxNTg5QzE5LjE4MTEgNS42NTU5MSAxOS43NzQ1IDYuNjgyMzYgMTkuNjYyNCA3Ljc1ODk0QzE5LjYwNzQgOC4yODcxNyAxOS4yMzE0IDguOTQwMjQgMTguNDc5NCAxMC4yNDY0TDE0LjE4MzkgMTcuNzA2OVpNMTEuMSAxNi4zNDEyTDYuNTYxMzkgOC40ODAwMkM2LjMxOTk1IDguMDYxODUgNi4xOTkyNCA3Ljg1Mjc2IDYuMTgxNDYgNy42ODM2NUM2LjE0NTIzIDcuMzM4OTYgNi4zMzUwNyA3LjAxMDE1IDYuNjUxNjkgNi44NjkxOUM2LjgwNzAzIDYuODAwMDIgNy4wNDg0NyA2LjgwMDAyIDcuNTMxMzMgNi44MDAwMkg3LjUzMTM0TDExLjEgNi44MDAwMlYxNi4zNDEyWk0xMi45IDE2LjM0MTJMMTcuNDM4NyA4LjQ4MDAyQzE3LjY4MDEgOC4wNjE4NSAxNy44MDA4IDcuODUyNzYgMTcuODE4NiA3LjY4MzY1QzE3Ljg1NDggNy4zMzg5NiAxNy42NjUgNy4wMTAxNSAxNy4zNDg0IDYuODY5MTlDMTcuMTkzIDYuODAwMDIgMTYuOTUxNiA2LjgwMDAyIDE2LjQ2ODcgNi44MDAwMkwxMi45IDYuODAwMDJWMTYuMzQxMlpcIj48L3BhdGg+PC9zdmc+YCk7XG5jb25zdCBUb25JY29uID0gKHByb3BzKSA9PiB7XG4gIGNvbnN0IHRoZW1lID0gdXNlVGhlbWUoKTtcbiAgY29uc3QgZmlsbCA9ICgpID0+IHByb3BzLmZpbGwgfHwgdGhlbWUuY29sb3JzLmljb24ucHJpbWFyeTtcbiAgcmV0dXJuICgoKSA9PiB7XG4gICAgY29uc3QgX2VsJCA9IF90bXBsJCRxLmNsb25lTm9kZSh0cnVlKSwgX2VsJDIgPSBfZWwkLmZpcnN0Q2hpbGQ7XG4gICAgY3JlYXRlUmVuZGVyRWZmZWN0KCgpID0+IHNldEF0dHJpYnV0ZShfZWwkMiwgXCJmaWxsXCIsIGZpbGwoKSkpO1xuICAgIHJldHVybiBfZWwkO1xuICB9KSgpO1xufTtcbmNvbnN0IF90bXBsJCRwID0gLyogQF9fUFVSRV9fICovIHRlbXBsYXRlJDEoYDxzdmcgeG1sbnM9XCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wiIHdpZHRoPVwiMTZcIiBoZWlnaHQ9XCIxNlwiIHZpZXdCb3g9XCIwIDAgMTYgMTZcIiBmaWxsPVwibm9uZVwiPjxnIGNsaXAtcGF0aD1cInVybCgjY2xpcDBfMzc4M18yMDQ1KVwiPjxjaXJjbGUgY3g9XCI4XCIgY3k9XCI4LjAwMDk4XCIgcj1cIjhcIj48L2NpcmNsZT48cGF0aCBkPVwiTTQuNzUgOC41MDA5OEw3IDEwLjc1MUwxMS43NSA2LjAwMDk4XCIgc3Ryb2tlLXdpZHRoPVwiMS41XCIgc3Ryb2tlLWxpbmVjYXA9XCJyb3VuZFwiIHN0cm9rZS1saW5lam9pbj1cInJvdW5kXCI+PC9wYXRoPjwvZz48ZGVmcz48Y2xpcFBhdGggaWQ9XCJjbGlwMF8zNzgzXzIwNDVcIj48cmVjdCB3aWR0aD1cIjE2XCIgaGVpZ2h0PVwiMTZcIiBmaWxsPVwid2hpdGVcIiB0cmFuc2Zvcm09XCJ0cmFuc2xhdGUoMCAwLjAwMDk3NjU2MilcIj48L3JlY3Q+PC9jbGlwUGF0aD48L2RlZnM+PC9zdmc+YCksIF90bXBsJDIkMyA9IC8qIEBfX1BVUkVfXyAqLyB0ZW1wbGF0ZSQxKGA8c3ZnIHdpZHRoPVwiMjRcIiBoZWlnaHQ9XCIyNFwiIHZpZXdCb3g9XCIwIDAgMjQgMjRcIiBmaWxsPVwibm9uZVwiIHhtbG5zPVwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcIj48Y2lyY2xlIGN4PVwiMTJcIiBjeT1cIjEyXCIgcj1cIjExXCI+PC9jaXJjbGU+PHBhdGggZD1cIk0xNy4xMzY0IDkuNjM2NEMxNy40ODc5IDkuMjg0OTMgMTcuNDg3OSA4LjcxNTA4IDE3LjEzNjQgOC4zNjM2MUMxNi43ODQ5IDguMDEyMTQgMTYuMjE1MSA4LjAxMjE0IDE1Ljg2MzYgOC4zNjM2MUwxMCAxNC4yMjcyTDguMTM2NCAxMi4zNjM2QzcuNzg0OTMgMTIuMDEyMSA3LjIxNTA4IDEyLjAxMjEgNi44NjM2MSAxMi4zNjM2QzYuNTEyMTQgMTIuNzE1MSA2LjUxMjE0IDEzLjI4NDkgNi44NjM2MSAxMy42MzY0TDkuMzYzNjEgMTYuMTM2NEM5LjcxNTA4IDE2LjQ4NzkgMTAuMjg0OSAxNi40ODc5IDEwLjYzNjQgMTYuMTM2NEwxNy4xMzY0IDkuNjM2NFpcIj48L3BhdGg+PC9zdmc+YCksIF90bXBsJDMkMiA9IC8qIEBfX1BVUkVfXyAqLyB0ZW1wbGF0ZSQxKGA8c3ZnIHdpZHRoPVwiNzJcIiBoZWlnaHQ9XCI3MlwiIHZpZXdCb3g9XCIwIDAgNzIgNzJcIiBmaWxsPVwibm9uZVwiIHhtbG5zPVwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcIj48Y2lyY2xlIGN4PVwiMzZcIiBjeT1cIjM2XCIgcj1cIjMzXCI+PC9jaXJjbGU+PHBhdGggZD1cIk01MC45MTQyIDI4LjQxNDJDNTEuNjk1MyAyNy42MzMyIDUxLjY5NTMgMjYuMzY2OCA1MC45MTQyIDI1LjU4NThDNTAuMTMzMiAyNC44MDQ3IDQ4Ljg2NjggMjQuODA0NyA0OC4wODU4IDI1LjU4NThMMzAgNDMuNjcxNkwyMy45MTQyIDM3LjU4NThDMjMuMTMzMiAzNi44MDQ3IDIxLjg2NjggMzYuODA0NyAyMS4wODU4IDM3LjU4NThDMjAuMzA0NyAzOC4zNjY4IDIwLjMwNDcgMzkuNjMzMiAyMS4wODU4IDQwLjQxNDJMMjguNTg1OCA0Ny45MTQyQzI5LjM2NjggNDguNjk1MyAzMC42MzMyIDQ4LjY5NTMgMzEuNDE0MiA0Ny45MTQyTDUwLjkxNDIgMjguNDE0MlpcIj48L3BhdGg+PC9zdmc+YCk7XG5jb25zdCBTdWNjZXNzSWNvbiA9IChwcm9wcykgPT4ge1xuICBjb25zdCB0aGVtZSA9IHVzZVRoZW1lKCk7XG4gIGNvbnN0IHNpemUgPSAoKSA9PiBwcm9wcy5zaXplIHx8IFwic1wiO1xuICBjb25zdCBmaWxsID0gKCkgPT4gcHJvcHMuZmlsbCB8fCB0aGVtZS5jb2xvcnMuaWNvbi5zdWNjZXNzO1xuICByZXR1cm4gY3JlYXRlTWVtbygoKCkgPT4ge1xuICAgIGNvbnN0IF9jJCA9IGNyZWF0ZU1lbW8oKCkgPT4gc2l6ZSgpID09PSBcInhzXCIpO1xuICAgIHJldHVybiAoKSA9PiBfYyQoKSA/ICgoKSA9PiB7XG4gICAgICBjb25zdCBfZWwkID0gX3RtcGwkJHAuY2xvbmVOb2RlKHRydWUpLCBfZWwkMiA9IF9lbCQuZmlyc3RDaGlsZCwgX2VsJDMgPSBfZWwkMi5maXJzdENoaWxkLCBfZWwkNCA9IF9lbCQzLm5leHRTaWJsaW5nO1xuICAgICAgY3JlYXRlUmVuZGVyRWZmZWN0KChfcCQpID0+IHtcbiAgICAgICAgY29uc3QgX3YkID0gcHJvcHMuY2xhc3MsIF92JDIgPSBmaWxsKCksIF92JDMgPSB0aGVtZS5jb2xvcnMuY29uc3RhbnQud2hpdGU7XG4gICAgICAgIF92JCAhPT0gX3AkLl92JCAmJiBzZXRBdHRyaWJ1dGUoX2VsJCwgXCJjbGFzc1wiLCBfcCQuX3YkID0gX3YkKTtcbiAgICAgICAgX3YkMiAhPT0gX3AkLl92JDIgJiYgc2V0QXR0cmlidXRlKF9lbCQzLCBcImZpbGxcIiwgX3AkLl92JDIgPSBfdiQyKTtcbiAgICAgICAgX3YkMyAhPT0gX3AkLl92JDMgJiYgc2V0QXR0cmlidXRlKF9lbCQ0LCBcInN0cm9rZVwiLCBfcCQuX3YkMyA9IF92JDMpO1xuICAgICAgICByZXR1cm4gX3AkO1xuICAgICAgfSwge1xuICAgICAgICBfdiQ6IHZvaWQgMCxcbiAgICAgICAgX3YkMjogdm9pZCAwLFxuICAgICAgICBfdiQzOiB2b2lkIDBcbiAgICAgIH0pO1xuICAgICAgcmV0dXJuIF9lbCQ7XG4gICAgfSkoKSA6ICgoKSA9PiB7XG4gICAgICBjb25zdCBfYyQyID0gY3JlYXRlTWVtbygoKSA9PiBzaXplKCkgPT09IFwic1wiKTtcbiAgICAgIHJldHVybiAoKSA9PiBfYyQyKCkgPyAoKCkgPT4ge1xuICAgICAgICBjb25zdCBfZWwkNSA9IF90bXBsJDIkMy5jbG9uZU5vZGUodHJ1ZSksIF9lbCQ2ID0gX2VsJDUuZmlyc3RDaGlsZCwgX2VsJDcgPSBfZWwkNi5uZXh0U2libGluZztcbiAgICAgICAgY3JlYXRlUmVuZGVyRWZmZWN0KChfcCQpID0+IHtcbiAgICAgICAgICBjb25zdCBfdiQ0ID0gcHJvcHMuY2xhc3MsIF92JDUgPSBmaWxsKCksIF92JDYgPSB0aGVtZS5jb2xvcnMuY29uc3RhbnQud2hpdGU7XG4gICAgICAgICAgX3YkNCAhPT0gX3AkLl92JDQgJiYgc2V0QXR0cmlidXRlKF9lbCQ1LCBcImNsYXNzXCIsIF9wJC5fdiQ0ID0gX3YkNCk7XG4gICAgICAgICAgX3YkNSAhPT0gX3AkLl92JDUgJiYgc2V0QXR0cmlidXRlKF9lbCQ2LCBcImZpbGxcIiwgX3AkLl92JDUgPSBfdiQ1KTtcbiAgICAgICAgICBfdiQ2ICE9PSBfcCQuX3YkNiAmJiBzZXRBdHRyaWJ1dGUoX2VsJDcsIFwiZmlsbFwiLCBfcCQuX3YkNiA9IF92JDYpO1xuICAgICAgICAgIHJldHVybiBfcCQ7XG4gICAgICAgIH0sIHtcbiAgICAgICAgICBfdiQ0OiB2b2lkIDAsXG4gICAgICAgICAgX3YkNTogdm9pZCAwLFxuICAgICAgICAgIF92JDY6IHZvaWQgMFxuICAgICAgICB9KTtcbiAgICAgICAgcmV0dXJuIF9lbCQ1O1xuICAgICAgfSkoKSA6ICgoKSA9PiB7XG4gICAgICAgIGNvbnN0IF9lbCQ4ID0gX3RtcGwkMyQyLmNsb25lTm9kZSh0cnVlKSwgX2VsJDkgPSBfZWwkOC5maXJzdENoaWxkLCBfZWwkMTAgPSBfZWwkOS5uZXh0U2libGluZztcbiAgICAgICAgY3JlYXRlUmVuZGVyRWZmZWN0KChfcCQpID0+IHtcbiAgICAgICAgICBjb25zdCBfdiQ3ID0gcHJvcHMuY2xhc3MsIF92JDggPSBmaWxsKCksIF92JDkgPSB0aGVtZS5jb2xvcnMuY29uc3RhbnQud2hpdGU7XG4gICAgICAgICAgX3YkNyAhPT0gX3AkLl92JDcgJiYgc2V0QXR0cmlidXRlKF9lbCQ4LCBcImNsYXNzXCIsIF9wJC5fdiQ3ID0gX3YkNyk7XG4gICAgICAgICAgX3YkOCAhPT0gX3AkLl92JDggJiYgc2V0QXR0cmlidXRlKF9lbCQ5LCBcImZpbGxcIiwgX3AkLl92JDggPSBfdiQ4KTtcbiAgICAgICAgICBfdiQ5ICE9PSBfcCQuX3YkOSAmJiBzZXRBdHRyaWJ1dGUoX2VsJDEwLCBcImZpbGxcIiwgX3AkLl92JDkgPSBfdiQ5KTtcbiAgICAgICAgICByZXR1cm4gX3AkO1xuICAgICAgICB9LCB7XG4gICAgICAgICAgX3YkNzogdm9pZCAwLFxuICAgICAgICAgIF92JDg6IHZvaWQgMCxcbiAgICAgICAgICBfdiQ5OiB2b2lkIDBcbiAgICAgICAgfSk7XG4gICAgICAgIHJldHVybiBfZWwkODtcbiAgICAgIH0pKCk7XG4gICAgfSkoKTtcbiAgfSkoKSk7XG59O1xuY29uc3QgX3RtcGwkJG8gPSAvKiBAX19QVVJFX18gKi8gdGVtcGxhdGUkMShgPHN2ZyB3aWR0aD1cIjcyXCIgaGVpZ2h0PVwiNzJcIiB2aWV3Qm94PVwiMCAwIDcyIDcyXCIgZmlsbD1cIm5vbmVcIiB4bWxucz1cImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXCI+PGNpcmNsZSBjeD1cIjM2XCIgY3k9XCIzNlwiIHI9XCIzM1wiPjwvY2lyY2xlPjxwYXRoIGQ9XCJNMjQuMDg1OCAyNi45MTQyQzIzLjMwNDcgMjYuMTMzMiAyMy4zMDQ3IDI0Ljg2NjggMjQuMDg1OCAyNC4wODU4QzI0Ljg2NjggMjMuMzA0NyAyNi4xMzMyIDIzLjMwNDcgMjYuOTE0MiAyNC4wODU4TDM2IDMzLjE3MTZMNDUuMDg1OCAyNC4wODU4QzQ1Ljg2NjggMjMuMzA0NyA0Ny4xMzMyIDIzLjMwNDcgNDcuOTE0MiAyNC4wODU4QzQ4LjY5NTMgMjQuODY2OCA0OC42OTUzIDI2LjEzMzIgNDcuOTE0MiAyNi45MTQyTDM4LjgyODQgMzZMNDcuOTE0MiA0NS4wODU4QzQ4LjY5NTMgNDUuODY2OCA0OC42OTUzIDQ3LjEzMzIgNDcuOTE0MiA0Ny45MTQyQzQ3LjEzMzIgNDguNjk1MyA0NS44NjY4IDQ4LjY5NTMgNDUuMDg1OCA0Ny45MTQyTDM2IDM4LjgyODRMMjYuOTE0MiA0Ny45MTQyQzI2LjEzMzIgNDguNjk1MyAyNC44NjY4IDQ4LjY5NTMgMjQuMDg1OCA0Ny45MTQyQzIzLjMwNDcgNDcuMTMzMiAyMy4zMDQ3IDQ1Ljg2NjggMjQuMDg1OCA0NS4wODU4TDMzLjE3MTYgMzZMMjQuMDg1OCAyNi45MTQyWlwiPjwvcGF0aD48L3N2Zz5gKSwgX3RtcGwkMiQyID0gLyogQF9fUFVSRV9fICovIHRlbXBsYXRlJDEoYDxzdmcgeG1sbnM9XCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wiIHdpZHRoPVwiNDhcIiBoZWlnaHQ9XCI0OFwiIHZpZXdCb3g9XCIwIDAgNDggNDhcIiBmaWxsPVwibm9uZVwiPjxjaXJjbGUgY3g9XCIyNFwiIGN5PVwiMjQuMDAxXCIgcj1cIjIyXCI+PC9jaXJjbGU+PHBhdGggZD1cIk0yNCAyNC4wMDFMMzEuNSAxNi41MDFNMjQgMjQuMDAxTDE2LjUgMTYuNTAxTTI0IDI0LjAwMUwxNi41IDMxLjUwMU0yNCAyNC4wMDFMMzEuNSAzMS41MDFcIiBzdHJva2Utd2lkdGg9XCIzXCIgc3Ryb2tlLWxpbmVjYXA9XCJyb3VuZFwiIHN0cm9rZS1saW5lam9pbj1cInJvdW5kXCI+PC9wYXRoPjwvc3ZnPmApLCBfdG1wbCQzJDEgPSAvKiBAX19QVVJFX18gKi8gdGVtcGxhdGUkMShgPHN2ZyB3aWR0aD1cIjI0XCIgaGVpZ2h0PVwiMjRcIiB2aWV3Qm94PVwiMCAwIDI0IDI0XCIgZmlsbD1cIm5vbmVcIiB4bWxucz1cImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXCI+PGNpcmNsZSBjeD1cIjEyXCIgY3k9XCIxMlwiIHI9XCIxMVwiPjwvY2lyY2xlPjxwYXRoIGQ9XCJNNy44NjM2MSA5LjEzNjRDNy41MTIxNCA4Ljc4NDkzIDcuNTEyMTQgOC4yMTUwOCA3Ljg2MzYxIDcuODYzNjFDOC4yMTUwOCA3LjUxMjE0IDguNzg0OTMgNy41MTIxNCA5LjEzNjQgNy44NjM2MUwxMiAxMC43MjcyTDE0Ljg2MzYgNy44NjM2MUMxNS4yMTUxIDcuNTEyMTQgMTUuNzg0OSA3LjUxMjE0IDE2LjEzNjQgNy44NjM2MUMxNi40ODc5IDguMjE1MDggMTYuNDg3OSA4Ljc4NDkzIDE2LjEzNjQgOS4xMzY0TDEzLjI3MjggMTJMMTYuMTM2NCAxNC44NjM2QzE2LjQ4NzkgMTUuMjE1MSAxNi40ODc5IDE1Ljc4NDkgMTYuMTM2NCAxNi4xMzY0QzE1Ljc4NDkgMTYuNDg3OSAxNS4yMTUxIDE2LjQ4NzkgMTQuODYzNiAxNi4xMzY0TDEyIDEzLjI3MjhMOS4xMzY0IDE2LjEzNjRDOC43ODQ5MyAxNi40ODc5IDguMjE1MDggMTYuNDg3OSA3Ljg2MzYxIDE2LjEzNjRDNy41MTIxNCAxNS43ODQ5IDcuNTEyMTQgMTUuMjE1MSA3Ljg2MzYxIDE0Ljg2MzZMMTAuNzI3MiAxMkw3Ljg2MzYxIDkuMTM2NFpcIj48L3BhdGg+PC9zdmc+YCk7XG5jb25zdCBFcnJvckljb24gPSAocHJvcHMpID0+IHtcbiAgY29uc3QgdGhlbWUgPSB1c2VUaGVtZSgpO1xuICBjb25zdCBzaXplID0gKCkgPT4gcHJvcHMuc2l6ZSB8fCBcIm1cIjtcbiAgY29uc3QgZmlsbCA9ICgpID0+IHByb3BzLmZpbGwgfHwgdGhlbWUuY29sb3JzLmljb24uZXJyb3I7XG4gIHJldHVybiBjcmVhdGVNZW1vKCgoKSA9PiB7XG4gICAgY29uc3QgX2MkID0gY3JlYXRlTWVtbygoKSA9PiBzaXplKCkgPT09IFwibVwiKTtcbiAgICByZXR1cm4gKCkgPT4gX2MkKCkgPyAoKCkgPT4ge1xuICAgICAgY29uc3QgX2VsJCA9IF90bXBsJCRvLmNsb25lTm9kZSh0cnVlKSwgX2VsJDIgPSBfZWwkLmZpcnN0Q2hpbGQsIF9lbCQzID0gX2VsJDIubmV4dFNpYmxpbmc7XG4gICAgICBjcmVhdGVSZW5kZXJFZmZlY3QoKF9wJCkgPT4ge1xuICAgICAgICBjb25zdCBfdiQgPSBwcm9wcy5jbGFzcywgX3YkMiA9IGZpbGwoKSwgX3YkMyA9IHRoZW1lLmNvbG9ycy5jb25zdGFudC53aGl0ZTtcbiAgICAgICAgX3YkICE9PSBfcCQuX3YkICYmIHNldEF0dHJpYnV0ZShfZWwkLCBcImNsYXNzXCIsIF9wJC5fdiQgPSBfdiQpO1xuICAgICAgICBfdiQyICE9PSBfcCQuX3YkMiAmJiBzZXRBdHRyaWJ1dGUoX2VsJDIsIFwiZmlsbFwiLCBfcCQuX3YkMiA9IF92JDIpO1xuICAgICAgICBfdiQzICE9PSBfcCQuX3YkMyAmJiBzZXRBdHRyaWJ1dGUoX2VsJDMsIFwiZmlsbFwiLCBfcCQuX3YkMyA9IF92JDMpO1xuICAgICAgICByZXR1cm4gX3AkO1xuICAgICAgfSwge1xuICAgICAgICBfdiQ6IHZvaWQgMCxcbiAgICAgICAgX3YkMjogdm9pZCAwLFxuICAgICAgICBfdiQzOiB2b2lkIDBcbiAgICAgIH0pO1xuICAgICAgcmV0dXJuIF9lbCQ7XG4gICAgfSkoKSA6ICgoKSA9PiB7XG4gICAgICBjb25zdCBfYyQyID0gY3JlYXRlTWVtbygoKSA9PiBzaXplKCkgPT09IFwic1wiKTtcbiAgICAgIHJldHVybiAoKSA9PiBfYyQyKCkgPyAoKCkgPT4ge1xuICAgICAgICBjb25zdCBfZWwkNCA9IF90bXBsJDIkMi5jbG9uZU5vZGUodHJ1ZSksIF9lbCQ1ID0gX2VsJDQuZmlyc3RDaGlsZCwgX2VsJDYgPSBfZWwkNS5uZXh0U2libGluZztcbiAgICAgICAgY3JlYXRlUmVuZGVyRWZmZWN0KChfcCQpID0+IHtcbiAgICAgICAgICBjb25zdCBfdiQ0ID0gcHJvcHMuY2xhc3MsIF92JDUgPSBmaWxsKCksIF92JDYgPSB0aGVtZS5jb2xvcnMuY29uc3RhbnQud2hpdGU7XG4gICAgICAgICAgX3YkNCAhPT0gX3AkLl92JDQgJiYgc2V0QXR0cmlidXRlKF9lbCQ0LCBcImNsYXNzXCIsIF9wJC5fdiQ0ID0gX3YkNCk7XG4gICAgICAgICAgX3YkNSAhPT0gX3AkLl92JDUgJiYgc2V0QXR0cmlidXRlKF9lbCQ1LCBcImZpbGxcIiwgX3AkLl92JDUgPSBfdiQ1KTtcbiAgICAgICAgICBfdiQ2ICE9PSBfcCQuX3YkNiAmJiBzZXRBdHRyaWJ1dGUoX2VsJDYsIFwic3Ryb2tlXCIsIF9wJC5fdiQ2ID0gX3YkNik7XG4gICAgICAgICAgcmV0dXJuIF9wJDtcbiAgICAgICAgfSwge1xuICAgICAgICAgIF92JDQ6IHZvaWQgMCxcbiAgICAgICAgICBfdiQ1OiB2b2lkIDAsXG4gICAgICAgICAgX3YkNjogdm9pZCAwXG4gICAgICAgIH0pO1xuICAgICAgICByZXR1cm4gX2VsJDQ7XG4gICAgICB9KSgpIDogKCgpID0+IHtcbiAgICAgICAgY29uc3QgX2VsJDcgPSBfdG1wbCQzJDEuY2xvbmVOb2RlKHRydWUpLCBfZWwkOCA9IF9lbCQ3LmZpcnN0Q2hpbGQsIF9lbCQ5ID0gX2VsJDgubmV4dFNpYmxpbmc7XG4gICAgICAgIGNyZWF0ZVJlbmRlckVmZmVjdCgoX3AkKSA9PiB7XG4gICAgICAgICAgY29uc3QgX3YkNyA9IHByb3BzLmNsYXNzLCBfdiQ4ID0gZmlsbCgpLCBfdiQ5ID0gdGhlbWUuY29sb3JzLmNvbnN0YW50LndoaXRlO1xuICAgICAgICAgIF92JDcgIT09IF9wJC5fdiQ3ICYmIHNldEF0dHJpYnV0ZShfZWwkNywgXCJjbGFzc1wiLCBfcCQuX3YkNyA9IF92JDcpO1xuICAgICAgICAgIF92JDggIT09IF9wJC5fdiQ4ICYmIHNldEF0dHJpYnV0ZShfZWwkOCwgXCJmaWxsXCIsIF9wJC5fdiQ4ID0gX3YkOCk7XG4gICAgICAgICAgX3YkOSAhPT0gX3AkLl92JDkgJiYgc2V0QXR0cmlidXRlKF9lbCQ5LCBcImZpbGxcIiwgX3AkLl92JDkgPSBfdiQ5KTtcbiAgICAgICAgICByZXR1cm4gX3AkO1xuICAgICAgICB9LCB7XG4gICAgICAgICAgX3YkNzogdm9pZCAwLFxuICAgICAgICAgIF92JDg6IHZvaWQgMCxcbiAgICAgICAgICBfdiQ5OiB2b2lkIDBcbiAgICAgICAgfSk7XG4gICAgICAgIHJldHVybiBfZWwkNztcbiAgICAgIH0pKCk7XG4gICAgfSkoKTtcbiAgfSkoKSk7XG59O1xuY29uc3QgX3RtcGwkJG4gPSAvKiBAX19QVVJFX18gKi8gdGVtcGxhdGUkMShgPHN2ZyB3aWR0aD1cIjI0XCIgaGVpZ2h0PVwiMjRcIiB2aWV3Qm94PVwiMCAwIDI0IDI0XCIgZmlsbD1cIm5vbmVcIiB4bWxucz1cImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXCI+PHBhdGggZD1cIk0xNS41NSA1Ljg1MTIzQzE4Ljk0NTkgNy44MTE4NCAyMC4xMDk0IDEyLjE1NDEgMTguMTQ4OCAxNS41NUMxNi4xODgyIDE4Ljk0NTkgMTEuODQ1OSAyMC4xMDk0IDguNDQ5OTggMTguMTQ4OEM4LjAxOTUyIDE3LjkwMDMgNy40NjkwOSAxOC4wNDc4IDcuMjIwNTYgMTguNDc4MkM2Ljk3MjAzIDE4LjkwODcgNy4xMTk1MiAxOS40NTkxIDcuNTQ5OTggMTkuNzA3NkMxMS44MDY4IDIyLjE2NTMgMTcuMjQ5OSAyMC43MDY4IDE5LjcwNzYgMTYuNDVDMjIuMTY1MyAxMi4xOTMyIDIwLjcwNjggNi43NTAwNSAxNi40NSA0LjI5MjM5QzEyLjE5MzIgMS44MzQ3MiA2Ljc1MDAzIDMuMjkzMjEgNC4yOTIzNiA3LjU1MDAxQzQuMDQzODMgNy45ODA0NyA0LjE5MTMyIDguNTMwOTEgNC42MjE3OCA4Ljc3OTQzQzUuMDUyMjQgOS4wMjc5NiA1LjYwMjY4IDguODgwNDggNS44NTEyIDguNDUwMDFDNy44MTE4MSA1LjA1NDEzIDEyLjE1NDEgMy44OTA2MiAxNS41NSA1Ljg1MTIzWlwiPjwvcGF0aD48L3N2Zz5gKSwgX3RtcGwkMiQxID0gLyogQF9fUFVSRV9fICovIHRlbXBsYXRlJDEoYDxzdmcgeG1sbnM9XCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wiIHdpZHRoPVwiNDRcIiBoZWlnaHQ9XCI0NFwiIHZpZXdCb3g9XCIwIDAgNDQgNDRcIiBmaWxsPVwibm9uZVwiPjxwYXRoIGZpbGwtcnVsZT1cImV2ZW5vZGRcIiBjbGlwLXJ1bGU9XCJldmVub2RkXCIgZD1cIk0yMiAyLjk5OTUxQzExLjUwNjYgMi45OTk1MSAzIDExLjUwNjEgMyAyMS45OTk1QzMgMzIuNDkyOSAxMS41MDY2IDQwLjk5OTUgMjIgNDAuOTk5NUMyMi44Mjg0IDQwLjk5OTUgMjMuNSA0MS42NzExIDIzLjUgNDIuNDk5NUMyMy41IDQzLjMyNzkgMjIuODI4NCA0My45OTk1IDIyIDQzLjk5OTVDOS44NDk3NCA0My45OTk1IDAgMzQuMTQ5OCAwIDIxLjk5OTVDMCA5Ljg0OTI1IDkuODQ5NzQgLTAuMDAwNDg4MjgxIDIyIC0wLjAwMDQ4ODI4MUMzNC4xNTAzIC0wLjAwMDQ4ODI4MSA0NCA5Ljg0OTI1IDQ0IDIxLjk5OTVDNDQgMjIuODI3OSA0My4zMjg0IDIzLjQ5OTUgNDIuNSAyMy40OTk1QzQxLjY3MTYgMjMuNDk5NSA0MSAyMi44Mjc5IDQxIDIxLjk5OTVDNDEgMTEuNTA2MSAzMi40OTM0IDIuOTk5NTEgMjIgMi45OTk1MVpcIj48L3BhdGg+PC9zdmc+YCksIF90bXBsJDMgPSAvKiBAX19QVVJFX18gKi8gdGVtcGxhdGUkMShgPHN2ZyB3aWR0aD1cIjcyXCIgaGVpZ2h0PVwiNzJcIiB2aWV3Qm94PVwiMCAwIDcyIDcyXCIgZmlsbD1cIm5vbmVcIiB4bWxucz1cImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXCI+PHBhdGggZD1cIk0yNCA1Ni43ODQ2QzM1LjQ3OSA2My40MTIgNTAuMTU3MiA1OS40NzkgNTYuNzg0NiA0Ny45OTk5QzYzLjQxMiAzNi41MjA5IDU5LjQ3OSAyMS44NDI3IDQ4IDE1LjIxNTNDMzYuNTIxIDguNTg3OTEgMjEuODQyOCAxMi41MjA5IDE1LjIxNTQgMjMuOTk5OVwiIHN0cm9rZS13aWR0aD1cIjRcIiBzdHJva2UtbGluZWNhcD1cInJvdW5kXCIgc3Ryb2tlLWxpbmVqb2luPVwicm91bmRcIj48L3BhdGg+PC9zdmc+YCk7XG5jb25zdCBMb2FkZXJJY29uID0gKHByb3BzKSA9PiB7XG4gIGNvbnN0IHRoZW1lID0gdXNlVGhlbWUoKTtcbiAgY29uc3Qgc2l6ZSA9ICgpID0+IHByb3BzLnNpemUgfHwgXCJ4c1wiO1xuICBjb25zdCBmaWxsID0gKCkgPT4gcHJvcHMuZmlsbCB8fCB0aGVtZS5jb2xvcnMuaWNvbi50ZXJ0aWFyeTtcbiAgY29uc3Qgcm90YXRlQW5pbWF0aW9uID0gaGBcbiAgICAgICAgMCUge1xuICAgICAgICAgIHRyYW5zZm9ybTogcm90YXRlKDBkZWcpO1xuICAgICAgICB9XG4gICAgICAgIDEwMCUge1xuICAgICAgICAgIHRyYW5zZm9ybTogcm90YXRlKDM2MGRlZyk7XG4gICAgICAgIH1cbiAgICBgO1xuICBjb25zdCBzdmdDbGFzcyA9IHVgXG4gICAgICAgIGFuaW1hdGlvbjogJHtyb3RhdGVBbmltYXRpb259IDFzIGxpbmVhciBpbmZpbml0ZTtcbiAgICBgO1xuICByZXR1cm4gY3JlYXRlTWVtbygoKCkgPT4ge1xuICAgIGNvbnN0IF9jJCA9IGNyZWF0ZU1lbW8oKCkgPT4gc2l6ZSgpID09PSBcInhzXCIpO1xuICAgIHJldHVybiAoKSA9PiBfYyQoKSA/ICgoKSA9PiB7XG4gICAgICBjb25zdCBfZWwkID0gX3RtcGwkJG4uY2xvbmVOb2RlKHRydWUpLCBfZWwkMiA9IF9lbCQuZmlyc3RDaGlsZDtcbiAgICAgIGNyZWF0ZVJlbmRlckVmZmVjdCgoX3AkKSA9PiB7XG4gICAgICAgIGNvbnN0IF92JCA9IGNuKHN2Z0NsYXNzLCBwcm9wcy5jbGFzcyksIF92JDIgPSBmaWxsKCk7XG4gICAgICAgIF92JCAhPT0gX3AkLl92JCAmJiBzZXRBdHRyaWJ1dGUoX2VsJCwgXCJjbGFzc1wiLCBfcCQuX3YkID0gX3YkKTtcbiAgICAgICAgX3YkMiAhPT0gX3AkLl92JDIgJiYgc2V0QXR0cmlidXRlKF9lbCQyLCBcImZpbGxcIiwgX3AkLl92JDIgPSBfdiQyKTtcbiAgICAgICAgcmV0dXJuIF9wJDtcbiAgICAgIH0sIHtcbiAgICAgICAgX3YkOiB2b2lkIDAsXG4gICAgICAgIF92JDI6IHZvaWQgMFxuICAgICAgfSk7XG4gICAgICByZXR1cm4gX2VsJDtcbiAgICB9KSgpIDogKCgpID0+IHtcbiAgICAgIGNvbnN0IF9jJDIgPSBjcmVhdGVNZW1vKCgpID0+IHNpemUoKSA9PT0gXCJzXCIpO1xuICAgICAgcmV0dXJuICgpID0+IF9jJDIoKSA/ICgoKSA9PiB7XG4gICAgICAgIGNvbnN0IF9lbCQzID0gX3RtcGwkMiQxLmNsb25lTm9kZSh0cnVlKSwgX2VsJDQgPSBfZWwkMy5maXJzdENoaWxkO1xuICAgICAgICBjcmVhdGVSZW5kZXJFZmZlY3QoKF9wJCkgPT4ge1xuICAgICAgICAgIGNvbnN0IF92JDMgPSBjbihzdmdDbGFzcywgcHJvcHMuY2xhc3MpLCBfdiQ0ID0gZmlsbCgpO1xuICAgICAgICAgIF92JDMgIT09IF9wJC5fdiQzICYmIHNldEF0dHJpYnV0ZShfZWwkMywgXCJjbGFzc1wiLCBfcCQuX3YkMyA9IF92JDMpO1xuICAgICAgICAgIF92JDQgIT09IF9wJC5fdiQ0ICYmIHNldEF0dHJpYnV0ZShfZWwkNCwgXCJmaWxsXCIsIF9wJC5fdiQ0ID0gX3YkNCk7XG4gICAgICAgICAgcmV0dXJuIF9wJDtcbiAgICAgICAgfSwge1xuICAgICAgICAgIF92JDM6IHZvaWQgMCxcbiAgICAgICAgICBfdiQ0OiB2b2lkIDBcbiAgICAgICAgfSk7XG4gICAgICAgIHJldHVybiBfZWwkMztcbiAgICAgIH0pKCkgOiAoKCkgPT4ge1xuICAgICAgICBjb25zdCBfZWwkNSA9IF90bXBsJDMuY2xvbmVOb2RlKHRydWUpLCBfZWwkNiA9IF9lbCQ1LmZpcnN0Q2hpbGQ7XG4gICAgICAgIGNyZWF0ZVJlbmRlckVmZmVjdCgoX3AkKSA9PiB7XG4gICAgICAgICAgY29uc3QgX3YkNSA9IGNuKHN2Z0NsYXNzLCBwcm9wcy5jbGFzcyksIF92JDYgPSBmaWxsKCk7XG4gICAgICAgICAgX3YkNSAhPT0gX3AkLl92JDUgJiYgc2V0QXR0cmlidXRlKF9lbCQ1LCBcImNsYXNzXCIsIF9wJC5fdiQ1ID0gX3YkNSk7XG4gICAgICAgICAgX3YkNiAhPT0gX3AkLl92JDYgJiYgc2V0QXR0cmlidXRlKF9lbCQ2LCBcInN0cm9rZVwiLCBfcCQuX3YkNiA9IF92JDYpO1xuICAgICAgICAgIHJldHVybiBfcCQ7XG4gICAgICAgIH0sIHtcbiAgICAgICAgICBfdiQ1OiB2b2lkIDAsXG4gICAgICAgICAgX3YkNjogdm9pZCAwXG4gICAgICAgIH0pO1xuICAgICAgICByZXR1cm4gX2VsJDU7XG4gICAgICB9KSgpO1xuICAgIH0pKCk7XG4gIH0pKCkpO1xufTtcbmNvbnN0IF90bXBsJCRtID0gLyogQF9fUFVSRV9fICovIHRlbXBsYXRlJDEoYDxzdmcgd2lkdGg9XCIxNThcIiBoZWlnaHQ9XCIyOFwiIHZpZXdCb3g9XCIwIDAgMTU4IDI4XCIgZmlsbD1cIm5vbmVcIiB4bWxucz1cImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXCI+PHBhdGggZmlsbC1ydWxlPVwiZXZlbm9kZFwiIGNsaXAtcnVsZT1cImV2ZW5vZGRcIiBkPVwiTTI4IDE0LjAwMUMyOCAyMS43MzMgMjEuNzMyIDI4LjAwMSAxNCAyOC4wMDFDNi4yNjgwMSAyOC4wMDEgMCAyMS43MzMgMCAxNC4wMDFDMCA2LjI2ODk5IDYuMjY4MDEgMC4wMDA5NzY1NjIgMTQgMC4wMDA5NzY1NjJDMjEuNzMyIDAuMDAwOTc2NTYyIDI4IDYuMjY4OTkgMjggMTQuMDAxWk05LjIxOTMxIDguMDAwOThIMTguNzgwMUgxOC43ODEzQzIwLjUzOCA4LjAwMDk4IDIxLjY1MjIgOS44OTk2NiAyMC43NjkxIDExLjQzMDJMMTQuODY3MiAyMS42NTc2QzE0LjQ4MjIgMjIuMzI1NCAxMy41MTcyIDIyLjMyNTQgMTMuMTMyMiAyMS42NTc2TDcuMjMxNTggMTEuNDMwMkM2LjM0NzIxIDkuODk3MjYgNy40NjE0IDguMDAwOTggOS4yMTkzMSA4LjAwMDk4Wk0xMy4xMjYyIDE4LjU4ODJWOS43NDgwNkg5LjIxODExQzguNzg5NzYgOS43NDgwNiA4LjUzNzA4IDEwLjIwMjkgOC43NDE2MyAxMC41NTc4TDExLjg0MjMgMTYuMTAzNUwxMy4xMjYyIDE4LjU4ODJaTTE2LjE1NTkgMTYuMTA0N0wxOS4yNTU0IDEwLjU1NjZDMTkuNDU5OSAxMC4yMDE3IDE5LjIwNzMgOS43NDY4NSAxOC43Nzg5IDkuNzQ2ODVIMTQuODcwOVYxOC41OTA2TDE2LjE1NTkgMTYuMTA0N1pcIiBmaWxsPVwiIzAwOThFQVwiPjwvcGF0aD48cGF0aCBkPVwiTTE4Ljc4MDIgOC4wMDA5OEg5LjIxOTM2QzcuNDYxNDUgOC4wMDA5OCA2LjM0NzI3IDkuODk3MjYgNy4yMzE2NCAxMS40MzAyTDEzLjEzMjIgMjEuNjU3NkMxMy41MTczIDIyLjMyNTQgMTQuNDgyMyAyMi4zMjU0IDE0Ljg2NzMgMjEuNjU3NkwyMC43NjkxIDExLjQzMDJDMjEuNjUyMyA5Ljg5OTY2IDIwLjUzODEgOC4wMDA5OCAxOC43ODE0IDguMDAwOThIMTguNzgwMlpNMTMuMTI3NCAxOC41OTA2TDExLjg0MjQgMTYuMTAzNUw4Ljc0MTY4IDEwLjU1NzhDOC41MzcxNCAxMC4yMDI5IDguNzg5ODEgOS43NDgwNiA5LjIxODE2IDkuNzQ4MDZIMTMuMTI2MlYxOC41OTE4TDEzLjEyNzQgMTguNTkwNlpNMTkuMjU1NSAxMC41NTY2TDE2LjE1NiAxNi4xMDQ3TDE0Ljg3MDkgMTguNTkwNlY5Ljc0Njg1SDE4Ljc3OUMxOS4yMDczIDkuNzQ2ODUgMTkuNDYgMTAuMjAxNyAxOS4yNTU1IDEwLjU1NjZaXCIgZmlsbD1cIndoaXRlXCI+PC9wYXRoPjxwYXRoIGZpbGwtcnVsZT1cImV2ZW5vZGRcIiBjbGlwLXJ1bGU9XCJldmVub2RkXCIgZD1cIk01MS43NDgzIDIyLjE5NjdDNTUuNzE4MiAyMi4xOTY3IDU4Ljk2MDkgMTguOTU0IDU4Ljk2MDkgMTQuOTg0MUM1OC45NjA5IDExLjAxNDIgNTUuNzE4MiA3Ljc3MTQ4IDUxLjc0ODMgNy43NzE0OEM0Ny43NTg4IDcuNzcxNDggNDQuNTM1NyAxMS4wMTQyIDQ0LjUzNTcgMTQuOTg0MUM0NC41MzU3IDE4Ljk1NCA0Ny43NTg4IDIyLjE5NjcgNTEuNzQ4MyAyMi4xOTY3Wk01MS43NDgzIDE5LjE3MDJDNDkuNDY4NiAxOS4xNzAyIDQ3LjY4MDIgMTcuMjQ0MiA0Ny42ODAyIDE0Ljk4NDFDNDcuNjgwMiAxMi43MjQgNDkuNDY4NiAxMC43OTggNTEuNzQ4MyAxMC43OThDNTQuMDA4NCAxMC43OTggNTUuNzk2OCAxMi43MjQgNTUuNzk2OCAxNC45ODQxQzU1Ljc5NjggMTcuMjQ0MiA1NC4wMDg0IDE5LjE3MDIgNTEuNzQ4MyAxOS4xNzAyWk0zNy4wNjk4IDIxLjk2MDlINDAuMjE0MlYxMC45OTQ2SDQ0LjI4NDNWOC4wMDczMkgzM1YxMC45OTQ2SDM3LjA2OThWMjEuOTYwOVpNNjkuOTM3OSA4LjAwNzMySDczLjA4MjNWMjEuOTYwOUg3MC4zODk5TDYzLjU5IDEzLjMzMzNWMjEuOTYwOUg2MC40NjUyVjguMDA3MzJINjMuMTU3Nkw2OS45Mzc5IDE2LjYxNTNWOC4wMDczMlpNNzkuMjI1OSAxNC45ODg3Qzc5LjIyNTkgMTAuOTIwMiA4Mi4zNTEgNy43NzUzOSA4Ni40OTgyIDcuNzc1MzlDODkuODU5MiA3Ljc3NTM5IDkyLjU1MTkgOS45NTcwOSA5My4yMjAyIDEyLjY4OTFIOTAuNzQzN0M5MC4xNTQgMTEuMDk3MSA4OC40NjM3IDkuOTk2NCA4Ni40OTgyIDkuOTk2NEM4My41ODkzIDkuOTk2NCA4MS41NDUyIDEyLjE3ODEgODEuNTQ1MiAxNC45ODg3QzgxLjU0NTIgMTcuNzk5NCA4My41ODkzIDE5Ljk4MTEgODYuNDk4MiAxOS45ODExQzg4LjQ2MzcgMTkuOTgxMSA5MC4xNTQgMTguODgwNCA5MC43NDM3IDE3LjI4ODRIOTMuMjIwMkM5Mi41NTE5IDIwLjAyMDQgODkuODU5MiAyMi4yMDIxIDg2LjQ5ODIgMjIuMjAyMUM4Mi4zNTEgMjIuMjAyMSA3OS4yMjU5IDE5LjA1NzMgNzkuMjI1OSAxNC45ODg3Wk0xMDQuNTg0IDE3LjA1MjVDMTA0LjU4NCAxOS45MDI1IDEwMi4zNDMgMjIuMTYyOCA5OS40MzQyIDIyLjE2MjhDOTYuNTI1MyAyMi4xNjI4IDk0LjI4NDYgMTkuOTAyNSA5NC4yODQ2IDE3LjA1MjVDOTQuMjg0NiAxNC4yMDI1IDk2LjUyNTMgMTEuOTQyMiA5OS40MzQyIDExLjk0MjJDMTAyLjM0MyAxMS45NDIyIDEwNC41ODQgMTQuMjAyNSAxMDQuNTg0IDE3LjA1MjVaTTk2LjQ2NjMgMTcuMDUyNUM5Ni40NjYzIDE4LjgwMTggOTcuNjg0OSAyMC4xNTggOTkuNDM0MiAyMC4xNThDMTAxLjE2NCAyMC4xNTggMTAyLjM4MiAxOC44MDE4IDEwMi4zODIgMTcuMDUyNUMxMDIuMzgyIDE1LjMwMzIgMTAxLjE2NCAxMy45NDcgOTkuNDM0MiAxMy45NDdDOTcuNjg0OSAxMy45NDcgOTYuNDY2MyAxNS4zMDMyIDk2LjQ2NjMgMTcuMDUyNVpNMTA4LjYyNiAxMi4xMzg4SDEwNi40NjNWMjEuOTY2MkgxMDguNjI2VjE3LjEzMTFDMTA4LjYyNiAxNS4wMjgxIDEwOS43MjYgMTMuOTA3NyAxMTEuMTYxIDEzLjkwNzdDMTEyLjQxOSAxMy45MDc3IDExMy4yMDUgMTQuODUxMiAxMTMuMjA1IDE2LjQwMzlWMjEuOTY2MkgxMTUuMzY3VjE2LjA1MDFDMTE1LjM2NyAxMy41NTM5IDExMy44OTMgMTEuOTQyMiAxMTEuNjEzIDExLjk0MjJDMTEwLjMzNSAxMS45NDIyIDEwOS4yMTUgMTIuNDkyNiAxMDguNjI2IDEzLjQ3NTNWMTIuMTM4OFpNMTE3LjgzOSAxMi4xMzg4SDEyMC4wMDFWMTMuNDc1M0MxMjAuNTkgMTIuNDkyNiAxMjEuNzExIDExLjk0MjIgMTIyLjk4OCAxMS45NDIyQzEyNS4yNjggMTEuOTQyMiAxMjYuNzQyIDEzLjU1MzkgMTI2Ljc0MiAxNi4wNTAxVjIxLjk2NjJIMTI0LjU4VjE2LjQwMzlDMTI0LjU4IDE0Ljg1MTIgMTIzLjc5NCAxMy45MDc3IDEyMi41MzYgMTMuOTA3N0MxMjEuMTAxIDEzLjkwNzcgMTIwLjAwMSAxNS4wMjgxIDEyMC4wMDEgMTcuMTMxMVYyMS45NjYySDExNy44MzlWMTIuMTM4OFpNMTMzLjU1OCAyMi4xNjI4QzEzNi4wNTQgMjIuMTYyOCAxMzcuODIzIDIwLjcyOCAxMzguMzczIDE4Ljg4MDRIMTM2LjExM0MxMzUuNjYxIDE5LjgyMzggMTM0LjcxNyAyMC4yNTYzIDEzMy42MzYgMjAuMjU2M0MxMzEuODg3IDIwLjI1NjMgMTMwLjc0NyAxOS4wNzcgMTMwLjY2OCAxNy41ODMySDEzOC40OTFDMTM4LjY4OCAxNC4yNDE5IDEzNi41ODUgMTEuOTQyMiAxMzMuNTc3IDExLjk0MjJDMTMwLjU1MSAxMS45NDIyIDEyOC41MjYgMTQuMTQzNiAxMjguNTI2IDE3LjA1MjVDMTI4LjUyNiAyMC4wMDA3IDEzMC42MjkgMjIuMTYyOCAxMzMuNTU4IDIyLjE2MjhaTTEzMC43NDcgMTYuMDUwMUMxMzEuMDQyIDE0LjUzNjcgMTMyLjE2MiAxMy43NTA1IDEzMy41MTggMTMuNzUwNUMxMzQuNzE3IDEzLjc1MDUgMTM1LjgzOCAxNC40NTgxIDEzNi4xNzIgMTYuMDUwMUgxMzAuNzQ3Wk0xNDkuODUxIDE4LjM2OTRDMTQ5LjMyIDIwLjU1MTEgMTQ3LjQ1MyAyMi4xNjI4IDE0NC44NTkgMjIuMTYyOEMxNDEuODcxIDIyLjE2MjggMTM5LjcwOSAxOS44ODI4IDEzOS43MDkgMTcuMDUyNUMxMzkuNzA5IDE0LjIyMjIgMTQxLjg3MSAxMS45NDIyIDE0NC44NTkgMTEuOTQyMkMxNDcuNDUzIDExLjk0MjIgMTQ5LjMyIDEzLjU1MzkgMTQ5Ljg1MSAxNS43MzU2SDE0Ny41NzFDMTQ3LjE3OCAxNC42NzQzIDE0Ni4yMTUgMTMuOTA3NyAxNDQuODU5IDEzLjkwNzdDMTQzLjEwOSAxMy45MDc3IDE0MS45MSAxNS4yMjQ2IDE0MS45MSAxNy4wNTI1QzE0MS45MSAxOC44ODA0IDE0My4xMDkgMjAuMTk3MyAxNDQuODU5IDIwLjE5NzNDMTQ2LjIxNSAyMC4xOTczIDE0Ny4xNzggMTkuNDMwNyAxNDcuNTcxIDE4LjM2OTRIMTQ5Ljg1MVpNMTU1Ljc1IDIyLjA2NDVDMTU2LjQxOCAyMi4wNjQ1IDE1Ni45MjkgMjEuOTg1OSAxNTcuMzYyIDIxLjg0ODNWMTkuOTIyMUMxNTcuMDQ3IDIwLjA0MDEgMTU2LjYxNSAyMC4xMTg3IDE1Ni4yMDIgMjAuMTE4N0MxNTUuMDgyIDIwLjExODcgMTU0LjU1MSAxOS42NjY2IDE1NC41NTEgMTguNDQ4VjE0LjA2NUgxNTcuMzYyVjEyLjEzODhIMTU0LjU1MVY5LjQwNjc1SDE1Mi4zODlWMTIuMTM4OEgxNTAuMzQ1VjE0LjA2NUgxNTIuMzg5VjE4LjgwMThDMTUyLjM4OSAyMS4wMjI4IDE1My44NjMgMjIuMDY0NSAxNTUuNzUgMjIuMDY0NVpcIj48L3BhdGg+PC9zdmc+YCk7XG5jb25zdCBUb25Db25uZWN0QnJhbmQgPSAoKSA9PiB7XG4gIGNvbnN0IHRoZW1lID0gdXNlVGhlbWUoKTtcbiAgY29uc3QgZmlsbCA9ICgpID0+IHRoZW1lLnRoZW1lID09PSBUSEVNRS5EQVJLID8gdGhlbWUuY29sb3JzLmNvbnN0YW50LndoaXRlIDogdGhlbWUuY29sb3JzLmNvbnN0YW50LmJsYWNrO1xuICByZXR1cm4gKCgpID0+IHtcbiAgICBjb25zdCBfZWwkID0gX3RtcGwkJG0uY2xvbmVOb2RlKHRydWUpLCBfZWwkMiA9IF9lbCQuZmlyc3RDaGlsZCwgX2VsJDMgPSBfZWwkMi5uZXh0U2libGluZywgX2VsJDQgPSBfZWwkMy5uZXh0U2libGluZztcbiAgICBjcmVhdGVSZW5kZXJFZmZlY3QoKCkgPT4gc2V0QXR0cmlidXRlKF9lbCQ0LCBcImZpbGxcIiwgZmlsbCgpKSk7XG4gICAgcmV0dXJuIF9lbCQ7XG4gIH0pKCk7XG59O1xuY29uc3QgX3RtcGwkJGwgPSAvKiBAX19QVVJFX18gKi8gdGVtcGxhdGUkMShgPHN2ZyB4bWxucz1cImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXCIgd2lkdGg9XCIxNlwiIGhlaWdodD1cIjE2XCIgdmlld0JveD1cIjAgMCAxNiAxNlwiIGZpbGw9XCJub25lXCI+PHBhdGggZmlsbC1ydWxlPVwiZXZlbm9kZFwiIGNsaXAtcnVsZT1cImV2ZW5vZGRcIiBkPVwiTTUuNTY2MDggNC40MjU4NEM1LjgyNTI3IDMuMzIxNTggNi44MTc2IDIuNSA4LjAwMDAxIDIuNUM5LjM4MDcyIDIuNSAxMC41IDMuNjE5MjkgMTAuNSA1QzEwLjUgNS42MzAyNiAxMC4zMzkxIDYuMDM4NiAxMC4xMjY0IDYuMzQ0NTVDOS45MDAxOCA2LjY2OTkzIDkuNTg1NjEgNi45MjQ3OCA5LjE4ODY0IDcuMjA4NzdDOS4xMjU3OSA3LjI1MzcyIDkuMDU4NzMgNy4zMDAyNSA4Ljk4ODcgNy4zNDg4M0M4LjI3MzkyIDcuODQ0NzIgNy4yNTAwMSA4LjU1NTA3IDcuMjUwMDEgMTBWMTAuMjVDNy4yNTAwMSAxMC42NjQyIDcuNTg1OCAxMSA4LjAwMDAxIDExQzguNDE0MjIgMTEgOC43NTAwMSAxMC42NjQyIDguNzUwMDEgMTAuMjVWMTBDOC43NTAwMSA5LjM2NTAyIDkuMTA3NzcgOS4xMDk2IDkuOTQ1NTQgOC41MTE0OUwxMC4wNjE0IDguNDI4NzNDMTAuNDc2OSA4LjEzMTQ3IDEwLjk3NDggNy43NTE5NCAxMS4zNTggNy4yMDA3NkMxMS43NTQ3IDYuNjMwMTUgMTIgNS45MTk3MyAxMiA1QzEyIDIuNzkwODYgMTAuMjA5MSAxIDguMDAwMDEgMUM2LjEwNTY0IDEgNC41MjA1IDIuMzE2MTUgNC4xMDU3NyA0LjA4MzA4QzQuMDExMTIgNC40ODYzNCA0LjI2MTI5IDQuODg5OTcgNC42NjQ1NCA0Ljk4NDYyQzUuMDY3OCA1LjA3OTI3IDUuNDcxNDMgNC44MjkxIDUuNTY2MDggNC40MjU4NFpNOC4wMDAwMSAxNUM4LjYwNzUyIDE1IDkuMTAwMDEgMTQuNTA3NSA5LjEwMDAxIDEzLjlDOS4xMDAwMSAxMy4yOTI1IDguNjA3NTIgMTIuOCA4LjAwMDAxIDEyLjhDNy4zOTI0OSAxMi44IDYuOTAwMDEgMTMuMjkyNSA2LjkwMDAxIDEzLjlDNi45MDAwMSAxNC41MDc1IDcuMzkyNDkgMTUgOC4wMDAwMSAxNVpcIj48L3BhdGg+PC9zdmc+YCk7XG5jb25zdCBRdWVzdGlvbkljb24gPSAocHJvcHMpID0+IHtcbiAgY29uc3QgdGhlbWUgPSB1c2VUaGVtZSgpO1xuICBjb25zdCBmaWxsID0gKCkgPT4gcHJvcHMuZmlsbCB8fCB0aGVtZS5jb2xvcnMuaWNvbi5zZWNvbmRhcnk7XG4gIHJldHVybiAoKCkgPT4ge1xuICAgIGNvbnN0IF9lbCQgPSBfdG1wbCQkbC5jbG9uZU5vZGUodHJ1ZSksIF9lbCQyID0gX2VsJC5maXJzdENoaWxkO1xuICAgIGNyZWF0ZVJlbmRlckVmZmVjdCgoKSA9PiBzZXRBdHRyaWJ1dGUoX2VsJDIsIFwiZmlsbFwiLCBmaWxsKCkpKTtcbiAgICByZXR1cm4gX2VsJDtcbiAgfSkoKTtcbn07XG5jb25zdCBfdG1wbCQkayA9IC8qIEBfX1BVUkVfXyAqLyB0ZW1wbGF0ZSQxKGA8c3ZnIHhtbG5zPVwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcIiB3aWR0aD1cIjE2XCIgaGVpZ2h0PVwiMTZcIiB2aWV3Qm94PVwiMCAwIDE2IDE2XCIgZmlsbD1cIm5vbmVcIj48cGF0aCBmaWxsLXJ1bGU9XCJldmVub2RkXCIgY2xpcC1ydWxlPVwiZXZlbm9kZFwiIGQ9XCJNOS45ODE1NiA4Ljc1QzkuODQ4NTQgMTEuNDMyOCA5LjAxMjA2IDEzLjUgOCAxMy41QzYuOTg3OTQgMTMuNSA2LjE1MTQ2IDExLjQzMjggNi4wMTg0NCA4Ljc1SDkuOTgxNTZaTTExLjQ4MzIgOC43NUMxMS40MjE3IDEwLjExNTUgMTEuMTkyOSAxMS4zODY5IDEwLjgyMzkgMTIuNDAxN0MxMC43NzM0IDEyLjU0MDUgMTAuNzE4OCAxMi42Nzg5IDEwLjY1OTUgMTIuODE1NEMxMi4xNDU0IDExLjk5MyAxMy4yMTAzIDEwLjUwMjkgMTMuNDQ5MyA4Ljc1SDExLjQ4MzJaTTEzLjQ0OTMgNy4yNUgxMS40ODMyQzExLjQyMTcgNS44ODQ1MyAxMS4xOTI5IDQuNjEzMTQgMTAuODIzOSAzLjU5ODNDMTAuNzczNCAzLjQ1OTUgMTAuNzE4OCAzLjMyMTExIDEwLjY1OTUgMy4xODQ1OUMxMi4xNDU0IDQuMDA2OTcgMTMuMjEwMyA1LjQ5NzA5IDEzLjQ0OTMgNy4yNVpNOS45ODE1NiA3LjI1SDYuMDE4NDRDNi4xNTE0NCA0LjU2NzY0IDYuOTg3NjkgMi41MDA2MiA3Ljk5OTU1IDIuNUg4QzkuMDEyMDYgMi41IDkuODQ4NTQgNC41NjcyNCA5Ljk4MTU2IDcuMjVaTTQuNTE2NzggNy4yNUM0LjU3ODI2IDUuODg0NTMgNC44MDcwNiA0LjYxMzE0IDUuMTc2MSAzLjU5ODNDNS4yMjY1NyAzLjQ1OTUgNS4yODEyNCAzLjMyMTExIDUuMzQwNSAzLjE4NDU5QzMuODU0NjMgNC4wMDY5NyAyLjc4OTcyIDUuNDk3MDkgMi41NTA3MSA3LjI1SDQuNTE2NzhaTTIuNTUwNzEgOC43NUMyLjc4OTcyIDEwLjUwMjkgMy44NTQ2MyAxMS45OTMgNS4zNDA1IDEyLjgxNTRDNS4yODEyNCAxMi42Nzg5IDUuMjI2NTcgMTIuNTQwNSA1LjE3NjEgMTIuNDAxN0M0LjgwNzA2IDExLjM4NjkgNC41NzgyNiAxMC4xMTU1IDQuNTE2NzggOC43NUgyLjU1MDcxWk0xNSA4QzE1IDExLjg2NiAxMS44NjYgMTUgOCAxNUM0LjEzNDAxIDE1IDEgMTEuODY2IDEgOEMxIDQuMTM0MDEgNC4xMzQwMSAxIDggMUMxMS44NjYgMSAxNSA0LjEzNDAxIDE1IDhaXCI+PC9wYXRoPjwvc3ZnPmApO1xuY29uc3QgQnJvd3Nlckljb24gPSAocHJvcHMpID0+IHtcbiAgY29uc3QgdGhlbWUgPSB1c2VUaGVtZSgpO1xuICBjb25zdCBmaWxsID0gKCkgPT4gcHJvcHMuZmlsbCB8fCB0aGVtZS5jb2xvcnMuaWNvbi5wcmltYXJ5O1xuICByZXR1cm4gKCgpID0+IHtcbiAgICBjb25zdCBfZWwkID0gX3RtcGwkJGsuY2xvbmVOb2RlKHRydWUpLCBfZWwkMiA9IF9lbCQuZmlyc3RDaGlsZDtcbiAgICBjcmVhdGVSZW5kZXJFZmZlY3QoKCkgPT4gc2V0QXR0cmlidXRlKF9lbCQyLCBcImZpbGxcIiwgZmlsbCgpKSk7XG4gICAgcmV0dXJuIF9lbCQ7XG4gIH0pKCk7XG59O1xuY29uc3QgX3RtcGwkJGogPSAvKiBAX19QVVJFX18gKi8gdGVtcGxhdGUkMShgPHN2ZyB4bWxucz1cImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXCIgd2lkdGg9XCIxNlwiIGhlaWdodD1cIjE2XCIgdmlld0JveD1cIjAgMCAxNiAxNlwiIGZpbGw9XCJub25lXCI+PHBhdGggZmlsbC1ydWxlPVwiZXZlbm9kZFwiIGNsaXAtcnVsZT1cImV2ZW5vZGRcIiBkPVwiTTIuNSA0LjhDMi41IDMuMTE5ODQgMi41IDIuMjc5NzYgMi44MjY5OCAxLjYzODAzQzMuMTE0NiAxLjA3MzU0IDMuNTczNTQgMC42MTQ2MDEgNC4xMzgwMyAwLjMyNjk4QzQuNzc5NzYgMCA1LjYxOTg0IDAgNy4zIDBIOC43QzEwLjM4MDIgMCAxMS4yMjAyIDAgMTEuODYyIDAuMzI2OThDMTIuNDI2NSAwLjYxNDYwMSAxMi44ODU0IDEuMDczNTQgMTMuMTczIDEuNjM4MDNDMTMuNSAyLjI3OTc2IDEzLjUgMy4xMTk4NCAxMy41IDQuOFYxMS4yQzEzLjUgMTIuODgwMiAxMy41IDEzLjcyMDIgMTMuMTczIDE0LjM2MkMxMi44ODU0IDE0LjkyNjUgMTIuNDI2NSAxNS4zODU0IDExLjg2MiAxNS42NzNDMTEuMjIwMiAxNiAxMC4zODAyIDE2IDguNyAxNkg3LjNDNS42MTk4NCAxNiA0Ljc3OTc2IDE2IDQuMTM4MDMgMTUuNjczQzMuNTczNTQgMTUuMzg1NCAzLjExNDYgMTQuOTI2NSAyLjgyNjk4IDE0LjM2MkMyLjUgMTMuNzIwMiAyLjUgMTIuODgwMiAyLjUgMTEuMlY0LjhaTTQgMy45QzQgMy4wNTk5MiA0IDIuNjM5ODggNC4xNjM0OSAyLjMxOTAxQzQuMzA3MyAyLjAzNjc3IDQuNTM2NzcgMS44MDczIDQuODE5MDEgMS42NjM0OUM1LjEzOTg4IDEuNSA1LjU1OTkyIDEuNSA2LjQgMS41SDkuNkMxMC40NDAxIDEuNSAxMC44NjAxIDEuNSAxMS4xODEgMS42NjM0OUMxMS40NjMyIDEuODA3MyAxMS42OTI3IDIuMDM2NzcgMTEuODM2NSAyLjMxOTAxQzEyIDIuNjM5ODggMTIgMy4wNTk5MiAxMiAzLjlWMTIuMUMxMiAxMi45NDAxIDEyIDEzLjM2MDEgMTEuODM2NSAxMy42ODFDMTEuNjkyNyAxMy45NjMyIDExLjQ2MzIgMTQuMTkyNyAxMS4xODEgMTQuMzM2NUMxMC44NjAxIDE0LjUgMTAuNDQwMSAxNC41IDkuNiAxNC41SDYuNEM1LjU1OTkyIDE0LjUgNS4xMzk4OCAxNC41IDQuODE5MDEgMTQuMzM2NUM0LjUzNjc3IDE0LjE5MjcgNC4zMDczIDEzLjk2MzIgNC4xNjM0OSAxMy42ODFDNCAxMy4zNjAxIDQgMTIuOTQwMSA0IDEyLjFWMy45Wk03IDIuNUM2LjU4NTc5IDIuNSA2LjI1IDIuODM1NzkgNi4yNSAzLjI1QzYuMjUgMy42NjQyMSA2LjU4NTc5IDQgNyA0SDlDOS40MTQyMSA0IDkuNzUgMy42NjQyMSA5Ljc1IDMuMjVDOS43NSAyLjgzNTc5IDkuNDE0MjEgMi41IDkgMi41SDdaXCI+PC9wYXRoPjwvc3ZnPmApO1xuY29uc3QgTW9iaWxlSWNvbiA9IChwcm9wcykgPT4ge1xuICBjb25zdCB0aGVtZSA9IHVzZVRoZW1lKCk7XG4gIGNvbnN0IGZpbGwgPSAoKSA9PiBwcm9wcy5maWxsIHx8IHRoZW1lLmNvbG9ycy5pY29uLnByaW1hcnk7XG4gIHJldHVybiAoKCkgPT4ge1xuICAgIGNvbnN0IF9lbCQgPSBfdG1wbCQkai5jbG9uZU5vZGUodHJ1ZSksIF9lbCQyID0gX2VsJC5maXJzdENoaWxkO1xuICAgIGNyZWF0ZVJlbmRlckVmZmVjdCgoKSA9PiBzZXRBdHRyaWJ1dGUoX2VsJDIsIFwiZmlsbFwiLCBmaWxsKCkpKTtcbiAgICByZXR1cm4gX2VsJDtcbiAgfSkoKTtcbn07XG5jb25zdCBfdG1wbCQkaSA9IC8qIEBfX1BVUkVfXyAqLyB0ZW1wbGF0ZSQxKGA8c3ZnIHhtbG5zPVwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcIiB3aWR0aD1cIjE2XCIgaGVpZ2h0PVwiMTZcIiB2aWV3Qm94PVwiMCAwIDE2IDE2XCIgZmlsbD1cIm5vbmVcIj48cGF0aCBmaWxsLXJ1bGU9XCJldmVub2RkXCIgY2xpcC1ydWxlPVwiZXZlbm9kZFwiIGQ9XCJNMS41IDYuOEMxLjUgNS4xMTk4NCAxLjUgNC4yNzk3NiAxLjgyNjk4IDMuNjM4MDNDMi4xMTQ2IDMuMDczNTQgMi41NzM1NCAyLjYxNDYgMy4xMzgwMyAyLjMyNjk4QzMuNzc5NzYgMiA0LjYxOTg0IDIgNi4zIDJIOS43QzExLjM4MDIgMiAxMi4yMjAyIDIgMTIuODYyIDIuMzI2OThDMTMuNDI2NSAyLjYxNDYgMTMuODg1NCAzLjA3MzU0IDE0LjE3MyAzLjYzODAzQzE0LjUgNC4yNzk3NiAxNC41IDUuMTE5ODQgMTQuNSA2LjhWMTEuNUgxNS4yNUMxNS42NjQyIDExLjUgMTYgMTEuODM1OCAxNiAxMi4yNUMxNiAxMi42NjQyIDE1LjY2NDIgMTMgMTUuMjUgMTNIMC43NUMwLjMzNTc4NiAxMyAwIDEyLjY2NDIgMCAxMi4yNUMwIDExLjgzNTggMC4zMzU3ODYgMTEuNSAwLjc1IDExLjVIMS41VjYuOFpNMyAxMS41SDEzVjUuOUMxMyA1LjA1OTkyIDEzIDQuNjM5ODggMTIuODM2NSA0LjMxOTAxQzEyLjY5MjcgNC4wMzY3NyAxMi40NjMyIDMuODA3MyAxMi4xODEgMy42NjM0OUMxMS44NjAxIDMuNSAxMS40NDAxIDMuNSAxMC42IDMuNUg1LjRDNC41NTk5MiAzLjUgNC4xMzk4OCAzLjUgMy44MTkwMSAzLjY2MzQ5QzMuNTM2NzcgMy44MDczIDMuMzA3MyA0LjAzNjc3IDMuMTYzNDkgNC4zMTkwMUMzIDQuNjM5ODggMyA1LjA1OTkyIDMgNS45VjExLjVaXCI+PC9wYXRoPjwvc3ZnPmApO1xuY29uc3QgRGVza3RvcEljb24gPSAocHJvcHMpID0+IHtcbiAgY29uc3QgdGhlbWUgPSB1c2VUaGVtZSgpO1xuICBjb25zdCBmaWxsID0gKCkgPT4gcHJvcHMuZmlsbCB8fCB0aGVtZS5jb2xvcnMuaWNvbi5wcmltYXJ5O1xuICByZXR1cm4gKCgpID0+IHtcbiAgICBjb25zdCBfZWwkID0gX3RtcGwkJGkuY2xvbmVOb2RlKHRydWUpLCBfZWwkMiA9IF9lbCQuZmlyc3RDaGlsZDtcbiAgICBjcmVhdGVSZW5kZXJFZmZlY3QoKCkgPT4gc2V0QXR0cmlidXRlKF9lbCQyLCBcImZpbGxcIiwgZmlsbCgpKSk7XG4gICAgcmV0dXJuIF9lbCQ7XG4gIH0pKCk7XG59O1xuY29uc3QgX3RtcGwkJGggPSAvKiBAX19QVVJFX18gKi8gdGVtcGxhdGUkMShgPHN2ZyB4bWxucz1cImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXCIgd2lkdGg9XCIxN1wiIGhlaWdodD1cIjE2XCIgdmlld0JveD1cIjAgMCAxNyAxNlwiIGZpbGw9XCJub25lXCI+PGcgY2xpcC1wYXRoPVwidXJsKCNjbGlwMF8zNjc2XzE2MDMpXCI+PHBhdGggZmlsbC1ydWxlPVwiZXZlbm9kZFwiIGNsaXAtcnVsZT1cImV2ZW5vZGRcIiBkPVwiTTE1LjUgMS4yNTA0OUMxNS41IDAuODM2Mjc1IDE1LjE2NDIgMC41MDA0ODggMTQuNzUgMC41MDA0ODhDMTQuMzM1OCAwLjUwMDQ4OCAxNCAwLjgzNjI3NSAxNCAxLjI1MDQ5VjMuNjcwMTJDMTIuNzE4NyAyLjA0NDg3IDEwLjczMTggMS4wMDA0OSA4LjUgMS4wMDA0OUM0LjYzNDAxIDEuMDAwNDkgMS41IDQuMTM0NSAxLjUgOC4wMDA0OUMxLjUgMTEuODY2NSA0LjYzNDAxIDE1LjAwMDUgOC41IDE1LjAwMDVDMTEuNjg0NCAxNS4wMDA1IDE0LjM3MDMgMTIuODc0OCAxNS4yMTk5IDkuOTY2NjFDMTUuMzM2MSA5LjU2OTAyIDE1LjEwNzkgOS4xNTI1NCAxNC43MTAzIDkuMDM2MzhDMTQuMzEyNyA4LjkyMDIzIDEzLjg5NjIgOS4xNDgzOCAxMy43ODAxIDkuNTQ1OTdDMTMuMTEyMyAxMS44MzE5IDExIDEzLjUwMDUgOC41IDEzLjUwMDVDNS40NjI0MyAxMy41MDA1IDMgMTEuMDM4MSAzIDguMDAwNDlDMyA0Ljk2MjkyIDUuNDYyNDMgMi41MDA0OSA4LjUgMi41MDA0OUMxMC4zMjEgMi41MDA0OSAxMS45MzYzIDMuMzg1NSAxMi45Mzc3IDQuNzUwNDlIMTAuNUMxMC4wODU4IDQuNzUwNDkgOS43NSA1LjA4NjI3IDkuNzUgNS41MDA0OUM5Ljc1IDUuOTE0NyAxMC4wODU4IDYuMjUwNDkgMTAuNSA2LjI1MDQ5SDE0Ljc1QzE1LjE2NDIgNi4yNTA0OSAxNS41IDUuOTE0NyAxNS41IDUuNTAwNDlWMS4yNTA0OVpcIj48L3BhdGg+PC9nPjxkZWZzPjxjbGlwUGF0aCBpZD1cImNsaXAwXzM2NzZfMTYwM1wiPjxyZWN0IHdpZHRoPVwiMTZcIiBoZWlnaHQ9XCIxNlwiIGZpbGw9XCJ3aGl0ZVwiIHRyYW5zZm9ybT1cInRyYW5zbGF0ZSgwLjUgMC4wMDA0ODgyODEpXCI+PC9yZWN0PjwvY2xpcFBhdGg+PC9kZWZzPjwvc3ZnPmApO1xuY29uc3QgUmV0cnlJY29uID0gKHByb3BzKSA9PiB7XG4gIGNvbnN0IHRoZW1lID0gdXNlVGhlbWUoKTtcbiAgY29uc3QgZmlsbCA9ICgpID0+IHByb3BzLmZpbGwgfHwgdGhlbWUuY29sb3JzLmFjY2VudDtcbiAgcmV0dXJuICgoKSA9PiB7XG4gICAgY29uc3QgX2VsJCA9IF90bXBsJCRoLmNsb25lTm9kZSh0cnVlKSwgX2VsJDIgPSBfZWwkLmZpcnN0Q2hpbGQsIF9lbCQzID0gX2VsJDIuZmlyc3RDaGlsZDtcbiAgICBjcmVhdGVSZW5kZXJFZmZlY3QoKCkgPT4gc2V0QXR0cmlidXRlKF9lbCQzLCBcImZpbGxcIiwgZmlsbCgpKSk7XG4gICAgcmV0dXJuIF9lbCQ7XG4gIH0pKCk7XG59O1xuY29uc3QgX3RtcGwkJGcgPSAvKiBAX19QVVJFX18gKi8gdGVtcGxhdGUkMShgPHN2ZyB4bWxucz1cImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXCIgd2lkdGg9XCIxNlwiIGhlaWdodD1cIjE2XCIgdmlld0JveD1cIjAgMCAxNiAxNlwiIGZpbGw9XCJub25lXCI+PHBhdGggZmlsbC1ydWxlPVwiZXZlbm9kZFwiIGNsaXAtcnVsZT1cImV2ZW5vZGRcIiBkPVwiTTEzIDQuMDYxMTlWNi43NTA1M0MxMyA3LjE2NDc0IDEzLjMzNTggNy41MDA1MyAxMy43NSA3LjUwMDUzQzE0LjE2NDIgNy41MDA1MyAxNC41IDcuMTY0NzQgMTQuNSA2Ljc1MDUzVjIuNzUwNTNMMTQuNSAyLjcyODA3QzE0LjUwMDEgMi42MzE5MSAxNC41MDAzIDIuNDk2MjcgMTQuNDg0MiAyLjM3NjI3QzE0LjQ2MzggMi4yMjUwMyAxNC40MDYzIDEuOTkyNjEgMTQuMjA3MSAxLjc5MzQyQzE0LjAwNzkgMS41OTQyMyAxMy43NzU1IDEuNTM2NyAxMy42MjQzIDEuNTE2MzdDMTMuNTA0MyAxLjUwMDIzIDEzLjM2ODYgMS41MDAzOSAxMy4yNzI1IDEuNTAwNTFMMTMuMjUgMS41MDA1M0g5LjI1QzguODM1NzkgMS41MDA1MyA4LjUgMS44MzYzMSA4LjUgMi4yNTA1M0M4LjUgMi42NjQ3NCA4LjgzNTc5IDMuMDAwNTMgOS4yNSAzLjAwMDUzSDExLjkzOTNMNy4yMTk2NyA3LjcyMDJDNi45MjY3OCA4LjAxMzA5IDYuOTI2NzggOC40ODc5NiA3LjIxOTY3IDguNzgwODZDNy41MTI1NiA5LjA3Mzc1IDcuOTg3NDQgOS4wNzM3NSA4LjI4MDMzIDguNzgwODZMMTMgNC4wNjExOVpNNS44NSAxLjUwMDUzSDUuODE5MDNINS44MTg5OUM1LjIxNTI4IDEuNTAwNTIgNC43MTcwMiAxLjUwMDUxIDQuMzExMTMgMS41MzM2N0MzLjg4OTU2IDEuNTY4MTIgMy41MDIwMyAxLjY0MjA0IDMuMTM4MDMgMS44Mjc1MUMyLjU3MzU0IDIuMTE1MTMgMi4xMTQ2IDIuNTc0MDcgMS44MjY5OCAzLjEzODU2QzEuNjQxNTEgMy41MDI1NiAxLjU2NzU5IDMuODkwMDkgMS41MzMxNSA0LjMxMTY2QzEuNDk5OTggNC43MTc1NSAxLjQ5OTk5IDUuMjE1ODEgMS41IDUuODE5NTNWNS44MTk1NVY1Ljg1MDUzVjEwLjE1MDVWMTAuMTgxNVYxMC4xODE1QzEuNDk5OTkgMTAuNzg1MiAxLjQ5OTk4IDExLjI4MzUgMS41MzMxNSAxMS42ODk0QzEuNTY3NTkgMTIuMTExIDEuNjQxNTEgMTIuNDk4NSAxLjgyNjk4IDEyLjg2MjVDMi4xMTQ2IDEzLjQyNyAyLjU3MzU0IDEzLjg4NTkgMy4xMzgwMyAxNC4xNzM1QzMuNTAyMDMgMTQuMzU5IDMuODg5NTYgMTQuNDMyOSA0LjMxMTEzIDE0LjQ2NzRDNC43MTcwMiAxNC41MDA1IDUuMjE1MjcgMTQuNTAwNSA1LjgxODk3IDE0LjUwMDVINS44MTkwMUg1Ljg1SDEwLjE1SDEwLjE4MUgxMC4xODFDMTAuNzg0NyAxNC41MDA1IDExLjI4MyAxNC41MDA1IDExLjY4ODkgMTQuNDY3NEMxMi4xMTA0IDE0LjQzMjkgMTIuNDk4IDE0LjM1OSAxMi44NjIgMTQuMTczNUMxMy40MjY1IDEzLjg4NTkgMTMuODg1NCAxMy40MjcgMTQuMTczIDEyLjg2MjVDMTQuMzU4NSAxMi40OTg1IDE0LjQzMjQgMTIuMTExIDE0LjQ2NjkgMTEuNjg5NEMxNC41IDExLjI4MzUgMTQuNSAxMC43ODUzIDE0LjUgMTAuMTgxNlYxMC4xODE1VjEwLjE1MDVWOS43NTA1M0MxNC41IDkuMzM2MzEgMTQuMTY0MiA5LjAwMDUzIDEzLjc1IDkuMDAwNTNDMTMuMzM1OCA5LjAwMDUzIDEzIDkuMzM2MzEgMTMgOS43NTA1M1YxMC4xNTA1QzEzIDEwLjc5MyAxMi45OTk0IDExLjIyOTcgMTIuOTcxOCAxMS41NjcyQzEyLjk0NSAxMS44OTYxIDEyLjg5NjMgMTIuMDY0MiAxMi44MzY1IDEyLjE4MTVDMTIuNjkyNyAxMi40NjM4IDEyLjQ2MzIgMTIuNjkzMiAxMi4xODEgMTIuODM3QzEyLjA2MzcgMTIuODk2OCAxMS44OTU1IDEyLjk0NTUgMTEuNTY2NyAxMi45NzI0QzExLjIyOTIgMTIuOTk5OSAxMC43OTI0IDEzLjAwMDUgMTAuMTUgMTMuMDAwNUg1Ljg1QzUuMjA3NTcgMTMuMDAwNSA0Ljc3MDg1IDEyLjk5OTkgNC40MzMyOCAxMi45NzI0QzQuMTA0NDcgMTIuOTQ1NSAzLjkzNjMyIDEyLjg5NjggMy44MTkwMiAxMi44MzdDMy41MzY3NyAxMi42OTMyIDMuMzA3MyAxMi40NjM4IDMuMTYzNDkgMTIuMTgxNUMzLjEwMzcyIDEyLjA2NDIgMy4wNTUwMyAxMS44OTYxIDMuMDI4MTYgMTEuNTY3MkMzLjAwMDU4IDExLjIyOTcgMyAxMC43OTMgMyAxMC4xNTA1VjUuODUwNTNDMyA1LjIwODA5IDMuMDAwNTggNC43NzEzNyAzLjAyODE2IDQuNDMzODFDMy4wNTUwMyA0LjEwNDk5IDMuMTAzNzIgMy45MzY4NCAzLjE2MzQ5IDMuODE5NTRDMy4zMDczIDMuNTM3MyAzLjUzNjc3IDMuMzA3ODMgMy44MTkwMiAzLjE2NDAyQzMuOTM2MzIgMy4xMDQyNSA0LjEwNDQ3IDMuMDU1NTYgNC40MzMyOCAzLjAyODY5QzQuNzcwODUgMy4wMDExMSA1LjIwNzU3IDMuMDAwNTMgNS44NSAzLjAwMDUzSDYuMjVDNi42NjQyMiAzLjAwMDUzIDcgMi42NjQ3NCA3IDIuMjUwNTNDNyAxLjgzNjMxIDYuNjY0MjIgMS41MDA1MyA2LjI1IDEuNTAwNTNINS44NVpcIj48L3BhdGg+PC9zdmc+YCk7XG5jb25zdCBMaW5rSWNvbiA9IChwcm9wcykgPT4ge1xuICBjb25zdCB0aGVtZSA9IHVzZVRoZW1lKCk7XG4gIGNvbnN0IGZpbGwgPSAoKSA9PiBwcm9wcy5maWxsIHx8IHRoZW1lLmNvbG9ycy5hY2NlbnQ7XG4gIHJldHVybiAoKCkgPT4ge1xuICAgIGNvbnN0IF9lbCQgPSBfdG1wbCQkZy5jbG9uZU5vZGUodHJ1ZSksIF9lbCQyID0gX2VsJC5maXJzdENoaWxkO1xuICAgIGNyZWF0ZVJlbmRlckVmZmVjdCgoKSA9PiBzZXRBdHRyaWJ1dGUoX2VsJDIsIFwiZmlsbFwiLCBmaWxsKCkpKTtcbiAgICByZXR1cm4gX2VsJDtcbiAgfSkoKTtcbn07XG5jb25zdCBfdG1wbCQkZiA9IC8qIEBfX1BVUkVfXyAqLyB0ZW1wbGF0ZSQxKGA8c3ZnIHhtbG5zPVwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcIiB3aWR0aD1cIjE3XCIgaGVpZ2h0PVwiMTZcIiB2aWV3Qm94PVwiMCAwIDE3IDE2XCIgZmlsbD1cIm5vbmVcIj48ZyBjbGlwLXBhdGg9XCJ1cmwoI2NsaXAwXzM2NzZfMTI3NClcIj48cGF0aCBmaWxsLXJ1bGU9XCJldmVub2RkXCIgY2xpcC1ydWxlPVwiZXZlbm9kZFwiIGQ9XCJNMS44MjY5OCAyLjYzOTAxQzEuNSAzLjI4MDc0IDEuNSA0LjEyMDgyIDEuNSA1LjgwMDk4VjguODAwOThWOS4wMDA5OFYxMC4yMDFDMS41IDExLjg4MTEgMS41IDEyLjcyMTIgMS44MjY5OCAxMy4zNjI5QzIuMTE0NiAxMy45Mjc0IDIuNTczNTQgMTQuMzg2NCAzLjEzODAzIDE0LjY3NEMzLjc3OTc2IDE1LjAwMSA0LjYxOTg0IDE1LjAwMSA2LjMgMTUuMDAxSDExLjdDMTMuMzgwMiAxNS4wMDEgMTQuMjIwMiAxNS4wMDEgMTQuODYyIDE0LjY3NEMxNS40MjY1IDE0LjM4NjQgMTUuODg1NCAxMy45Mjc0IDE2LjE3MyAxMy4zNjI5QzE2LjUgMTIuNzIxMiAxNi41IDExLjg4MTEgMTYuNSAxMC4yMDFWOC44MDA5OEMxNi41IDcuMTIwODIgMTYuNSA2LjI4MDc0IDE2LjE3MyA1LjYzOTAxQzE1Ljg4NTQgNS4wNzQ1MiAxNS40MjY1IDQuNjE1NTggMTQuODYyIDQuMzI3OTZDMTQuNzQzIDQuMjY3MzMgMTQuNjE3MiA0LjIxNzk1IDE0LjQ4MDUgNC4xNzc3MkMxNC40NTAxIDMuNDk0NDkgMTQuMzcyMiAzLjAyOTk0IDE0LjE3MyAyLjYzOTAxQzEzLjg4NTQgMi4wNzQ1MiAxMy40MjY1IDEuNjE1NTggMTIuODYyIDEuMzI3OTZDMTIuMjIwMiAxLjAwMDk4IDExLjM4MDIgMS4wMDA5OCA5LjcgMS4wMDA5OEg2LjNDNC42MTk4NCAxLjAwMDk4IDMuNzc5NzYgMS4wMDA5OCAzLjEzODAzIDEuMzI3OTZDMi41NzM1NCAxLjYxNTU4IDIuMTE0NiAyLjA3NDUyIDEuODI2OTggMi42MzkwMVpNMTIuOTg2MSA0LjAwOTQyQzEyLjk2ODQgMy43MTA4IDEyLjkyODEgMy40OTk4MiAxMi44MzY1IDMuMzE5OTlDMTIuNjkyNyAzLjAzNzc1IDEyLjQ2MzIgMi44MDgyOCAxMi4xODEgMi42NjQ0N0MxMS44NjAxIDIuNTAwOTggMTEuNDQwMSAyLjUwMDk4IDEwLjYgMi41MDA5OEg1LjRDNC41NTk5MiAyLjUwMDk4IDQuMTM5ODggMi41MDA5OCAzLjgxOTAxIDIuNjY0NDdDMy41MzY3NyAyLjgwODI4IDMuMzA3MyAzLjAzNzc1IDMuMTYzNDkgMy4zMTk5OUMzLjAzNjE1IDMuNTY5OTEgMy4wMDc5OSAzLjg4IDMuMDAxNzcgNC40MDE4OEMzLjA0NjQ2IDQuMzc2MTIgMy4wOTE4OSA0LjM1MTQ2IDMuMTM4MDMgNC4zMjc5NkMzLjc3OTc2IDQuMDAwOTggNC42MTk4NCA0LjAwMDk4IDYuMyA0LjAwMDk4SDExLjdDMTIuMTk2NiA0LjAwMDk4IDEyLjYxOTcgNC4wMDA5OCAxMi45ODYxIDQuMDA5NDJaTTMgNy45MDA5OFY4LjEwMDk4QzMgOC40NzQ2OCAzIDguNzY1MjcgMy4wMTQzOSA5LjAwMDk4SDNWMTEuMTAxQzMgMTEuOTQxMSAzIDEyLjM2MTEgMy4xNjM0OSAxMi42ODJDMy4zMDczIDEyLjk2NDIgMy41MzY3NyAxMy4xOTM3IDMuODE5MDEgMTMuMzM3NUM0LjEzOTg4IDEzLjUwMSA0LjU1OTkyIDEzLjUwMSA1LjQgMTMuNTAxSDEyLjZDMTMuNDQwMSAxMy41MDEgMTMuODYwMSAxMy41MDEgMTQuMTgxIDEzLjMzNzVDMTQuNDYzMiAxMy4xOTM3IDE0LjY5MjcgMTIuOTY0MiAxNC44MzY1IDEyLjY4MkMxNSAxMi4zNjExIDE1IDExLjk0MTEgMTUgMTEuMTAxVjcuOTAwOThDMTUgNy4wNjA5IDE1IDYuNjQwODYgMTQuODM2NSA2LjMxOTk5QzE0LjY5MjcgNi4wMzc3NSAxNC40NjMyIDUuODA4MjggMTQuMTgxIDUuNjY0NDdDMTMuODYwMSA1LjUwMDk4IDEzLjQ0MDEgNS41MDA5OCAxMi42IDUuNTAwOThINS40QzQuNTU5OTIgNS41MDA5OCA0LjEzOTg4IDUuNTAwOTggMy44MTkwMSA1LjY2NDQ3QzMuNTM2NzcgNS44MDgyOCAzLjMwNzMgNi4wMzc3NSAzLjE2MzQ5IDYuMzE5OTlDMyA2LjY0MDg2IDMgNy4wNjA5IDMgNy45MDA5OFpNMTAuNSA5Ljc1MDk4QzEwLjUgOS4zMzY3NiAxMC44MzU4IDkuMDAwOTggMTEuMjUgOS4wMDA5OEgxMi43NUMxMy4xNjQyIDkuMDAwOTggMTMuNSA5LjMzNjc2IDEzLjUgOS43NTA5OEMxMy41IDEwLjE2NTIgMTMuMTY0MiAxMC41MDEgMTIuNzUgMTAuNTAxSDExLjI1QzEwLjgzNTggMTAuNTAxIDEwLjUgMTAuMTY1MiAxMC41IDkuNzUwOThaXCI+PC9wYXRoPjwvZz48ZGVmcz48Y2xpcFBhdGggaWQ9XCJjbGlwMF8zNjc2XzEyNzRcIj48cmVjdCB3aWR0aD1cIjE2XCIgaGVpZ2h0PVwiMTZcIiBmaWxsPVwid2hpdGVcIiB0cmFuc2Zvcm09XCJ0cmFuc2xhdGUoMC41IDAuMDAwOTc2NTYyKVwiPjwvcmVjdD48L2NsaXBQYXRoPjwvZGVmcz48L3N2Zz5gKTtcbmNvbnN0IFdhbGxldEljb24gPSAocHJvcHMpID0+IHtcbiAgY29uc3QgdGhlbWUgPSB1c2VUaGVtZSgpO1xuICBjb25zdCBmaWxsID0gKCkgPT4gcHJvcHMuZmlsbCB8fCB0aGVtZS5jb2xvcnMuYWNjZW50O1xuICByZXR1cm4gKCgpID0+IHtcbiAgICBjb25zdCBfZWwkID0gX3RtcGwkJGYuY2xvbmVOb2RlKHRydWUpLCBfZWwkMiA9IF9lbCQuZmlyc3RDaGlsZCwgX2VsJDMgPSBfZWwkMi5maXJzdENoaWxkO1xuICAgIGNyZWF0ZVJlbmRlckVmZmVjdCgoKSA9PiBzZXRBdHRyaWJ1dGUoX2VsJDMsIFwiZmlsbFwiLCBmaWxsKCkpKTtcbiAgICByZXR1cm4gX2VsJDtcbiAgfSkoKTtcbn07XG5jb25zdCBfdG1wbCQkZSA9IC8qIEBfX1BVUkVfXyAqLyB0ZW1wbGF0ZSQxKGA8c3ZnIHhtbG5zPVwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcIiB3aWR0aD1cIjQ4XCIgaGVpZ2h0PVwiNDhcIiB2aWV3Qm94PVwiMCAwIDQ4IDQ4XCIgZmlsbD1cIm5vbmVcIj48cGF0aCBmaWxsLXJ1bGU9XCJldmVub2RkXCIgY2xpcC1ydWxlPVwiZXZlbm9kZFwiIGQ9XCJNMzkuNjMxOSAxNi44NzE5QzM4LjMyMTIgMTYuMjA0MSAzNi43MDAyIDE2LjA0NzggMzQgMTYuMDExMlYxMUMzNCA1LjQ3NzE1IDI5LjUyMjggMSAyNCAxQzE4LjQ3NzIgMSAxNCA1LjQ3NzE1IDE0IDExVjE2LjAxMTJDMTEuMjk5OCAxNi4wNDc4IDkuNjc4OCAxNi4yMDQxIDguMzY4MDggMTYuODcxOUM2Ljg2Mjc4IDE3LjYzODkgNS42Mzg5MyAxOC44NjI4IDQuODcxOTUgMjAuMzY4MUM0IDIyLjA3OTQgNCAyNC4zMTk2IDQgMjguOFYzMi4yQzQgMzYuNjgwNCA0IDM4LjkyMDYgNC44NzE5NSA0MC42MzE5QzUuNjM4OTMgNDIuMTM3MiA2Ljg2Mjc4IDQzLjM2MTEgOC4zNjgwOCA0NC4xMjgxQzEwLjA3OTQgNDUgMTIuMzE5NiA0NSAxNi44IDQ1SDMxLjJDMzUuNjgwNCA0NSAzNy45MjA2IDQ1IDM5LjYzMTkgNDQuMTI4MUM0MS4xMzcyIDQzLjM2MTEgNDIuMzYxMSA0Mi4xMzcyIDQzLjEyODEgNDAuNjMxOUM0NCAzOC45MjA2IDQ0IDM2LjY4MDQgNDQgMzIuMlYyOC44QzQ0IDI0LjMxOTYgNDQgMjIuMDc5NCA0My4xMjgxIDIwLjM2ODFDNDIuMzYxMSAxOC44NjI4IDQxLjEzNzIgMTcuNjM4OSAzOS42MzE5IDE2Ljg3MTlaTTMxIDExVjE2SDE3VjExQzE3IDcuMTM0MDEgMjAuMTM0IDQgMjQgNEMyNy44NjYgNCAzMSA3LjEzNDAxIDMxIDExWk03LjU0NDk3IDIxLjczQzcgMjIuNzk5NiA3IDI0LjE5OTcgNyAyN1YzNEM3IDM2LjgwMDMgNyAzOC4yMDA0IDcuNTQ0OTcgMzkuMjdDOC4wMjQzMyA0MC4yMTA4IDguNzg5MjQgNDAuOTc1NyA5LjczMDA1IDQxLjQ1NUMxMC43OTk2IDQyIDEyLjE5OTcgNDIgMTUgNDJIMzNDMzUuODAwMyA0MiAzNy4yMDA0IDQyIDM4LjI3IDQxLjQ1NUMzOS4yMTA4IDQwLjk3NTcgMzkuOTc1NyA0MC4yMTA4IDQwLjQ1NSAzOS4yN0M0MSAzOC4yMDA0IDQxIDM2LjgwMDMgNDEgMzRWMjdDNDEgMjQuMTk5NyA0MSAyMi43OTk2IDQwLjQ1NSAyMS43M0MzOS45NzU3IDIwLjc4OTIgMzkuMjEwOCAyMC4wMjQzIDM4LjI3IDE5LjU0NUMzNy4yMDA0IDE5IDM1LjgwMDMgMTkgMzMgMTlIMTVDMTIuMTk5NyAxOSAxMC43OTk2IDE5IDkuNzMwMDUgMTkuNTQ1QzguNzg5MjQgMjAuMDI0MyA4LjAyNDMzIDIwLjc4OTIgNy41NDQ5NyAyMS43M1pNMjQgMjRDMjMuMTcxNiAyNCAyMi41IDI0LjY3MTYgMjIuNSAyNS41VjI5LjVDMjIuNSAzMC4zMjg0IDIzLjE3MTYgMzEgMjQgMzFDMjQuODI4NCAzMSAyNS41IDMwLjMyODQgMjUuNSAyOS41VjI1LjVDMjUuNSAyNC42NzE2IDI0LjgyODQgMjQgMjQgMjRaXCI+PC9wYXRoPjwvc3ZnPmApO1xuY29uc3QgU2VjdXJpdHlJY29uID0gKHByb3BzKSA9PiB7XG4gIGNvbnN0IHRoZW1lID0gdXNlVGhlbWUoKTtcbiAgY29uc3QgZmlsbCA9ICgpID0+IHByb3BzLmZpbGwgfHwgdGhlbWUuY29sb3JzLmljb24uc2Vjb25kYXJ5O1xuICByZXR1cm4gKCgpID0+IHtcbiAgICBjb25zdCBfZWwkID0gX3RtcGwkJGUuY2xvbmVOb2RlKHRydWUpLCBfZWwkMiA9IF9lbCQuZmlyc3RDaGlsZDtcbiAgICBjcmVhdGVSZW5kZXJFZmZlY3QoKF9wJCkgPT4ge1xuICAgICAgY29uc3QgX3YkID0gcHJvcHMuY2xhc3MsIF92JDIgPSBmaWxsKCk7XG4gICAgICBfdiQgIT09IF9wJC5fdiQgJiYgc2V0QXR0cmlidXRlKF9lbCQsIFwiY2xhc3NcIiwgX3AkLl92JCA9IF92JCk7XG4gICAgICBfdiQyICE9PSBfcCQuX3YkMiAmJiBzZXRBdHRyaWJ1dGUoX2VsJDIsIFwiZmlsbFwiLCBfcCQuX3YkMiA9IF92JDIpO1xuICAgICAgcmV0dXJuIF9wJDtcbiAgICB9LCB7XG4gICAgICBfdiQ6IHZvaWQgMCxcbiAgICAgIF92JDI6IHZvaWQgMFxuICAgIH0pO1xuICAgIHJldHVybiBfZWwkO1xuICB9KSgpO1xufTtcbmNvbnN0IF90bXBsJCRkID0gLyogQF9fUFVSRV9fICovIHRlbXBsYXRlJDEoYDxzdmcgeG1sbnM9XCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wiIHdpZHRoPVwiNDhcIiBoZWlnaHQ9XCI0OFwiIHZpZXdCb3g9XCIwIDAgNDggNDhcIiBmaWxsPVwibm9uZVwiPjxwYXRoIGZpbGwtcnVsZT1cImV2ZW5vZGRcIiBjbGlwLXJ1bGU9XCJldmVub2RkXCIgZD1cIk0zNy40ODUgMzcuMzg0OUM0MC44OTQgMzMuOTUwNiA0MyAyOS4yMjEyIDQzIDI0QzQzIDEzLjUwNjYgMzQuNDkzNCA1IDI0IDVDMTMuNTA2NiA1IDUgMTMuNTA2NiA1IDI0QzUgMjkuMjIxMyA3LjEwNjEgMzMuOTUwNyAxMC41MTUxIDM3LjM4NUMxMy4zNTgzIDMyLjk0MzggMTguMzM1NCAzMCAyNC4wMDAxIDMwQzI5LjY2NDcgMzAgMzQuNjQxOCAzMi45NDM3IDM3LjQ4NSAzNy4zODQ5Wk0zNS4xODA5IDM5LjM2MzVDMzIuOTE0MyAzNS41NTMyIDI4Ljc1NTQgMzMgMjQuMDAwMSAzM0MxOS4yNDQ4IDMzIDE1LjA4NTggMzUuNTUzMyAxMi44MTkzIDM5LjM2MzZDMTUuOTU2NCA0MS42NTA2IDE5LjgyMDYgNDMgMjQgNDNDMjguMTc5NSA0MyAzMi4wNDM3IDQxLjY1MDUgMzUuMTgwOSAzOS4zNjM1Wk0yNCA0NkMzNi4xNTAzIDQ2IDQ2IDM2LjE1MDMgNDYgMjRDNDYgMTEuODQ5NyAzNi4xNTAzIDIgMjQgMkMxMS44NDk3IDIgMiAxMS44NDk3IDIgMjRDMiAzNi4xNTAzIDExLjg0OTcgNDYgMjQgNDZaTTI0IDI0QzI2Ljc2MTQgMjQgMjkgMjEuNzYxNCAyOSAxOUMyOSAxNi4yMzg2IDI2Ljc2MTQgMTQgMjQgMTRDMjEuMjM4NiAxNCAxOSAxNi4yMzg2IDE5IDE5QzE5IDIxLjc2MTQgMjEuMjM4NiAyNCAyNCAyNFpNMjQgMjdDMjguNDE4MyAyNyAzMiAyMy40MTgzIDMyIDE5QzMyIDE0LjU4MTcgMjguNDE4MyAxMSAyNCAxMUMxOS41ODE3IDExIDE2IDE0LjU4MTcgMTYgMTlDMTYgMjMuNDE4MyAxOS41ODE3IDI3IDI0IDI3WlwiPjwvcGF0aD48L3N2Zz5gKTtcbmNvbnN0IFBlcnNvbmFsaXR5SWNvbiA9IChwcm9wcykgPT4ge1xuICBjb25zdCB0aGVtZSA9IHVzZVRoZW1lKCk7XG4gIGNvbnN0IGZpbGwgPSAoKSA9PiBwcm9wcy5maWxsIHx8IHRoZW1lLmNvbG9ycy5pY29uLnNlY29uZGFyeTtcbiAgcmV0dXJuICgoKSA9PiB7XG4gICAgY29uc3QgX2VsJCA9IF90bXBsJCRkLmNsb25lTm9kZSh0cnVlKSwgX2VsJDIgPSBfZWwkLmZpcnN0Q2hpbGQ7XG4gICAgY3JlYXRlUmVuZGVyRWZmZWN0KChfcCQpID0+IHtcbiAgICAgIGNvbnN0IF92JCA9IHByb3BzLmNsYXNzLCBfdiQyID0gZmlsbCgpO1xuICAgICAgX3YkICE9PSBfcCQuX3YkICYmIHNldEF0dHJpYnV0ZShfZWwkLCBcImNsYXNzXCIsIF9wJC5fdiQgPSBfdiQpO1xuICAgICAgX3YkMiAhPT0gX3AkLl92JDIgJiYgc2V0QXR0cmlidXRlKF9lbCQyLCBcImZpbGxcIiwgX3AkLl92JDIgPSBfdiQyKTtcbiAgICAgIHJldHVybiBfcCQ7XG4gICAgfSwge1xuICAgICAgX3YkOiB2b2lkIDAsXG4gICAgICBfdiQyOiB2b2lkIDBcbiAgICB9KTtcbiAgICByZXR1cm4gX2VsJDtcbiAgfSkoKTtcbn07XG5jb25zdCBfdG1wbCQkYyA9IC8qIEBfX1BVUkVfXyAqLyB0ZW1wbGF0ZSQxKGA8c3ZnIHhtbG5zPVwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcIiB3aWR0aD1cIjQ4XCIgaGVpZ2h0PVwiNDhcIiB2aWV3Qm94PVwiMCAwIDQ4IDQ4XCIgZmlsbD1cIm5vbmVcIj48cGF0aCBmaWxsLXJ1bGU9XCJldmVub2RkXCIgY2xpcC1ydWxlPVwiZXZlbm9kZFwiIGQ9XCJNMzQuNTYwNyA0LjQzOTM0QzMzLjk3NDkgMy44NTM1NSAzMy4wMjUxIDMuODUzNTUgMzIuNDM5MyA0LjQzOTM0QzMxLjg1MzYgNS4wMjUxMyAzMS44NTM2IDUuOTc0ODcgMzIuNDM5MyA2LjU2MDY2TDM3Ljg3ODcgMTJIMTAuNUM5LjY3MTU3IDEyIDkgMTIuNjcxNiA5IDEzLjVDOSAxNC4zMjg0IDkuNjcxNTcgMTUgMTAuNSAxNUgzNy44Nzg3TDMyLjQzOTMgMjAuNDM5M0MzMS44NTM2IDIxLjAyNTEgMzEuODUzNiAyMS45NzQ5IDMyLjQzOTMgMjIuNTYwN0MzMy4wMjUxIDIzLjE0NjQgMzMuOTc0OSAyMy4xNDY0IDM0LjU2MDcgMjIuNTYwN0w0Mi41NjA3IDE0LjU2MDdDNDMuMTQ2NCAxMy45NzQ5IDQzLjE0NjQgMTMuMDI1MSA0Mi41NjA3IDEyLjQzOTNMMzQuNTYwNyA0LjQzOTM0Wk0xMy40MzkzIDI1LjQzOTNDMTQuMDI1MSAyNC44NTM2IDE0Ljk3NDkgMjQuODUzNiAxNS41NjA3IDI1LjQzOTNDMTYuMTQ2NCAyNi4wMjUxIDE2LjE0NjQgMjYuOTc0OSAxNS41NjA3IDI3LjU2MDdMMTAuMTIxMyAzM0gzNy41QzM4LjMyODQgMzMgMzkgMzMuNjcxNiAzOSAzNC41QzM5IDM1LjMyODQgMzguMzI4NCAzNiAzNy41IDM2SDEwLjEyMTNMMTUuNTYwNyA0MS40MzkzQzE2LjE0NjQgNDIuMDI1MSAxNi4xNDY0IDQyLjk3NDkgMTUuNTYwNyA0My41NjA3QzE0Ljk3NDkgNDQuMTQ2NCAxNC4wMjUxIDQ0LjE0NjQgMTMuNDM5MyA0My41NjA3TDUuNDM5MzQgMzUuNTYwN0M0Ljg1MzU1IDM0Ljk3NDkgNC44NTM1NSAzNC4wMjUxIDUuNDM5MzQgMzMuNDM5M0wxMy40MzkzIDI1LjQzOTNaXCI+PC9wYXRoPjwvc3ZnPmApO1xuY29uc3QgU3dhcEljb24gPSAocHJvcHMpID0+IHtcbiAgY29uc3QgdGhlbWUgPSB1c2VUaGVtZSgpO1xuICBjb25zdCBmaWxsID0gKCkgPT4gcHJvcHMuZmlsbCB8fCB0aGVtZS5jb2xvcnMuaWNvbi5zZWNvbmRhcnk7XG4gIHJldHVybiAoKCkgPT4ge1xuICAgIGNvbnN0IF9lbCQgPSBfdG1wbCQkYy5jbG9uZU5vZGUodHJ1ZSksIF9lbCQyID0gX2VsJC5maXJzdENoaWxkO1xuICAgIGNyZWF0ZVJlbmRlckVmZmVjdCgoX3AkKSA9PiB7XG4gICAgICBjb25zdCBfdiQgPSBwcm9wcy5jbGFzcywgX3YkMiA9IGZpbGwoKTtcbiAgICAgIF92JCAhPT0gX3AkLl92JCAmJiBzZXRBdHRyaWJ1dGUoX2VsJCwgXCJjbGFzc1wiLCBfcCQuX3YkID0gX3YkKTtcbiAgICAgIF92JDIgIT09IF9wJC5fdiQyICYmIHNldEF0dHJpYnV0ZShfZWwkMiwgXCJmaWxsXCIsIF9wJC5fdiQyID0gX3YkMik7XG4gICAgICByZXR1cm4gX3AkO1xuICAgIH0sIHtcbiAgICAgIF92JDogdm9pZCAwLFxuICAgICAgX3YkMjogdm9pZCAwXG4gICAgfSk7XG4gICAgcmV0dXJuIF9lbCQ7XG4gIH0pKCk7XG59O1xuY29uc3QgX3RtcGwkJGIgPSAvKiBAX19QVVJFX18gKi8gdGVtcGxhdGUkMShgPHN2ZyB4bWxucz1cImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXCIgd2lkdGg9XCIyOFwiIGhlaWdodD1cIjI5XCIgdmlld0JveD1cIjAgMCAyOCAyOVwiIGZpbGw9XCJub25lXCI+PHBhdGggZmlsbC1ydWxlPVwiZXZlbm9kZFwiIGNsaXAtcnVsZT1cImV2ZW5vZGRcIiBkPVwiTTEuNzUgMTIuMDAyQzEuNzUgOS4yMDE2OSAxLjc1IDcuODAxNTYgMi4yOTQ5NyA2LjczMkMyLjc3NDMzIDUuNzkxMTkgMy41MzkyNCA1LjAyNjI5IDQuNDgwMDUgNC41NDY5MkM1LjU0OTYxIDQuMDAxOTUgNi45NDk3NCA0LjAwMTk1IDkuNzUgNC4wMDE5NUgxNy4yNUMyMC4wNTAzIDQuMDAxOTUgMjEuNDUwNCA0LjAwMTk1IDIyLjUyIDQuNTQ2OTJDMjMuNDYwOCA1LjAyNjI5IDI0LjIyNTcgNS43OTExOSAyNC43MDUgNi43MzJDMjQuODI1NiA2Ljk2ODYxIDI0LjkxOTUgNy4yMjE0IDI0Ljk5MjYgNy41MDE5NUgyMS41QzE5LjYzNzcgNy41MDE5NSAxOC43MDY1IDcuNTAxOTUgMTcuOTYwOSA3Ljc3MzM0QzE2LjcxMSA4LjIyODI4IDE1LjcyNjMgOS4yMTI5MSAxNS4yNzE0IDEwLjQ2MjlDMTUgMTEuMjA4NSAxNSAxMi4xMzk2IDE1IDE0LjAwMkMxNSAxNS44NjQzIDE1IDE2Ljc5NTQgMTUuMjcxNCAxNy41NDFDMTUuNzI2MyAxOC43OTEgMTYuNzExIDE5Ljc3NTYgMTcuOTYwOSAyMC4yMzA2QzE4LjcwNjUgMjAuNTAyIDE5LjYzNzcgMjAuNTAyIDIxLjUgMjAuNTAySDI0Ljk5MjZDMjQuOTE5NSAyMC43ODI1IDI0LjgyNTYgMjEuMDM1MyAyNC43MDUgMjEuMjcxOUMyNC4yMjU3IDIyLjIxMjcgMjMuNDYwOCAyMi45Nzc2IDIyLjUyIDIzLjQ1N0MyMS40NTA0IDI0LjAwMiAyMC4wNTAzIDI0LjAwMiAxNy4yNSAyNC4wMDJIOS43NUM2Ljk0OTc0IDI0LjAwMiA1LjU0OTYxIDI0LjAwMiA0LjQ4MDA1IDIzLjQ1N0MzLjUzOTI0IDIyLjk3NzYgMi43NzQzMyAyMi4yMTI3IDIuMjk0OTcgMjEuMjcxOUMxLjc1IDIwLjIwMjMgMS43NSAxOC44MDIyIDEuNzUgMTYuMDAyVjEyLjAwMlpNMTYuNDk5OSAxMy44MDJDMTYuNDk5OSAxMi4xMjE4IDE2LjQ5OTkgMTEuMjgxNyAxNi44MjY5IDEwLjY0QzE3LjExNDUgMTAuMDc1NSAxNy41NzM1IDkuNjE2NTYgMTguMTM4IDkuMzI4OTRDMTguNzc5NyA5LjAwMTk2IDE5LjYxOTggOS4wMDE5NiAyMS4yOTk5IDkuMDAxOTZIMjMuMTk5OUMyNC44ODAxIDkuMDAxOTYgMjUuNzIwMiA5LjAwMTk2IDI2LjM2MTkgOS4zMjg5NEMyNi45MjY0IDkuNjE2NTYgMjcuMzg1MyAxMC4wNzU1IDI3LjY3MyAxMC42NEMyNy45OTk5IDExLjI4MTcgMjcuOTk5OSAxMi4xMjE4IDI3Ljk5OTkgMTMuODAyVjE0LjIwMkMyNy45OTk5IDE1Ljg4MjEgMjcuOTk5OSAxNi43MjIyIDI3LjY3MyAxNy4zNjM5QzI3LjM4NTMgMTcuOTI4NCAyNi45MjY0IDE4LjM4NzQgMjYuMzYxOSAxOC42NzVDMjUuNzIwMiAxOS4wMDIgMjQuODgwMSAxOS4wMDIgMjMuMTk5OSAxOS4wMDJIMjEuMjk5OUMxOS42MTk4IDE5LjAwMiAxOC43Nzk3IDE5LjAwMiAxOC4xMzggMTguNjc1QzE3LjU3MzUgMTguMzg3NCAxNy4xMTQ1IDE3LjkyODQgMTYuODI2OSAxNy4zNjM5QzE2LjQ5OTkgMTYuNzIyMiAxNi40OTk5IDE1Ljg4MjEgMTYuNDk5OSAxNC4yMDJWMTMuODAyWk0yMi40OTk5IDE0LjAwMkMyMi40OTk5IDE0Ljk2ODUgMjEuNzE2NCAxNS43NTIgMjAuNzQ5OSAxNS43NTJDMTkuNzgzNCAxNS43NTIgMTguOTk5OSAxNC45Njg1IDE4Ljk5OTkgMTQuMDAyQzE4Ljk5OTkgMTMuMDM1NSAxOS43ODM0IDEyLjI1MiAyMC43NDk5IDEyLjI1MkMyMS43MTY0IDEyLjI1MiAyMi40OTk5IDEzLjAzNTUgMjIuNDk5OSAxNC4wMDJaXCI+PC9wYXRoPjwvc3ZnPmApO1xuY29uc3QgQXRXYWxsZXRJY29uID0gKHByb3BzKSA9PiB7XG4gIGNvbnN0IHRoZW1lID0gdXNlVGhlbWUoKTtcbiAgY29uc3QgZmlsbCA9ICgpID0+IHByb3BzLmZpbGwgfHwgdGhlbWUuY29sb3JzLmNvbnN0YW50LndoaXRlO1xuICByZXR1cm4gKCgpID0+IHtcbiAgICBjb25zdCBfZWwkID0gX3RtcGwkJGIuY2xvbmVOb2RlKHRydWUpLCBfZWwkMiA9IF9lbCQuZmlyc3RDaGlsZDtcbiAgICBjcmVhdGVSZW5kZXJFZmZlY3QoKF9wJCkgPT4ge1xuICAgICAgY29uc3QgX3YkID0gcHJvcHMuY2xhc3MsIF92JDIgPSBmaWxsKCk7XG4gICAgICBfdiQgIT09IF9wJC5fdiQgJiYgc2V0QXR0cmlidXRlKF9lbCQsIFwiY2xhc3NcIiwgX3AkLl92JCA9IF92JCk7XG4gICAgICBfdiQyICE9PSBfcCQuX3YkMiAmJiBzZXRBdHRyaWJ1dGUoX2VsJDIsIFwiZmlsbFwiLCBfcCQuX3YkMiA9IF92JDIpO1xuICAgICAgcmV0dXJuIF9wJDtcbiAgICB9LCB7XG4gICAgICBfdiQ6IHZvaWQgMCxcbiAgICAgIF92JDI6IHZvaWQgMFxuICAgIH0pO1xuICAgIHJldHVybiBfZWwkO1xuICB9KSgpO1xufTtcbmNvbnN0IF90bXBsJCRhID0gLyogQF9fUFVSRV9fICovIHRlbXBsYXRlJDEoYDxzdmcgeG1sbnM9XCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wiIHdpZHRoPVwiMjhcIiBoZWlnaHQ9XCIyOFwiIHZpZXdCb3g9XCIwIDAgMjggMjhcIiBmaWxsPVwibm9uZVwiPjxwYXRoIGZpbGwtcnVsZT1cImV2ZW5vZGRcIiBjbGlwLXJ1bGU9XCJldmVub2RkXCIgZD1cIk0yNC43ODAzIDcuMjE5NjdDMjUuMDczMiA3LjUxMjU2IDI1LjA3MzIgNy45ODc0NCAyNC43ODAzIDguMjgwMzNMMTEuNTMwMyAyMS41MzAzQzExLjIzNzQgMjEuODIzMiAxMC43NjI2IDIxLjgyMzIgMTAuNDY5NyAyMS41MzAzTDQuMjE5NjcgMTUuMjgwM0MzLjkyNjc4IDE0Ljk4NzQgMy45MjY3OCAxNC41MTI2IDQuMjE5NjcgMTQuMjE5N0M0LjUxMjU2IDEzLjkyNjggNC45ODc0NCAxMy45MjY4IDUuMjgwMzMgMTQuMjE5N0wxMSAxOS45MzkzTDIzLjcxOTcgNy4yMTk2N0MyNC4wMTI2IDYuOTI2NzggMjQuNDg3NCA2LjkyNjc4IDI0Ljc4MDMgNy4yMTk2N1pcIj48L3BhdGg+PC9zdmc+YCk7XG5jb25zdCBEb25lSWNvbiA9IChwcm9wcykgPT4ge1xuICBjb25zdCB0aGVtZSA9IHVzZVRoZW1lKCk7XG4gIGNvbnN0IGZpbGwgPSAoKSA9PiBwcm9wcy5maWxsIHx8IHRoZW1lLmNvbG9ycy5pY29uLnNlY29uZGFyeTtcbiAgcmV0dXJuICgoKSA9PiB7XG4gICAgY29uc3QgX2VsJCA9IF90bXBsJCRhLmNsb25lTm9kZSh0cnVlKSwgX2VsJDIgPSBfZWwkLmZpcnN0Q2hpbGQ7XG4gICAgY3JlYXRlUmVuZGVyRWZmZWN0KChfcCQpID0+IHtcbiAgICAgIGNvbnN0IF92JCA9IHByb3BzLmNsYXNzLCBfdiQyID0gZmlsbCgpO1xuICAgICAgX3YkICE9PSBfcCQuX3YkICYmIHNldEF0dHJpYnV0ZShfZWwkLCBcImNsYXNzXCIsIF9wJC5fdiQgPSBfdiQpO1xuICAgICAgX3YkMiAhPT0gX3AkLl92JDIgJiYgc2V0QXR0cmlidXRlKF9lbCQyLCBcImZpbGxcIiwgX3AkLl92JDIgPSBfdiQyKTtcbiAgICAgIHJldHVybiBfcCQ7XG4gICAgfSwge1xuICAgICAgX3YkOiB2b2lkIDAsXG4gICAgICBfdiQyOiB2b2lkIDBcbiAgICB9KTtcbiAgICByZXR1cm4gX2VsJDtcbiAgfSkoKTtcbn07XG5jb25zdCBfdG1wbCQkOSA9IC8qIEBfX1BVUkVfXyAqLyB0ZW1wbGF0ZSQxKGA8c3ZnIHhtbG5zPVwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcIiB3aWR0aD1cIjI4XCIgaGVpZ2h0PVwiMjhcIiB2aWV3Qm94PVwiMCAwIDI4IDI4XCI+PHBhdGggZmlsbC1ydWxlPVwiZXZlbm9kZFwiIGNsaXAtcnVsZT1cImV2ZW5vZGRcIiBkPVwiTTEwLjAwMDEgMTAuMDAwMUMxMC4wMDE2IDguMDIzMzMgMTAuMDI2NyA2Ljk4NzE5IDEwLjQzNiA2LjE4NDA0QzEwLjgxOTUgNS40MzEzOSAxMS40MzE0IDQuODE5NDcgMTIuMTg0IDQuNDM1OTdDMTMuMDM5NyA0IDE0LjE1OTggNCAxNi40IDRIMTcuNkMxOS44NDAyIDQgMjAuOTYwMyA0IDIxLjgxNiA0LjQzNTk3QzIyLjU2ODYgNC44MTk0NyAyMy4xODA1IDUuNDMxMzkgMjMuNTY0IDYuMTg0MDRDMjQgNy4wMzk2OSAyNCA4LjE1OTc5IDI0IDEwLjRWMTEuNkMyNCAxMy44NDAyIDI0IDE0Ljk2MDMgMjMuNTY0IDE1LjgxNkMyMy4xODA1IDE2LjU2ODYgMjIuNTY4NiAxNy4xODA1IDIxLjgxNiAxNy41NjRDMjEuMDEyOCAxNy45NzMzIDE5Ljk3NjcgMTcuOTk4NCAxNy45OTk5IDE3Ljk5OTlDMTcuOTk4NCAxOS45NzY3IDE3Ljk3MzMgMjEuMDEyOCAxNy41NjQgMjEuODE2QzE3LjE4MDUgMjIuNTY4NiAxNi41Njg2IDIzLjE4MDUgMTUuODE2IDIzLjU2NEMxNC45NjAzIDI0IDEzLjg0MDIgMjQgMTEuNiAyNEgxMC40QzguMTU5NzkgMjQgNy4wMzk2OSAyNCA2LjE4NDA0IDIzLjU2NEM1LjQzMTM5IDIzLjE4MDUgNC44MTk0NyAyMi41Njg2IDQuNDM1OTcgMjEuODE2QzQgMjAuOTYwMyA0IDE5Ljg0MDIgNCAxNy42VjE2LjRDNCAxNC4xNTk4IDQgMTMuMDM5NyA0LjQzNTk3IDEyLjE4NEM0LjgxOTQ3IDExLjQzMTQgNS40MzEzOSAxMC44MTk1IDYuMTg0MDQgMTAuNDM2QzYuOTg3MTkgMTAuMDI2NyA4LjAyMzMzIDEwLjAwMTYgMTAuMDAwMSAxMC4wMDAxWk0xMCAxMS41SDkuNUM4LjA5OTg3IDExLjUgNy4zOTk4IDExLjUgNi44NjUwMiAxMS43NzI1QzYuMzk0NjIgMTIuMDEyMiA2LjAxMjE3IDEyLjM5NDYgNS43NzI0OCAxMi44NjVDNS41IDEzLjM5OTggNS41IDE0LjA5OTkgNS41IDE1LjVWMTguNUM1LjUgMTkuOTAwMSA1LjUgMjAuNjAwMiA1Ljc3MjQ4IDIxLjEzNUM2LjAxMjE3IDIxLjYwNTQgNi4zOTQ2MiAyMS45ODc4IDYuODY1MDIgMjIuMjI3NUM3LjM5OTggMjIuNSA4LjA5OTg3IDIyLjUgOS41IDIyLjVIMTIuNUMxMy45MDAxIDIyLjUgMTQuNjAwMiAyMi41IDE1LjEzNSAyMi4yMjc1QzE1LjYwNTQgMjEuOTg3OCAxNS45ODc4IDIxLjYwNTQgMTYuMjI3NSAyMS4xMzVDMTYuNSAyMC42MDAyIDE2LjUgMTkuOTAwMSAxNi41IDE4LjVWMThIMTYuNEMxNC4xNTk4IDE4IDEzLjAzOTcgMTggMTIuMTg0IDE3LjU2NEMxMS40MzE0IDE3LjE4MDUgMTAuODE5NSAxNi41Njg2IDEwLjQzNiAxNS44MTZDMTAgMTQuOTYwMyAxMCAxMy44NDAyIDEwIDExLjZWMTEuNVpNMTEuNSA5LjVDMTEuNSA4LjA5OTg3IDExLjUgNy4zOTk4IDExLjc3MjUgNi44NjUwMkMxMi4wMTIyIDYuMzk0NjIgMTIuMzk0NiA2LjAxMjE3IDEyLjg2NSA1Ljc3MjQ4QzEzLjM5OTggNS41IDE0LjA5OTkgNS41IDE1LjUgNS41SDE4LjVDMTkuOTAwMSA1LjUgMjAuNjAwMiA1LjUgMjEuMTM1IDUuNzcyNDhDMjEuNjA1NCA2LjAxMjE3IDIxLjk4NzggNi4zOTQ2MiAyMi4yMjc1IDYuODY1MDJDMjIuNSA3LjM5OTggMjIuNSA4LjA5OTg3IDIyLjUgOS41VjEyLjVDMjIuNSAxMy45MDAxIDIyLjUgMTQuNjAwMiAyMi4yMjc1IDE1LjEzNUMyMS45ODc4IDE1LjYwNTQgMjEuNjA1NCAxNS45ODc4IDIxLjEzNSAxNi4yMjc1QzIwLjYwMDIgMTYuNSAxOS45MDAxIDE2LjUgMTguNSAxNi41SDE1LjVDMTQuMDk5OSAxNi41IDEzLjM5OTggMTYuNSAxMi44NjUgMTYuMjI3NUMxMi4zOTQ2IDE1Ljk4NzggMTIuMDEyMiAxNS42MDU0IDExLjc3MjUgMTUuMTM1QzExLjUgMTQuNjAwMiAxMS41IDEzLjkwMDEgMTEuNSAxMi41VjkuNVpcIj48L3BhdGg+PC9zdmc+YCk7XG5jb25zdCBDb3B5TGlnaHRJY29uID0gKHByb3BzKSA9PiB7XG4gIGNvbnN0IHRoZW1lID0gdXNlVGhlbWUoKTtcbiAgY29uc3QgZmlsbCA9ICgpID0+IHByb3BzLmZpbGwgfHwgdGhlbWUuY29sb3JzLmljb24uc2Vjb25kYXJ5O1xuICByZXR1cm4gKCgpID0+IHtcbiAgICBjb25zdCBfZWwkID0gX3RtcGwkJDkuY2xvbmVOb2RlKHRydWUpLCBfZWwkMiA9IF9lbCQuZmlyc3RDaGlsZDtcbiAgICBjcmVhdGVSZW5kZXJFZmZlY3QoKF9wJCkgPT4ge1xuICAgICAgY29uc3QgX3YkID0gZmlsbCgpLCBfdiQyID0gZmlsbCgpO1xuICAgICAgX3YkICE9PSBfcCQuX3YkICYmIHNldEF0dHJpYnV0ZShfZWwkLCBcImZpbGxcIiwgX3AkLl92JCA9IF92JCk7XG4gICAgICBfdiQyICE9PSBfcCQuX3YkMiAmJiBzZXRBdHRyaWJ1dGUoX2VsJDIsIFwiZmlsbFwiLCBfcCQuX3YkMiA9IF92JDIpO1xuICAgICAgcmV0dXJuIF9wJDtcbiAgICB9LCB7XG4gICAgICBfdiQ6IHZvaWQgMCxcbiAgICAgIF92JDI6IHZvaWQgMFxuICAgIH0pO1xuICAgIHJldHVybiBfZWwkO1xuICB9KSgpO1xufTtcbmNvbnN0IF90bXBsJCQ4ID0gLyogQF9fUFVSRV9fICovIHRlbXBsYXRlJDEoYDxzdmcgeG1sbnM9XCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wiIHdpZHRoPVwiMTZcIiBoZWlnaHQ9XCIxN1wiIHZpZXdCb3g9XCIwIDAgMTYgMTdcIiBmaWxsPVwibm9uZVwiPjxwYXRoIGZpbGwtcnVsZT1cImV2ZW5vZGRcIiBjbGlwLXJ1bGU9XCJldmVub2RkXCIgZD1cIk0xIDQuMTI2OTVDMSAzLjA3NzU0IDEgMi41NTI4NCAxLjE5MjAyIDIuMTQ2ODRDMS4zODk4NiAxLjcyODU2IDEuNzI2NiAxLjM5MTgxIDIuMTQ0ODkgMS4xOTM5N0MyLjU1MDg4IDEuMDAxOTUgMy4wNzU1OSAxLjAwMTk1IDQuMTI1IDEuMDAxOTVDNS4xNzQ0MSAxLjAwMTk1IDUuNjk5MTIgMS4wMDE5NSA2LjEwNTExIDEuMTkzOTdDNi41MjM0IDEuMzkxODEgNi44NjAxNCAxLjcyODU2IDcuMDU3OTggMi4xNDY4NEM3LjI1IDIuNTUyODQgNy4yNSAzLjA3NzU0IDcuMjUgNC4xMjY5NUM3LjI1IDUuMTc2MzYgNy4yNSA1LjcwMTA3IDcuMDU3OTggNi4xMDcwNkM2Ljg2MDE0IDYuNTI1MzUgNi41MjM0IDYuODYyMSA2LjEwNTExIDcuMDU5OTNDNS42OTkxMiA3LjI1MTk1IDUuMTc0NDEgNy4yNTE5NSA0LjEyNSA3LjI1MTk1QzMuMDc1NTkgNy4yNTE5NSAyLjU1MDg4IDcuMjUxOTUgMi4xNDQ4OSA3LjA1OTkzQzEuNzI2NiA2Ljg2MjEgMS4zODk4NiA2LjUyNTM1IDEuMTkyMDIgNi4xMDcwNkMxIDUuNzAxMDcgMSA1LjE3NjM2IDEgNC4xMjY5NVpNMi41IDMuMzAxOTVDMi41IDMuMDIxOTMgMi41IDIuODgxOTEgMi41NTQ1IDIuNzc0OTZDMi42MDI0MyAyLjY4MDg4IDIuNjc4OTIgMi42MDQzOSAyLjc3MyAyLjU1NjQ1QzIuODc5OTYgMi41MDE5NSAzLjAxOTk3IDIuNTAxOTUgMy4zIDIuNTAxOTVINC45NUM1LjIzMDAzIDIuNTAxOTUgNS4zNzAwNCAyLjUwMTk1IDUuNDc3IDIuNTU2NDVDNS41NzEwOCAyLjYwNDM5IDUuNjQ3NTcgMi42ODA4OCA1LjY5NTUgMi43NzQ5NkM1Ljc1IDIuODgxOTEgNS43NSAzLjAyMTkzIDUuNzUgMy4zMDE5NVY0Ljk1MTk1QzUuNzUgNS4yMzE5OCA1Ljc1IDUuMzcxOTkgNS42OTU1IDUuNDc4OTVDNS42NDc1NyA1LjU3MzAzIDUuNTcxMDggNS42NDk1MiA1LjQ3NyA1LjY5NzQ2QzUuMzcwMDQgNS43NTE5NSA1LjIzMDAzIDUuNzUxOTUgNC45NSA1Ljc1MTk1SDMuM0MzLjAxOTk3IDUuNzUxOTUgMi44Nzk5NiA1Ljc1MTk1IDIuNzczIDUuNjk3NDZDMi42Nzg5MiA1LjY0OTUyIDIuNjAyNDMgNS41NzMwMyAyLjU1NDUgNS40Nzg5NUMyLjUgNS4zNzE5OSAyLjUgNS4yMzE5OCAyLjUgNC45NTE5NVYzLjMwMTk1Wk0xIDExLjg3N0MxIDEwLjgyNzUgMSAxMC4zMDI4IDEuMTkyMDIgOS44OTY4NEMxLjM4OTg2IDkuNDc4NTYgMS43MjY2IDkuMTQxODEgMi4xNDQ4OSA4Ljk0Mzk3QzIuNTUwODggOC43NTE5NSAzLjA3NTU5IDguNzUxOTUgNC4xMjUgOC43NTE5NUM1LjE3NDQxIDguNzUxOTUgNS42OTkxMiA4Ljc1MTk1IDYuMTA1MTEgOC45NDM5N0M2LjUyMzQgOS4xNDE4MSA2Ljg2MDE0IDkuNDc4NTYgNy4wNTc5OCA5Ljg5Njg0QzcuMjUgMTAuMzAyOCA3LjI1IDEwLjgyNzUgNy4yNSAxMS44NzdDNy4yNSAxMi45MjY0IDcuMjUgMTMuNDUxMSA3LjA1Nzk4IDEzLjg1NzFDNi44NjAxNCAxNC4yNzUzIDYuNTIzNCAxNC42MTIxIDYuMTA1MTEgMTQuODA5OUM1LjY5OTEyIDE1LjAwMiA1LjE3NDQxIDE1LjAwMiA0LjEyNSAxNS4wMDJDMy4wNzU1OSAxNS4wMDIgMi41NTA4OCAxNS4wMDIgMi4xNDQ4OSAxNC44MDk5QzEuNzI2NiAxNC42MTIxIDEuMzg5ODYgMTQuMjc1MyAxLjE5MjAyIDEzLjg1NzFDMSAxMy40NTExIDEgMTIuOTI2NCAxIDExLjg3N1pNMi41IDExLjA1MkMyLjUgMTAuNzcxOSAyLjUgMTAuNjMxOSAyLjU1NDUgMTAuNTI1QzIuNjAyNDMgMTAuNDMwOSAyLjY3ODkyIDEwLjM1NDQgMi43NzMgMTAuMzA2NEMyLjg3OTk2IDEwLjI1MiAzLjAxOTk3IDEwLjI1MiAzLjMgMTAuMjUySDQuOTVDNS4yMzAwMyAxMC4yNTIgNS4zNzAwNCAxMC4yNTIgNS40NzcgMTAuMzA2NEM1LjU3MTA4IDEwLjM1NDQgNS42NDc1NyAxMC40MzA5IDUuNjk1NSAxMC41MjVDNS43NSAxMC42MzE5IDUuNzUgMTAuNzcxOSA1Ljc1IDExLjA1MlYxMi43MDJDNS43NSAxMi45ODIgNS43NSAxMy4xMjIgNS42OTU1IDEzLjIyODlDNS42NDc1NyAxMy4zMjMgNS41NzEwOCAxMy4zOTk1IDUuNDc3IDEzLjQ0NzVDNS4zNzAwNCAxMy41MDIgNS4yMzAwMyAxMy41MDIgNC45NSAxMy41MDJIMy4zQzMuMDE5OTcgMTMuNTAyIDIuODc5OTYgMTMuNTAyIDIuNzczIDEzLjQ0NzVDMi42Nzg5MiAxMy4zOTk1IDIuNjAyNDMgMTMuMzIzIDIuNTU0NSAxMy4yMjg5QzIuNSAxMy4xMjIgMi41IDEyLjk4MiAyLjUgMTIuNzAyVjExLjA1MlpNOC45NDIwMiAyLjE0Njg0QzguNzUgMi41NTI4NCA4Ljc1IDMuMDc3NTQgOC43NSA0LjEyNjk1QzguNzUgNS4xNzYzNiA4Ljc1IDUuNzAxMDcgOC45NDIwMiA2LjEwNzA2QzkuMTM5ODYgNi41MjUzNSA5LjQ3NjYgNi44NjIxIDkuODk0ODkgNy4wNTk5M0MxMC4zMDA5IDcuMjUxOTUgMTAuODI1NiA3LjI1MTk1IDExLjg3NSA3LjI1MTk1QzEyLjkyNDQgNy4yNTE5NSAxMy40NDkxIDcuMjUxOTUgMTMuODU1MSA3LjA1OTkzQzE0LjI3MzQgNi44NjIxIDE0LjYxMDEgNi41MjUzNSAxNC44MDggNi4xMDcwNkMxNSA1LjcwMTA3IDE1IDUuMTc2MzYgMTUgNC4xMjY5NUMxNSAzLjA3NzU0IDE1IDIuNTUyODQgMTQuODA4IDIuMTQ2ODRDMTQuNjEwMSAxLjcyODU2IDE0LjI3MzQgMS4zOTE4MSAxMy44NTUxIDEuMTkzOTdDMTMuNDQ5MSAxLjAwMTk1IDEyLjkyNDQgMS4wMDE5NSAxMS44NzUgMS4wMDE5NUMxMC44MjU2IDEuMDAxOTUgMTAuMzAwOSAxLjAwMTk1IDkuODk0ODkgMS4xOTM5N0M5LjQ3NjYgMS4zOTE4MSA5LjEzOTg2IDEuNzI4NTYgOC45NDIwMiAyLjE0Njg0Wk0xMC4zMDQ1IDIuNzc0OTZDMTAuMjUgMi44ODE5MSAxMC4yNSAzLjAyMTkzIDEwLjI1IDMuMzAxOTVWNC45NTE5NUMxMC4yNSA1LjIzMTk4IDEwLjI1IDUuMzcxOTkgMTAuMzA0NSA1LjQ3ODk1QzEwLjM1MjQgNS41NzMwMyAxMC40Mjg5IDUuNjQ5NTIgMTAuNTIzIDUuNjk3NDZDMTAuNjMgNS43NTE5NSAxMC43NyA1Ljc1MTk1IDExLjA1IDUuNzUxOTVIMTIuN0MxMi45OCA1Ljc1MTk1IDEzLjEyIDUuNzUxOTUgMTMuMjI3IDUuNjk3NDZDMTMuMzIxMSA1LjY0OTUyIDEzLjM5NzYgNS41NzMwMyAxMy40NDU1IDUuNDc4OTVDMTMuNSA1LjM3MTk5IDEzLjUgNS4yMzE5OCAxMy41IDQuOTUxOTVWMy4zMDE5NUMxMy41IDMuMDIxOTMgMTMuNSAyLjg4MTkxIDEzLjQ0NTUgMi43NzQ5NkMxMy4zOTc2IDIuNjgwODggMTMuMzIxMSAyLjYwNDM5IDEzLjIyNyAyLjU1NjQ1QzEzLjEyIDIuNTAxOTUgMTIuOTggMi41MDE5NSAxMi43IDIuNTAxOTVIMTEuMDVDMTAuNzcgMi41MDE5NSAxMC42MyAyLjUwMTk1IDEwLjUyMyAyLjU1NjQ1QzEwLjQyODkgMi42MDQzOSAxMC4zNTI0IDIuNjgwODggMTAuMzA0NSAyLjc3NDk2Wk04LjgwNzI3IDkuMTM1MThDOC43NSA5LjI2MjQyIDguNzUgOS40MjU2IDguNzUgOS43NTE5NUM4Ljc1IDEwLjA3ODMgOC43NSAxMC4yNDE1IDguODA3MjcgMTAuMzY4N0M4Ljg3MjQ1IDEwLjUxMzYgOC45ODg0IDEwLjYyOTUgOS4xMzMyMyAxMC42OTQ3QzkuMjYwNDcgMTAuNzUyIDkuNDIzNjUgMTAuNzUyIDkuNzUgMTAuNzUyQzEwLjA3NjQgMTAuNzUyIDEwLjIzOTUgMTAuNzUyIDEwLjM2NjggMTAuNjk0N0MxMC41MTE2IDEwLjYyOTUgMTAuNjI3NiAxMC41MTM2IDEwLjY5MjcgMTAuMzY4N0MxMC43NSAxMC4yNDE1IDEwLjc1IDEwLjA3ODMgMTAuNzUgOS43NTE5NUMxMC43NSA5LjQyNTYgMTAuNzUgOS4yNjI0MiAxMC42OTI3IDkuMTM1MThDMTAuNjI3NiA4Ljk5MDM1IDEwLjUxMTYgOC44NzQ0IDEwLjM2NjggOC44MDkyMkMxMC4yMzk1IDguNzUxOTUgMTAuMDc2NCA4Ljc1MTk1IDkuNzUgOC43NTE5NUM5LjQyMzY1IDguNzUxOTUgOS4yNjA0NyA4Ljc1MTk1IDkuMTMzMjMgOC44MDkyMkM4Ljk4ODQgOC44NzQ0IDguODcyNDUgOC45OTAzNSA4LjgwNzI3IDkuMTM1MThaTTEwLjg3IDExLjg3NzFDMTAuODcgMTEuNTQ2IDEwLjg3IDExLjM4MDUgMTAuOTI4OSAxMS4yNTE3QzEwLjk5MzggMTEuMTA5OCAxMS4xMDc3IDEwLjk5NTkgMTEuMjQ5NyAxMC45MzFDMTEuMzc4NCAxMC44NzIxIDExLjU0MzkgMTAuODcyMSAxMS44NzUgMTAuODcyMUMxMi4yMDYxIDEwLjg3MjEgMTIuMzcxNiAxMC44NzIxIDEyLjUwMDMgMTAuOTMxQzEyLjY0MjMgMTAuOTk1OSAxMi43NTYyIDExLjEwOTggMTIuODIxMSAxMS4yNTE3QzEyLjg4IDExLjM4MDUgMTIuODggMTEuNTQ2IDEyLjg4IDExLjg3NzFDMTIuODggMTIuMjA4MSAxMi44OCAxMi4zNzM3IDEyLjgyMTEgMTIuNTAyNEMxMi43NTYyIDEyLjY0NDQgMTIuNjQyMyAxMi43NTgzIDEyLjUwMDMgMTIuODIzMkMxMi4zNzE2IDEyLjg4MjEgMTIuMjA2MSAxMi44ODIxIDExLjg3NSAxMi44ODIxQzExLjU0MzkgMTIuODgyMSAxMS4zNzg0IDEyLjg4MjEgMTEuMjQ5NyAxMi44MjMyQzExLjEwNzcgMTIuNzU4MyAxMC45OTM4IDEyLjY0NDQgMTAuOTI4OSAxMi41MDI0QzEwLjg3IDEyLjM3MzcgMTAuODcgMTIuMjA4MSAxMC44NyAxMS44NzcxWk04LjgwNzI3IDEzLjM4NTJDOC43NSAxMy41MTI0IDguNzUgMTMuNjc1NiA4Ljc1IDE0LjAwMkM4Ljc1IDE0LjMyODMgOC43NSAxNC40OTE1IDguODA3MjcgMTQuNjE4N0M4Ljg3MjQ1IDE0Ljc2MzYgOC45ODg0IDE0Ljg3OTUgOS4xMzMyMyAxNC45NDQ3QzkuMjYwNDcgMTUuMDAyIDkuNDIzNjUgMTUuMDAyIDkuNzUgMTUuMDAyQzEwLjA3NjQgMTUuMDAyIDEwLjIzOTUgMTUuMDAyIDEwLjM2NjggMTQuOTQ0N0MxMC41MTE2IDE0Ljg3OTUgMTAuNjI3NiAxNC43NjM2IDEwLjY5MjcgMTQuNjE4N0MxMC43NSAxNC40OTE1IDEwLjc1IDE0LjMyODMgMTAuNzUgMTQuMDAyQzEwLjc1IDEzLjY3NTYgMTAuNzUgMTMuNTEyNCAxMC42OTI3IDEzLjM4NTJDMTAuNjI3NiAxMy4yNDA0IDEwLjUxMTYgMTMuMTI0NCAxMC4zNjY4IDEzLjA1OTJDMTAuMjM5NSAxMy4wMDIgMTAuMDc2NCAxMy4wMDIgOS43NSAxMy4wMDJDOS40MjM2NSAxMy4wMDIgOS4yNjA0NyAxMy4wMDIgOS4xMzMyMyAxMy4wNTkyQzguOTg4NCAxMy4xMjQ0IDguODcyNDUgMTMuMjQwNCA4LjgwNzI3IDEzLjM4NTJaTTEzIDkuNzUxOTVDMTMgOS40MjU2IDEzIDkuMjYyNDIgMTMuMDU3MyA5LjEzNTE4QzEzLjEyMjQgOC45OTAzNSAxMy4yMzg0IDguODc0NCAxMy4zODMyIDguODA5MjJDMTMuNTEwNSA4Ljc1MTk1IDEzLjY3MzYgOC43NTE5NSAxNCA4Ljc1MTk1QzE0LjMyNjQgOC43NTE5NSAxNC40ODk1IDguNzUxOTUgMTQuNjE2OCA4LjgwOTIyQzE0Ljc2MTYgOC44NzQ0IDE0Ljg3NzYgOC45OTAzNSAxNC45NDI3IDkuMTM1MThDMTUgOS4yNjI0MiAxNSA5LjQyNTYgMTUgOS43NTE5NUMxNSAxMC4wNzgzIDE1IDEwLjI0MTUgMTQuOTQyNyAxMC4zNjg3QzE0Ljg3NzYgMTAuNTEzNiAxNC43NjE2IDEwLjYyOTUgMTQuNjE2OCAxMC42OTQ3QzE0LjQ4OTUgMTAuNzUyIDE0LjMyNjQgMTAuNzUyIDE0IDEwLjc1MkMxMy42NzM2IDEwLjc1MiAxMy41MTA1IDEwLjc1MiAxMy4zODMyIDEwLjY5NDdDMTMuMjM4NCAxMC42Mjk1IDEzLjEyMjQgMTAuNTEzNiAxMy4wNTczIDEwLjM2ODdDMTMgMTAuMjQxNSAxMyAxMC4wNzgzIDEzIDkuNzUxOTVaTTEzLjA1NzMgMTMuMzg1MkMxMyAxMy41MTI0IDEzIDEzLjY3NTYgMTMgMTQuMDAyQzEzIDE0LjMyODMgMTMgMTQuNDkxNSAxMy4wNTczIDE0LjYxODdDMTMuMTIyNCAxNC43NjM2IDEzLjIzODQgMTQuODc5NSAxMy4zODMyIDE0Ljk0NDdDMTMuNTEwNSAxNS4wMDIgMTMuNjczNiAxNS4wMDIgMTQgMTUuMDAyQzE0LjMyNjQgMTUuMDAyIDE0LjQ4OTUgMTUuMDAyIDE0LjYxNjggMTQuOTQ0N0MxNC43NjE2IDE0Ljg3OTUgMTQuODc3NiAxNC43NjM2IDE0Ljk0MjcgMTQuNjE4N0MxNSAxNC40OTE1IDE1IDE0LjMyODMgMTUgMTQuMDAyQzE1IDEzLjY3NTYgMTUgMTMuNTEyNCAxNC45NDI3IDEzLjM4NTJDMTQuODc3NiAxMy4yNDA0IDE0Ljc2MTYgMTMuMTI0NCAxNC42MTY4IDEzLjA1OTJDMTQuNDg5NSAxMy4wMDIgMTQuMzI2NCAxMy4wMDIgMTQgMTMuMDAyQzEzLjY3MzYgMTMuMDAyIDEzLjUxMDUgMTMuMDAyIDEzLjM4MzIgMTMuMDU5MkMxMy4yMzg0IDEzLjEyNDQgMTMuMTIyNCAxMy4yNDA0IDEzLjA1NzMgMTMuMzg1MlpcIj48L3BhdGg+PC9zdmc+YCk7XG5jb25zdCBRUkljb24gPSAocHJvcHMpID0+IHtcbiAgY29uc3QgdGhlbWUgPSB1c2VUaGVtZSgpO1xuICBjb25zdCBmaWxsID0gKCkgPT4gcHJvcHMuZmlsbCB8fCB0aGVtZS5jb2xvcnMuaWNvbi5zZWNvbmRhcnk7XG4gIHJldHVybiAoKCkgPT4ge1xuICAgIGNvbnN0IF9lbCQgPSBfdG1wbCQkOC5jbG9uZU5vZGUodHJ1ZSksIF9lbCQyID0gX2VsJC5maXJzdENoaWxkO1xuICAgIGNyZWF0ZVJlbmRlckVmZmVjdCgoKSA9PiBzZXRBdHRyaWJ1dGUoX2VsJDIsIFwiZmlsbFwiLCBmaWxsKCkpKTtcbiAgICByZXR1cm4gX2VsJDtcbiAgfSkoKTtcbn07XG5jb25zdCBjb250YWluZXJCb3JkZXJzID0ge1xuICBtOiBcIjE2cHhcIixcbiAgczogXCIxMnB4XCIsXG4gIG5vbmU6IFwiMFwiXG59O1xuY29uc3Qgd2FsbGV0Qm9yZGVycyA9IHtcbiAgbTogXCI2cHhcIixcbiAgczogXCI2cHhcIixcbiAgbm9uZTogXCIwXCJcbn07XG5jb25zdCBGb3VyV2FsbGV0c0NhcmQgPSBzdHlsZWQuZGl2YFxuICAgIHdpZHRoOiA2MHB4O1xuICAgIGhlaWdodDogNjBweDtcbiAgICBwYWRkaW5nOiA4cHg7XG4gICAgbWFyZ2luLWJvdHRvbTogOHB4O1xuICAgIGJvcmRlci1yYWRpdXM6ICR7KHByb3BzKSA9PiBjb250YWluZXJCb3JkZXJzW3Byb3BzLnRoZW1lLmJvcmRlclJhZGl1c119O1xuICAgIGJhY2tncm91bmQtY29sb3I6ICR7KHByb3BzKSA9PiBwcm9wcy50aGVtZS5jb2xvcnMuYmFja2dyb3VuZC50aW50fTtcbiAgICBkaXNwbGF5OiBncmlkO1xuICAgIGdyaWQtdGVtcGxhdGU6IDFmciAxZnIgLyAxZnIgMWZyO1xuICAgIGdhcDogNHB4O1xuYDtcbmNvbnN0IEZvdXJXYWxsZXRzSW1hZ2UgPSBzdHlsZWQoV2FsbGV0SW1hZ2UpYFxuICAgIHdpZHRoOiAyMHB4O1xuICAgIGhlaWdodDogMjBweDtcbiAgICBib3JkZXItcmFkaXVzOiAkeyhwcm9wcykgPT4gd2FsbGV0Qm9yZGVyc1twcm9wcy50aGVtZS5ib3JkZXJSYWRpdXNdfTtcbmA7XG5jb25zdCBGb3VyV2FsbGV0c0l0ZW0gPSAocHJvcHMpID0+IHtcbiAgcmV0dXJuIGNyZWF0ZUNvbXBvbmVudChXYWxsZXRJdGVtLCB7XG4gICAgZ2V0IG5hbWUoKSB7XG4gICAgICByZXR1cm4gcHJvcHMubGFiZWxMaW5lMTtcbiAgICB9LFxuICAgIGdldCBzZWNvbmRMaW5lKCkge1xuICAgICAgcmV0dXJuIHByb3BzLmxhYmVsTGluZTI7XG4gICAgfSxcbiAgICBnZXQgaWNvbigpIHtcbiAgICAgIHJldHVybiBjcmVhdGVDb21wb25lbnQoRm91cldhbGxldHNDYXJkLCB7XG4gICAgICAgIGdldCBjaGlsZHJlbigpIHtcbiAgICAgICAgICByZXR1cm4gY3JlYXRlQ29tcG9uZW50KEZvciwge1xuICAgICAgICAgICAgZWFjaDogWzAsIDEsIDIsIDNdLFxuICAgICAgICAgICAgY2hpbGRyZW46IChpbmRleCkgPT4gY3JlYXRlQ29tcG9uZW50KEZvdXJXYWxsZXRzSW1hZ2UsIHtcbiAgICAgICAgICAgICAgZ2V0IHNyYygpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gcHJvcHMuaW1hZ2VzW2luZGV4XTtcbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSlcbiAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgICAgfSk7XG4gICAgfSxcbiAgICBvbkNsaWNrOiAoKSA9PiBwcm9wcy5vbkNsaWNrKClcbiAgfSk7XG59O1xuY29uc3QgQVRfV0FMTEVUX0FQUF9OQU1FID0gXCJ0ZWxlZ3JhbS13YWxsZXRcIjtcbmNvbnN0IElNRyA9IHtcbiAgVE9OOiBcImh0dHBzOi8vcmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbS90b24tY29ubmVjdC9zZGsvbWFpbi9hc3NldHMvdG9uLWljb24tNDgucG5nXCIsXG4gIFRHOiBcImh0dHBzOi8vcmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbS90b24tY29ubmVjdC9zZGsvbWFpbi9hc3NldHMvdGcucG5nXCJcbn07XG5jb25zdCBXYWxsZXRMYWJlbGVkSXRlbSA9IChwcm9wcykgPT4ge1xuICBjb25zdCBbdDJdID0gdXNlSTE4bigpO1xuICBjb25zdCB3YWxsZXRzU2Vjb25kTGluZSA9ICgpID0+IHtcbiAgICBpZiAocHJvcHMud2FsbGV0LmFwcE5hbWUgPT09IEFUX1dBTExFVF9BUFBfTkFNRSkge1xuICAgICAgcmV0dXJuIHZvaWQgMDtcbiAgICB9XG4gICAgaWYgKFwiaXNQcmVmZXJyZWRcIiBpbiBwcm9wcy53YWxsZXQgJiYgcHJvcHMud2FsbGV0LmlzUHJlZmVycmVkKSB7XG4gICAgICByZXR1cm4gdDIoXCJ3YWxsZXRJdGVtLnJlY2VudFwiLCB7fSwgXCJSZWNlbnRcIik7XG4gICAgfVxuICAgIGlmIChpc1dhbGxldEluZm9DdXJyZW50bHlJbmplY3RlZChwcm9wcy53YWxsZXQpKSB7XG4gICAgICByZXR1cm4gdDIoXCJ3YWxsZXRJdGVtLmluc3RhbGxlZFwiLCB7fSwgXCJJbnN0YWxsZWRcIik7XG4gICAgfVxuICAgIGlmIChwcm9wcy53YWxsZXQubmFtZSA9PT0gXCJUb25rZWVwZXJcIikge1xuICAgICAgcmV0dXJuIHQyKFwid2FsbGV0SXRlbS5wb3B1bGFyXCIsIHt9LCBcIlBvcHVsYXJcIik7XG4gICAgfVxuICAgIHJldHVybiB2b2lkIDA7XG4gIH07XG4gIHJldHVybiBjcmVhdGVNZW1vKCgoKSA9PiB7XG4gICAgY29uc3QgX2MkID0gY3JlYXRlTWVtbygoKSA9PiBwcm9wcy53YWxsZXQuYXBwTmFtZSA9PT0gQVRfV0FMTEVUX0FQUF9OQU1FKTtcbiAgICByZXR1cm4gKCkgPT4gX2MkKCkgPyBjcmVhdGVDb21wb25lbnQoV2FsbGV0SXRlbSwge1xuICAgICAgZ2V0IGljb24oKSB7XG4gICAgICAgIHJldHVybiBwcm9wcy53YWxsZXQuaW1hZ2VVcmw7XG4gICAgICB9LFxuICAgICAgZ2V0IG5hbWUoKSB7XG4gICAgICAgIHJldHVybiB0MihcIndhbGxldEl0ZW0ud2FsbGV0T25cIiwge30sIFwiV2FsbGV0IE9uXCIpO1xuICAgICAgfSxcbiAgICAgIHNlY29uZExpbmU6IFwiVGVsZWdyYW1cIixcbiAgICAgIGdldCBiYWRnZVVybCgpIHtcbiAgICAgICAgcmV0dXJuIElNRy5URztcbiAgICAgIH0sXG4gICAgICBvbkNsaWNrOiAoKSA9PiBwcm9wcy5vbkNsaWNrKClcbiAgICB9KSA6IGNyZWF0ZUNvbXBvbmVudChXYWxsZXRJdGVtLCB7XG4gICAgICBnZXQgaWNvbigpIHtcbiAgICAgICAgcmV0dXJuIHByb3BzLndhbGxldC5pbWFnZVVybDtcbiAgICAgIH0sXG4gICAgICBnZXQgbmFtZSgpIHtcbiAgICAgICAgcmV0dXJuIHByb3BzLndhbGxldC5uYW1lO1xuICAgICAgfSxcbiAgICAgIGdldCBzZWNvbmRMaW5lKCkge1xuICAgICAgICByZXR1cm4gd2FsbGV0c1NlY29uZExpbmUoKTtcbiAgICAgIH0sXG4gICAgICBzZWNvbmRMaW5lQ29sb3JQcmltYXJ5OiBmYWxzZSxcbiAgICAgIG9uQ2xpY2s6ICgpID0+IHByb3BzLm9uQ2xpY2soKVxuICAgIH0pO1xuICB9KSgpKTtcbn07XG5jb25zdCBTY3JvbGxDb250YWluZXJTdHlsZWQgPSBzdHlsZWQuZGl2YFxuICAgIHdpZHRoOiAxMDAlO1xuICAgIG92ZXJmbG93LXk6IGF1dG87XG4gICAgbWF4LWhlaWdodDogJHsocHJvcHMpID0+IHByb3BzLm1heEhlaWdodH07XG5cbiAgICBzY3JvbGxiYXItd2lkdGg6IG5vbmU7XG4gICAgJiY6Oi13ZWJraXQtc2Nyb2xsYmFyIHtcbiAgICAgICAgZGlzcGxheTogbm9uZTtcbiAgICB9XG5cbiAgICAmJjo6LXdlYmtpdC1zY3JvbGxiYXItdHJhY2sge1xuICAgICAgICBiYWNrZ3JvdW5kOiB0cmFuc3BhcmVudDtcbiAgICB9XG5cbiAgICAmJjo6LXdlYmtpdC1zY3JvbGxiYXItdGh1bWIge1xuICAgICAgICBkaXNwbGF5OiBub25lO1xuICAgIH1cbmA7XG5jb25zdCBTY3JvbGxEaXZpZGVyID0gc3R5bGVkLmRpdmBcbiAgICBoZWlnaHQ6IDFweDtcbiAgICBtYXJnaW46IDAgLTI0cHg7XG4gICAgd2lkdGg6IGNhbGMoMTAwJSArIDQ4cHgpO1xuICAgIG9wYWNpdHk6IDAuMDg7XG4gICAgYmFja2dyb3VuZDogJHsocHJvcHMpID0+IHByb3BzLmlzU2hvd24gPyBwcm9wcy50aGVtZS5jb2xvcnMuaWNvbi5zZWNvbmRhcnkgOiBcInRyYW5zcGFyZW50XCJ9O1xuICAgIHRyYW5zaXRpb246IGJhY2tncm91bmQgMC4xNXMgZWFzZS1pbi1vdXQ7XG5cbiAgICAke21lZGlhKFwibW9iaWxlXCIpfSB7XG4gICAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgICBtYXJnaW46IDA7XG4gICAgfVxuYDtcbmNvbnN0IFt3aW5kb3dIZWlnaHQsIHNldFdpbmRvd0hlaWdodF0gPSBjcmVhdGVTaWduYWwoKChfaCA9IGdldFdpbmRvdyQxKCkpID09IG51bGwgPyB2b2lkIDAgOiBfaC5pbm5lckhlaWdodCkgfHwgMCk7XG5pZiAoZ2V0V2luZG93JDEoKSkge1xuICB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcihcInJlc2l6ZVwiLCAoKSA9PiBzZXRXaW5kb3dIZWlnaHQod2luZG93LmlubmVySGVpZ2h0KSk7XG59XG5jb25zdCBbaXNNb2JpbGUsIHNldElzTW9iaWxlXSA9IGNyZWF0ZVNpZ25hbChpc0RldmljZShcIm1vYmlsZVwiKSk7XG5jb25zdCB1cGRhdGVJc01vYmlsZSA9ICgpID0+IHNldElzTW9iaWxlKGlzRGV2aWNlKFwibW9iaWxlXCIpKTtcbmlmIChnZXRXaW5kb3ckMSgpKSB7XG4gIHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKFwicmVzaXplXCIsICgpID0+IHVwZGF0ZUlzTW9iaWxlKCkpO1xuICB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcihcImxvYWRcIiwgKCkgPT4gdXBkYXRlSXNNb2JpbGUoKSwgeyBvbmNlOiB0cnVlIH0pO1xufVxuY29uc3QgU2Nyb2xsQ29udGFpbmVyID0gKHByb3BzKSA9PiB7XG4gIGNvbnN0IFtzY3JvbGxlZCwgc2V0U2Nyb2xsZWRdID0gY3JlYXRlU2lnbmFsKGZhbHNlKTtcbiAgY29uc3Qgb25TY3JvbGwgPSAoZTIpID0+IHtcbiAgICBzZXRTY3JvbGxlZChlMi50YXJnZXQuc2Nyb2xsVG9wID4gMCk7XG4gIH07XG4gIGNvbnN0IG9mZnNldCA9ICgpID0+IGlzTW9iaWxlKCkgPyAxNTAgOiAyMDA7XG4gIGNvbnN0IG1heEhlaWdodCA9ICgpID0+IHByb3BzLm1heEhlaWdodCAhPT0gdm9pZCAwID8gYCR7cHJvcHMubWF4SGVpZ2h0fXB4YCA6IGAke3dpbmRvd0hlaWdodCgpIC0gb2Zmc2V0KCl9cHhgO1xuICByZXR1cm4gW2NyZWF0ZUNvbXBvbmVudChTY3JvbGxEaXZpZGVyLCB7XG4gICAgZ2V0IGlzU2hvd24oKSB7XG4gICAgICByZXR1cm4gc2Nyb2xsZWQoKTtcbiAgICB9XG4gIH0pLCBjcmVhdGVDb21wb25lbnQoU2Nyb2xsQ29udGFpbmVyU3R5bGVkLCB7XG4gICAgZ2V0IG1heEhlaWdodCgpIHtcbiAgICAgIHJldHVybiBtYXhIZWlnaHQoKTtcbiAgICB9LFxuICAgIG9uU2Nyb2xsLFxuICAgIGdldCBbXCJjbGFzc1wiXSgpIHtcbiAgICAgIHJldHVybiBwcm9wcy5jbGFzcztcbiAgICB9LFxuICAgIGdldCBjaGlsZHJlbigpIHtcbiAgICAgIHJldHVybiBwcm9wcy5jaGlsZHJlbjtcbiAgICB9XG4gIH0pXTtcbn07XG5jb25zdCBBU3R5bGVkID0gc3R5bGVkLmFgXG4gICAgZGlzcGxheTogYmxvY2s7XG4gICAgdGV4dC1kZWNvcmF0aW9uOiB1bnNldDtcbmA7XG5jb25zdCBMaW5rID0gKHByb3BzKSA9PiB7XG4gIGNvbnN0IGF0dHJpYnV0ZXMgPSAoKSA9PiBwcm9wcy5ibGFuayA/IHtcbiAgICByZWw6IFwibm9yZWZlcnJlciBub29wZW5lclwiXG4gIH0gOiB7fTtcbiAgcmV0dXJuIGNyZWF0ZUNvbXBvbmVudChBU3R5bGVkLCBtZXJnZVByb3BzKHtcbiAgICBnZXQgaHJlZigpIHtcbiAgICAgIHJldHVybiBwcm9wcy5ocmVmO1xuICAgIH0sXG4gICAgZ2V0IHRhcmdldCgpIHtcbiAgICAgIHJldHVybiBwcm9wcy5ibGFuayA/IFwiX2JsYW5rXCIgOiBcIl9zZWxmXCI7XG4gICAgfSxcbiAgICBnZXQgW1wiY2xhc3NcIl0oKSB7XG4gICAgICByZXR1cm4gcHJvcHMuY2xhc3M7XG4gICAgfVxuICB9LCBhdHRyaWJ1dGVzLCB7XG4gICAgZ2V0IGNoaWxkcmVuKCkge1xuICAgICAgcmV0dXJuIHByb3BzLmNoaWxkcmVuO1xuICAgIH1cbiAgfSkpO1xufTtcbmNvbnN0IFRvbkNvbm5lY3RVaUNvbnRleHQgPSBjcmVhdGVDb250ZXh0KCk7XG5jb25zdCBfdG1wbCQkNyA9IC8qIEBfX1BVUkVfXyAqLyB0ZW1wbGF0ZSQxKGA8c3ZnIHdpZHRoPVwiMjRcIiBoZWlnaHQ9XCIyNFwiIHZpZXdCb3g9XCIwIDAgMjQgMjRcIiBmaWxsPVwibm9uZVwiIHhtbG5zPVwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcIj48cGF0aCBmaWxsLXJ1bGU9XCJldmVub2RkXCIgY2xpcC1ydWxlPVwiZXZlbm9kZFwiIGQ9XCJNNy43NjIyOCAyLjA5OTk4SDEwLjIzNzhDMTEuMDQ1OCAyLjA5OTk3IDExLjcwNjcgMi4wOTk5NiAxMi4yNDM4IDIuMTQzODRDMTIuNzk5NyAyLjE4OTI2IDEzLjMwMTcgMi4yODYxNCAxMy43NzA2IDIuNTI1MDVDMTQuNTA0NSAyLjg5ODk2IDE1LjEwMTEgMy40OTU1OCAxNS40NzUgNC4yMjk0MUMxNS43MTM5IDQuNjk4MyAxNS44MTA4IDUuMjAwMzggMTUuODU2MiA1Ljc1NjI5QzE1LjkwMDEgNi4yOTMzNyAxNS45MDAxIDYuOTU0MjIgMTUuOTAwMSA3Ljc2MjI3VjguMUgxNi4yMzc3QzE3LjA0NTcgOC4wOTk5OSAxNy43MDY2IDguMDk5OTggMTguMjQzNyA4LjE0Mzg2QzE4Ljc5OTYgOC4xODkyOCAxOS4zMDE3IDguMjg2MTYgMTkuNzcwNSA4LjUyNTA3QzIwLjUwNDQgOC44OTg5OCAyMS4xMDEgOS40OTU2IDIxLjQ3NDkgMTAuMjI5NEMyMS43MTM4IDEwLjY5ODMgMjEuODEwNyAxMS4yMDA0IDIxLjg1NjEgMTEuNzU2M0MyMS45IDEyLjI5MzQgMjEuOSAxMi45NTQyIDIxLjkgMTMuNzYyM1YxNi4yMzc3QzIxLjkgMTcuMDQ1OCAyMS45IDE3LjcwNjYgMjEuODU2MSAxOC4yNDM3QzIxLjgxMDcgMTguNzk5NiAyMS43MTM4IDE5LjMwMTcgMjEuNDc0OSAxOS43NzA2QzIxLjEwMSAyMC41MDQ0IDIwLjUwNDQgMjEuMTAxIDE5Ljc3MDUgMjEuNDc0OUMxOS4zMDE3IDIxLjcxMzggMTguNzk5NiAyMS44MTA3IDE4LjI0MzcgMjEuODU2MUMxNy43MDY2IDIxLjkgMTcuMDQ1OCAyMS45IDE2LjIzNzggMjEuOUgxMy43NjIzQzEyLjk1NDMgMjEuOSAxMi4yOTM0IDIxLjkgMTEuNzU2MyAyMS44NTYxQzExLjIwMDQgMjEuODEwNyAxMC42OTgzIDIxLjcxMzggMTAuMjI5NCAyMS40NzQ5QzkuNDk1NjEgMjEuMTAxIDguODk4OTggMjAuNTA0NCA4LjUyNTA4IDE5Ljc3MDZDOC4yODYxNiAxOS4zMDE3IDguMTg5MjggMTguNzk5NiA4LjE0Mzg2IDE4LjI0MzdDOC4wOTk5OCAxNy43MDY2IDguMDk5OTkgMTcuMDQ1OCA4LjEgMTYuMjM3N1YxNS45SDcuNzYyMjdDNi45NTQyNiAxNS45IDYuMjkzMzUgMTUuOSA1Ljc1NjI5IDE1Ljg1NjFDNS4yMDAzOCAxNS44MTA3IDQuNjk4MyAxNS43MTM4IDQuMjI5NDEgMTUuNDc0OUMzLjQ5NTU4IDE1LjEwMSAyLjg5ODk2IDE0LjUwNDQgMi41MjUwNSAxMy43NzA1QzIuMjg2MTQgMTMuMzAxNyAyLjE4OTI2IDEyLjc5OTYgMi4xNDM4NCAxMi4yNDM3QzIuMDk5OTYgMTEuNzA2NiAyLjA5OTk3IDExLjA0NTggMi4wOTk5OCAxMC4yMzc3VjcuNzYyMjhDMi4wOTk5NyA2Ljk1NDI0IDIuMDk5OTYgNi4yOTMzNiAyLjE0Mzg0IDUuNzU2MjlDMi4xODkyNiA1LjIwMDM4IDIuMjg2MTQgNC42OTgzIDIuNTI1MDUgNC4yMjk0MUMyLjg5ODk2IDMuNDk1NTggMy40OTU1OCAyLjg5ODk2IDQuMjI5NDEgMi41MjUwNUM0LjY5ODMgMi4yODYxNCA1LjIwMDM4IDIuMTg5MjYgNS43NTYyOSAyLjE0Mzg0QzYuMjkzMzYgMi4wOTk5NiA2Ljk1NDI1IDIuMDk5OTcgNy43NjIyOCAyLjA5OTk4Wk04LjEgMTQuMVYxMy43NjIzQzguMDk5OTkgMTIuOTU0MiA4LjA5OTk4IDEyLjI5MzQgOC4xNDM4NiAxMS43NTYzQzguMTg5MjggMTEuMjAwNCA4LjI4NjE2IDEwLjY5ODMgOC41MjUwOCAxMC4yMjk0QzguODk4OTggOS40OTU2IDkuNDk1NjEgOC44OTg5OCAxMC4yMjk0IDguNTI1MDdDMTAuNjk4MyA4LjI4NjE2IDExLjIwMDQgOC4xODkyOCAxMS43NTYzIDguMTQzODZDMTIuMjkzNCA4LjA5OTk4IDEyLjk1NDIgOC4wOTk5OSAxMy43NjIzIDguMUgxNC4xMDAxVjcuNzk5OThDMTQuMTAwMSA2Ljk0NTA1IDE0LjA5OTQgNi4zNTc5OCAxNC4wNjIyIDUuOTAyODdDMTQuMDI1OSA1LjQ1ODI3IDEzLjk1OTMgNS4yMTk0NCAxMy44NzEyIDUuMDQ2NkMxMy42Njk5IDQuNjUxNDYgMTMuMzQ4NiA0LjMzMDIgMTIuOTUzNSA0LjEyODg2QzEyLjc4MDYgNC4wNDA3OSAxMi41NDE4IDMuOTc0MTkgMTIuMDk3MiAzLjkzNzg2QzExLjY0MjEgMy45MDA2OCAxMS4wNTUgMy44OTk5OCAxMC4yMDAxIDMuODk5OThINy43OTk5OEM2Ljk0NTA1IDMuODk5OTggNi4zNTc5OCAzLjkwMDY4IDUuOTAyODcgMy45Mzc4NkM1LjQ1ODI3IDMuOTc0MTkgNS4yMTk0NCA0LjA0MDc5IDUuMDQ2NiA0LjEyODg2QzQuNjUxNDYgNC4zMzAyIDQuMzMwMiA0LjY1MTQ2IDQuMTI4ODYgNS4wNDY2QzQuMDQwNzkgNS4yMTk0NCAzLjk3NDE5IDUuNDU4MjcgMy45Mzc4NiA1LjkwMjg3QzMuOTAwNjggNi4zNTc5OCAzLjg5OTk4IDYuOTQ1MDUgMy44OTk5OCA3Ljc5OTk4VjEwLjJDMy44OTk5OCAxMS4wNTQ5IDMuOTAwNjggMTEuNjQyIDMuOTM3ODYgMTIuMDk3MUMzLjk3NDE5IDEyLjU0MTcgNC4wNDA3OSAxMi43ODA1IDQuMTI4ODYgMTIuOTUzNEM0LjMzMDIgMTMuMzQ4NSA0LjY1MTQ2IDEzLjY2OTggNS4wNDY2IDEzLjg3MTFDNS4yMTk0NCAxMy45NTkyIDUuNDU4MjcgMTQuMDI1OCA1LjkwMjg3IDE0LjA2MjFDNi4zNTc5OCAxNC4wOTkzIDYuOTQ1MDUgMTQuMSA3Ljc5OTk4IDE0LjFIOC4xWk0xMS4wNDY2IDEwLjEyODlDMTEuMjE5NSAxMC4wNDA4IDExLjQ1ODMgOS45NzQyMSAxMS45MDI5IDkuOTM3ODhDMTIuMzU4IDkuOTAwNyAxMi45NDUxIDkuOSAxMy44IDkuOUgxNi4yQzE3LjA1NDkgOS45IDE3LjY0MiA5LjkwMDcgMTguMDk3MSA5LjkzNzg4QzE4LjU0MTcgOS45NzQyMSAxOC43ODA1IDEwLjA0MDggMTguOTUzNCAxMC4xMjg5QzE5LjM0ODUgMTAuMzMwMiAxOS42Njk4IDEwLjY1MTUgMTkuODcxMSAxMS4wNDY2QzE5Ljk1OTIgMTEuMjE5NSAyMC4wMjU4IDExLjQ1ODMgMjAuMDYyMSAxMS45MDI5QzIwLjA5OTMgMTIuMzU4IDIwLjEgMTIuOTQ1MSAyMC4xIDEzLjhWMTYuMkMyMC4xIDE3LjA1NDkgMjAuMDk5MyAxNy42NDIgMjAuMDYyMSAxOC4wOTcxQzIwLjAyNTggMTguNTQxNyAxOS45NTkyIDE4Ljc4MDUgMTkuODcxMSAxOC45NTM0QzE5LjY2OTggMTkuMzQ4NSAxOS4zNDg1IDE5LjY2OTggMTguOTUzNCAxOS44NzExQzE4Ljc4MDUgMTkuOTU5MiAxOC41NDE3IDIwLjAyNTggMTguMDk3MSAyMC4wNjIxQzE3LjY0MiAyMC4wOTkzIDE3LjA1NDkgMjAuMSAxNi4yIDIwLjFIMTMuOEMxMi45NDUxIDIwLjEgMTIuMzU4IDIwLjA5OTMgMTEuOTAyOSAyMC4wNjIxQzExLjQ1ODMgMjAuMDI1OCAxMS4yMTk1IDE5Ljk1OTIgMTEuMDQ2NiAxOS44NzExQzEwLjY1MTUgMTkuNjY5OCAxMC4zMzAyIDE5LjM0ODUgMTAuMTI4OSAxOC45NTM0QzEwLjA0MDggMTguNzgwNSA5Ljk3NDIxIDE4LjU0MTcgOS45Mzc4OCAxOC4wOTcxQzkuOTAwNyAxNy42NDIgOS45IDE3LjA1NDkgOS45IDE2LjJWMTMuOEM5LjkgMTIuOTQ1MSA5LjkwMDcgMTIuMzU4IDkuOTM3ODggMTEuOTAyOUM5Ljk3NDIxIDExLjQ1ODMgMTAuMDQwOCAxMS4yMTk1IDEwLjEyODkgMTEuMDQ2NkMxMC4zMzAyIDEwLjY1MTUgMTAuNjUxNSAxMC4zMzAyIDExLjA0NjYgMTAuMTI4OVpcIj48L3BhdGg+PC9zdmc+YCk7XG5jb25zdCBDb3B5SWNvbiA9IChwcm9wcykgPT4ge1xuICBjb25zdCB0aGVtZSA9IHVzZVRoZW1lKCk7XG4gIGNvbnN0IGZpbGwgPSAoKSA9PiBwcm9wcy5maWxsIHx8IHRoZW1lLmNvbG9ycy5pY29uLnByaW1hcnk7XG4gIHJldHVybiAoKCkgPT4ge1xuICAgIGNvbnN0IF9lbCQgPSBfdG1wbCQkNy5jbG9uZU5vZGUodHJ1ZSksIF9lbCQyID0gX2VsJC5maXJzdENoaWxkO1xuICAgIGNyZWF0ZVJlbmRlckVmZmVjdCgoX3AkKSA9PiB7XG4gICAgICBjb25zdCBfdiQgPSBwcm9wcy5jbGFzcywgX3YkMiA9IGZpbGwoKTtcbiAgICAgIF92JCAhPT0gX3AkLl92JCAmJiBzZXRBdHRyaWJ1dGUoX2VsJCwgXCJjbGFzc1wiLCBfcCQuX3YkID0gX3YkKTtcbiAgICAgIF92JDIgIT09IF9wJC5fdiQyICYmIHNldEF0dHJpYnV0ZShfZWwkMiwgXCJmaWxsXCIsIF9wJC5fdiQyID0gX3YkMik7XG4gICAgICByZXR1cm4gX3AkO1xuICAgIH0sIHtcbiAgICAgIF92JDogdm9pZCAwLFxuICAgICAgX3YkMjogdm9pZCAwXG4gICAgfSk7XG4gICAgcmV0dXJuIF9lbCQ7XG4gIH0pKCk7XG59O1xuY29uc3QgX3RtcGwkJDYgPSAvKiBAX19QVVJFX18gKi8gdGVtcGxhdGUkMShgPHN2ZyB3aWR0aD1cIjI0XCIgaGVpZ2h0PVwiMjRcIiB2aWV3Qm94PVwiMCAwIDI0IDI0XCIgZmlsbD1cIm5vbmVcIiB4bWxucz1cImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXCI+PHBhdGggZD1cIk04Ljc2MjQgMy4xMDAwMUM3Ljk1NDM1IDMuMSA3LjI5MzQ5IDMuMDk5OTkgNi43NTY0MiAzLjE0Mzg3QzYuMjAwNSAzLjE4OTI5IDUuNjk4NDIgMy4yODYxNyA1LjIyOTU0IDMuNTI1MDhDNC40OTU3IDMuODk4OTkgMy44OTkwOCA0LjQ5NTYxIDMuNTI1MTcgNS4yMjk0NEMzLjI4NjI2IDUuNjk4MzMgMy4xODkzOCA2LjIwMDQxIDMuMTQzOTYgNi43NTYzMkMzLjEwMDA4IDcuMjkzNCAzLjEwMDA5IDcuOTU0MjQgMy4xMDAxIDguNzYyMjlWMTUuMjM3N0MzLjEwMDA5IDE2LjA0NTggMy4xMDAwOCAxNi43MDY2IDMuMTQzOTYgMTcuMjQzN0MzLjE4OTM4IDE3Ljc5OTYgMy4yODYyNiAxOC4zMDE3IDMuNTI1MTcgMTguNzcwNkMzLjg5OTA4IDE5LjUwNDQgNC40OTU3IDIwLjEwMSA1LjIyOTU0IDIwLjQ3NDlDNS42OTg0MiAyMC43MTM4IDYuMjAwNSAyMC44MTA3IDYuNzU2NDIgMjAuODU2MUM3LjI5MzQ5IDIwLjkgNy45NTQzNCAyMC45IDguNzYyMzkgMjAuOUgxMi4wMDAxQzEyLjQ5NzIgMjAuOSAxMi45MDAxIDIwLjQ5NzEgMTIuOTAwMSAyMEMxMi45MDAxIDE5LjUwMyAxMi40OTcyIDE5LjEgMTIuMDAwMSAxOS4xSDguODAwMUM3Ljk0NTE3IDE5LjEgNy4zNTgxIDE5LjA5OTMgNi45MDI5OSAxOS4wNjIxQzYuNDU4MzkgMTkuMDI1OCA2LjIxOTU2IDE4Ljk1OTIgNi4wNDY3MiAxOC44NzExQzUuNjUxNTggMTguNjY5OCA1LjMzMDMyIDE4LjM0ODUgNS4xMjg5OCAxNy45NTM0QzUuMDQwOTIgMTcuNzgwNSA0Ljk3NDMxIDE3LjU0MTcgNC45Mzc5OCAxNy4wOTcxQzQuOTAwOCAxNi42NDIgNC45MDAxIDE2LjA1NDkgNC45MDAxIDE1LjJWOC44MDAwMUM0LjkwMDEgNy45NDUwOCA0LjkwMDggNy4zNTgwMSA0LjkzNzk4IDYuOTAyOUM0Ljk3NDMxIDYuNDU4MyA1LjA0MDkyIDYuMjE5NDcgNS4xMjg5OCA2LjA0NjYzQzUuMzMwMzIgNS42NTE0OSA1LjY1MTU4IDUuMzMwMjMgNi4wNDY3MiA1LjEyODg5QzYuMjE5NTYgNS4wNDA4MiA2LjQ1ODM5IDQuOTc0MjIgNi45MDI5OSA0LjkzNzg5QzcuMzU4MSA0LjkwMDcxIDcuOTQ1MTcgNC45MDAwMSA4LjgwMDEgNC45MDAwMUgxMi4wMDAxQzEyLjQ5NzIgNC45MDAwMSAxMi45MDAxIDQuNDk3MDYgMTIuOTAwMSA0LjAwMDAxQzEyLjkwMDEgMy41MDI5NSAxMi40OTcyIDMuMTAwMDEgMTIuMDAwMSAzLjEwMDAxSDguNzYyNFpcIj48L3BhdGg+PHBhdGggZD1cIk0xNy42MzY0IDcuMzYzNkMxNy4yODQ5IDcuMDEyMTIgMTYuNzE1MSA3LjAxMjEyIDE2LjM2MzYgNy4zNjM2QzE2LjAxMjEgNy43MTUwNyAxNi4wMTIxIDguMjg0OTIgMTYuMzYzNiA4LjYzNjM5TDE4LjgyNzIgMTEuMUg5LjAwMDAxQzguNTAyOTUgMTEuMSA4LjEwMDAxIDExLjUwMjkgOC4xMDAwMSAxMkM4LjEwMDAxIDEyLjQ5NyA4LjUwMjk1IDEyLjkgOS4wMDAwMSAxMi45SDE4LjgyNzJMMTYuMzYzNiAxNS4zNjM2QzE2LjAxMjEgMTUuNzE1MSAxNi4wMTIxIDE2LjI4NDkgMTYuMzYzNiAxNi42MzY0QzE2LjcxNTEgMTYuOTg3OSAxNy4yODQ5IDE2Ljk4NzkgMTcuNjM2NCAxNi42MzY0TDIxLjYzNjQgMTIuNjM2NEMyMS45ODc5IDEyLjI4NDkgMjEuOTg3OSAxMS43MTUxIDIxLjYzNjQgMTEuMzYzNkwxNy42MzY0IDcuMzYzNlpcIj48L3BhdGg+PC9zdmc+YCk7XG5jb25zdCBEaXNjb25uZWN0SWNvbiA9IChwcm9wcykgPT4ge1xuICBjb25zdCB0aGVtZSA9IHVzZVRoZW1lKCk7XG4gIGNvbnN0IGZpbGwgPSAoKSA9PiBwcm9wcy5maWxsIHx8IHRoZW1lLmNvbG9ycy5pY29uLnByaW1hcnk7XG4gIHJldHVybiAoKCkgPT4ge1xuICAgIGNvbnN0IF9lbCQgPSBfdG1wbCQkNi5jbG9uZU5vZGUodHJ1ZSksIF9lbCQyID0gX2VsJC5maXJzdENoaWxkLCBfZWwkMyA9IF9lbCQyLm5leHRTaWJsaW5nO1xuICAgIGNyZWF0ZVJlbmRlckVmZmVjdCgoX3AkKSA9PiB7XG4gICAgICBjb25zdCBfdiQgPSBmaWxsKCksIF92JDIgPSBmaWxsKCk7XG4gICAgICBfdiQgIT09IF9wJC5fdiQgJiYgc2V0QXR0cmlidXRlKF9lbCQyLCBcImZpbGxcIiwgX3AkLl92JCA9IF92JCk7XG4gICAgICBfdiQyICE9PSBfcCQuX3YkMiAmJiBzZXRBdHRyaWJ1dGUoX2VsJDMsIFwiZmlsbFwiLCBfcCQuX3YkMiA9IF92JDIpO1xuICAgICAgcmV0dXJuIF9wJDtcbiAgICB9LCB7XG4gICAgICBfdiQ6IHZvaWQgMCxcbiAgICAgIF92JDI6IHZvaWQgMFxuICAgIH0pO1xuICAgIHJldHVybiBfZWwkO1xuICB9KSgpO1xufTtcbmNvbnN0IGhvdmVyQm9yZGVycyQxID0ge1xuICBtOiBcIjhweFwiLFxuICBzOiBcIjRweFwiLFxuICBub25lOiBcIjBcIlxufTtcbmNvbnN0IGRyb3Bkb3duQm9yZGVycyA9IHtcbiAgbTogXCIxNnB4XCIsXG4gIHM6IFwiOHB4XCIsXG4gIG5vbmU6IFwiMFwiXG59O1xuY29uc3QgQWNjb3VudEJ1dHRvbkRyb3Bkb3duU3R5bGVkID0gc3R5bGVkLmRpdmBcbiAgICB3aWR0aDogMjU2cHg7XG4gICAgYm94LXNoYWRvdzogMCA0cHggMjRweCByZ2JhKDAsIDAsIDAsIDAuMTYpO1xuICAgIGJvcmRlci1yYWRpdXM6ICR7KHByb3BzKSA9PiBkcm9wZG93bkJvcmRlcnNbcHJvcHMudGhlbWUuYm9yZGVyUmFkaXVzXX07XG5cbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkeyhwcm9wcykgPT4gcHJvcHMudGhlbWUuY29sb3JzLmJhY2tncm91bmQucHJpbWFyeX1cbiAgICAgICAgICAgXG4gICAgY29sb3I6ICR7KHByb3BzKSA9PiBwcm9wcy50aGVtZS5jb2xvcnMudGV4dC5wcmltYXJ5fVxuYDtcbmNvbnN0IFVsU3R5bGVkJDEgPSBzdHlsZWQudWxgXG4gICAgYmFja2dyb3VuZC1jb2xvcjogJHsocHJvcHMpID0+IHByb3BzLnRoZW1lLmNvbG9ycy5iYWNrZ3JvdW5kLnByaW1hcnl9O1xuICAgIHBhZGRpbmc6IDhweDtcbmA7XG5jb25zdCBNZW51QnV0dG9uU3R5bGVkID0gc3R5bGVkLmJ1dHRvbmBcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgZ2FwOiA4cHg7XG4gICAgaGVpZ2h0OiA0MHB4O1xuICAgIHBhZGRpbmctbGVmdDogOHB4O1xuICAgIHdpZHRoOiAxMDAlO1xuXG4gICAgYmFja2dyb3VuZC1jb2xvcjogJHsocHJvcHMpID0+IHByb3BzLnRoZW1lLmNvbG9ycy5iYWNrZ3JvdW5kLnByaW1hcnl9O1xuICAgIGJvcmRlcjogbm9uZTtcbiAgICBib3JkZXItcmFkaXVzOiAkeyhwcm9wcykgPT4gaG92ZXJCb3JkZXJzJDFbcHJvcHMudGhlbWUuYm9yZGVyUmFkaXVzXX07XG4gICAgY3Vyc29yOiBwb2ludGVyO1xuXG4gICAgdHJhbnNpdGlvbjogYmFja2dyb3VuZC1jb2xvciwgdHJhbnNmb3JtIDAuMXMgZWFzZS1pbi1vdXQ7XG5cbiAgICAmOmhvdmVyIHtcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogJHsocHJvcHMpID0+IHByb3BzLnRoZW1lLmNvbG9ycy5iYWNrZ3JvdW5kLnNlY29uZGFyeX07XG4gICAgfVxuXG4gICAgJjphY3RpdmUge1xuICAgICAgICB0cmFuc2Zvcm06IHNjYWxlKDAuOTYpO1xuICAgIH1cbmA7XG5jb25zdCBfdG1wbCQkNSA9IC8qIEBfX1BVUkVfXyAqLyB0ZW1wbGF0ZSQxKGA8bGk+PC9saT5gKTtcbmNvbnN0IE1lbnVJdGVtVGV4dCA9IChwcm9wcykgPT4gY3JlYXRlQ29tcG9uZW50KFRleHQsIHtcbiAgZ2V0IHRyYW5zbGF0aW9uS2V5KCkge1xuICAgIHJldHVybiBwcm9wcy50cmFuc2xhdGlvbktleTtcbiAgfSxcbiAgZm9udFNpemU6IFwiMTVweFwiLFxuICBmb250V2VpZ2h0OiBcIjU5MFwiLFxuICBnZXQgY2hpbGRyZW4oKSB7XG4gICAgcmV0dXJuIHByb3BzLmNoaWxkcmVuO1xuICB9XG59KTtcbmNvbnN0IEFjY291bnRCdXR0b25Ecm9wZG93biA9IChwcm9wcykgPT4ge1xuICBjb25zdCB0b25Db25uZWN0VWkgPSB1c2VDb250ZXh0KFRvbkNvbm5lY3RVaUNvbnRleHQpO1xuICBjb25zdCBbaXNDb3BpZWRTaG93biwgc2V0SXNDb3BpZWRTaG93bl0gPSBjcmVhdGVTaWduYWwoZmFsc2UpO1xuICBjb25zdCBvbkNvcHkgPSAoKSA9PiBfX2FzeW5jKHZvaWQgMCwgbnVsbCwgZnVuY3Rpb24qICgpIHtcbiAgICBjb25zdCB1c2VyRnJpZW5kbHlBZGRyZXNzID0gdG9Vc2VyRnJpZW5kbHlBZGRyZXNzKHRvbkNvbm5lY3RVaS5hY2NvdW50LmFkZHJlc3MsIHRvbkNvbm5lY3RVaS5hY2NvdW50LmNoYWluID09PSBDSEFJTi5URVNUTkVUKTtcbiAgICB5aWVsZCBjb3B5VG9DbGlwYm9hcmQodXNlckZyaWVuZGx5QWRkcmVzcyk7XG4gICAgc2V0SXNDb3BpZWRTaG93bih0cnVlKTtcbiAgICBzZXRUaW1lb3V0KCgpID0+IHNldElzQ29waWVkU2hvd24oZmFsc2UpLCAxZTMpO1xuICB9KTtcbiAgY29uc3Qgb25EaXNjb25uZWN0ID0gKCkgPT4ge1xuICAgIHRvbkNvbm5lY3RVaS5kaXNjb25uZWN0KCk7XG4gICAgcHJvcHMub25DbG9zZSgpO1xuICB9O1xuICByZXR1cm4gY3JlYXRlQ29tcG9uZW50KEFjY291bnRCdXR0b25Ecm9wZG93blN0eWxlZCwge1xuICAgIHJlZihyJCkge1xuICAgICAgY29uc3QgX3JlZiQgPSBwcm9wcy5yZWY7XG4gICAgICB0eXBlb2YgX3JlZiQgPT09IFwiZnVuY3Rpb25cIiA/IF9yZWYkKHIkKSA6IHByb3BzLnJlZiA9IHIkO1xuICAgIH0sXG4gICAgZ2V0IFtcImNsYXNzXCJdKCkge1xuICAgICAgcmV0dXJuIHByb3BzLmNsYXNzO1xuICAgIH0sXG4gICAgXCJkYXRhLXRjLWRyb3Bkb3duXCI6IFwidHJ1ZVwiLFxuICAgIGdldCBjaGlsZHJlbigpIHtcbiAgICAgIHJldHVybiBjcmVhdGVDb21wb25lbnQoVWxTdHlsZWQkMSwge1xuICAgICAgICBnZXQgY2hpbGRyZW4oKSB7XG4gICAgICAgICAgcmV0dXJuIFsoKCkgPT4ge1xuICAgICAgICAgICAgY29uc3QgX2VsJCA9IF90bXBsJCQ1LmNsb25lTm9kZSh0cnVlKTtcbiAgICAgICAgICAgIGluc2VydChfZWwkLCBjcmVhdGVDb21wb25lbnQoTWVudUJ1dHRvblN0eWxlZCwge1xuICAgICAgICAgICAgICBvbkNsaWNrOiAoKSA9PiBvbkNvcHkoKSxcbiAgICAgICAgICAgICAgZ2V0IGNoaWxkcmVuKCkge1xuICAgICAgICAgICAgICAgIHJldHVybiBbY3JlYXRlQ29tcG9uZW50KENvcHlJY29uLCB7fSksIGNyZWF0ZUNvbXBvbmVudChTaG93LCB7XG4gICAgICAgICAgICAgICAgICBnZXQgd2hlbigpIHtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuICFpc0NvcGllZFNob3duKCk7XG4gICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgZ2V0IGNoaWxkcmVuKCkge1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gY3JlYXRlQ29tcG9uZW50KE1lbnVJdGVtVGV4dCwge1xuICAgICAgICAgICAgICAgICAgICAgIHRyYW5zbGF0aW9uS2V5OiBcImJ1dHRvbi5kcm9wZG93bi5jb3B5XCIsXG4gICAgICAgICAgICAgICAgICAgICAgY2hpbGRyZW46IFwiQ29weSBhZGRyZXNzXCJcbiAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfSksIGNyZWF0ZUNvbXBvbmVudChTaG93LCB7XG4gICAgICAgICAgICAgICAgICBnZXQgd2hlbigpIHtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGlzQ29waWVkU2hvd24oKTtcbiAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICBnZXQgY2hpbGRyZW4oKSB7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBjcmVhdGVDb21wb25lbnQoTWVudUl0ZW1UZXh0LCB7XG4gICAgICAgICAgICAgICAgICAgICAgdHJhbnNsYXRpb25LZXk6IFwiYnV0dG9uLmRyb3Bkb3duLmNvcGllZFwiLFxuICAgICAgICAgICAgICAgICAgICAgIGNoaWxkcmVuOiBcIkFkZHJlc3MgY29waWVkIVwiXG4gICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH0pXTtcbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSkpO1xuICAgICAgICAgICAgcmV0dXJuIF9lbCQ7XG4gICAgICAgICAgfSkoKSwgKCgpID0+IHtcbiAgICAgICAgICAgIGNvbnN0IF9lbCQyID0gX3RtcGwkJDUuY2xvbmVOb2RlKHRydWUpO1xuICAgICAgICAgICAgaW5zZXJ0KF9lbCQyLCBjcmVhdGVDb21wb25lbnQoTWVudUJ1dHRvblN0eWxlZCwge1xuICAgICAgICAgICAgICBvbkNsaWNrOiAoKSA9PiBvbkRpc2Nvbm5lY3QoKSxcbiAgICAgICAgICAgICAgZ2V0IGNoaWxkcmVuKCkge1xuICAgICAgICAgICAgICAgIHJldHVybiBbY3JlYXRlQ29tcG9uZW50KERpc2Nvbm5lY3RJY29uLCB7fSksIGNyZWF0ZUNvbXBvbmVudChNZW51SXRlbVRleHQsIHtcbiAgICAgICAgICAgICAgICAgIHRyYW5zbGF0aW9uS2V5OiBcImJ1dHRvbi5kcm9wZG93bi5kaXNjb25uZWN0XCIsXG4gICAgICAgICAgICAgICAgICBjaGlsZHJlbjogXCJEaXNjb25uZWN0XCJcbiAgICAgICAgICAgICAgICB9KV07XG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0pKTtcbiAgICAgICAgICAgIHJldHVybiBfZWwkMjtcbiAgICAgICAgICB9KSgpXTtcbiAgICAgICAgfVxuICAgICAgfSk7XG4gICAgfVxuICB9KTtcbn07XG5jb25zdCBib3JkZXJzJDIgPSB7XG4gIG06IFwiMTZweFwiLFxuICBzOiBcIjhweFwiLFxuICBub25lOiBcIjBcIlxufTtcbmNvbnN0IE5vdGlmaWNhdGlvblN0eWxlZCA9IHN0eWxlZC5kaXZgXG4gICAgd2lkdGg6IDI1NnB4O1xuICAgIHBhZGRpbmc6IDEycHggMTZweDtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGdhcDogOXB4O1xuXG4gICAgYmFja2dyb3VuZC1jb2xvcjogJHsocHJvcHMpID0+IHByb3BzLnRoZW1lLmNvbG9ycy5iYWNrZ3JvdW5kLnByaW1hcnl9O1xuICAgIGJveC1zaGFkb3c6IDAgNHB4IDI0cHggcmdiYSgwLCAwLCAwLCAwLjE2KTtcbiAgICBib3JkZXItcmFkaXVzOiAkeyhwcm9wcykgPT4gYm9yZGVycyQyW3Byb3BzLnRoZW1lLmJvcmRlclJhZGl1c119O1xuYDtcbmNvbnN0IE5vdGlmaWNhdGlvbkNvbnRlbnRTdHlsZWQgPSBzdHlsZWQuZGl2YFxuICAgIHdpZHRoOiAxOTJweDtcblxuICAgID4gaDMge1xuICAgICAgICBmb250LXNpemU6IDE1cHg7XG4gICAgfVxuYDtcbmNvbnN0IFRleHRTdHlsZWQkMiA9IHN0eWxlZChUZXh0KWBcbiAgICBtYXJnaW4tdG9wOiA0cHg7XG4gICAgY29sb3I6ICR7KHByb3BzKSA9PiBwcm9wcy50aGVtZS5jb2xvcnMudGV4dC5zZWNvbmRhcnl9O1xuYDtcbmNvbnN0IE5vdGlmaWNhdGlvbiA9IChwcm9wcykgPT4ge1xuICBjb25zdCBkYXRhQXR0cnMgPSB1c2VEYXRhQXR0cmlidXRlcyhwcm9wcyk7XG4gIHJldHVybiBjcmVhdGVDb21wb25lbnQoTm90aWZpY2F0aW9uU3R5bGVkLCBtZXJnZVByb3BzKHtcbiAgICBnZXQgW1wiY2xhc3NcIl0oKSB7XG4gICAgICByZXR1cm4gcHJvcHMuY2xhc3M7XG4gICAgfSxcbiAgICBcImRhdGEtdGMtbm90aWZpY2F0aW9uXCI6IFwidHJ1ZVwiXG4gIH0sIGRhdGFBdHRycywge1xuICAgIGdldCBjaGlsZHJlbigpIHtcbiAgICAgIHJldHVybiBbY3JlYXRlQ29tcG9uZW50KE5vdGlmaWNhdGlvbkNvbnRlbnRTdHlsZWQsIHtcbiAgICAgICAgZ2V0IGNoaWxkcmVuKCkge1xuICAgICAgICAgIHJldHVybiBbY3JlYXRlQ29tcG9uZW50KEgzLCB7XG4gICAgICAgICAgICBnZXQgdHJhbnNsYXRpb25LZXkoKSB7XG4gICAgICAgICAgICAgIHJldHVybiBwcm9wcy5oZWFkZXIudHJhbnNsYXRpb25LZXk7XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgZ2V0IHRyYW5zbGF0aW9uVmFsdWVzKCkge1xuICAgICAgICAgICAgICByZXR1cm4gcHJvcHMuaGVhZGVyLnRyYW5zbGF0aW9uVmFsdWVzO1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIGdldCBjaGlsZHJlbigpIHtcbiAgICAgICAgICAgICAgcmV0dXJuIHByb3BzLmNoaWxkcmVuO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH0pLCBjcmVhdGVDb21wb25lbnQoU2hvdywge1xuICAgICAgICAgICAgZ2V0IHdoZW4oKSB7XG4gICAgICAgICAgICAgIHJldHVybiBwcm9wcy50ZXh0O1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIGdldCBjaGlsZHJlbigpIHtcbiAgICAgICAgICAgICAgcmV0dXJuIGNyZWF0ZUNvbXBvbmVudChUZXh0U3R5bGVkJDIsIHtcbiAgICAgICAgICAgICAgICBnZXQgdHJhbnNsYXRpb25LZXkoKSB7XG4gICAgICAgICAgICAgICAgICByZXR1cm4gcHJvcHMudGV4dC50cmFuc2xhdGlvbktleTtcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIGdldCB0cmFuc2xhdGlvblZhbHVlcygpIHtcbiAgICAgICAgICAgICAgICAgIHJldHVybiBwcm9wcy50ZXh0LnRyYW5zbGF0aW9uVmFsdWVzO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfSldO1xuICAgICAgICB9XG4gICAgICB9KSwgY3JlYXRlTWVtbygoKSA9PiBwcm9wcy5pY29uKV07XG4gICAgfVxuICB9KSk7XG59O1xuY29uc3QgTG9hZGVySWNvblN0eWxlZCQyID0gc3R5bGVkKExvYWRlckljb24pYFxuICAgIGFsaWduLXNlbGY6IGNlbnRlcjtcbmA7XG5jb25zdCBDb25maXJtT3BlcmF0aW9uTm90aWZpY2F0aW9uID0gKHByb3BzKSA9PiB7XG4gIGNvbnN0IHRvbkNvbm5lY3RVSSA9IHVzZUNvbnRleHQoVG9uQ29ubmVjdFVpQ29udGV4dCk7XG4gIGNvbnN0IFt0Ml0gPSB1c2VJMThuKCk7XG4gIGNvbnN0IG5hbWUgPSAoKSA9PiB0b25Db25uZWN0VUkud2FsbGV0ICYmIFwibmFtZVwiIGluIHRvbkNvbm5lY3RVSS53YWxsZXQgPyB0b25Db25uZWN0VUkud2FsbGV0Lm5hbWUgOiB0MihcImNvbW1vbi55b3VyV2FsbGV0XCIsIHt9LCBcIllvdXIgd2FsbGV0XCIpO1xuICByZXR1cm4gY3JlYXRlQ29tcG9uZW50KE5vdGlmaWNhdGlvbiwge1xuICAgIGdldCBoZWFkZXIoKSB7XG4gICAgICByZXR1cm4ge1xuICAgICAgICB0cmFuc2xhdGlvbktleTogXCJub3RpZmljYXRpb25zLmNvbmZpcm0uaGVhZGVyXCIsXG4gICAgICAgIHRyYW5zbGF0aW9uVmFsdWVzOiB7XG4gICAgICAgICAgbmFtZTogbmFtZSgpXG4gICAgICAgIH1cbiAgICAgIH07XG4gICAgfSxcbiAgICBnZXQgW1wiY2xhc3NcIl0oKSB7XG4gICAgICByZXR1cm4gcHJvcHMuY2xhc3M7XG4gICAgfSxcbiAgICBnZXQgaWNvbigpIHtcbiAgICAgIHJldHVybiBjcmVhdGVDb21wb25lbnQoTG9hZGVySWNvblN0eWxlZCQyLCB7fSk7XG4gICAgfSxcbiAgICBcImRhdGEtdGMtbm90aWZpY2F0aW9uLWNvbmZpcm1cIjogXCJ0cnVlXCIsXG4gICAgY2hpbGRyZW46IFwiQ29uZmlybSBvcGVyYXRpb24gaW4geW91ciB3YWxsZXRcIlxuICB9KTtcbn07XG5jb25zdCBFcnJvckljb25TdHlsZWQkMiA9IHN0eWxlZChFcnJvckljb24pYFxuICAgIG1hcmdpbi10b3A6IDJweDtcbmA7XG5jb25zdCBFcnJvclRyYW5zYWN0aW9uTm90aWZpY2F0aW9uID0gKHByb3BzKSA9PiB7XG4gIHJldHVybiBjcmVhdGVDb21wb25lbnQoTm90aWZpY2F0aW9uLCB7XG4gICAgaGVhZGVyOiB7XG4gICAgICB0cmFuc2xhdGlvbktleTogXCJub3RpZmljYXRpb25zLnRyYW5zYWN0aW9uQ2FuY2VsZWQuaGVhZGVyXCJcbiAgICB9LFxuICAgIHRleHQ6IHtcbiAgICAgIHRyYW5zbGF0aW9uS2V5OiBcIm5vdGlmaWNhdGlvbnMudHJhbnNhY3Rpb25DYW5jZWxlZC50ZXh0XCJcbiAgICB9LFxuICAgIGdldCBpY29uKCkge1xuICAgICAgcmV0dXJuIGNyZWF0ZUNvbXBvbmVudChFcnJvckljb25TdHlsZWQkMiwge1xuICAgICAgICBzaXplOiBcInhzXCJcbiAgICAgIH0pO1xuICAgIH0sXG4gICAgZ2V0IFtcImNsYXNzXCJdKCkge1xuICAgICAgcmV0dXJuIHByb3BzLmNsYXNzO1xuICAgIH0sXG4gICAgXCJkYXRhLXRjLW5vdGlmaWNhdGlvbi10eC1jYW5jZWxsZWRcIjogXCJ0cnVlXCIsXG4gICAgY2hpbGRyZW46IFwiVHJhbnNhY3Rpb24gY2FuY2VsbGVkXCJcbiAgfSk7XG59O1xuY29uc3QgU3VjY2Vzc0ljb25TdHlsZWQgPSBzdHlsZWQoU3VjY2Vzc0ljb24pYFxuICAgIG1hcmdpbi10b3A6IDJweDtcbmA7XG5jb25zdCBTdWNjZXNzVHJhbnNhY3Rpb25Ob3RpZmljYXRpb24gPSAocHJvcHMpID0+IHtcbiAgcmV0dXJuIGNyZWF0ZUNvbXBvbmVudChOb3RpZmljYXRpb24sIHtcbiAgICBoZWFkZXI6IHtcbiAgICAgIHRyYW5zbGF0aW9uS2V5OiBcIm5vdGlmaWNhdGlvbnMudHJhbnNhY3Rpb25TZW50LmhlYWRlclwiXG4gICAgfSxcbiAgICB0ZXh0OiB7XG4gICAgICB0cmFuc2xhdGlvbktleTogXCJub3RpZmljYXRpb25zLnRyYW5zYWN0aW9uU2VudC50ZXh0XCJcbiAgICB9LFxuICAgIGdldCBpY29uKCkge1xuICAgICAgcmV0dXJuIGNyZWF0ZUNvbXBvbmVudChTdWNjZXNzSWNvblN0eWxlZCwge30pO1xuICAgIH0sXG4gICAgZ2V0IFtcImNsYXNzXCJdKCkge1xuICAgICAgcmV0dXJuIHByb3BzLmNsYXNzO1xuICAgIH0sXG4gICAgXCJkYXRhLXRjLW5vdGlmaWNhdGlvbi10eC1zZW50XCI6IFwidHJ1ZVwiLFxuICAgIGNoaWxkcmVuOiBcIlRyYW5zYWN0aW9uIHNlbnRcIlxuICB9KTtcbn07XG5jb25zdCBOb3RpZmljYXRpb25DbGFzcyA9IHVgXG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKC04cHgpO1xuICAgIG1hcmdpbi1ib3R0b206IDEycHg7XG5gO1xuY29uc3QgZGVmYXVsdENvbmZpZyA9IHtcbiAgdGltZW91dDogNDUwMFxufTtcbmNvbnN0IFtsYXRlc3RBY3Rpb24sIHNldExhdGVzdEFjdGlvbl0gPSBjcmVhdGVTaWduYWwobnVsbCk7XG5mdW5jdGlvbiB1c2VPcGVuZWROb3RpZmljYXRpb25zKGNvbmZpZykge1xuICBjb25zdCB7IHRpbWVvdXQgfSA9IF9fc3ByZWFkVmFsdWVzKF9fc3ByZWFkVmFsdWVzKHt9LCBkZWZhdWx0Q29uZmlnKSwgY29uZmlnKTtcbiAgY29uc3QgW29wZW5lZE5vdGlmaWNhdGlvbnMsIHNldE9wZW5lZE5vdGlmaWNhdGlvbnNdID0gY3JlYXRlU2lnbmFsKFtdKTtcbiAgY29uc3QgW3RpbWVvdXRJZHMsIHNldFRpbWVvdXRJZHNdID0gY3JlYXRlU2lnbmFsKFtdKTtcbiAgY3JlYXRlRWZmZWN0KFxuICAgIG9uKGFjdGlvbiwgKGFjdGlvbjIpID0+IHtcbiAgICAgIHZhciBfYTI7XG4gICAgICBpZiAoIWFjdGlvbjIgfHwgIWFjdGlvbjIuc2hvd05vdGlmaWNhdGlvbikge1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG4gICAgICBpZiAobGF0ZXN0QWN0aW9uKCkgPT09IGFjdGlvbjIpIHtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuICAgICAgaWYgKCgoX2EyID0gbGF0ZXN0QWN0aW9uKCkpID09IG51bGwgPyB2b2lkIDAgOiBfYTIubmFtZSkgPT09IFwiY29uZmlybS10cmFuc2FjdGlvblwiICYmIGFjdGlvbjIubmFtZSA9PT0gXCJjb25maXJtLXRyYW5zYWN0aW9uXCIpIHtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuICAgICAgc2V0TGF0ZXN0QWN0aW9uKGFjdGlvbjIpO1xuICAgICAgc2V0T3BlbmVkTm90aWZpY2F0aW9ucyhcbiAgICAgICAgKG9wZW5lZE5vdGlmaWNhdGlvbnMyKSA9PiBvcGVuZWROb3RpZmljYXRpb25zMi5maWx0ZXIoKG4yKSA9PiBuMi5hY3Rpb24gIT09IFwiY29uZmlybS10cmFuc2FjdGlvblwiKVxuICAgICAgKTtcbiAgICAgIGNvbnN0IG5vdGlmaWNhdGlvbiA9IHsgYWN0aW9uOiBhY3Rpb24yLm5hbWUgfTtcbiAgICAgIHNldE9wZW5lZE5vdGlmaWNhdGlvbnMoKG9wZW5lZE5vdGlmaWNhdGlvbnMyKSA9PiBbLi4ub3BlbmVkTm90aWZpY2F0aW9uczIsIG5vdGlmaWNhdGlvbl0pO1xuICAgICAgY29uc3QgdGltZW91dElkID0gc2V0VGltZW91dCgoKSA9PiB7XG4gICAgICAgIHNldE9wZW5lZE5vdGlmaWNhdGlvbnMoXG4gICAgICAgICAgKG9wZW5lZE5vdGlmaWNhdGlvbnMyKSA9PiBvcGVuZWROb3RpZmljYXRpb25zMi5maWx0ZXIoKG4yKSA9PiBuMiAhPT0gbm90aWZpY2F0aW9uKVxuICAgICAgICApO1xuICAgICAgICBzZXRUaW1lb3V0SWRzKCh0aW1lb3V0SWRzMikgPT4gdGltZW91dElkczIuZmlsdGVyKChpZCkgPT4gaWQgIT09IHRpbWVvdXRJZCkpO1xuICAgICAgfSwgdGltZW91dCk7XG4gICAgICBzZXRUaW1lb3V0SWRzKCh0aW1lb3V0SWRzMikgPT4gWy4uLnRpbWVvdXRJZHMyLCB0aW1lb3V0SWRdKTtcbiAgICB9KVxuICApO1xuICBvbkNsZWFudXAoKCkgPT4ge1xuICAgIHRpbWVvdXRJZHMoKS5mb3JFYWNoKChpZCkgPT4gY2xlYXJUaW1lb3V0KGlkKSk7XG4gIH0pO1xuICByZXR1cm4gb3BlbmVkTm90aWZpY2F0aW9ucztcbn1cbmNvbnN0IF90bXBsJCQ0ID0gLyogQF9fUFVSRV9fICovIHRlbXBsYXRlJDEoYDxkaXYgZGF0YS10Yy1saXN0LW5vdGlmaWNhdGlvbnM9XCJ0cnVlXCI+PC9kaXY+YCk7XG5jb25zdCBOb3RpZmljYXRpb25zID0gKHByb3BzKSA9PiB7XG4gIGNvbnN0IG9wZW5lZE5vdGlmaWNhdGlvbnMgPSB1c2VPcGVuZWROb3RpZmljYXRpb25zKCk7XG4gIHJldHVybiAoKCkgPT4ge1xuICAgIGNvbnN0IF9lbCQgPSBfdG1wbCQkNC5jbG9uZU5vZGUodHJ1ZSk7XG4gICAgaW5zZXJ0KF9lbCQsIGNyZWF0ZUNvbXBvbmVudChUcmFuc2l0aW9uR3JvdXAsIHtcbiAgICAgIG9uQmVmb3JlRW50ZXI6IChlbCkgPT4ge1xuICAgICAgICBhbmltYXRlKGVsLCBbe1xuICAgICAgICAgIG9wYWNpdHk6IDAsXG4gICAgICAgICAgdHJhbnNmb3JtOiBcInRyYW5zbGF0ZVkoMClcIlxuICAgICAgICB9LCB7XG4gICAgICAgICAgb3BhY2l0eTogMSxcbiAgICAgICAgICB0cmFuc2Zvcm06IFwidHJhbnNsYXRlWSgtOHB4KVwiXG4gICAgICAgIH1dLCB7XG4gICAgICAgICAgZHVyYXRpb246IDIwMFxuICAgICAgICB9KTtcbiAgICAgIH0sXG4gICAgICBvbkV4aXQ6IChlbCwgZG9uZSkgPT4ge1xuICAgICAgICBjb25zdCBhMiA9IGFuaW1hdGUoZWwsIFt7XG4gICAgICAgICAgb3BhY2l0eTogMSxcbiAgICAgICAgICB0cmFuc2Zvcm06IFwidHJhbnNsYXRlWSgtOHB4KVwiXG4gICAgICAgIH0sIHtcbiAgICAgICAgICBvcGFjaXR5OiAwLFxuICAgICAgICAgIHRyYW5zZm9ybTogXCJ0cmFuc2xhdGVZKC0zMHB4KVwiXG4gICAgICAgIH1dLCB7XG4gICAgICAgICAgZHVyYXRpb246IDIwMFxuICAgICAgICB9KTtcbiAgICAgICAgYTIuZmluaXNoZWQudGhlbihkb25lKTtcbiAgICAgIH0sXG4gICAgICBnZXQgY2hpbGRyZW4oKSB7XG4gICAgICAgIHJldHVybiBjcmVhdGVDb21wb25lbnQoRm9yLCB7XG4gICAgICAgICAgZ2V0IGVhY2goKSB7XG4gICAgICAgICAgICByZXR1cm4gb3BlbmVkTm90aWZpY2F0aW9ucygpO1xuICAgICAgICAgIH0sXG4gICAgICAgICAgY2hpbGRyZW46IChvcGVuZWROb3RpZmljYXRpb24pID0+IGNyZWF0ZUNvbXBvbmVudChTd2l0Y2gsIHtcbiAgICAgICAgICAgIGdldCBjaGlsZHJlbigpIHtcbiAgICAgICAgICAgICAgcmV0dXJuIFtjcmVhdGVDb21wb25lbnQoTWF0Y2gsIHtcbiAgICAgICAgICAgICAgICBnZXQgd2hlbigpIHtcbiAgICAgICAgICAgICAgICAgIHJldHVybiBvcGVuZWROb3RpZmljYXRpb24uYWN0aW9uID09PSBcInRyYW5zYWN0aW9uLXNlbnRcIjtcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIGdldCBjaGlsZHJlbigpIHtcbiAgICAgICAgICAgICAgICAgIHJldHVybiBjcmVhdGVDb21wb25lbnQoU3VjY2Vzc1RyYW5zYWN0aW9uTm90aWZpY2F0aW9uLCB7XG4gICAgICAgICAgICAgICAgICAgIFwiY2xhc3NcIjogTm90aWZpY2F0aW9uQ2xhc3NcbiAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgfSksIGNyZWF0ZUNvbXBvbmVudChNYXRjaCwge1xuICAgICAgICAgICAgICAgIGdldCB3aGVuKCkge1xuICAgICAgICAgICAgICAgICAgcmV0dXJuIG9wZW5lZE5vdGlmaWNhdGlvbi5hY3Rpb24gPT09IFwidHJhbnNhY3Rpb24tY2FuY2VsZWRcIjtcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIGdldCBjaGlsZHJlbigpIHtcbiAgICAgICAgICAgICAgICAgIHJldHVybiBjcmVhdGVDb21wb25lbnQoRXJyb3JUcmFuc2FjdGlvbk5vdGlmaWNhdGlvbiwge1xuICAgICAgICAgICAgICAgICAgICBcImNsYXNzXCI6IE5vdGlmaWNhdGlvbkNsYXNzXG4gICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgIH0pLCBjcmVhdGVDb21wb25lbnQoTWF0Y2gsIHtcbiAgICAgICAgICAgICAgICBnZXQgd2hlbigpIHtcbiAgICAgICAgICAgICAgICAgIHJldHVybiBvcGVuZWROb3RpZmljYXRpb24uYWN0aW9uID09PSBcImNvbmZpcm0tdHJhbnNhY3Rpb25cIjtcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIGdldCBjaGlsZHJlbigpIHtcbiAgICAgICAgICAgICAgICAgIHJldHVybiBjcmVhdGVDb21wb25lbnQoQ29uZmlybU9wZXJhdGlvbk5vdGlmaWNhdGlvbiwge1xuICAgICAgICAgICAgICAgICAgICBcImNsYXNzXCI6IE5vdGlmaWNhdGlvbkNsYXNzXG4gICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgIH0pXTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9KVxuICAgICAgICB9KTtcbiAgICAgIH1cbiAgICB9KSk7XG4gICAgY3JlYXRlUmVuZGVyRWZmZWN0KCgpID0+IGNsYXNzTmFtZShfZWwkLCBwcm9wcy5jbGFzcykpO1xuICAgIHJldHVybiBfZWwkO1xuICB9KSgpO1xufTtcbmNvbnN0IEFjY291bnRCdXR0b25TdHlsZWQgPSBzdHlsZWQoQnV0dG9uKWBcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkeyhwcm9wcykgPT4gcHJvcHMudGhlbWUuY29sb3JzLmNvbm5lY3RCdXR0b24uYmFja2dyb3VuZH07XG4gICAgY29sb3I6ICR7KHByb3BzKSA9PiBwcm9wcy50aGVtZS5jb2xvcnMuY29ubmVjdEJ1dHRvbi5mb3JlZ3JvdW5kfTtcbiAgICBib3gtc2hhZG93OiAkeyhwcm9wcykgPT4gYDAgNHB4IDI0cHggJHtyZ2JhKHByb3BzLnRoZW1lLmNvbG9ycy5jb25zdGFudC5ibGFjaywgMC4xNil9YH07XG4gICAgcGFkZGluZzogOHB4IDE2cHggOHB4IDEycHg7XG5cbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgZ2FwOiA0cHg7XG4gICAgaGVpZ2h0OiA0MHB4O1xuYDtcbmNvbnN0IERyb3Bkb3duQnV0dG9uU3R5bGVkID0gc3R5bGVkKEFjY291bnRCdXR0b25TdHlsZWQpYFxuICAgIHBhZGRpbmc6IDEycHggMTZweDtcbiAgICBtaW4td2lkdGg6IDE0OHB4O1xuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICAgIGJhY2tncm91bmQtY29sb3I6ICR7KHByb3BzKSA9PiBwcm9wcy50aGVtZS5jb2xvcnMuYmFja2dyb3VuZC5wcmltYXJ5fTtcbmA7XG5jb25zdCBMb2FkZXJCdXR0b25TdHlsZWQkMSA9IHN0eWxlZChCdXR0b24pYFxuICAgIG1pbi13aWR0aDogMTQ4cHg7XG4gICAgaGVpZ2h0OiA0MHB4O1xuXG4gICAgYmFja2dyb3VuZC1jb2xvcjogJHsocHJvcHMpID0+IHByb3BzLnRoZW1lLmNvbG9ycy5iYWNrZ3JvdW5kLnByaW1hcnl9O1xuICAgIGNvbG9yOiAkeyhwcm9wcykgPT4gcHJvcHMudGhlbWUuY29sb3JzLmNvbm5lY3RCdXR0b24uZm9yZWdyb3VuZH07XG4gICAgYm94LXNoYWRvdzogJHsocHJvcHMpID0+IGAwIDRweCAyNHB4ICR7cmdiYShwcm9wcy50aGVtZS5jb2xvcnMuY29uc3RhbnQuYmxhY2ssIDAuMTYpfWB9O1xuXG4gICAgZGlzcGxheTogZmxleDtcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuYDtcbmNvbnN0IExvYWRlckljb25TdHlsZWQkMSA9IHN0eWxlZChMb2FkZXJJY29uKWBcbiAgICBoZWlnaHQ6IDE4cHg7XG4gICAgd2lkdGg6IDE4cHg7XG5gO1xuY29uc3QgRHJvcGRvd25Db250YWluZXJTdHlsZWQgPSBzdHlsZWQuZGl2YFxuICAgIHdpZHRoOiBmaXQtY29udGVudDtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gICAgYWxpZ24taXRlbXM6IGZsZXgtZW5kO1xuYDtcbmNvbnN0IERyb3Bkb3duU3R5bGVkID0gc3R5bGVkKEFjY291bnRCdXR0b25Ecm9wZG93bilgXG4gICAgYm94LXNpemluZzogYm9yZGVyLWJveDtcbiAgICBvdmVyZmxvdzogaGlkZGVuO1xuICAgIG1hcmdpbi10b3A6IDEycHg7XG5gO1xuY29uc3QgTm90aWZpY2F0aW9uc1N0eWxlZCA9IHN0eWxlZChOb3RpZmljYXRpb25zKWBcbiAgICA+IGRpdjpmaXJzdC1jaGlsZCB7XG4gICAgICAgIG1hcmdpbi10b3A6IDIwcHg7XG4gICAgfVxuYDtcbmZ1bmN0aW9uIGdldFNpZGUocGxhY2VtZW50KSB7XG4gIHJldHVybiBwbGFjZW1lbnQuc3BsaXQoXCItXCIpWzBdO1xufVxuZnVuY3Rpb24gZ2V0QWxpZ25tZW50KHBsYWNlbWVudCkge1xuICByZXR1cm4gcGxhY2VtZW50LnNwbGl0KFwiLVwiKVsxXTtcbn1cbmZ1bmN0aW9uIGdldE1haW5BeGlzRnJvbVBsYWNlbWVudChwbGFjZW1lbnQpIHtcbiAgcmV0dXJuIFtcInRvcFwiLCBcImJvdHRvbVwiXS5pbmNsdWRlcyhnZXRTaWRlKHBsYWNlbWVudCkpID8gXCJ4XCIgOiBcInlcIjtcbn1cbmZ1bmN0aW9uIGdldExlbmd0aEZyb21BeGlzKGF4aXMpIHtcbiAgcmV0dXJuIGF4aXMgPT09IFwieVwiID8gXCJoZWlnaHRcIiA6IFwid2lkdGhcIjtcbn1cbmZ1bmN0aW9uIGNvbXB1dGVDb29yZHNGcm9tUGxhY2VtZW50KF9yZWYsIHBsYWNlbWVudCwgcnRsKSB7XG4gIGxldCB7XG4gICAgcmVmZXJlbmNlLFxuICAgIGZsb2F0aW5nXG4gIH0gPSBfcmVmO1xuICBjb25zdCBjb21tb25YID0gcmVmZXJlbmNlLnggKyByZWZlcmVuY2Uud2lkdGggLyAyIC0gZmxvYXRpbmcud2lkdGggLyAyO1xuICBjb25zdCBjb21tb25ZID0gcmVmZXJlbmNlLnkgKyByZWZlcmVuY2UuaGVpZ2h0IC8gMiAtIGZsb2F0aW5nLmhlaWdodCAvIDI7XG4gIGNvbnN0IG1haW5BeGlzID0gZ2V0TWFpbkF4aXNGcm9tUGxhY2VtZW50KHBsYWNlbWVudCk7XG4gIGNvbnN0IGxlbmd0aCA9IGdldExlbmd0aEZyb21BeGlzKG1haW5BeGlzKTtcbiAgY29uc3QgY29tbW9uQWxpZ24gPSByZWZlcmVuY2VbbGVuZ3RoXSAvIDIgLSBmbG9hdGluZ1tsZW5ndGhdIC8gMjtcbiAgY29uc3Qgc2lkZSA9IGdldFNpZGUocGxhY2VtZW50KTtcbiAgY29uc3QgaXNWZXJ0aWNhbCA9IG1haW5BeGlzID09PSBcInhcIjtcbiAgbGV0IGNvb3JkcztcbiAgc3dpdGNoIChzaWRlKSB7XG4gICAgY2FzZSBcInRvcFwiOlxuICAgICAgY29vcmRzID0ge1xuICAgICAgICB4OiBjb21tb25YLFxuICAgICAgICB5OiByZWZlcmVuY2UueSAtIGZsb2F0aW5nLmhlaWdodFxuICAgICAgfTtcbiAgICAgIGJyZWFrO1xuICAgIGNhc2UgXCJib3R0b21cIjpcbiAgICAgIGNvb3JkcyA9IHtcbiAgICAgICAgeDogY29tbW9uWCxcbiAgICAgICAgeTogcmVmZXJlbmNlLnkgKyByZWZlcmVuY2UuaGVpZ2h0XG4gICAgICB9O1xuICAgICAgYnJlYWs7XG4gICAgY2FzZSBcInJpZ2h0XCI6XG4gICAgICBjb29yZHMgPSB7XG4gICAgICAgIHg6IHJlZmVyZW5jZS54ICsgcmVmZXJlbmNlLndpZHRoLFxuICAgICAgICB5OiBjb21tb25ZXG4gICAgICB9O1xuICAgICAgYnJlYWs7XG4gICAgY2FzZSBcImxlZnRcIjpcbiAgICAgIGNvb3JkcyA9IHtcbiAgICAgICAgeDogcmVmZXJlbmNlLnggLSBmbG9hdGluZy53aWR0aCxcbiAgICAgICAgeTogY29tbW9uWVxuICAgICAgfTtcbiAgICAgIGJyZWFrO1xuICAgIGRlZmF1bHQ6XG4gICAgICBjb29yZHMgPSB7XG4gICAgICAgIHg6IHJlZmVyZW5jZS54LFxuICAgICAgICB5OiByZWZlcmVuY2UueVxuICAgICAgfTtcbiAgfVxuICBzd2l0Y2ggKGdldEFsaWdubWVudChwbGFjZW1lbnQpKSB7XG4gICAgY2FzZSBcInN0YXJ0XCI6XG4gICAgICBjb29yZHNbbWFpbkF4aXNdIC09IGNvbW1vbkFsaWduICogKHJ0bCAmJiBpc1ZlcnRpY2FsID8gLTEgOiAxKTtcbiAgICAgIGJyZWFrO1xuICAgIGNhc2UgXCJlbmRcIjpcbiAgICAgIGNvb3Jkc1ttYWluQXhpc10gKz0gY29tbW9uQWxpZ24gKiAocnRsICYmIGlzVmVydGljYWwgPyAtMSA6IDEpO1xuICAgICAgYnJlYWs7XG4gIH1cbiAgcmV0dXJuIGNvb3Jkcztcbn1cbmNvbnN0IGNvbXB1dGVQb3NpdGlvbiQxID0gKHJlZmVyZW5jZSwgZmxvYXRpbmcsIGNvbmZpZykgPT4gX19hc3luYyh2b2lkIDAsIG51bGwsIGZ1bmN0aW9uKiAoKSB7XG4gIGNvbnN0IHtcbiAgICBwbGFjZW1lbnQgPSBcImJvdHRvbVwiLFxuICAgIHN0cmF0ZWd5ID0gXCJhYnNvbHV0ZVwiLFxuICAgIG1pZGRsZXdhcmUgPSBbXSxcbiAgICBwbGF0Zm9ybTogcGxhdGZvcm0yXG4gIH0gPSBjb25maWc7XG4gIGNvbnN0IHZhbGlkTWlkZGxld2FyZSA9IG1pZGRsZXdhcmUuZmlsdGVyKEJvb2xlYW4pO1xuICBjb25zdCBydGwgPSB5aWVsZCBwbGF0Zm9ybTIuaXNSVEwgPT0gbnVsbCA/IHZvaWQgMCA6IHBsYXRmb3JtMi5pc1JUTChmbG9hdGluZyk7XG4gIGlmICh7fS5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIpIHtcbiAgICBpZiAocGxhdGZvcm0yID09IG51bGwpIHtcbiAgICAgIGNvbnNvbGUuZXJyb3IoW1wiRmxvYXRpbmcgVUk6IGBwbGF0Zm9ybWAgcHJvcGVydHkgd2FzIG5vdCBwYXNzZWQgdG8gY29uZmlnLiBJZiB5b3VcIiwgXCJ3YW50IHRvIHVzZSBGbG9hdGluZyBVSSBvbiB0aGUgd2ViLCBpbnN0YWxsIEBmbG9hdGluZy11aS9kb21cIiwgXCJpbnN0ZWFkIG9mIHRoZSAvY29yZSBwYWNrYWdlLiBPdGhlcndpc2UsIHlvdSBjYW4gY3JlYXRlIHlvdXIgb3duXCIsIFwiYHBsYXRmb3JtYDogaHR0cHM6Ly9mbG9hdGluZy11aS5jb20vZG9jcy9wbGF0Zm9ybVwiXS5qb2luKFwiIFwiKSk7XG4gICAgfVxuICAgIGlmICh2YWxpZE1pZGRsZXdhcmUuZmlsdGVyKChfcmVmKSA9PiB7XG4gICAgICBsZXQge1xuICAgICAgICBuYW1lXG4gICAgICB9ID0gX3JlZjtcbiAgICAgIHJldHVybiBuYW1lID09PSBcImF1dG9QbGFjZW1lbnRcIiB8fCBuYW1lID09PSBcImZsaXBcIjtcbiAgICB9KS5sZW5ndGggPiAxKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoW1wiRmxvYXRpbmcgVUk6IGR1cGxpY2F0ZSBgZmxpcGAgYW5kL29yIGBhdXRvUGxhY2VtZW50YCBtaWRkbGV3YXJlXCIsIFwiZGV0ZWN0ZWQuIFRoaXMgd2lsbCBsZWFkIHRvIGFuIGluZmluaXRlIGxvb3AuIEVuc3VyZSBvbmx5IG9uZSBvZlwiLCBcImVpdGhlciBoYXMgYmVlbiBwYXNzZWQgdG8gdGhlIGBtaWRkbGV3YXJlYCBhcnJheS5cIl0uam9pbihcIiBcIikpO1xuICAgIH1cbiAgICBpZiAoIXJlZmVyZW5jZSB8fCAhZmxvYXRpbmcpIHtcbiAgICAgIGNvbnNvbGUuZXJyb3IoW1wiRmxvYXRpbmcgVUk6IFRoZSByZWZlcmVuY2UgYW5kL29yIGZsb2F0aW5nIGVsZW1lbnQgd2FzIG5vdCBkZWZpbmVkXCIsIFwid2hlbiBgY29tcHV0ZVBvc2l0aW9uKClgIHdhcyBjYWxsZWQuIEVuc3VyZSB0aGF0IGJvdGggZWxlbWVudHMgaGF2ZVwiLCBcImJlZW4gY3JlYXRlZCBhbmQgY2FuIGJlIG1lYXN1cmVkLlwiXS5qb2luKFwiIFwiKSk7XG4gICAgfVxuICB9XG4gIGxldCByZWN0cyA9IHlpZWxkIHBsYXRmb3JtMi5nZXRFbGVtZW50UmVjdHMoe1xuICAgIHJlZmVyZW5jZSxcbiAgICBmbG9hdGluZyxcbiAgICBzdHJhdGVneVxuICB9KTtcbiAgbGV0IHtcbiAgICB4LFxuICAgIHlcbiAgfSA9IGNvbXB1dGVDb29yZHNGcm9tUGxhY2VtZW50KHJlY3RzLCBwbGFjZW1lbnQsIHJ0bCk7XG4gIGxldCBzdGF0ZWZ1bFBsYWNlbWVudCA9IHBsYWNlbWVudDtcbiAgbGV0IG1pZGRsZXdhcmVEYXRhID0ge307XG4gIGxldCByZXNldENvdW50ID0gMDtcbiAgZm9yIChsZXQgaTIgPSAwOyBpMiA8IHZhbGlkTWlkZGxld2FyZS5sZW5ndGg7IGkyKyspIHtcbiAgICBjb25zdCB7XG4gICAgICBuYW1lLFxuICAgICAgZm5cbiAgICB9ID0gdmFsaWRNaWRkbGV3YXJlW2kyXTtcbiAgICBjb25zdCB7XG4gICAgICB4OiBuZXh0WCxcbiAgICAgIHk6IG5leHRZLFxuICAgICAgZGF0YSxcbiAgICAgIHJlc2V0XG4gICAgfSA9IHlpZWxkIGZuKHtcbiAgICAgIHgsXG4gICAgICB5LFxuICAgICAgaW5pdGlhbFBsYWNlbWVudDogcGxhY2VtZW50LFxuICAgICAgcGxhY2VtZW50OiBzdGF0ZWZ1bFBsYWNlbWVudCxcbiAgICAgIHN0cmF0ZWd5LFxuICAgICAgbWlkZGxld2FyZURhdGEsXG4gICAgICByZWN0cyxcbiAgICAgIHBsYXRmb3JtOiBwbGF0Zm9ybTIsXG4gICAgICBlbGVtZW50czoge1xuICAgICAgICByZWZlcmVuY2UsXG4gICAgICAgIGZsb2F0aW5nXG4gICAgICB9XG4gICAgfSk7XG4gICAgeCA9IG5leHRYICE9IG51bGwgPyBuZXh0WCA6IHg7XG4gICAgeSA9IG5leHRZICE9IG51bGwgPyBuZXh0WSA6IHk7XG4gICAgbWlkZGxld2FyZURhdGEgPSBfX3NwcmVhZFByb3BzKF9fc3ByZWFkVmFsdWVzKHt9LCBtaWRkbGV3YXJlRGF0YSksIHtcbiAgICAgIFtuYW1lXTogX19zcHJlYWRWYWx1ZXMoX19zcHJlYWRWYWx1ZXMoe30sIG1pZGRsZXdhcmVEYXRhW25hbWVdKSwgZGF0YSlcbiAgICB9KTtcbiAgICBpZiAoe30uTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiKSB7XG4gICAgICBpZiAocmVzZXRDb3VudCA+IDUwKSB7XG4gICAgICAgIGNvbnNvbGUud2FybihbXCJGbG9hdGluZyBVSTogVGhlIG1pZGRsZXdhcmUgbGlmZWN5Y2xlIGFwcGVhcnMgdG8gYmUgcnVubmluZyBpbiBhblwiLCBcImluZmluaXRlIGxvb3AuIFRoaXMgaXMgdXN1YWxseSBjYXVzZWQgYnkgYSBgcmVzZXRgIGNvbnRpbnVhbGx5XCIsIFwiYmVpbmcgcmV0dXJuZWQgd2l0aG91dCBhIGJyZWFrIGNvbmRpdGlvbi5cIl0uam9pbihcIiBcIikpO1xuICAgICAgfVxuICAgIH1cbiAgICBpZiAocmVzZXQgJiYgcmVzZXRDb3VudCA8PSA1MCkge1xuICAgICAgcmVzZXRDb3VudCsrO1xuICAgICAgaWYgKHR5cGVvZiByZXNldCA9PT0gXCJvYmplY3RcIikge1xuICAgICAgICBpZiAocmVzZXQucGxhY2VtZW50KSB7XG4gICAgICAgICAgc3RhdGVmdWxQbGFjZW1lbnQgPSByZXNldC5wbGFjZW1lbnQ7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHJlc2V0LnJlY3RzKSB7XG4gICAgICAgICAgcmVjdHMgPSByZXNldC5yZWN0cyA9PT0gdHJ1ZSA/IHlpZWxkIHBsYXRmb3JtMi5nZXRFbGVtZW50UmVjdHMoe1xuICAgICAgICAgICAgcmVmZXJlbmNlLFxuICAgICAgICAgICAgZmxvYXRpbmcsXG4gICAgICAgICAgICBzdHJhdGVneVxuICAgICAgICAgIH0pIDogcmVzZXQucmVjdHM7XG4gICAgICAgIH1cbiAgICAgICAgKHtcbiAgICAgICAgICB4LFxuICAgICAgICAgIHlcbiAgICAgICAgfSA9IGNvbXB1dGVDb29yZHNGcm9tUGxhY2VtZW50KHJlY3RzLCBzdGF0ZWZ1bFBsYWNlbWVudCwgcnRsKSk7XG4gICAgICB9XG4gICAgICBpMiA9IC0xO1xuICAgICAgY29udGludWU7XG4gICAgfVxuICB9XG4gIHJldHVybiB7XG4gICAgeCxcbiAgICB5LFxuICAgIHBsYWNlbWVudDogc3RhdGVmdWxQbGFjZW1lbnQsXG4gICAgc3RyYXRlZ3ksXG4gICAgbWlkZGxld2FyZURhdGFcbiAgfTtcbn0pO1xuZnVuY3Rpb24gcmVjdFRvQ2xpZW50UmVjdChyZWN0KSB7XG4gIHJldHVybiBfX3NwcmVhZFByb3BzKF9fc3ByZWFkVmFsdWVzKHt9LCByZWN0KSwge1xuICAgIHRvcDogcmVjdC55LFxuICAgIGxlZnQ6IHJlY3QueCxcbiAgICByaWdodDogcmVjdC54ICsgcmVjdC53aWR0aCxcbiAgICBib3R0b206IHJlY3QueSArIHJlY3QuaGVpZ2h0XG4gIH0pO1xufVxuZnVuY3Rpb24gZ2V0V2luZG93KG5vZGUpIHtcbiAgdmFyIF9ub2RlJG93bmVyRG9jdW1lbnQ7XG4gIHJldHVybiAoKF9ub2RlJG93bmVyRG9jdW1lbnQgPSBub2RlLm93bmVyRG9jdW1lbnQpID09IG51bGwgPyB2b2lkIDAgOiBfbm9kZSRvd25lckRvY3VtZW50LmRlZmF1bHRWaWV3KSB8fCB3aW5kb3c7XG59XG5mdW5jdGlvbiBnZXRDb21wdXRlZFN0eWxlJDEoZWxlbWVudCkge1xuICByZXR1cm4gZ2V0V2luZG93KGVsZW1lbnQpLmdldENvbXB1dGVkU3R5bGUoZWxlbWVudCk7XG59XG5mdW5jdGlvbiBnZXROb2RlTmFtZShub2RlKSB7XG4gIHJldHVybiBpc05vZGUobm9kZSkgPyAobm9kZS5ub2RlTmFtZSB8fCBcIlwiKS50b0xvd2VyQ2FzZSgpIDogXCJcIjtcbn1cbmxldCB1YVN0cmluZztcbmZ1bmN0aW9uIGdldFVBU3RyaW5nKCkge1xuICBpZiAodWFTdHJpbmcpIHtcbiAgICByZXR1cm4gdWFTdHJpbmc7XG4gIH1cbiAgY29uc3QgdWFEYXRhID0gbmF2aWdhdG9yLnVzZXJBZ2VudERhdGE7XG4gIGlmICh1YURhdGEgJiYgQXJyYXkuaXNBcnJheSh1YURhdGEuYnJhbmRzKSkge1xuICAgIHVhU3RyaW5nID0gdWFEYXRhLmJyYW5kcy5tYXAoKGl0ZW0pID0+IGl0ZW0uYnJhbmQgKyBcIi9cIiArIGl0ZW0udmVyc2lvbikuam9pbihcIiBcIik7XG4gICAgcmV0dXJuIHVhU3RyaW5nO1xuICB9XG4gIHJldHVybiBuYXZpZ2F0b3IudXNlckFnZW50O1xufVxuZnVuY3Rpb24gaXNIVE1MRWxlbWVudCh2YWx1ZSkge1xuICByZXR1cm4gdmFsdWUgaW5zdGFuY2VvZiBnZXRXaW5kb3codmFsdWUpLkhUTUxFbGVtZW50O1xufVxuZnVuY3Rpb24gaXNFbGVtZW50KHZhbHVlKSB7XG4gIHJldHVybiB2YWx1ZSBpbnN0YW5jZW9mIGdldFdpbmRvdyh2YWx1ZSkuRWxlbWVudDtcbn1cbmZ1bmN0aW9uIGlzTm9kZSh2YWx1ZSkge1xuICByZXR1cm4gdmFsdWUgaW5zdGFuY2VvZiBnZXRXaW5kb3codmFsdWUpLk5vZGU7XG59XG5mdW5jdGlvbiBpc1NoYWRvd1Jvb3Qobm9kZSkge1xuICBpZiAodHlwZW9mIFNoYWRvd1Jvb3QgPT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cbiAgY29uc3QgT3duRWxlbWVudCA9IGdldFdpbmRvdyhub2RlKS5TaGFkb3dSb290O1xuICByZXR1cm4gbm9kZSBpbnN0YW5jZW9mIE93bkVsZW1lbnQgfHwgbm9kZSBpbnN0YW5jZW9mIFNoYWRvd1Jvb3Q7XG59XG5mdW5jdGlvbiBpc092ZXJmbG93RWxlbWVudChlbGVtZW50KSB7XG4gIGNvbnN0IHtcbiAgICBvdmVyZmxvdyxcbiAgICBvdmVyZmxvd1gsXG4gICAgb3ZlcmZsb3dZLFxuICAgIGRpc3BsYXlcbiAgfSA9IGdldENvbXB1dGVkU3R5bGUkMShlbGVtZW50KTtcbiAgcmV0dXJuIC9hdXRvfHNjcm9sbHxvdmVybGF5fGhpZGRlbi8udGVzdChvdmVyZmxvdyArIG92ZXJmbG93WSArIG92ZXJmbG93WCkgJiYgIVtcImlubGluZVwiLCBcImNvbnRlbnRzXCJdLmluY2x1ZGVzKGRpc3BsYXkpO1xufVxuZnVuY3Rpb24gaXNUYWJsZUVsZW1lbnQoZWxlbWVudCkge1xuICByZXR1cm4gW1widGFibGVcIiwgXCJ0ZFwiLCBcInRoXCJdLmluY2x1ZGVzKGdldE5vZGVOYW1lKGVsZW1lbnQpKTtcbn1cbmZ1bmN0aW9uIGlzQ29udGFpbmluZ0Jsb2NrKGVsZW1lbnQpIHtcbiAgY29uc3QgaXNGaXJlZm94ID0gL2ZpcmVmb3gvaS50ZXN0KGdldFVBU3RyaW5nKCkpO1xuICBjb25zdCBjc3MgPSBnZXRDb21wdXRlZFN0eWxlJDEoZWxlbWVudCk7XG4gIGNvbnN0IGJhY2tkcm9wRmlsdGVyID0gY3NzLmJhY2tkcm9wRmlsdGVyIHx8IGNzcy5XZWJraXRCYWNrZHJvcEZpbHRlcjtcbiAgcmV0dXJuIGNzcy50cmFuc2Zvcm0gIT09IFwibm9uZVwiIHx8IGNzcy5wZXJzcGVjdGl2ZSAhPT0gXCJub25lXCIgfHwgKGJhY2tkcm9wRmlsdGVyID8gYmFja2Ryb3BGaWx0ZXIgIT09IFwibm9uZVwiIDogZmFsc2UpIHx8IGlzRmlyZWZveCAmJiBjc3Mud2lsbENoYW5nZSA9PT0gXCJmaWx0ZXJcIiB8fCBpc0ZpcmVmb3ggJiYgKGNzcy5maWx0ZXIgPyBjc3MuZmlsdGVyICE9PSBcIm5vbmVcIiA6IGZhbHNlKSB8fCBbXCJ0cmFuc2Zvcm1cIiwgXCJwZXJzcGVjdGl2ZVwiXS5zb21lKCh2YWx1ZSkgPT4gY3NzLndpbGxDaGFuZ2UuaW5jbHVkZXModmFsdWUpKSB8fCBbXCJwYWludFwiLCBcImxheW91dFwiLCBcInN0cmljdFwiLCBcImNvbnRlbnRcIl0uc29tZShcbiAgICAodmFsdWUpID0+IHtcbiAgICAgIGNvbnN0IGNvbnRhaW4gPSBjc3MuY29udGFpbjtcbiAgICAgIHJldHVybiBjb250YWluICE9IG51bGwgPyBjb250YWluLmluY2x1ZGVzKHZhbHVlKSA6IGZhbHNlO1xuICAgIH1cbiAgKTtcbn1cbmZ1bmN0aW9uIGlzTGF5b3V0Vmlld3BvcnQoKSB7XG4gIHJldHVybiAhL14oKD8hY2hyb21lfGFuZHJvaWQpLikqc2FmYXJpL2kudGVzdChnZXRVQVN0cmluZygpKTtcbn1cbmZ1bmN0aW9uIGlzTGFzdFRyYXZlcnNhYmxlTm9kZShub2RlKSB7XG4gIHJldHVybiBbXCJodG1sXCIsIFwiYm9keVwiLCBcIiNkb2N1bWVudFwiXS5pbmNsdWRlcyhnZXROb2RlTmFtZShub2RlKSk7XG59XG5jb25zdCBtaW4gPSBNYXRoLm1pbjtcbmNvbnN0IG1heCA9IE1hdGgubWF4O1xuY29uc3Qgcm91bmQgPSBNYXRoLnJvdW5kO1xuY29uc3QgRkFMTEJBQ0tfU0NBTEUgPSB7XG4gIHg6IDEsXG4gIHk6IDFcbn07XG5mdW5jdGlvbiBnZXRTY2FsZShlbGVtZW50KSB7XG4gIGNvbnN0IGRvbUVsZW1lbnQgPSAhaXNFbGVtZW50KGVsZW1lbnQpICYmIGVsZW1lbnQuY29udGV4dEVsZW1lbnQgPyBlbGVtZW50LmNvbnRleHRFbGVtZW50IDogaXNFbGVtZW50KGVsZW1lbnQpID8gZWxlbWVudCA6IG51bGw7XG4gIGlmICghZG9tRWxlbWVudCkge1xuICAgIHJldHVybiBGQUxMQkFDS19TQ0FMRTtcbiAgfVxuICBjb25zdCByZWN0ID0gZG9tRWxlbWVudC5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKTtcbiAgY29uc3QgY3NzID0gZ2V0Q29tcHV0ZWRTdHlsZSQxKGRvbUVsZW1lbnQpO1xuICBpZiAoY3NzLmJveFNpemluZyAhPT0gXCJib3JkZXItYm94XCIpIHtcbiAgICBpZiAoIWlzSFRNTEVsZW1lbnQoZG9tRWxlbWVudCkpIHtcbiAgICAgIHJldHVybiBGQUxMQkFDS19TQ0FMRTtcbiAgICB9XG4gICAgcmV0dXJuIHtcbiAgICAgIHg6IGRvbUVsZW1lbnQub2Zmc2V0V2lkdGggPiAwID8gcm91bmQocmVjdC53aWR0aCkgLyBkb21FbGVtZW50Lm9mZnNldFdpZHRoIHx8IDEgOiAxLFxuICAgICAgeTogZG9tRWxlbWVudC5vZmZzZXRIZWlnaHQgPiAwID8gcm91bmQocmVjdC5oZWlnaHQpIC8gZG9tRWxlbWVudC5vZmZzZXRIZWlnaHQgfHwgMSA6IDFcbiAgICB9O1xuICB9XG4gIGxldCB4ID0gcmVjdC53aWR0aCAvIHBhcnNlRmxvYXQoY3NzLndpZHRoKTtcbiAgbGV0IHkgPSByZWN0LmhlaWdodCAvIHBhcnNlRmxvYXQoY3NzLmhlaWdodCk7XG4gIGlmICgheCB8fCAhTnVtYmVyLmlzRmluaXRlKHgpKSB7XG4gICAgeCA9IDE7XG4gIH1cbiAgaWYgKCF5IHx8ICFOdW1iZXIuaXNGaW5pdGUoeSkpIHtcbiAgICB5ID0gMTtcbiAgfVxuICByZXR1cm4ge1xuICAgIHgsXG4gICAgeVxuICB9O1xufVxuZnVuY3Rpb24gZ2V0Qm91bmRpbmdDbGllbnRSZWN0KGVsZW1lbnQsIGluY2x1ZGVTY2FsZSwgaXNGaXhlZFN0cmF0ZWd5LCBvZmZzZXRQYXJlbnQpIHtcbiAgdmFyIF93aW4kdmlzdWFsVmlld3BvcnQkbywgX3dpbiR2aXN1YWxWaWV3cG9ydCwgX3dpbiR2aXN1YWxWaWV3cG9ydCRvMiwgX3dpbiR2aXN1YWxWaWV3cG9ydDI7XG4gIGlmIChpbmNsdWRlU2NhbGUgPT09IHZvaWQgMCkge1xuICAgIGluY2x1ZGVTY2FsZSA9IGZhbHNlO1xuICB9XG4gIGlmIChpc0ZpeGVkU3RyYXRlZ3kgPT09IHZvaWQgMCkge1xuICAgIGlzRml4ZWRTdHJhdGVneSA9IGZhbHNlO1xuICB9XG4gIGNvbnN0IGNsaWVudFJlY3QgPSBlbGVtZW50LmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpO1xuICBsZXQgc2NhbGUgPSBGQUxMQkFDS19TQ0FMRTtcbiAgaWYgKGluY2x1ZGVTY2FsZSkge1xuICAgIGlmIChvZmZzZXRQYXJlbnQpIHtcbiAgICAgIGlmIChpc0VsZW1lbnQob2Zmc2V0UGFyZW50KSkge1xuICAgICAgICBzY2FsZSA9IGdldFNjYWxlKG9mZnNldFBhcmVudCk7XG4gICAgICB9XG4gICAgfSBlbHNlIHtcbiAgICAgIHNjYWxlID0gZ2V0U2NhbGUoZWxlbWVudCk7XG4gICAgfVxuICB9XG4gIGNvbnN0IHdpbiA9IGlzRWxlbWVudChlbGVtZW50KSA/IGdldFdpbmRvdyhlbGVtZW50KSA6IHdpbmRvdztcbiAgY29uc3QgYWRkVmlzdWFsT2Zmc2V0cyA9ICFpc0xheW91dFZpZXdwb3J0KCkgJiYgaXNGaXhlZFN0cmF0ZWd5O1xuICBjb25zdCB4ID0gKGNsaWVudFJlY3QubGVmdCArIChhZGRWaXN1YWxPZmZzZXRzID8gKF93aW4kdmlzdWFsVmlld3BvcnQkbyA9IChfd2luJHZpc3VhbFZpZXdwb3J0ID0gd2luLnZpc3VhbFZpZXdwb3J0KSA9PSBudWxsID8gdm9pZCAwIDogX3dpbiR2aXN1YWxWaWV3cG9ydC5vZmZzZXRMZWZ0KSAhPSBudWxsID8gX3dpbiR2aXN1YWxWaWV3cG9ydCRvIDogMCA6IDApKSAvIHNjYWxlLng7XG4gIGNvbnN0IHkgPSAoY2xpZW50UmVjdC50b3AgKyAoYWRkVmlzdWFsT2Zmc2V0cyA/IChfd2luJHZpc3VhbFZpZXdwb3J0JG8yID0gKF93aW4kdmlzdWFsVmlld3BvcnQyID0gd2luLnZpc3VhbFZpZXdwb3J0KSA9PSBudWxsID8gdm9pZCAwIDogX3dpbiR2aXN1YWxWaWV3cG9ydDIub2Zmc2V0VG9wKSAhPSBudWxsID8gX3dpbiR2aXN1YWxWaWV3cG9ydCRvMiA6IDAgOiAwKSkgLyBzY2FsZS55O1xuICBjb25zdCB3aWR0aCA9IGNsaWVudFJlY3Qud2lkdGggLyBzY2FsZS54O1xuICBjb25zdCBoZWlnaHQgPSBjbGllbnRSZWN0LmhlaWdodCAvIHNjYWxlLnk7XG4gIHJldHVybiB7XG4gICAgd2lkdGgsXG4gICAgaGVpZ2h0LFxuICAgIHRvcDogeSxcbiAgICByaWdodDogeCArIHdpZHRoLFxuICAgIGJvdHRvbTogeSArIGhlaWdodCxcbiAgICBsZWZ0OiB4LFxuICAgIHgsXG4gICAgeVxuICB9O1xufVxuZnVuY3Rpb24gZ2V0RG9jdW1lbnRFbGVtZW50KG5vZGUpIHtcbiAgcmV0dXJuICgoaXNOb2RlKG5vZGUpID8gbm9kZS5vd25lckRvY3VtZW50IDogbm9kZS5kb2N1bWVudCkgfHwgd2luZG93LmRvY3VtZW50KS5kb2N1bWVudEVsZW1lbnQ7XG59XG5mdW5jdGlvbiBnZXROb2RlU2Nyb2xsKGVsZW1lbnQpIHtcbiAgaWYgKGlzRWxlbWVudChlbGVtZW50KSkge1xuICAgIHJldHVybiB7XG4gICAgICBzY3JvbGxMZWZ0OiBlbGVtZW50LnNjcm9sbExlZnQsXG4gICAgICBzY3JvbGxUb3A6IGVsZW1lbnQuc2Nyb2xsVG9wXG4gICAgfTtcbiAgfVxuICByZXR1cm4ge1xuICAgIHNjcm9sbExlZnQ6IGVsZW1lbnQucGFnZVhPZmZzZXQsXG4gICAgc2Nyb2xsVG9wOiBlbGVtZW50LnBhZ2VZT2Zmc2V0XG4gIH07XG59XG5mdW5jdGlvbiBnZXRXaW5kb3dTY3JvbGxCYXJYKGVsZW1lbnQpIHtcbiAgcmV0dXJuIGdldEJvdW5kaW5nQ2xpZW50UmVjdChnZXREb2N1bWVudEVsZW1lbnQoZWxlbWVudCkpLmxlZnQgKyBnZXROb2RlU2Nyb2xsKGVsZW1lbnQpLnNjcm9sbExlZnQ7XG59XG5mdW5jdGlvbiBnZXRSZWN0UmVsYXRpdmVUb09mZnNldFBhcmVudChlbGVtZW50LCBvZmZzZXRQYXJlbnQsIHN0cmF0ZWd5KSB7XG4gIGNvbnN0IGlzT2Zmc2V0UGFyZW50QW5FbGVtZW50ID0gaXNIVE1MRWxlbWVudChvZmZzZXRQYXJlbnQpO1xuICBjb25zdCBkb2N1bWVudEVsZW1lbnQgPSBnZXREb2N1bWVudEVsZW1lbnQob2Zmc2V0UGFyZW50KTtcbiAgY29uc3QgcmVjdCA9IGdldEJvdW5kaW5nQ2xpZW50UmVjdChlbGVtZW50LCB0cnVlLCBzdHJhdGVneSA9PT0gXCJmaXhlZFwiLCBvZmZzZXRQYXJlbnQpO1xuICBsZXQgc2Nyb2xsID0ge1xuICAgIHNjcm9sbExlZnQ6IDAsXG4gICAgc2Nyb2xsVG9wOiAwXG4gIH07XG4gIGNvbnN0IG9mZnNldHMgPSB7XG4gICAgeDogMCxcbiAgICB5OiAwXG4gIH07XG4gIGlmIChpc09mZnNldFBhcmVudEFuRWxlbWVudCB8fCAhaXNPZmZzZXRQYXJlbnRBbkVsZW1lbnQgJiYgc3RyYXRlZ3kgIT09IFwiZml4ZWRcIikge1xuICAgIGlmIChnZXROb2RlTmFtZShvZmZzZXRQYXJlbnQpICE9PSBcImJvZHlcIiB8fCBpc092ZXJmbG93RWxlbWVudChkb2N1bWVudEVsZW1lbnQpKSB7XG4gICAgICBzY3JvbGwgPSBnZXROb2RlU2Nyb2xsKG9mZnNldFBhcmVudCk7XG4gICAgfVxuICAgIGlmIChpc0hUTUxFbGVtZW50KG9mZnNldFBhcmVudCkpIHtcbiAgICAgIGNvbnN0IG9mZnNldFJlY3QgPSBnZXRCb3VuZGluZ0NsaWVudFJlY3Qob2Zmc2V0UGFyZW50LCB0cnVlKTtcbiAgICAgIG9mZnNldHMueCA9IG9mZnNldFJlY3QueCArIG9mZnNldFBhcmVudC5jbGllbnRMZWZ0O1xuICAgICAgb2Zmc2V0cy55ID0gb2Zmc2V0UmVjdC55ICsgb2Zmc2V0UGFyZW50LmNsaWVudFRvcDtcbiAgICB9IGVsc2UgaWYgKGRvY3VtZW50RWxlbWVudCkge1xuICAgICAgb2Zmc2V0cy54ID0gZ2V0V2luZG93U2Nyb2xsQmFyWChkb2N1bWVudEVsZW1lbnQpO1xuICAgIH1cbiAgfVxuICByZXR1cm4ge1xuICAgIHg6IHJlY3QubGVmdCArIHNjcm9sbC5zY3JvbGxMZWZ0IC0gb2Zmc2V0cy54LFxuICAgIHk6IHJlY3QudG9wICsgc2Nyb2xsLnNjcm9sbFRvcCAtIG9mZnNldHMueSxcbiAgICB3aWR0aDogcmVjdC53aWR0aCxcbiAgICBoZWlnaHQ6IHJlY3QuaGVpZ2h0XG4gIH07XG59XG5mdW5jdGlvbiBnZXRQYXJlbnROb2RlKG5vZGUpIHtcbiAgaWYgKGdldE5vZGVOYW1lKG5vZGUpID09PSBcImh0bWxcIikge1xuICAgIHJldHVybiBub2RlO1xuICB9XG4gIGNvbnN0IHJlc3VsdCA9IG5vZGUuYXNzaWduZWRTbG90IHx8IG5vZGUucGFyZW50Tm9kZSB8fCAoaXNTaGFkb3dSb290KG5vZGUpID8gbm9kZS5ob3N0IDogbnVsbCkgfHwgZ2V0RG9jdW1lbnRFbGVtZW50KG5vZGUpO1xuICByZXR1cm4gaXNTaGFkb3dSb290KHJlc3VsdCkgPyByZXN1bHQuaG9zdCA6IHJlc3VsdDtcbn1cbmZ1bmN0aW9uIGdldFRydWVPZmZzZXRQYXJlbnQoZWxlbWVudCkge1xuICBpZiAoIWlzSFRNTEVsZW1lbnQoZWxlbWVudCkgfHwgZ2V0Q29tcHV0ZWRTdHlsZSQxKGVsZW1lbnQpLnBvc2l0aW9uID09PSBcImZpeGVkXCIpIHtcbiAgICByZXR1cm4gbnVsbDtcbiAgfVxuICByZXR1cm4gZWxlbWVudC5vZmZzZXRQYXJlbnQ7XG59XG5mdW5jdGlvbiBnZXRDb250YWluaW5nQmxvY2soZWxlbWVudCkge1xuICBsZXQgY3VycmVudE5vZGUgPSBnZXRQYXJlbnROb2RlKGVsZW1lbnQpO1xuICB3aGlsZSAoaXNIVE1MRWxlbWVudChjdXJyZW50Tm9kZSkgJiYgIWlzTGFzdFRyYXZlcnNhYmxlTm9kZShjdXJyZW50Tm9kZSkpIHtcbiAgICBpZiAoaXNDb250YWluaW5nQmxvY2soY3VycmVudE5vZGUpKSB7XG4gICAgICByZXR1cm4gY3VycmVudE5vZGU7XG4gICAgfSBlbHNlIHtcbiAgICAgIGN1cnJlbnROb2RlID0gZ2V0UGFyZW50Tm9kZShjdXJyZW50Tm9kZSk7XG4gICAgfVxuICB9XG4gIHJldHVybiBudWxsO1xufVxuZnVuY3Rpb24gZ2V0T2Zmc2V0UGFyZW50KGVsZW1lbnQpIHtcbiAgY29uc3Qgd2luZG93MiA9IGdldFdpbmRvdyhlbGVtZW50KTtcbiAgbGV0IG9mZnNldFBhcmVudCA9IGdldFRydWVPZmZzZXRQYXJlbnQoZWxlbWVudCk7XG4gIHdoaWxlIChvZmZzZXRQYXJlbnQgJiYgaXNUYWJsZUVsZW1lbnQob2Zmc2V0UGFyZW50KSAmJiBnZXRDb21wdXRlZFN0eWxlJDEob2Zmc2V0UGFyZW50KS5wb3NpdGlvbiA9PT0gXCJzdGF0aWNcIikge1xuICAgIG9mZnNldFBhcmVudCA9IGdldFRydWVPZmZzZXRQYXJlbnQob2Zmc2V0UGFyZW50KTtcbiAgfVxuICBpZiAob2Zmc2V0UGFyZW50ICYmIChnZXROb2RlTmFtZShvZmZzZXRQYXJlbnQpID09PSBcImh0bWxcIiB8fCBnZXROb2RlTmFtZShvZmZzZXRQYXJlbnQpID09PSBcImJvZHlcIiAmJiBnZXRDb21wdXRlZFN0eWxlJDEob2Zmc2V0UGFyZW50KS5wb3NpdGlvbiA9PT0gXCJzdGF0aWNcIiAmJiAhaXNDb250YWluaW5nQmxvY2sob2Zmc2V0UGFyZW50KSkpIHtcbiAgICByZXR1cm4gd2luZG93MjtcbiAgfVxuICByZXR1cm4gb2Zmc2V0UGFyZW50IHx8IGdldENvbnRhaW5pbmdCbG9jayhlbGVtZW50KSB8fCB3aW5kb3cyO1xufVxuZnVuY3Rpb24gZ2V0RGltZW5zaW9ucyhlbGVtZW50KSB7XG4gIGlmIChpc0hUTUxFbGVtZW50KGVsZW1lbnQpKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIHdpZHRoOiBlbGVtZW50Lm9mZnNldFdpZHRoLFxuICAgICAgaGVpZ2h0OiBlbGVtZW50Lm9mZnNldEhlaWdodFxuICAgIH07XG4gIH1cbiAgY29uc3QgcmVjdCA9IGdldEJvdW5kaW5nQ2xpZW50UmVjdChlbGVtZW50KTtcbiAgcmV0dXJuIHtcbiAgICB3aWR0aDogcmVjdC53aWR0aCxcbiAgICBoZWlnaHQ6IHJlY3QuaGVpZ2h0XG4gIH07XG59XG5mdW5jdGlvbiBjb252ZXJ0T2Zmc2V0UGFyZW50UmVsYXRpdmVSZWN0VG9WaWV3cG9ydFJlbGF0aXZlUmVjdChfcmVmKSB7XG4gIGxldCB7XG4gICAgcmVjdCxcbiAgICBvZmZzZXRQYXJlbnQsXG4gICAgc3RyYXRlZ3lcbiAgfSA9IF9yZWY7XG4gIGNvbnN0IGlzT2Zmc2V0UGFyZW50QW5FbGVtZW50ID0gaXNIVE1MRWxlbWVudChvZmZzZXRQYXJlbnQpO1xuICBjb25zdCBkb2N1bWVudEVsZW1lbnQgPSBnZXREb2N1bWVudEVsZW1lbnQob2Zmc2V0UGFyZW50KTtcbiAgaWYgKG9mZnNldFBhcmVudCA9PT0gZG9jdW1lbnRFbGVtZW50KSB7XG4gICAgcmV0dXJuIHJlY3Q7XG4gIH1cbiAgbGV0IHNjcm9sbCA9IHtcbiAgICBzY3JvbGxMZWZ0OiAwLFxuICAgIHNjcm9sbFRvcDogMFxuICB9O1xuICBsZXQgc2NhbGUgPSB7XG4gICAgeDogMSxcbiAgICB5OiAxXG4gIH07XG4gIGNvbnN0IG9mZnNldHMgPSB7XG4gICAgeDogMCxcbiAgICB5OiAwXG4gIH07XG4gIGlmIChpc09mZnNldFBhcmVudEFuRWxlbWVudCB8fCAhaXNPZmZzZXRQYXJlbnRBbkVsZW1lbnQgJiYgc3RyYXRlZ3kgIT09IFwiZml4ZWRcIikge1xuICAgIGlmIChnZXROb2RlTmFtZShvZmZzZXRQYXJlbnQpICE9PSBcImJvZHlcIiB8fCBpc092ZXJmbG93RWxlbWVudChkb2N1bWVudEVsZW1lbnQpKSB7XG4gICAgICBzY3JvbGwgPSBnZXROb2RlU2Nyb2xsKG9mZnNldFBhcmVudCk7XG4gICAgfVxuICAgIGlmIChpc0hUTUxFbGVtZW50KG9mZnNldFBhcmVudCkpIHtcbiAgICAgIGNvbnN0IG9mZnNldFJlY3QgPSBnZXRCb3VuZGluZ0NsaWVudFJlY3Qob2Zmc2V0UGFyZW50KTtcbiAgICAgIHNjYWxlID0gZ2V0U2NhbGUob2Zmc2V0UGFyZW50KTtcbiAgICAgIG9mZnNldHMueCA9IG9mZnNldFJlY3QueCArIG9mZnNldFBhcmVudC5jbGllbnRMZWZ0O1xuICAgICAgb2Zmc2V0cy55ID0gb2Zmc2V0UmVjdC55ICsgb2Zmc2V0UGFyZW50LmNsaWVudFRvcDtcbiAgICB9XG4gIH1cbiAgcmV0dXJuIHtcbiAgICB3aWR0aDogcmVjdC53aWR0aCAqIHNjYWxlLngsXG4gICAgaGVpZ2h0OiByZWN0LmhlaWdodCAqIHNjYWxlLnksXG4gICAgeDogcmVjdC54ICogc2NhbGUueCAtIHNjcm9sbC5zY3JvbGxMZWZ0ICogc2NhbGUueCArIG9mZnNldHMueCxcbiAgICB5OiByZWN0LnkgKiBzY2FsZS55IC0gc2Nyb2xsLnNjcm9sbFRvcCAqIHNjYWxlLnkgKyBvZmZzZXRzLnlcbiAgfTtcbn1cbmZ1bmN0aW9uIGdldFZpZXdwb3J0UmVjdChlbGVtZW50LCBzdHJhdGVneSkge1xuICBjb25zdCB3aW4gPSBnZXRXaW5kb3coZWxlbWVudCk7XG4gIGNvbnN0IGh0bWwgPSBnZXREb2N1bWVudEVsZW1lbnQoZWxlbWVudCk7XG4gIGNvbnN0IHZpc3VhbFZpZXdwb3J0ID0gd2luLnZpc3VhbFZpZXdwb3J0O1xuICBsZXQgd2lkdGggPSBodG1sLmNsaWVudFdpZHRoO1xuICBsZXQgaGVpZ2h0ID0gaHRtbC5jbGllbnRIZWlnaHQ7XG4gIGxldCB4ID0gMDtcbiAgbGV0IHkgPSAwO1xuICBpZiAodmlzdWFsVmlld3BvcnQpIHtcbiAgICB3aWR0aCA9IHZpc3VhbFZpZXdwb3J0LndpZHRoO1xuICAgIGhlaWdodCA9IHZpc3VhbFZpZXdwb3J0LmhlaWdodDtcbiAgICBjb25zdCBsYXlvdXRWaWV3cG9ydCA9IGlzTGF5b3V0Vmlld3BvcnQoKTtcbiAgICBpZiAobGF5b3V0Vmlld3BvcnQgfHwgIWxheW91dFZpZXdwb3J0ICYmIHN0cmF0ZWd5ID09PSBcImZpeGVkXCIpIHtcbiAgICAgIHggPSB2aXN1YWxWaWV3cG9ydC5vZmZzZXRMZWZ0O1xuICAgICAgeSA9IHZpc3VhbFZpZXdwb3J0Lm9mZnNldFRvcDtcbiAgICB9XG4gIH1cbiAgcmV0dXJuIHtcbiAgICB3aWR0aCxcbiAgICBoZWlnaHQsXG4gICAgeCxcbiAgICB5XG4gIH07XG59XG5mdW5jdGlvbiBnZXREb2N1bWVudFJlY3QoZWxlbWVudCkge1xuICB2YXIgX2VsZW1lbnQkb3duZXJEb2N1bWVuO1xuICBjb25zdCBodG1sID0gZ2V0RG9jdW1lbnRFbGVtZW50KGVsZW1lbnQpO1xuICBjb25zdCBzY3JvbGwgPSBnZXROb2RlU2Nyb2xsKGVsZW1lbnQpO1xuICBjb25zdCBib2R5ID0gKF9lbGVtZW50JG93bmVyRG9jdW1lbiA9IGVsZW1lbnQub3duZXJEb2N1bWVudCkgPT0gbnVsbCA/IHZvaWQgMCA6IF9lbGVtZW50JG93bmVyRG9jdW1lbi5ib2R5O1xuICBjb25zdCB3aWR0aCA9IG1heChodG1sLnNjcm9sbFdpZHRoLCBodG1sLmNsaWVudFdpZHRoLCBib2R5ID8gYm9keS5zY3JvbGxXaWR0aCA6IDAsIGJvZHkgPyBib2R5LmNsaWVudFdpZHRoIDogMCk7XG4gIGNvbnN0IGhlaWdodCA9IG1heChodG1sLnNjcm9sbEhlaWdodCwgaHRtbC5jbGllbnRIZWlnaHQsIGJvZHkgPyBib2R5LnNjcm9sbEhlaWdodCA6IDAsIGJvZHkgPyBib2R5LmNsaWVudEhlaWdodCA6IDApO1xuICBsZXQgeCA9IC1zY3JvbGwuc2Nyb2xsTGVmdCArIGdldFdpbmRvd1Njcm9sbEJhclgoZWxlbWVudCk7XG4gIGNvbnN0IHkgPSAtc2Nyb2xsLnNjcm9sbFRvcDtcbiAgaWYgKGdldENvbXB1dGVkU3R5bGUkMShib2R5IHx8IGh0bWwpLmRpcmVjdGlvbiA9PT0gXCJydGxcIikge1xuICAgIHggKz0gbWF4KGh0bWwuY2xpZW50V2lkdGgsIGJvZHkgPyBib2R5LmNsaWVudFdpZHRoIDogMCkgLSB3aWR0aDtcbiAgfVxuICByZXR1cm4ge1xuICAgIHdpZHRoLFxuICAgIGhlaWdodCxcbiAgICB4LFxuICAgIHlcbiAgfTtcbn1cbmZ1bmN0aW9uIGdldE5lYXJlc3RPdmVyZmxvd0FuY2VzdG9yKG5vZGUpIHtcbiAgY29uc3QgcGFyZW50Tm9kZSA9IGdldFBhcmVudE5vZGUobm9kZSk7XG4gIGlmIChpc0xhc3RUcmF2ZXJzYWJsZU5vZGUocGFyZW50Tm9kZSkpIHtcbiAgICByZXR1cm4gbm9kZS5vd25lckRvY3VtZW50LmJvZHk7XG4gIH1cbiAgaWYgKGlzSFRNTEVsZW1lbnQocGFyZW50Tm9kZSkgJiYgaXNPdmVyZmxvd0VsZW1lbnQocGFyZW50Tm9kZSkpIHtcbiAgICByZXR1cm4gcGFyZW50Tm9kZTtcbiAgfVxuICByZXR1cm4gZ2V0TmVhcmVzdE92ZXJmbG93QW5jZXN0b3IocGFyZW50Tm9kZSk7XG59XG5mdW5jdGlvbiBnZXRPdmVyZmxvd0FuY2VzdG9ycyhub2RlLCBsaXN0KSB7XG4gIHZhciBfbm9kZSRvd25lckRvY3VtZW50O1xuICBpZiAobGlzdCA9PT0gdm9pZCAwKSB7XG4gICAgbGlzdCA9IFtdO1xuICB9XG4gIGNvbnN0IHNjcm9sbGFibGVBbmNlc3RvciA9IGdldE5lYXJlc3RPdmVyZmxvd0FuY2VzdG9yKG5vZGUpO1xuICBjb25zdCBpc0JvZHkgPSBzY3JvbGxhYmxlQW5jZXN0b3IgPT09ICgoX25vZGUkb3duZXJEb2N1bWVudCA9IG5vZGUub3duZXJEb2N1bWVudCkgPT0gbnVsbCA/IHZvaWQgMCA6IF9ub2RlJG93bmVyRG9jdW1lbnQuYm9keSk7XG4gIGNvbnN0IHdpbiA9IGdldFdpbmRvdyhzY3JvbGxhYmxlQW5jZXN0b3IpO1xuICBpZiAoaXNCb2R5KSB7XG4gICAgcmV0dXJuIGxpc3QuY29uY2F0KHdpbiwgd2luLnZpc3VhbFZpZXdwb3J0IHx8IFtdLCBpc092ZXJmbG93RWxlbWVudChzY3JvbGxhYmxlQW5jZXN0b3IpID8gc2Nyb2xsYWJsZUFuY2VzdG9yIDogW10pO1xuICB9XG4gIHJldHVybiBsaXN0LmNvbmNhdChzY3JvbGxhYmxlQW5jZXN0b3IsIGdldE92ZXJmbG93QW5jZXN0b3JzKHNjcm9sbGFibGVBbmNlc3RvcikpO1xufVxuZnVuY3Rpb24gZ2V0SW5uZXJCb3VuZGluZ0NsaWVudFJlY3QoZWxlbWVudCwgc3RyYXRlZ3kpIHtcbiAgY29uc3QgY2xpZW50UmVjdCA9IGdldEJvdW5kaW5nQ2xpZW50UmVjdChlbGVtZW50LCB0cnVlLCBzdHJhdGVneSA9PT0gXCJmaXhlZFwiKTtcbiAgY29uc3QgdG9wID0gY2xpZW50UmVjdC50b3AgKyBlbGVtZW50LmNsaWVudFRvcDtcbiAgY29uc3QgbGVmdCA9IGNsaWVudFJlY3QubGVmdCArIGVsZW1lbnQuY2xpZW50TGVmdDtcbiAgY29uc3Qgc2NhbGUgPSBpc0hUTUxFbGVtZW50KGVsZW1lbnQpID8gZ2V0U2NhbGUoZWxlbWVudCkgOiB7XG4gICAgeDogMSxcbiAgICB5OiAxXG4gIH07XG4gIGNvbnN0IHdpZHRoID0gZWxlbWVudC5jbGllbnRXaWR0aCAqIHNjYWxlLng7XG4gIGNvbnN0IGhlaWdodCA9IGVsZW1lbnQuY2xpZW50SGVpZ2h0ICogc2NhbGUueTtcbiAgY29uc3QgeCA9IGxlZnQgKiBzY2FsZS54O1xuICBjb25zdCB5ID0gdG9wICogc2NhbGUueTtcbiAgcmV0dXJuIHtcbiAgICB0b3A6IHksXG4gICAgbGVmdDogeCxcbiAgICByaWdodDogeCArIHdpZHRoLFxuICAgIGJvdHRvbTogeSArIGhlaWdodCxcbiAgICB4LFxuICAgIHksXG4gICAgd2lkdGgsXG4gICAgaGVpZ2h0XG4gIH07XG59XG5mdW5jdGlvbiBnZXRDbGllbnRSZWN0RnJvbUNsaXBwaW5nQW5jZXN0b3IoZWxlbWVudCwgY2xpcHBpbmdBbmNlc3Rvciwgc3RyYXRlZ3kpIHtcbiAgaWYgKGNsaXBwaW5nQW5jZXN0b3IgPT09IFwidmlld3BvcnRcIikge1xuICAgIHJldHVybiByZWN0VG9DbGllbnRSZWN0KGdldFZpZXdwb3J0UmVjdChlbGVtZW50LCBzdHJhdGVneSkpO1xuICB9XG4gIGlmIChpc0VsZW1lbnQoY2xpcHBpbmdBbmNlc3RvcikpIHtcbiAgICByZXR1cm4gZ2V0SW5uZXJCb3VuZGluZ0NsaWVudFJlY3QoY2xpcHBpbmdBbmNlc3Rvciwgc3RyYXRlZ3kpO1xuICB9XG4gIHJldHVybiByZWN0VG9DbGllbnRSZWN0KGdldERvY3VtZW50UmVjdChnZXREb2N1bWVudEVsZW1lbnQoZWxlbWVudCkpKTtcbn1cbmZ1bmN0aW9uIGdldENsaXBwaW5nRWxlbWVudEFuY2VzdG9ycyhlbGVtZW50LCBjYWNoZSkge1xuICBjb25zdCBjYWNoZWRSZXN1bHQgPSBjYWNoZS5nZXQoZWxlbWVudCk7XG4gIGlmIChjYWNoZWRSZXN1bHQpIHtcbiAgICByZXR1cm4gY2FjaGVkUmVzdWx0O1xuICB9XG4gIGxldCByZXN1bHQgPSBnZXRPdmVyZmxvd0FuY2VzdG9ycyhlbGVtZW50KS5maWx0ZXIoKGVsKSA9PiBpc0VsZW1lbnQoZWwpICYmIGdldE5vZGVOYW1lKGVsKSAhPT0gXCJib2R5XCIpO1xuICBsZXQgY3VycmVudENvbnRhaW5pbmdCbG9ja0NvbXB1dGVkU3R5bGUgPSBudWxsO1xuICBjb25zdCBlbGVtZW50SXNGaXhlZCA9IGdldENvbXB1dGVkU3R5bGUkMShlbGVtZW50KS5wb3NpdGlvbiA9PT0gXCJmaXhlZFwiO1xuICBsZXQgY3VycmVudE5vZGUgPSBlbGVtZW50SXNGaXhlZCA/IGdldFBhcmVudE5vZGUoZWxlbWVudCkgOiBlbGVtZW50O1xuICB3aGlsZSAoaXNFbGVtZW50KGN1cnJlbnROb2RlKSAmJiAhaXNMYXN0VHJhdmVyc2FibGVOb2RlKGN1cnJlbnROb2RlKSkge1xuICAgIGNvbnN0IGNvbXB1dGVkU3R5bGUgPSBnZXRDb21wdXRlZFN0eWxlJDEoY3VycmVudE5vZGUpO1xuICAgIGNvbnN0IGNvbnRhaW5pbmdCbG9jayA9IGlzQ29udGFpbmluZ0Jsb2NrKGN1cnJlbnROb2RlKTtcbiAgICBjb25zdCBzaG91bGREcm9wQ3VycmVudE5vZGUgPSBlbGVtZW50SXNGaXhlZCA/ICFjb250YWluaW5nQmxvY2sgJiYgIWN1cnJlbnRDb250YWluaW5nQmxvY2tDb21wdXRlZFN0eWxlIDogIWNvbnRhaW5pbmdCbG9jayAmJiBjb21wdXRlZFN0eWxlLnBvc2l0aW9uID09PSBcInN0YXRpY1wiICYmICEhY3VycmVudENvbnRhaW5pbmdCbG9ja0NvbXB1dGVkU3R5bGUgJiYgW1wiYWJzb2x1dGVcIiwgXCJmaXhlZFwiXS5pbmNsdWRlcyhjdXJyZW50Q29udGFpbmluZ0Jsb2NrQ29tcHV0ZWRTdHlsZS5wb3NpdGlvbik7XG4gICAgaWYgKHNob3VsZERyb3BDdXJyZW50Tm9kZSkge1xuICAgICAgcmVzdWx0ID0gcmVzdWx0LmZpbHRlcigoYW5jZXN0b3IpID0+IGFuY2VzdG9yICE9PSBjdXJyZW50Tm9kZSk7XG4gICAgfSBlbHNlIHtcbiAgICAgIGN1cnJlbnRDb250YWluaW5nQmxvY2tDb21wdXRlZFN0eWxlID0gY29tcHV0ZWRTdHlsZTtcbiAgICB9XG4gICAgY3VycmVudE5vZGUgPSBnZXRQYXJlbnROb2RlKGN1cnJlbnROb2RlKTtcbiAgfVxuICBjYWNoZS5zZXQoZWxlbWVudCwgcmVzdWx0KTtcbiAgcmV0dXJuIHJlc3VsdDtcbn1cbmZ1bmN0aW9uIGdldENsaXBwaW5nUmVjdChfcmVmKSB7XG4gIGxldCB7XG4gICAgZWxlbWVudCxcbiAgICBib3VuZGFyeSxcbiAgICByb290Qm91bmRhcnksXG4gICAgc3RyYXRlZ3lcbiAgfSA9IF9yZWY7XG4gIGNvbnN0IGVsZW1lbnRDbGlwcGluZ0FuY2VzdG9ycyA9IGJvdW5kYXJ5ID09PSBcImNsaXBwaW5nQW5jZXN0b3JzXCIgPyBnZXRDbGlwcGluZ0VsZW1lbnRBbmNlc3RvcnMoZWxlbWVudCwgdGhpcy5fYykgOiBbXS5jb25jYXQoYm91bmRhcnkpO1xuICBjb25zdCBjbGlwcGluZ0FuY2VzdG9ycyA9IFsuLi5lbGVtZW50Q2xpcHBpbmdBbmNlc3RvcnMsIHJvb3RCb3VuZGFyeV07XG4gIGNvbnN0IGZpcnN0Q2xpcHBpbmdBbmNlc3RvciA9IGNsaXBwaW5nQW5jZXN0b3JzWzBdO1xuICBjb25zdCBjbGlwcGluZ1JlY3QgPSBjbGlwcGluZ0FuY2VzdG9ycy5yZWR1Y2UoKGFjY1JlY3QsIGNsaXBwaW5nQW5jZXN0b3IpID0+IHtcbiAgICBjb25zdCByZWN0ID0gZ2V0Q2xpZW50UmVjdEZyb21DbGlwcGluZ0FuY2VzdG9yKGVsZW1lbnQsIGNsaXBwaW5nQW5jZXN0b3IsIHN0cmF0ZWd5KTtcbiAgICBhY2NSZWN0LnRvcCA9IG1heChyZWN0LnRvcCwgYWNjUmVjdC50b3ApO1xuICAgIGFjY1JlY3QucmlnaHQgPSBtaW4ocmVjdC5yaWdodCwgYWNjUmVjdC5yaWdodCk7XG4gICAgYWNjUmVjdC5ib3R0b20gPSBtaW4ocmVjdC5ib3R0b20sIGFjY1JlY3QuYm90dG9tKTtcbiAgICBhY2NSZWN0LmxlZnQgPSBtYXgocmVjdC5sZWZ0LCBhY2NSZWN0LmxlZnQpO1xuICAgIHJldHVybiBhY2NSZWN0O1xuICB9LCBnZXRDbGllbnRSZWN0RnJvbUNsaXBwaW5nQW5jZXN0b3IoZWxlbWVudCwgZmlyc3RDbGlwcGluZ0FuY2VzdG9yLCBzdHJhdGVneSkpO1xuICByZXR1cm4ge1xuICAgIHdpZHRoOiBjbGlwcGluZ1JlY3QucmlnaHQgLSBjbGlwcGluZ1JlY3QubGVmdCxcbiAgICBoZWlnaHQ6IGNsaXBwaW5nUmVjdC5ib3R0b20gLSBjbGlwcGluZ1JlY3QudG9wLFxuICAgIHg6IGNsaXBwaW5nUmVjdC5sZWZ0LFxuICAgIHk6IGNsaXBwaW5nUmVjdC50b3BcbiAgfTtcbn1cbmNvbnN0IHBsYXRmb3JtID0ge1xuICBnZXRDbGlwcGluZ1JlY3QsXG4gIGNvbnZlcnRPZmZzZXRQYXJlbnRSZWxhdGl2ZVJlY3RUb1ZpZXdwb3J0UmVsYXRpdmVSZWN0LFxuICBpc0VsZW1lbnQsXG4gIGdldERpbWVuc2lvbnMsXG4gIGdldE9mZnNldFBhcmVudCxcbiAgZ2V0RG9jdW1lbnRFbGVtZW50LFxuICBnZXRTY2FsZSxcbiAgZ2V0RWxlbWVudFJlY3RzKF9yZWYpIHtcbiAgICByZXR1cm4gX19hc3luYyh0aGlzLCBudWxsLCBmdW5jdGlvbiogKCkge1xuICAgICAgbGV0IHtcbiAgICAgICAgcmVmZXJlbmNlLFxuICAgICAgICBmbG9hdGluZyxcbiAgICAgICAgc3RyYXRlZ3lcbiAgICAgIH0gPSBfcmVmO1xuICAgICAgY29uc3QgZ2V0T2Zmc2V0UGFyZW50Rm4gPSB0aGlzLmdldE9mZnNldFBhcmVudCB8fCBnZXRPZmZzZXRQYXJlbnQ7XG4gICAgICBjb25zdCBnZXREaW1lbnNpb25zRm4gPSB0aGlzLmdldERpbWVuc2lvbnM7XG4gICAgICByZXR1cm4ge1xuICAgICAgICByZWZlcmVuY2U6IGdldFJlY3RSZWxhdGl2ZVRvT2Zmc2V0UGFyZW50KHJlZmVyZW5jZSwgeWllbGQgZ2V0T2Zmc2V0UGFyZW50Rm4oZmxvYXRpbmcpLCBzdHJhdGVneSksXG4gICAgICAgIGZsb2F0aW5nOiBfX3NwcmVhZFZhbHVlcyh7XG4gICAgICAgICAgeDogMCxcbiAgICAgICAgICB5OiAwXG4gICAgICAgIH0sIHlpZWxkIGdldERpbWVuc2lvbnNGbihmbG9hdGluZykpXG4gICAgICB9O1xuICAgIH0pO1xuICB9LFxuICBnZXRDbGllbnRSZWN0czogKGVsZW1lbnQpID0+IEFycmF5LmZyb20oZWxlbWVudC5nZXRDbGllbnRSZWN0cygpKSxcbiAgaXNSVEw6IChlbGVtZW50KSA9PiBnZXRDb21wdXRlZFN0eWxlJDEoZWxlbWVudCkuZGlyZWN0aW9uID09PSBcInJ0bFwiXG59O1xuZnVuY3Rpb24gYXV0b1VwZGF0ZShyZWZlcmVuY2UsIGZsb2F0aW5nLCB1cGRhdGUsIG9wdGlvbnMpIHtcbiAgaWYgKG9wdGlvbnMgPT09IHZvaWQgMCkge1xuICAgIG9wdGlvbnMgPSB7fTtcbiAgfVxuICBjb25zdCB7XG4gICAgYW5jZXN0b3JTY3JvbGw6IF9hbmNlc3RvclNjcm9sbCA9IHRydWUsXG4gICAgYW5jZXN0b3JSZXNpemUgPSB0cnVlLFxuICAgIGVsZW1lbnRSZXNpemUgPSB0cnVlLFxuICAgIGFuaW1hdGlvbkZyYW1lID0gZmFsc2VcbiAgfSA9IG9wdGlvbnM7XG4gIGNvbnN0IGFuY2VzdG9yU2Nyb2xsID0gX2FuY2VzdG9yU2Nyb2xsICYmICFhbmltYXRpb25GcmFtZTtcbiAgY29uc3QgYW5jZXN0b3JzID0gYW5jZXN0b3JTY3JvbGwgfHwgYW5jZXN0b3JSZXNpemUgPyBbLi4uaXNFbGVtZW50KHJlZmVyZW5jZSkgPyBnZXRPdmVyZmxvd0FuY2VzdG9ycyhyZWZlcmVuY2UpIDogcmVmZXJlbmNlLmNvbnRleHRFbGVtZW50ID8gZ2V0T3ZlcmZsb3dBbmNlc3RvcnMocmVmZXJlbmNlLmNvbnRleHRFbGVtZW50KSA6IFtdLCAuLi5nZXRPdmVyZmxvd0FuY2VzdG9ycyhmbG9hdGluZyldIDogW107XG4gIGFuY2VzdG9ycy5mb3JFYWNoKChhbmNlc3RvcikgPT4ge1xuICAgIGFuY2VzdG9yU2Nyb2xsICYmIGFuY2VzdG9yLmFkZEV2ZW50TGlzdGVuZXIoXCJzY3JvbGxcIiwgdXBkYXRlLCB7XG4gICAgICBwYXNzaXZlOiB0cnVlXG4gICAgfSk7XG4gICAgYW5jZXN0b3JSZXNpemUgJiYgYW5jZXN0b3IuYWRkRXZlbnRMaXN0ZW5lcihcInJlc2l6ZVwiLCB1cGRhdGUpO1xuICB9KTtcbiAgbGV0IG9ic2VydmVyID0gbnVsbDtcbiAgaWYgKGVsZW1lbnRSZXNpemUpIHtcbiAgICBsZXQgaW5pdGlhbFVwZGF0ZSA9IHRydWU7XG4gICAgb2JzZXJ2ZXIgPSBuZXcgUmVzaXplT2JzZXJ2ZXIoKCkgPT4ge1xuICAgICAgaWYgKCFpbml0aWFsVXBkYXRlKSB7XG4gICAgICAgIHVwZGF0ZSgpO1xuICAgICAgfVxuICAgICAgaW5pdGlhbFVwZGF0ZSA9IGZhbHNlO1xuICAgIH0pO1xuICAgIGlzRWxlbWVudChyZWZlcmVuY2UpICYmICFhbmltYXRpb25GcmFtZSAmJiBvYnNlcnZlci5vYnNlcnZlKHJlZmVyZW5jZSk7XG4gICAgaWYgKCFpc0VsZW1lbnQocmVmZXJlbmNlKSAmJiByZWZlcmVuY2UuY29udGV4dEVsZW1lbnQgJiYgIWFuaW1hdGlvbkZyYW1lKSB7XG4gICAgICBvYnNlcnZlci5vYnNlcnZlKHJlZmVyZW5jZS5jb250ZXh0RWxlbWVudCk7XG4gICAgfVxuICAgIG9ic2VydmVyLm9ic2VydmUoZmxvYXRpbmcpO1xuICB9XG4gIGxldCBmcmFtZUlkO1xuICBsZXQgcHJldlJlZlJlY3QgPSBhbmltYXRpb25GcmFtZSA/IGdldEJvdW5kaW5nQ2xpZW50UmVjdChyZWZlcmVuY2UpIDogbnVsbDtcbiAgaWYgKGFuaW1hdGlvbkZyYW1lKSB7XG4gICAgZnJhbWVMb29wKCk7XG4gIH1cbiAgZnVuY3Rpb24gZnJhbWVMb29wKCkge1xuICAgIGNvbnN0IG5leHRSZWZSZWN0ID0gZ2V0Qm91bmRpbmdDbGllbnRSZWN0KHJlZmVyZW5jZSk7XG4gICAgaWYgKHByZXZSZWZSZWN0ICYmIChuZXh0UmVmUmVjdC54ICE9PSBwcmV2UmVmUmVjdC54IHx8IG5leHRSZWZSZWN0LnkgIT09IHByZXZSZWZSZWN0LnkgfHwgbmV4dFJlZlJlY3Qud2lkdGggIT09IHByZXZSZWZSZWN0LndpZHRoIHx8IG5leHRSZWZSZWN0LmhlaWdodCAhPT0gcHJldlJlZlJlY3QuaGVpZ2h0KSkge1xuICAgICAgdXBkYXRlKCk7XG4gICAgfVxuICAgIHByZXZSZWZSZWN0ID0gbmV4dFJlZlJlY3Q7XG4gICAgZnJhbWVJZCA9IHJlcXVlc3RBbmltYXRpb25GcmFtZShmcmFtZUxvb3ApO1xuICB9XG4gIHVwZGF0ZSgpO1xuICByZXR1cm4gKCkgPT4ge1xuICAgIHZhciBfb2JzZXJ2ZXI7XG4gICAgYW5jZXN0b3JzLmZvckVhY2goKGFuY2VzdG9yKSA9PiB7XG4gICAgICBhbmNlc3RvclNjcm9sbCAmJiBhbmNlc3Rvci5yZW1vdmVFdmVudExpc3RlbmVyKFwic2Nyb2xsXCIsIHVwZGF0ZSk7XG4gICAgICBhbmNlc3RvclJlc2l6ZSAmJiBhbmNlc3Rvci5yZW1vdmVFdmVudExpc3RlbmVyKFwicmVzaXplXCIsIHVwZGF0ZSk7XG4gICAgfSk7XG4gICAgKF9vYnNlcnZlciA9IG9ic2VydmVyKSA9PSBudWxsID8gdm9pZCAwIDogX29ic2VydmVyLmRpc2Nvbm5lY3QoKTtcbiAgICBvYnNlcnZlciA9IG51bGw7XG4gICAgaWYgKGFuaW1hdGlvbkZyYW1lKSB7XG4gICAgICBjYW5jZWxBbmltYXRpb25GcmFtZShmcmFtZUlkKTtcbiAgICB9XG4gIH07XG59XG5jb25zdCBjb21wdXRlUG9zaXRpb24gPSAocmVmZXJlbmNlLCBmbG9hdGluZywgb3B0aW9ucykgPT4ge1xuICBjb25zdCBjYWNoZSA9IC8qIEBfX1BVUkVfXyAqLyBuZXcgTWFwKCk7XG4gIGNvbnN0IG1lcmdlZE9wdGlvbnMgPSBfX3NwcmVhZFZhbHVlcyh7XG4gICAgcGxhdGZvcm1cbiAgfSwgb3B0aW9ucyk7XG4gIGNvbnN0IHBsYXRmb3JtV2l0aENhY2hlID0gX19zcHJlYWRQcm9wcyhfX3NwcmVhZFZhbHVlcyh7fSwgbWVyZ2VkT3B0aW9ucy5wbGF0Zm9ybSksIHtcbiAgICBfYzogY2FjaGVcbiAgfSk7XG4gIHJldHVybiBjb21wdXRlUG9zaXRpb24kMShyZWZlcmVuY2UsIGZsb2F0aW5nLCBfX3NwcmVhZFByb3BzKF9fc3ByZWFkVmFsdWVzKHt9LCBtZXJnZWRPcHRpb25zKSwge1xuICAgIHBsYXRmb3JtOiBwbGF0Zm9ybVdpdGhDYWNoZVxuICB9KSk7XG59O1xuZnVuY3Rpb24gUChsMiwgdTIsIGUyKSB7XG4gIGxldCBjMiA9ICgpID0+IHtcbiAgICB2YXIgdDI7XG4gICAgcmV0dXJuICh0MiA9IGUyID09IG51bGwgPyB2b2lkIDAgOiBlMi5wbGFjZW1lbnQpICE9IG51bGwgPyB0MiA6IFwiYm90dG9tXCI7XG4gIH0sIGQgPSAoKSA9PiB7XG4gICAgdmFyIHQyO1xuICAgIHJldHVybiAodDIgPSBlMiA9PSBudWxsID8gdm9pZCAwIDogZTIuc3RyYXRlZ3kpICE9IG51bGwgPyB0MiA6IFwiYWJzb2x1dGVcIjtcbiAgfSwgW24yLCBvMl0gPSBjcmVhdGVTaWduYWwoeyB4OiBudWxsLCB5OiBudWxsLCBwbGFjZW1lbnQ6IGMyKCksIHN0cmF0ZWd5OiBkKCksIG1pZGRsZXdhcmVEYXRhOiB7fSB9KSwgW3gsIEZdID0gY3JlYXRlU2lnbmFsKCk7XG4gIGNyZWF0ZUVmZmVjdCgoKSA9PiB7XG4gICAgbGV0IHQyID0geCgpO1xuICAgIGlmICh0MilcbiAgICAgIHRocm93IHQyLnZhbHVlO1xuICB9KTtcbiAgbGV0IHMyID0gY3JlYXRlTWVtbygoKSA9PiAobDIoKSwgdTIoKSwge30pKTtcbiAgZnVuY3Rpb24gaTIoKSB7XG4gICAgbGV0IHQyID0gbDIoKSwgciA9IHUyKCk7XG4gICAgaWYgKHQyICYmIHIpIHtcbiAgICAgIGxldCBhMiA9IHMyKCk7XG4gICAgICBjb21wdXRlUG9zaXRpb24odDIsIHIsIHsgbWlkZGxld2FyZTogZTIgPT0gbnVsbCA/IHZvaWQgMCA6IGUyLm1pZGRsZXdhcmUsIHBsYWNlbWVudDogYzIoKSwgc3RyYXRlZ3k6IGQoKSB9KS50aGVuKChtKSA9PiB7XG4gICAgICAgIGEyID09PSBzMigpICYmIG8yKG0pO1xuICAgICAgfSwgKG0pID0+IHtcbiAgICAgICAgRihtKTtcbiAgICAgIH0pO1xuICAgIH1cbiAgfVxuICByZXR1cm4gY3JlYXRlRWZmZWN0KCgpID0+IHtcbiAgICBsZXQgdDIgPSBsMigpLCByID0gdTIoKTtcbiAgICBpZiAoZTIgPT0gbnVsbCB8fCBlMi5taWRkbGV3YXJlLCBjMigpLCBkKCksIHQyICYmIHIpXG4gICAgICBpZiAoZTIgIT0gbnVsbCAmJiBlMi53aGlsZUVsZW1lbnRzTW91bnRlZCkge1xuICAgICAgICBsZXQgYTIgPSBlMi53aGlsZUVsZW1lbnRzTW91bnRlZCh0MiwgciwgaTIpO1xuICAgICAgICBhMiAmJiBvbkNsZWFudXAoYTIpO1xuICAgICAgfSBlbHNlXG4gICAgICAgIGkyKCk7XG4gIH0pLCB7IGdldCB4KCkge1xuICAgIHJldHVybiBuMigpLng7XG4gIH0sIGdldCB5KCkge1xuICAgIHJldHVybiBuMigpLnk7XG4gIH0sIGdldCBwbGFjZW1lbnQoKSB7XG4gICAgcmV0dXJuIG4yKCkucGxhY2VtZW50O1xuICB9LCBnZXQgc3RyYXRlZ3koKSB7XG4gICAgcmV0dXJuIG4yKCkuc3RyYXRlZ3k7XG4gIH0sIGdldCBtaWRkbGV3YXJlRGF0YSgpIHtcbiAgICByZXR1cm4gbjIoKS5taWRkbGV3YXJlRGF0YTtcbiAgfSwgdXBkYXRlOiBpMiB9O1xufVxuY29uc3QgX3RtcGwkJDMgPSAvKiBAX19QVVJFX18gKi8gdGVtcGxhdGUkMShgPHRjLXJvb3QgZGF0YS10Yy1kcm9wZG93bi1jb250YWluZXI9XCJ0cnVlXCI+PC90Yy1yb290PmApO1xuY29uc3QgQWNjb3VudEJ1dHRvbiA9ICgpID0+IHtcbiAgY29uc3QgdGhlbWUgPSB1c2VUaGVtZSgpO1xuICBjb25zdCBjb25uZWN0b3IgPSB1c2VDb250ZXh0KENvbm5lY3RvckNvbnRleHQpO1xuICBjb25zdCB0b25Db25uZWN0VUkgPSB1c2VDb250ZXh0KFRvbkNvbm5lY3RVaUNvbnRleHQpO1xuICBjb25zdCBbaXNPcGVuZWQsIHNldElzT3BlbmVkXSA9IGNyZWF0ZVNpZ25hbChmYWxzZSk7XG4gIGNvbnN0IFthY2NvdW50LCBzZXRBY2NvdW50XSA9IGNyZWF0ZVNpZ25hbChjb25uZWN0b3IuYWNjb3VudCk7XG4gIGNvbnN0IFtyZXN0b3JpbmdQcm9jZXNzLCBzZXRSZXN0b3JpbmdQcm9jZXNzXSA9IGNyZWF0ZVNpZ25hbCghY29ubmVjdG9yLmFjY291bnQpO1xuICBsZXQgZHJvcERvd25SZWY7XG4gIGNvbnN0IFtmbG9hdGluZywgc2V0RmxvYXRpbmddID0gY3JlYXRlU2lnbmFsKCk7XG4gIGNvbnN0IFthbmNob3IsIHNldEFuY2hvcl0gPSBjcmVhdGVTaWduYWwoKTtcbiAgY29uc3QgcG9zaXRpb24gPSBQKGFuY2hvciwgZmxvYXRpbmcsIHtcbiAgICB3aGlsZUVsZW1lbnRzTW91bnRlZDogYXV0b1VwZGF0ZSxcbiAgICBwbGFjZW1lbnQ6IFwiYm90dG9tLWVuZFwiXG4gIH0pO1xuICBjb25zdCBub3JtYWxpemVkQWRkcmVzcyA9ICgpID0+IHtcbiAgICBjb25zdCBhY2MgPSBhY2NvdW50KCk7XG4gICAgaWYgKGFjYykge1xuICAgICAgY29uc3QgdXNlckZyaWVuZGx5QWRkcmVzcyA9IHRvVXNlckZyaWVuZGx5QWRkcmVzcyhhY2MuYWRkcmVzcywgYWNjLmNoYWluID09PSBDSEFJTi5URVNUTkVUKTtcbiAgICAgIHJldHVybiB1c2VyRnJpZW5kbHlBZGRyZXNzLnNsaWNlKDAsIDQpICsgXCJcXHUyMDI2XCIgKyB1c2VyRnJpZW5kbHlBZGRyZXNzLnNsaWNlKC00KTtcbiAgICB9XG4gICAgcmV0dXJuIFwiXCI7XG4gIH07XG4gIHRvbkNvbm5lY3RVSS5jb25uZWN0aW9uUmVzdG9yZWQudGhlbigoKSA9PiBzZXRSZXN0b3JpbmdQcm9jZXNzKGZhbHNlKSk7XG4gIGNvbnN0IHVuc3Vic2NyaWJlID0gY29ubmVjdG9yLm9uU3RhdHVzQ2hhbmdlKCh3YWxsZXQpID0+IHtcbiAgICBpZiAoIXdhbGxldCkge1xuICAgICAgc2V0SXNPcGVuZWQoZmFsc2UpO1xuICAgICAgc2V0QWNjb3VudChudWxsKTtcbiAgICAgIHNldFJlc3RvcmluZ1Byb2Nlc3MoZmFsc2UpO1xuICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICBzZXRBY2NvdW50KHdhbGxldC5hY2NvdW50KTtcbiAgICBzZXRSZXN0b3JpbmdQcm9jZXNzKGZhbHNlKTtcbiAgfSk7XG4gIGNvbnN0IG9uQ2xpY2sgPSAoZTIpID0+IHtcbiAgICBpZiAoIWFjY291bnQoKSB8fCAhaXNPcGVuZWQoKSkge1xuICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICBjb25zdCBjbGlja1RvQnV0dG9uID0gYW5jaG9yKCkuY29udGFpbnMoZTIudGFyZ2V0KTtcbiAgICBjb25zdCBjbGlja1RvRHJvcGRvd24gPSBkcm9wRG93blJlZi5jb250YWlucyhlMi50YXJnZXQpO1xuICAgIGlmICghY2xpY2tUb0J1dHRvbiAmJiAhY2xpY2tUb0Ryb3Bkb3duKSB7XG4gICAgICBzZXRJc09wZW5lZChmYWxzZSk7XG4gICAgfVxuICB9O1xuICBvbk1vdW50KCgpID0+IHtcbiAgICBkb2N1bWVudC5ib2R5LmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCBvbkNsaWNrKTtcbiAgfSk7XG4gIG9uQ2xlYW51cCgoKSA9PiB7XG4gICAgZG9jdW1lbnQuYm9keS5yZW1vdmVFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgb25DbGljayk7XG4gICAgdW5zdWJzY3JpYmUoKTtcbiAgfSk7XG4gIHJldHVybiBjcmVhdGVDb21wb25lbnQoRHluYW1pYywge1xuICAgIGNvbXBvbmVudDogZ2xvYmFsU3R5bGVzVGFnLFxuICAgIGdldCBjaGlsZHJlbigpIHtcbiAgICAgIHJldHVybiBbY3JlYXRlQ29tcG9uZW50KFNob3csIHtcbiAgICAgICAgZ2V0IHdoZW4oKSB7XG4gICAgICAgICAgcmV0dXJuIHJlc3RvcmluZ1Byb2Nlc3MoKTtcbiAgICAgICAgfSxcbiAgICAgICAgZ2V0IGNoaWxkcmVuKCkge1xuICAgICAgICAgIHJldHVybiBjcmVhdGVDb21wb25lbnQoTG9hZGVyQnV0dG9uU3R5bGVkJDEsIHtcbiAgICAgICAgICAgIGRpc2FibGVkOiB0cnVlLFxuICAgICAgICAgICAgXCJkYXRhLXRjLWNvbm5lY3QtYnV0dG9uLWxvYWRpbmdcIjogXCJ0cnVlXCIsXG4gICAgICAgICAgICBnZXQgY2hpbGRyZW4oKSB7XG4gICAgICAgICAgICAgIHJldHVybiBjcmVhdGVDb21wb25lbnQoTG9hZGVySWNvblN0eWxlZCQxLCB7fSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICAgIH0pLCBjcmVhdGVDb21wb25lbnQoU2hvdywge1xuICAgICAgICBnZXQgd2hlbigpIHtcbiAgICAgICAgICByZXR1cm4gIXJlc3RvcmluZ1Byb2Nlc3MoKTtcbiAgICAgICAgfSxcbiAgICAgICAgZ2V0IGNoaWxkcmVuKCkge1xuICAgICAgICAgIHJldHVybiBbY3JlYXRlQ29tcG9uZW50KFNob3csIHtcbiAgICAgICAgICAgIGdldCB3aGVuKCkge1xuICAgICAgICAgICAgICByZXR1cm4gIWFjY291bnQoKTtcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBnZXQgY2hpbGRyZW4oKSB7XG4gICAgICAgICAgICAgIHJldHVybiBjcmVhdGVDb21wb25lbnQoQWNjb3VudEJ1dHRvblN0eWxlZCwge1xuICAgICAgICAgICAgICAgIG9uQ2xpY2s6ICgpID0+IHRvbkNvbm5lY3RVSS5vcGVuTW9kYWwoKSxcbiAgICAgICAgICAgICAgICBcImRhdGEtdGMtY29ubmVjdC1idXR0b25cIjogXCJ0cnVlXCIsXG4gICAgICAgICAgICAgICAgc2NhbGU6IFwic1wiLFxuICAgICAgICAgICAgICAgIGdldCBjaGlsZHJlbigpIHtcbiAgICAgICAgICAgICAgICAgIHJldHVybiBbY3JlYXRlQ29tcG9uZW50KFRvbkljb24sIHtcbiAgICAgICAgICAgICAgICAgICAgZ2V0IGZpbGwoKSB7XG4gICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHRoZW1lLmNvbG9ycy5jb25uZWN0QnV0dG9uLmZvcmVncm91bmQ7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgIH0pLCBjcmVhdGVDb21wb25lbnQoVGV4dCwge1xuICAgICAgICAgICAgICAgICAgICB0cmFuc2xhdGlvbktleTogXCJidXR0b24uY29ubmVjdFdhbGxldFwiLFxuICAgICAgICAgICAgICAgICAgICBmb250U2l6ZTogXCIxNXB4XCIsXG4gICAgICAgICAgICAgICAgICAgIGxpbmVIZWlnaHQ6IFwiMThweFwiLFxuICAgICAgICAgICAgICAgICAgICBmb250V2VpZ2h0OiBcIjU5MFwiLFxuICAgICAgICAgICAgICAgICAgICBnZXQgY29sb3IoKSB7XG4gICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHRoZW1lLmNvbG9ycy5jb25uZWN0QnV0dG9uLmZvcmVncm91bmQ7XG4gICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgIGNoaWxkcmVuOiBcIkNvbm5lY3Qgd2FsbGV0XCJcbiAgICAgICAgICAgICAgICAgIH0pXTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH0pLCBjcmVhdGVDb21wb25lbnQoU2hvdywge1xuICAgICAgICAgICAgZ2V0IHdoZW4oKSB7XG4gICAgICAgICAgICAgIHJldHVybiBhY2NvdW50KCk7XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgZ2V0IGNoaWxkcmVuKCkge1xuICAgICAgICAgICAgICByZXR1cm4gY3JlYXRlQ29tcG9uZW50KERyb3Bkb3duQ29udGFpbmVyU3R5bGVkLCB7XG4gICAgICAgICAgICAgICAgZ2V0IGNoaWxkcmVuKCkge1xuICAgICAgICAgICAgICAgICAgcmV0dXJuIFtjcmVhdGVDb21wb25lbnQoRHJvcGRvd25CdXR0b25TdHlsZWQsIHtcbiAgICAgICAgICAgICAgICAgICAgb25DbGljazogKCkgPT4gc2V0SXNPcGVuZWQoKHYpID0+ICF2KSxcbiAgICAgICAgICAgICAgICAgICAgcmVmOiBzZXRBbmNob3IsXG4gICAgICAgICAgICAgICAgICAgIFwiZGF0YS10Yy1kcm9wZG93bi1idXR0b25cIjogXCJ0cnVlXCIsXG4gICAgICAgICAgICAgICAgICAgIHNjYWxlOiBcInNcIixcbiAgICAgICAgICAgICAgICAgICAgZ2V0IGNoaWxkcmVuKCkge1xuICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBbY3JlYXRlQ29tcG9uZW50KFRleHQsIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGZvbnRTaXplOiBcIjE1cHhcIixcbiAgICAgICAgICAgICAgICAgICAgICAgIGZvbnRXZWlnaHQ6IFwiNTkwXCIsXG4gICAgICAgICAgICAgICAgICAgICAgICBsaW5lSGVpZ2h0OiBcIjE4cHhcIixcbiAgICAgICAgICAgICAgICAgICAgICAgIGdldCBjaGlsZHJlbigpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIG5vcm1hbGl6ZWRBZGRyZXNzKCk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgfSksIGNyZWF0ZUNvbXBvbmVudChBcnJvd0ljb24sIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGRpcmVjdGlvbjogXCJib3R0b21cIlxuICAgICAgICAgICAgICAgICAgICAgIH0pXTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgfSksIGNyZWF0ZUNvbXBvbmVudChQb3J0YWwsIHtcbiAgICAgICAgICAgICAgICAgICAgZ2V0IGNoaWxkcmVuKCkge1xuICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IF9lbCQgPSB1bnRyYWNrKCgpID0+IGRvY3VtZW50LmltcG9ydE5vZGUoX3RtcGwkJDMsIHRydWUpKTtcbiAgICAgICAgICAgICAgICAgICAgICB1c2Uoc2V0RmxvYXRpbmcsIF9lbCQpO1xuICAgICAgICAgICAgICAgICAgICAgIF9lbCQuc3R5bGUuc2V0UHJvcGVydHkoXCJ6LWluZGV4XCIsIFwiOTk5XCIpO1xuICAgICAgICAgICAgICAgICAgICAgIF9lbCQuXyRvd25lciA9IGdldE93bmVyKCk7XG4gICAgICAgICAgICAgICAgICAgICAgaW5zZXJ0KF9lbCQsIGNyZWF0ZUNvbXBvbmVudChUcmFuc2l0aW9uLCB7XG4gICAgICAgICAgICAgICAgICAgICAgICBvbkJlZm9yZUVudGVyOiAoZWwpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgYW5pbWF0ZShlbCwgW3tcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBvcGFjaXR5OiAwLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRyYW5zZm9ybTogXCJ0cmFuc2xhdGVZKC04cHgpXCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgfSwge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9wYWNpdHk6IDEsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdHJhbnNmb3JtOiBcInRyYW5zbGF0ZVkoMClcIlxuICAgICAgICAgICAgICAgICAgICAgICAgICB9XSwge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGR1cmF0aW9uOiAxNTBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgb25FeGl0OiAoZWwsIGRvbmUpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgY29uc3QgYTIgPSBhbmltYXRlKGVsLCBbe1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9wYWNpdHk6IDEsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdHJhbnNmb3JtOiBcInRyYW5zbGF0ZVkoMClcIlxuICAgICAgICAgICAgICAgICAgICAgICAgICB9LCB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgb3BhY2l0eTogMCxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0cmFuc2Zvcm06IFwidHJhbnNsYXRlWSgtOHB4KVwiXG4gICAgICAgICAgICAgICAgICAgICAgICAgIH1dLCB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZHVyYXRpb246IDE1MFxuICAgICAgICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgYTIuZmluaXNoZWQudGhlbihkb25lKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICBnZXQgY2hpbGRyZW4oKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBjcmVhdGVDb21wb25lbnQoU2hvdywge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGdldCB3aGVuKCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGlzT3BlbmVkKCk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBnZXQgY2hpbGRyZW4oKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gY3JlYXRlQ29tcG9uZW50KERyb3Bkb3duU3R5bGVkLCB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGdldCBoaWRkZW4oKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuICFpc09wZW5lZCgpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBvbkNsb3NlOiAoKSA9PiBzZXRJc09wZW5lZChmYWxzZSksXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlZihyJCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IF9yZWYkID0gZHJvcERvd25SZWY7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdHlwZW9mIF9yZWYkID09PSBcImZ1bmN0aW9uXCIgPyBfcmVmJChyJCkgOiBkcm9wRG93blJlZiA9IHIkO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgIH0pLCBudWxsKTtcbiAgICAgICAgICAgICAgICAgICAgICBpbnNlcnQoX2VsJCwgY3JlYXRlQ29tcG9uZW50KE5vdGlmaWNhdGlvbnNTdHlsZWQsIHt9KSwgbnVsbCk7XG4gICAgICAgICAgICAgICAgICAgICAgY3JlYXRlUmVuZGVyRWZmZWN0KChfcCQpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHZhciBfYTIsIF9iMjtcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IF92JCA9IHBvc2l0aW9uLnN0cmF0ZWd5LCBfdiQyID0gYCR7KF9hMiA9IHBvc2l0aW9uLnkpICE9IG51bGwgPyBfYTIgOiAwfXB4YCwgX3YkMyA9IGAkeyhfYjIgPSBwb3NpdGlvbi54KSAhPSBudWxsID8gX2IyIDogMH1weGA7XG4gICAgICAgICAgICAgICAgICAgICAgICBfdiQgIT09IF9wJC5fdiQgJiYgX2VsJC5zdHlsZS5zZXRQcm9wZXJ0eShcInBvc2l0aW9uXCIsIF9wJC5fdiQgPSBfdiQpO1xuICAgICAgICAgICAgICAgICAgICAgICAgX3YkMiAhPT0gX3AkLl92JDIgJiYgX2VsJC5zdHlsZS5zZXRQcm9wZXJ0eShcInRvcFwiLCBfcCQuX3YkMiA9IF92JDIpO1xuICAgICAgICAgICAgICAgICAgICAgICAgX3YkMyAhPT0gX3AkLl92JDMgJiYgX2VsJC5zdHlsZS5zZXRQcm9wZXJ0eShcImxlZnRcIiwgX3AkLl92JDMgPSBfdiQzKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBfcCQ7XG4gICAgICAgICAgICAgICAgICAgICAgfSwge1xuICAgICAgICAgICAgICAgICAgICAgICAgX3YkOiB2b2lkIDAsXG4gICAgICAgICAgICAgICAgICAgICAgICBfdiQyOiB2b2lkIDAsXG4gICAgICAgICAgICAgICAgICAgICAgICBfdiQzOiB2b2lkIDBcbiAgICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gX2VsJDtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgfSldO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfSldO1xuICAgICAgICB9XG4gICAgICB9KV07XG4gICAgfVxuICB9KTtcbn07XG5jb25zdCBTdHlsZWRNb2RhbCA9IHN0eWxlZChNb2RhbClgXG4gICAgcGFkZGluZy1sZWZ0OiAyNHB4O1xuICAgIHBhZGRpbmctcmlnaHQ6IDI0cHg7XG4gICAgcGFkZGluZy10b3A6IDE4cHg7XG4gICAgcGFkZGluZy1ib3R0b206IDA7XG5cbiAgICAke21lZGlhKFwibW9iaWxlXCIpfSB7XG4gICAgICAgIHBhZGRpbmctbGVmdDogMDtcbiAgICAgICAgcGFkZGluZy1yaWdodDogMDtcblxuICAgICAgICBtaW4taGVpZ2h0OiAzNjRweDtcbiAgICB9XG5gO1xuY29uc3QgSDFTdHlsZWQkOCA9IHN0eWxlZChIMSlgXG4gICAgbWFyZ2luLXRvcDogMTJweDtcblxuICAgICR7bWVkaWEoXCJtb2JpbGVcIil9IHtcbiAgICAgICAgcGFkZGluZzogMCAxMHB4O1xuICAgIH1cbmA7XG5jb25zdCBMb2FkZXJDb250YWluZXJTdHlsZWQgPSBzdHlsZWQuZGl2YFxuICAgIG1hcmdpbjogMzBweCAwO1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG5cbiAgICAke21lZGlhKFwibW9iaWxlXCIpfSB7XG4gICAgICAgIGhlaWdodDogMTYwcHg7XG4gICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgfVxuYDtcbnN0eWxlZChUZXh0KWBcbiAgICBtaW4td2lkdGg6IDg0cHg7XG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgIGZvbnQtd2VpZ2h0OiA1OTA7XG5gO1xuc3R5bGVkKFRhYkJhcilgXG4gICAgbWFyZ2luOiAwIGF1dG8gMjJweDtcbmA7XG5jb25zdCBbYXBwU3RhdGUsIHNldEFwcFN0YXRlXSA9IGNyZWF0ZVN0b3JlKHtcbiAgYnV0dG9uUm9vdElkOiBudWxsLFxuICBsYW5ndWFnZTogXCJlblwiLFxuICByZXR1cm5TdHJhdGVneTogXCJiYWNrXCIsXG4gIHR3YVJldHVyblVybDogdm9pZCAwLFxuICB3YWxsZXRzTGlzdENvbmZpZ3VyYXRpb246IHt9LFxuICBlbmFibGVBbmRyb2lkQmFja0hhbmRsZXI6IHRydWVcbn0pO1xuZnVuY3Rpb24gdW5pcShhcnJheSkge1xuICByZXR1cm4gWy4uLm5ldyBTZXQoYXJyYXkpXTtcbn1cbmZ1bmN0aW9uIG1lcmdlQ29uY2F0KGlkS2V5LCBhcnJheTEsIGFycmF5Mikge1xuICByZXR1cm4gYXJyYXkxLm1hcCgoaXRlbTEpID0+IHtcbiAgICBjb25zdCBpdGVtMiA9IGFycmF5Mi5maW5kKChlbGVtKSA9PiBlbGVtW2lkS2V5XSA9PT0gaXRlbTFbaWRLZXldKTtcbiAgICBhcnJheTIgPSBhcnJheTIuZmlsdGVyKChlbGVtKSA9PiBlbGVtW2lkS2V5XSAhPT0gaXRlbTFbaWRLZXldKTtcbiAgICByZXR1cm4gaXRlbTIgPT09IHZvaWQgMCA/IGl0ZW0xIDogaXRlbTI7XG4gIH0pLmNvbmNhdChhcnJheTIpO1xufVxuZnVuY3Rpb24gdWlXYWxsZXRUb1dhbGxldEluZm8odWlXYWxsZXQpIHtcbiAgaWYgKFwianNCcmlkZ2VLZXlcIiBpbiB1aVdhbGxldCkge1xuICAgIHJldHVybiBfX3NwcmVhZFByb3BzKF9fc3ByZWFkVmFsdWVzKHt9LCB1aVdhbGxldCksIHtcbiAgICAgIGluamVjdGVkOiBUb25Db25uZWN0LmlzV2FsbGV0SW5qZWN0ZWQodWlXYWxsZXQuanNCcmlkZ2VLZXkpLFxuICAgICAgZW1iZWRkZWQ6IFRvbkNvbm5lY3QuaXNJbnNpZGVXYWxsZXRCcm93c2VyKHVpV2FsbGV0LmpzQnJpZGdlS2V5KVxuICAgIH0pO1xuICB9XG4gIHJldHVybiB1aVdhbGxldDtcbn1cbmZ1bmN0aW9uIGFwcGx5V2FsbGV0c0xpc3RDb25maWd1cmF0aW9uKHdhbGxldHNMaXN0LCBjb25maWd1cmF0aW9uKSB7XG4gIHZhciBfYTI7XG4gIGlmICghY29uZmlndXJhdGlvbikge1xuICAgIHJldHVybiB3YWxsZXRzTGlzdDtcbiAgfVxuICBpZiAoKF9hMiA9IGNvbmZpZ3VyYXRpb24uaW5jbHVkZVdhbGxldHMpID09IG51bGwgPyB2b2lkIDAgOiBfYTIubGVuZ3RoKSB7XG4gICAgd2FsbGV0c0xpc3QgPSBtZXJnZUNvbmNhdChcbiAgICAgIFwibmFtZVwiLFxuICAgICAgd2FsbGV0c0xpc3QsXG4gICAgICBjb25maWd1cmF0aW9uLmluY2x1ZGVXYWxsZXRzLm1hcCh1aVdhbGxldFRvV2FsbGV0SW5mbylcbiAgICApO1xuICB9XG4gIHJldHVybiB3YWxsZXRzTGlzdDtcbn1cbmZ1bmN0aW9uIHN1cHBvcnRzRGVza3RvcCh3YWxsZXRJbmZvKSB7XG4gIHJldHVybiB3YWxsZXRJbmZvLnBsYXRmb3Jtcy5zb21lKCh3KSA9PiBbXCJtYWNvc1wiLCBcImxpbnV4XCIsIFwid2luZG93c1wiXS5pbmNsdWRlcyh3KSk7XG59XG5mdW5jdGlvbiBzdXBwb3J0c01vYmlsZSh3YWxsZXRJbmZvKSB7XG4gIHJldHVybiB3YWxsZXRJbmZvLnBsYXRmb3Jtcy5zb21lKCh3KSA9PiBbXCJpb3NcIiwgXCJhbmRyb2lkXCJdLmluY2x1ZGVzKHcpKTtcbn1cbmZ1bmN0aW9uIHN1cHBvcnRzRXh0ZW5zaW9uKHdhbGxldEluZm8pIHtcbiAgcmV0dXJuIHdhbGxldEluZm8ucGxhdGZvcm1zLnNvbWUoKHcpID0+IFtcImNocm9tZVwiLCBcImZpcmVmb3hcIiwgXCJzYWZhcmlcIl0uaW5jbHVkZXModykpO1xufVxuZnVuY3Rpb24gZXFXYWxsZXROYW1lKHdhbGxldDEsIG5hbWUpIHtcbiAgaWYgKCFuYW1lKSB7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG4gIHJldHVybiB3YWxsZXQxLm5hbWUudG9Mb3dlckNhc2UoKSA9PT0gbmFtZS50b0xvd2VyQ2FzZSgpIHx8IHdhbGxldDEuYXBwTmFtZS50b0xvd2VyQ2FzZSgpID09PSBuYW1lLnRvTG93ZXJDYXNlKCk7XG59XG5jb25zdCBEZXNrdG9wU2VsZWN0V2FsbGV0TW9kYWxTdHlsZWQgPSBzdHlsZWQuZGl2YFxuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuYDtcbmNvbnN0IEgxU3R5bGVkJDcgPSBzdHlsZWQoSDEpYFxuICAgIG1hcmdpbi1ib3R0b206IDE4cHg7XG5gO1xuc3R5bGVkLmRpdmBcbiAgICBoZWlnaHQ6IDFweDtcbiAgICBtYXJnaW46IDAgLTI0cHg7XG4gICAgd2lkdGg6IGNhbGMoMTAwJSArIDQ4cHgpO1xuICAgIG9wYWNpdHk6IDAuMTI7XG4gICAgYmFja2dyb3VuZDogJHsocHJvcHMpID0+IHByb3BzLmlzU2hvd24gPyBwcm9wcy50aGVtZS5jb2xvcnMuaWNvbi5zZWNvbmRhcnkgOiBcInRyYW5zcGFyZW50XCJ9O1xuICAgIHRyYW5zaXRpb246IGJhY2tncm91bmQgMC4xNXMgZWFzZS1pbi1vdXQ7XG5cbiAgICAke21lZGlhKFwibW9iaWxlXCIpfSB7XG4gICAgICAgIHdpZHRoOiAxMDAlO1xuICAgIH1cbmA7XG5jb25zdCBXYWxsZXRzVWwgPSBzdHlsZWQudWxgXG4gICAgZGlzcGxheTogZ3JpZDtcbiAgICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IHJlcGVhdChhdXRvLWZpdCwgOTJweCk7XG4gICAgZ3JpZC10ZW1wbGF0ZS1yb3dzOiBhdXRvO1xuICAgIGFsaWduLWNvbnRlbnQ6IGZsZXgtc3RhcnQ7XG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gICAgcm93LWdhcDogOHB4O1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIHBhZGRpbmc6IDAgMCAxNnB4O1xuICAgIGFsaWduLXNlbGY6IGZsZXgtc3RhcnQ7XG4gICAgbWF4LXdpZHRoOiA0MDBweDtcbiAgICBtYXJnaW46IDAgYXV0bztcblxuICAgID4gbGkge1xuICAgICAgICBkaXNwbGF5OiBibG9jaztcbiAgICAgICAgaGVpZ2h0OiBmaXQtY29udGVudDtcbiAgICB9XG5cbiAgICAke21lZGlhKFwibW9iaWxlXCIpfSB7XG4gICAgICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogcmVwZWF0KGF1dG8tZml0LCA4MnB4KTtcbiAgICB9XG5gO1xuc3R5bGVkKEJ1dHRvbilgXG4gICAgZGlzcGxheTogYmxvY2s7XG4gICAgbWFyZ2luOiAwIGF1dG8gMXB4O1xuICAgIGZvbnQtc2l6ZTogMTVweDtcbmA7XG5jb25zdCBTdHlsZWRJY29uQnV0dG9uJDMgPSBzdHlsZWQoSWNvbkJ1dHRvbilgXG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIHRvcDogMTZweDtcbiAgICBsZWZ0OiAxNnB4O1xuYDtcbmNvbnN0IFdhbGxldExhYmVsZWRJdGVtU3R5bGVkID0gc3R5bGVkKFdhbGxldExhYmVsZWRJdGVtKWBcbiAgICBoZWlnaHQ6IDEwMCU7XG5gO1xuY29uc3QgX3RtcGwkJDIgPSAvKiBAX19QVVJFX18gKi8gdGVtcGxhdGUkMShgPGxpPjwvbGk+YCk7XG5jb25zdCBBbGxXYWxsZXRzTGlzdE1vZGFsID0gKHByb3BzKSA9PiB7XG4gIGNvbnN0IG1heEhlaWdodCA9ICgpID0+IGlzTW9iaWxlKCkgPyB2b2lkIDAgOiA1MTA7XG4gIGNvbnN0IHdhbGxldHNMaXN0ID0gKCkgPT4gaXNNb2JpbGUoKSA/IHByb3BzLndhbGxldHNMaXN0LmZpbHRlcihzdXBwb3J0c01vYmlsZSkgOiBwcm9wcy53YWxsZXRzTGlzdDtcbiAgcmV0dXJuIGNyZWF0ZUNvbXBvbmVudChEZXNrdG9wU2VsZWN0V2FsbGV0TW9kYWxTdHlsZWQsIHtcbiAgICBcImRhdGEtdGMtd2FsbGV0cy1tb2RhbC1saXN0XCI6IFwidHJ1ZVwiLFxuICAgIGdldCBjaGlsZHJlbigpIHtcbiAgICAgIHJldHVybiBbY3JlYXRlQ29tcG9uZW50KFN0eWxlZEljb25CdXR0b24kMywge1xuICAgICAgICBpY29uOiBcImFycm93XCIsXG4gICAgICAgIG9uQ2xpY2s6ICgpID0+IHByb3BzLm9uQmFjaygpXG4gICAgICB9KSwgY3JlYXRlQ29tcG9uZW50KEgxU3R5bGVkJDcsIHtcbiAgICAgICAgdHJhbnNsYXRpb25LZXk6IFwid2FsbGV0TW9kYWwud2FsbGV0c1wiLFxuICAgICAgICBjaGlsZHJlbjogXCJXYWxsZXRzXCJcbiAgICAgIH0pLCBjcmVhdGVDb21wb25lbnQoU2Nyb2xsQ29udGFpbmVyLCB7XG4gICAgICAgIGdldCBtYXhIZWlnaHQoKSB7XG4gICAgICAgICAgcmV0dXJuIG1heEhlaWdodCgpO1xuICAgICAgICB9LFxuICAgICAgICBnZXQgY2hpbGRyZW4oKSB7XG4gICAgICAgICAgcmV0dXJuIGNyZWF0ZUNvbXBvbmVudChXYWxsZXRzVWwsIHtcbiAgICAgICAgICAgIGdldCBjaGlsZHJlbigpIHtcbiAgICAgICAgICAgICAgcmV0dXJuIGNyZWF0ZUNvbXBvbmVudChGb3IsIHtcbiAgICAgICAgICAgICAgICBnZXQgZWFjaCgpIHtcbiAgICAgICAgICAgICAgICAgIHJldHVybiB3YWxsZXRzTGlzdCgpO1xuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgY2hpbGRyZW46ICh3YWxsZXQpID0+ICgoKSA9PiB7XG4gICAgICAgICAgICAgICAgICBjb25zdCBfZWwkID0gX3RtcGwkJDIuY2xvbmVOb2RlKHRydWUpO1xuICAgICAgICAgICAgICAgICAgaW5zZXJ0KF9lbCQsIGNyZWF0ZUNvbXBvbmVudChXYWxsZXRMYWJlbGVkSXRlbVN0eWxlZCwge1xuICAgICAgICAgICAgICAgICAgICB3YWxsZXQsXG4gICAgICAgICAgICAgICAgICAgIG9uQ2xpY2s6ICgpID0+IHByb3BzLm9uU2VsZWN0KHdhbGxldClcbiAgICAgICAgICAgICAgICAgIH0pKTtcbiAgICAgICAgICAgICAgICAgIHJldHVybiBfZWwkO1xuICAgICAgICAgICAgICAgIH0pKClcbiAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICAgIH0pXTtcbiAgICB9XG4gIH0pO1xufTtcbmNvbnN0IHRnQnV0dG9uQm9yZGVycyA9IHtcbiAgbTogXCIxNnB4XCIsXG4gIHM6IFwiMTJweFwiLFxuICBub25lOiBcIjBcIlxufTtcbmNvbnN0IHRnSWNvbkJvcmRlcnMgPSB7XG4gIG06IFwiNnB4XCIsXG4gIHM6IFwiNnB4XCIsXG4gIG5vbmU6IFwiMFwiXG59O1xuY29uc3QgRGVza3RvcENvbm5lY3Rpb25Nb2RhbFN0eWxlZCA9IHN0eWxlZC5kaXZgXG4gICAgZGlzcGxheTogZmxleDtcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuYDtcbmNvbnN0IEJvZHlTdHlsZWQkMSA9IHN0eWxlZC5kaXZgXG4gICAgZmxleDogMTtcbiAgICBtYXJnaW4tdG9wOiAkeyhwcm9wcykgPT4gcHJvcHMucXIgPyBcIjBcIiA6IFwiMThweFwifTtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgICBtaW4taGVpZ2h0OiAyMzJweDtcbmA7XG5jb25zdCBRUkNvZGVTdHlsZWQkMSA9IHN0eWxlZChRUkNvZGUpYFxuICAgIG1hcmdpbi1ib3R0b206IDI0cHg7XG5gO1xuY29uc3QgSDFTdHlsZWQkNiA9IHN0eWxlZChIMSlgXG4gICAgbWF4LXdpZHRoOiAyODhweDtcbiAgICBtYXJnaW46IDAgYXV0byAycHg7XG5gO1xuY29uc3QgSDJTdHlsZWQkNCA9IHN0eWxlZChIMilgXG4gICAgbWF4LXdpZHRoOiAyODhweDtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgbWFyZ2luOiAwIGF1dG8gMjBweDtcbmA7XG5jb25zdCBTdHlsZWRJY29uQnV0dG9uJDIgPSBzdHlsZWQoSWNvbkJ1dHRvbilgXG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIHRvcDogMTZweDtcbiAgICBsZWZ0OiAxNnB4O1xuYDtcbmNvbnN0IEJ1dHRvbnNDb250YWluZXJTdHlsZWQkMSA9IHN0eWxlZC5kaXZgXG4gICAgZGlzcGxheTogZmxleDtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgICBnYXA6IDhweDtcbiAgICBwYWRkaW5nLWJvdHRvbTogMTZweDtcbmA7XG5jb25zdCBCb3R0b21CdXR0b25zQ29udGFpbmVyU3R5bGVkID0gc3R5bGVkKEJ1dHRvbnNDb250YWluZXJTdHlsZWQkMSlgXG4gICAgcGFkZGluZy1ib3R0b206IDA7XG5gO1xuY29uc3QgRm9vdGVyQnV0dG9uJDEgPSBzdHlsZWQoQnV0dG9uKWBcbiAgICBtYXJnaW4tYm90dG9tOiAyNHB4O1xuYDtcbmNvbnN0IExvYWRlclN0eWxlZCQxID0gc3R5bGVkKExvYWRlckljb24pYFxuICAgIG1hcmdpbi1ib3R0b206IDE4cHg7XG4gICAgbWFyZ2luLXRvcDogMnB4O1xuYDtcbmNvbnN0IEVycm9ySWNvblN0eWxlZCQxID0gc3R5bGVkKEVycm9ySWNvbilgXG4gICAgbWFyZ2luLWJvdHRvbTogMTZweDtcbmA7XG5jb25zdCBCb2R5VGV4dFN0eWxlZCQxID0gc3R5bGVkKEgyKWBcbiAgICBjb2xvcjogJHsocHJvcHMpID0+IHByb3BzLnRoZW1lLmNvbG9ycy50ZXh0LnNlY29uZGFyeX07XG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgIG1hcmdpbi1ib3R0b206IDIwcHg7XG5gO1xuY29uc3QgVGdCdXR0b25TdHlsZWQgPSBzdHlsZWQoQnV0dG9uKWBcbiAgICBtYXJnaW4tdG9wOiAtOHB4O1xuICAgIG1hcmdpbi1ib3R0b206IDI0cHg7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgcGFkZGluZzogMTJweCAxMnB4IDEycHggMjBweDtcbiAgICBib3JkZXItcmFkaXVzOiAkeyhwcm9wcykgPT4gdGdCdXR0b25Cb3JkZXJzW3Byb3BzLnRoZW1lLmJvcmRlclJhZGl1c119O1xuICAgIGZvbnQtc2l6ZTogMTZweDtcbiAgICBsaW5lLWhlaWdodDogMjBweDtcbmA7XG5jb25zdCBUZ0ltYWdlU3R5bGVkID0gc3R5bGVkKEltYWdlKWBcbiAgICB3aWR0aDogMzJweDtcbiAgICBoZWlnaHQ6IDMycHg7XG4gICAgYm9yZGVyLXJhZGl1czogJHsocHJvcHMpID0+IHRnSWNvbkJvcmRlcnNbcHJvcHMudGhlbWUuYm9yZGVyUmFkaXVzXX07XG5gO1xuY29uc3QgVHJhbnNsYXRpb24gPSAocHJvcHMpID0+IHtcbiAgY29uc3QgW3QyXSA9IHVzZUkxOG4oKTtcbiAgcmV0dXJuIGNyZWF0ZU1lbW8oKCkgPT4ge1xuICAgIHZhciBfYTI7XG4gICAgcmV0dXJuIHQyKHByb3BzLnRyYW5zbGF0aW9uS2V5LCBwcm9wcy50cmFuc2xhdGlvblZhbHVlcywgKF9hMiA9IHByb3BzLmNoaWxkcmVuKSA9PSBudWxsID8gdm9pZCAwIDogX2EyLnRvU3RyaW5nKCkpO1xuICB9KTtcbn07XG5mdW5jdGlvbiBhZGRSZXR1cm5TdHJhdGVneSh1cmwsIHN0cmF0ZWd5KSB7XG4gIGxldCByZXR1cm5TdHJhdGVneTtcbiAgaWYgKHR5cGVvZiBzdHJhdGVneSA9PT0gXCJzdHJpbmdcIikge1xuICAgIHJldHVyblN0cmF0ZWd5ID0gc3RyYXRlZ3k7XG4gIH0gZWxzZSB7XG4gICAgcmV0dXJuU3RyYXRlZ3kgPSBpc0luVE1BKCkgPyBzdHJhdGVneS50d2FSZXR1cm5VcmwgfHwgc3RyYXRlZ3kucmV0dXJuU3RyYXRlZ3kgOiBcIm5vbmVcIjtcbiAgfVxuICBjb25zdCBuZXdVcmwgPSBhZGRRdWVyeVBhcmFtZXRlcih1cmwsIFwicmV0XCIsIHJldHVyblN0cmF0ZWd5KTtcbiAgaWYgKCFpc1RlbGVncmFtVXJsKHVybCkpIHtcbiAgICByZXR1cm4gbmV3VXJsO1xuICB9XG4gIGNvbnN0IGxhc3RQYXJhbSA9IG5ld1VybC5zbGljZShuZXdVcmwubGFzdEluZGV4T2YoXCImXCIpICsgMSk7XG4gIHJldHVybiBuZXdVcmwuc2xpY2UoMCwgbmV3VXJsLmxhc3RJbmRleE9mKFwiJlwiKSkgKyBcIi1cIiArIGVuY29kZVRlbGVncmFtVXJsUGFyYW1ldGVycyhsYXN0UGFyYW0pO1xufVxuZnVuY3Rpb24gcmVkaXJlY3RUb1RlbGVncmFtKHVuaXZlcnNhbExpbmssIG9wdGlvbnMpIHtcbiAgb3B0aW9ucyA9IF9fc3ByZWFkVmFsdWVzKHt9LCBvcHRpb25zKTtcbiAgY29uc3QgZGlyZWN0TGluayA9IGNvbnZlcnRUb1RHRGlyZWN0TGluayh1bml2ZXJzYWxMaW5rKTtcbiAgY29uc3QgZGlyZWN0TGlua1VybCA9IG5ldyBVUkwoZGlyZWN0TGluayk7XG4gIGlmICghZGlyZWN0TGlua1VybC5zZWFyY2hQYXJhbXMuaGFzKFwic3RhcnRhcHBcIikpIHtcbiAgICBkaXJlY3RMaW5rVXJsLnNlYXJjaFBhcmFtcy5hcHBlbmQoXCJzdGFydGFwcFwiLCBcInRvbmNvbm5lY3RcIik7XG4gIH1cbiAgaWYgKGlzSW5UZWxlZ3JhbUJyb3dzZXIoKSkge1xuICAgIG9wdGlvbnMucmV0dXJuU3RyYXRlZ3kgPSBcImJhY2tcIjtcbiAgICBjb25zdCBsaW5rV2l0U3RyYXRlZ3kgPSBhZGRSZXR1cm5TdHJhdGVneShkaXJlY3RMaW5rVXJsLnRvU3RyaW5nKCksIG9wdGlvbnMucmV0dXJuU3RyYXRlZ3kpO1xuICAgIG9wZW5MaW5rQmxhbmsobGlua1dpdFN0cmF0ZWd5KTtcbiAgfSBlbHNlIGlmIChpc0luVE1BKCkpIHtcbiAgICBpZiAoaXNUbWFQbGF0Zm9ybShcImlvc1wiLCBcImFuZHJvaWRcIiwgXCJtYWNvc1wiLCBcInRkZXNrdG9wXCIsIFwid2ViXCIpKSB7XG4gICAgICBvcHRpb25zLnJldHVyblN0cmF0ZWd5ID0gXCJiYWNrXCI7XG4gICAgICBjb25zdCBsaW5rV2l0U3RyYXRlZ3kgPSBhZGRSZXR1cm5TdHJhdGVneShcbiAgICAgICAgZGlyZWN0TGlua1VybC50b1N0cmluZygpLFxuICAgICAgICBvcHRpb25zLnJldHVyblN0cmF0ZWd5XG4gICAgICApO1xuICAgICAgc2VuZE9wZW5UZWxlZ3JhbUxpbmsobGlua1dpdFN0cmF0ZWd5KTtcbiAgICB9IGVsc2UgaWYgKGlzVG1hUGxhdGZvcm0oXCJ3ZWJhXCIpKSB7XG4gICAgICBzZW5kT3BlblRlbGVncmFtTGluayhhZGRSZXR1cm5TdHJhdGVneShkaXJlY3RMaW5rVXJsLnRvU3RyaW5nKCksIG9wdGlvbnMpKTtcbiAgICB9IGVsc2Uge1xuICAgICAgb3BlbkxpbmtCbGFuayhhZGRSZXR1cm5TdHJhdGVneShkaXJlY3RMaW5rVXJsLnRvU3RyaW5nKCksIG9wdGlvbnMpKTtcbiAgICB9XG4gIH0gZWxzZSB7XG4gICAgaWYgKGlzT1MoXCJpb3NcIikpIHtcbiAgICAgIGlmIChvcHRpb25zLnJldHVyblN0cmF0ZWd5ID09PSBcImJhY2tcIikge1xuICAgICAgICBpZiAoaXNCcm93c2VyKFwic2FmYXJpXCIpKSB7XG4gICAgICAgICAgb3B0aW9ucy5yZXR1cm5TdHJhdGVneSA9IFwiYmFja1wiO1xuICAgICAgICB9IGVsc2UgaWYgKGlzQnJvd3NlcihcImNocm9tZVwiKSkge1xuICAgICAgICAgIG9wdGlvbnMucmV0dXJuU3RyYXRlZ3kgPSBcImdvb2dsZWNocm9tZTovL1wiO1xuICAgICAgICB9IGVsc2UgaWYgKGlzQnJvd3NlcihcImZpcmVmb3hcIikpIHtcbiAgICAgICAgICBvcHRpb25zLnJldHVyblN0cmF0ZWd5ID0gXCJmaXJlZm94Oi8vXCI7XG4gICAgICAgIH0gZWxzZSBpZiAoaXNCcm93c2VyKFwib3BlcmFcIikpIHtcbiAgICAgICAgICBvcHRpb25zLnJldHVyblN0cmF0ZWd5ID0gXCJvcGVyYS1odHRwOi8vXCI7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgb3B0aW9ucy5yZXR1cm5TdHJhdGVneSA9IGxvY2F0aW9uLmhyZWY7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIGNvbnN0IGlzQ2hyb21lID0gaXNCcm93c2VyKFwiY2hyb21lXCIpO1xuICAgICAgY29uc3QgaXNGaXJlZm94ID0gaXNCcm93c2VyKFwiZmlyZWZveFwiKTtcbiAgICAgIGNvbnN0IHVzZURlZXBMaW5rID0gKGlzQ2hyb21lIHx8IGlzRmlyZWZveCkgJiYgIW9wdGlvbnMuZm9yY2VSZWRpcmVjdDtcbiAgICAgIGlmICh1c2VEZWVwTGluaykge1xuICAgICAgICBjb25zdCBsaW5rV2l0aFN0cmF0ZWd5ID0gYWRkUmV0dXJuU3RyYXRlZ3koXG4gICAgICAgICAgZGlyZWN0TGlua1VybC50b1N0cmluZygpLFxuICAgICAgICAgIG9wdGlvbnMucmV0dXJuU3RyYXRlZ3lcbiAgICAgICAgKTtcbiAgICAgICAgY29uc3QgZGVlcExpbmsgPSBjb252ZXJ0VG9UR0RlZXBMaW5rKGxpbmtXaXRoU3RyYXRlZ3kpO1xuICAgICAgICBvcGVuRGVlcGxpbmtXaXRoRmFsbGJhY2soZGVlcExpbmssICgpID0+IG9wZW5MaW5rQmxhbmsobGlua1dpdGhTdHJhdGVneSkpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgY29uc3QgbGlua1dpdGhTdHJhdGVneSA9IGFkZFJldHVyblN0cmF0ZWd5KFxuICAgICAgICAgIGRpcmVjdExpbmtVcmwudG9TdHJpbmcoKSxcbiAgICAgICAgICBvcHRpb25zLnJldHVyblN0cmF0ZWd5XG4gICAgICAgICk7XG4gICAgICAgIG9wZW5MaW5rQmxhbmsobGlua1dpdGhTdHJhdGVneSk7XG4gICAgICB9XG4gICAgfSBlbHNlIGlmIChpc09TKFwiYW5kcm9pZFwiKSkge1xuICAgICAgb3B0aW9ucy5yZXR1cm5TdHJhdGVneSA9IFwiYmFja1wiO1xuICAgICAgY29uc3QgaXNDaHJvbWUgPSBpc0Jyb3dzZXIoXCJjaHJvbWVcIik7XG4gICAgICBjb25zdCBpc0ZpcmVmb3ggPSBpc0Jyb3dzZXIoXCJmaXJlZm94XCIpO1xuICAgICAgY29uc3QgdXNlRGVlcExpbmsgPSAoaXNDaHJvbWUgfHwgaXNGaXJlZm94KSAmJiAhb3B0aW9ucy5mb3JjZVJlZGlyZWN0O1xuICAgICAgaWYgKHVzZURlZXBMaW5rKSB7XG4gICAgICAgIGNvbnN0IGxpbmtXaXRoU3RyYXRlZ3kgPSBhZGRSZXR1cm5TdHJhdGVneShcbiAgICAgICAgICBkaXJlY3RMaW5rVXJsLnRvU3RyaW5nKCksXG4gICAgICAgICAgb3B0aW9ucy5yZXR1cm5TdHJhdGVneVxuICAgICAgICApO1xuICAgICAgICBjb25zdCBkZWVwTGluayA9IGNvbnZlcnRUb1RHRGVlcExpbmsobGlua1dpdGhTdHJhdGVneSk7XG4gICAgICAgIG9wZW5EZWVwbGlua1dpdGhGYWxsYmFjayhkZWVwTGluaywgKCkgPT4gb3BlbkxpbmtCbGFuayhsaW5rV2l0aFN0cmF0ZWd5KSk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBjb25zdCBsaW5rV2l0aFN0cmF0ZWd5ID0gYWRkUmV0dXJuU3RyYXRlZ3koXG4gICAgICAgICAgZGlyZWN0TGlua1VybC50b1N0cmluZygpLFxuICAgICAgICAgIG9wdGlvbnMucmV0dXJuU3RyYXRlZ3lcbiAgICAgICAgKTtcbiAgICAgICAgb3BlbkxpbmtCbGFuayhsaW5rV2l0aFN0cmF0ZWd5KTtcbiAgICAgIH1cbiAgICB9IGVsc2UgaWYgKGlzT1MoXCJpcGFkXCIpKSB7XG4gICAgICBpZiAob3B0aW9ucy5yZXR1cm5TdHJhdGVneSA9PT0gXCJiYWNrXCIpIHtcbiAgICAgICAgaWYgKGlzQnJvd3NlcihcInNhZmFyaVwiKSkge1xuICAgICAgICAgIG9wdGlvbnMucmV0dXJuU3RyYXRlZ3kgPSBcImJhY2tcIjtcbiAgICAgICAgfSBlbHNlIGlmIChpc0Jyb3dzZXIoXCJjaHJvbWVcIikpIHtcbiAgICAgICAgICBvcHRpb25zLnJldHVyblN0cmF0ZWd5ID0gXCJnb29nbGVjaHJvbWU6Ly9cIjtcbiAgICAgICAgfSBlbHNlIGlmIChpc0Jyb3dzZXIoXCJmaXJlZm94XCIpKSB7XG4gICAgICAgICAgb3B0aW9ucy5yZXR1cm5TdHJhdGVneSA9IFwiZmlyZWZveDovL1wiO1xuICAgICAgICB9IGVsc2UgaWYgKGlzQnJvd3NlcihcIm9wZXJhXCIpKSB7XG4gICAgICAgICAgb3B0aW9ucy5yZXR1cm5TdHJhdGVneSA9IFwib3BlcmEtaHR0cDovL1wiO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIG9wdGlvbnMucmV0dXJuU3RyYXRlZ3kgPSBsb2NhdGlvbi5ocmVmO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgICBjb25zdCBpc0Nocm9tZSA9IGlzQnJvd3NlcihcImNocm9tZVwiKTtcbiAgICAgIGNvbnN0IGlzRmlyZWZveCA9IGlzQnJvd3NlcihcImZpcmVmb3hcIik7XG4gICAgICBjb25zdCB1c2VEZWVwTGluayA9IChpc0Nocm9tZSB8fCBpc0ZpcmVmb3gpICYmICFvcHRpb25zLmZvcmNlUmVkaXJlY3Q7XG4gICAgICBjb25zdCBsaW5rV2l0aFN0cmF0ZWd5ID0gYWRkUmV0dXJuU3RyYXRlZ3koXG4gICAgICAgIGRpcmVjdExpbmtVcmwudG9TdHJpbmcoKSxcbiAgICAgICAgb3B0aW9ucy5yZXR1cm5TdHJhdGVneVxuICAgICAgKTtcbiAgICAgIGlmICh1c2VEZWVwTGluaykge1xuICAgICAgICBjb25zdCBkZWVwTGluayA9IGNvbnZlcnRUb1RHRGVlcExpbmsobGlua1dpdGhTdHJhdGVneSk7XG4gICAgICAgIG9wZW5EZWVwbGlua1dpdGhGYWxsYmFjayhkZWVwTGluaywgKCkgPT4gb3BlbkxpbmtCbGFuayhsaW5rV2l0aFN0cmF0ZWd5KSk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBvcGVuTGlua0JsYW5rKGxpbmtXaXRoU3RyYXRlZ3kpO1xuICAgICAgfVxuICAgIH0gZWxzZSBpZiAoaXNPUyhcIm1hY29zXCIsIFwid2luZG93c1wiLCBcImxpbnV4XCIpKSB7XG4gICAgICBvcHRpb25zLnJldHVyblN0cmF0ZWd5ID0gXCJiYWNrXCI7XG4gICAgICBvcHRpb25zLnR3YVJldHVyblVybCA9IHZvaWQgMDtcbiAgICAgIGNvbnN0IGxpbmtXaXRoU3RyYXRlZ3kgPSBhZGRSZXR1cm5TdHJhdGVneShcbiAgICAgICAgZGlyZWN0TGlua1VybC50b1N0cmluZygpLFxuICAgICAgICBvcHRpb25zLnJldHVyblN0cmF0ZWd5XG4gICAgICApO1xuICAgICAgaWYgKG9wdGlvbnMuZm9yY2VSZWRpcmVjdCkge1xuICAgICAgICBvcGVuTGlua0JsYW5rKGxpbmtXaXRoU3RyYXRlZ3kpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgY29uc3QgZGVlcExpbmsgPSBjb252ZXJ0VG9UR0RlZXBMaW5rKGxpbmtXaXRoU3RyYXRlZ3kpO1xuICAgICAgICBvcGVuRGVlcGxpbmtXaXRoRmFsbGJhY2soZGVlcExpbmssICgpID0+IG9wZW5MaW5rQmxhbmsobGlua1dpdGhTdHJhdGVneSkpO1xuICAgICAgfVxuICAgIH0gZWxzZSB7XG4gICAgICBvcGVuTGlua0JsYW5rKGFkZFJldHVyblN0cmF0ZWd5KGRpcmVjdExpbmtVcmwudG9TdHJpbmcoKSwgb3B0aW9ucykpO1xuICAgIH1cbiAgfVxufVxuZnVuY3Rpb24gcmVkaXJlY3RUb1dhbGxldCh1bml2ZXJzYWxMaW5rLCBkZWVwTGluaywgb3B0aW9ucywgc2V0T3Blbk1ldGhvZCkge1xuICBvcHRpb25zID0gX19zcHJlYWRWYWx1ZXMoe30sIG9wdGlvbnMpO1xuICBpZiAoaXNJblRlbGVncmFtQnJvd3NlcigpKSB7XG4gICAgaWYgKGlzT1MoXCJpb3NcIiwgXCJhbmRyb2lkXCIpKSB7XG4gICAgICBpZiAob3B0aW9ucy5yZXR1cm5TdHJhdGVneSA9PT0gXCJiYWNrXCIpIHtcbiAgICAgICAgb3B0aW9ucy5yZXR1cm5TdHJhdGVneSA9IFwidGc6Ly9yZXNvbHZlXCI7XG4gICAgICB9XG4gICAgICBzZXRPcGVuTWV0aG9kKFwidW5pdmVyc2FsLWxpbmtcIik7XG4gICAgICBvcGVuTGluayhhZGRSZXR1cm5TdHJhdGVneSh1bml2ZXJzYWxMaW5rLCBvcHRpb25zLnJldHVyblN0cmF0ZWd5KSwgXCJfc2VsZlwiKTtcbiAgICB9IGVsc2Uge1xuICAgICAgc2V0T3Blbk1ldGhvZChcInVuaXZlcnNhbC1saW5rXCIpO1xuICAgICAgY29uc3QgbGlua1dpdFN0cmF0ZWd5ID0gYWRkUmV0dXJuU3RyYXRlZ3kodW5pdmVyc2FsTGluaywgb3B0aW9ucy5yZXR1cm5TdHJhdGVneSk7XG4gICAgICBvcGVuTGlua0JsYW5rKGxpbmtXaXRTdHJhdGVneSk7XG4gICAgfVxuICB9IGVsc2UgaWYgKGlzSW5UTUEoKSkge1xuICAgIGlmIChpc1RtYVBsYXRmb3JtKFwiaW9zXCIsIFwiYW5kcm9pZFwiKSkge1xuICAgICAgaWYgKG9wdGlvbnMucmV0dXJuU3RyYXRlZ3kgPT09IFwiYmFja1wiKSB7XG4gICAgICAgIG9wdGlvbnMucmV0dXJuU3RyYXRlZ3kgPSBcInRnOi8vcmVzb2x2ZVwiO1xuICAgICAgfVxuICAgICAgc2V0T3Blbk1ldGhvZChcInVuaXZlcnNhbC1saW5rXCIpO1xuICAgICAgY29uc3QgbGlua1dpdFN0cmF0ZWd5ID0gYWRkUmV0dXJuU3RyYXRlZ3kodW5pdmVyc2FsTGluaywgb3B0aW9ucy5yZXR1cm5TdHJhdGVneSk7XG4gICAgICBzZW5kT3BlblRlbGVncmFtTGluayhsaW5rV2l0U3RyYXRlZ3ksICgpID0+IHtcbiAgICAgICAgc2V0T3Blbk1ldGhvZChcInVuaXZlcnNhbC1saW5rXCIpO1xuICAgICAgICBvcGVuTGlua0JsYW5rKGxpbmtXaXRTdHJhdGVneSk7XG4gICAgICB9KTtcbiAgICB9IGVsc2UgaWYgKGlzVG1hUGxhdGZvcm0oXCJtYWNvc1wiLCBcInRkZXNrdG9wXCIpKSB7XG4gICAgICBpZiAob3B0aW9ucy5yZXR1cm5TdHJhdGVneSA9PT0gXCJiYWNrXCIpIHtcbiAgICAgICAgb3B0aW9ucy5yZXR1cm5TdHJhdGVneSA9IFwidGc6Ly9yZXNvbHZlXCI7XG4gICAgICB9XG4gICAgICBjb25zdCBsaW5rV2l0U3RyYXRlZ3kgPSBhZGRSZXR1cm5TdHJhdGVneSh1bml2ZXJzYWxMaW5rLCBvcHRpb25zLnJldHVyblN0cmF0ZWd5KTtcbiAgICAgIGNvbnN0IHVzZURlZXBMaW5rID0gISFkZWVwTGluayAmJiAhb3B0aW9ucy5mb3JjZVJlZGlyZWN0O1xuICAgICAgaWYgKHVzZURlZXBMaW5rKSB7XG4gICAgICAgIHNldE9wZW5NZXRob2QoXCJjdXN0b20tZGVlcGxpbmtcIik7XG4gICAgICAgIG9wZW5EZWVwbGlua1dpdGhGYWxsYmFjayh0b0RlZXBsaW5rKGxpbmtXaXRTdHJhdGVneSwgZGVlcExpbmspLCAoKSA9PiB7XG4gICAgICAgICAgc2V0T3Blbk1ldGhvZChcInVuaXZlcnNhbC1saW5rXCIpO1xuICAgICAgICAgIG9wZW5MaW5rQmxhbmsobGlua1dpdFN0cmF0ZWd5KTtcbiAgICAgICAgfSk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBzZXRPcGVuTWV0aG9kKFwidW5pdmVyc2FsLWxpbmtcIik7XG4gICAgICAgIG9wZW5MaW5rQmxhbmsobGlua1dpdFN0cmF0ZWd5KTtcbiAgICAgIH1cbiAgICB9IGVsc2UgaWYgKGlzVG1hUGxhdGZvcm0oXCJ3ZWJhXCIpKSB7XG4gICAgICBpZiAob3B0aW9ucy5yZXR1cm5TdHJhdGVneSA9PT0gXCJiYWNrXCIpIHtcbiAgICAgICAgaWYgKGlzQnJvd3NlcihcInNhZmFyaVwiKSkge1xuICAgICAgICAgIG9wdGlvbnMucmV0dXJuU3RyYXRlZ3kgPSBsb2NhdGlvbi5ocmVmO1xuICAgICAgICB9IGVsc2UgaWYgKGlzQnJvd3NlcihcImNocm9tZVwiKSkge1xuICAgICAgICAgIG9wdGlvbnMucmV0dXJuU3RyYXRlZ3kgPSBcImdvb2dsZWNocm9tZTovL1wiO1xuICAgICAgICB9IGVsc2UgaWYgKGlzQnJvd3NlcihcImZpcmVmb3hcIikpIHtcbiAgICAgICAgICBvcHRpb25zLnJldHVyblN0cmF0ZWd5ID0gXCJmaXJlZm94Oi8vXCI7XG4gICAgICAgIH0gZWxzZSBpZiAoaXNCcm93c2VyKFwib3BlcmFcIikpIHtcbiAgICAgICAgICBvcHRpb25zLnJldHVyblN0cmF0ZWd5ID0gXCJvcGVyYS1odHRwOi8vXCI7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgb3B0aW9ucy5yZXR1cm5TdHJhdGVneSA9IGxvY2F0aW9uLmhyZWY7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIGNvbnN0IGxpbmtXaXRTdHJhdGVneSA9IGFkZFJldHVyblN0cmF0ZWd5KHVuaXZlcnNhbExpbmssIG9wdGlvbnMucmV0dXJuU3RyYXRlZ3kpO1xuICAgICAgY29uc3QgdXNlRGVlcExpbmsgPSAhIWRlZXBMaW5rICYmICFvcHRpb25zLmZvcmNlUmVkaXJlY3Q7XG4gICAgICBpZiAodXNlRGVlcExpbmspIHtcbiAgICAgICAgc2V0T3Blbk1ldGhvZChcImN1c3RvbS1kZWVwbGlua1wiKTtcbiAgICAgICAgb3BlbkRlZXBsaW5rV2l0aEZhbGxiYWNrKHRvRGVlcGxpbmsobGlua1dpdFN0cmF0ZWd5LCBkZWVwTGluayksICgpID0+IHtcbiAgICAgICAgICBzZXRPcGVuTWV0aG9kKFwidW5pdmVyc2FsLWxpbmtcIik7XG4gICAgICAgICAgb3BlbkxpbmtCbGFuayhsaW5rV2l0U3RyYXRlZ3kpO1xuICAgICAgICB9KTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHNldE9wZW5NZXRob2QoXCJ1bml2ZXJzYWwtbGlua1wiKTtcbiAgICAgICAgb3BlbkxpbmtCbGFuayhsaW5rV2l0U3RyYXRlZ3kpO1xuICAgICAgfVxuICAgIH0gZWxzZSBpZiAoaXNUbWFQbGF0Zm9ybShcIndlYlwiKSkge1xuICAgICAgaWYgKG9wdGlvbnMucmV0dXJuU3RyYXRlZ3kgPT09IFwiYmFja1wiKSB7XG4gICAgICAgIGlmIChpc0Jyb3dzZXIoXCJzYWZhcmlcIikpIHtcbiAgICAgICAgICBvcHRpb25zLnJldHVyblN0cmF0ZWd5ID0gbG9jYXRpb24uaHJlZjtcbiAgICAgICAgfSBlbHNlIGlmIChpc0Jyb3dzZXIoXCJjaHJvbWVcIikpIHtcbiAgICAgICAgICBvcHRpb25zLnJldHVyblN0cmF0ZWd5ID0gXCJnb29nbGVjaHJvbWU6Ly9cIjtcbiAgICAgICAgfSBlbHNlIGlmIChpc0Jyb3dzZXIoXCJmaXJlZm94XCIpKSB7XG4gICAgICAgICAgb3B0aW9ucy5yZXR1cm5TdHJhdGVneSA9IFwiZmlyZWZveDovL1wiO1xuICAgICAgICB9IGVsc2UgaWYgKGlzQnJvd3NlcihcIm9wZXJhXCIpKSB7XG4gICAgICAgICAgb3B0aW9ucy5yZXR1cm5TdHJhdGVneSA9IFwib3BlcmEtaHR0cDovL1wiO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIG9wdGlvbnMucmV0dXJuU3RyYXRlZ3kgPSBsb2NhdGlvbi5ocmVmO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgICBjb25zdCBsaW5rV2l0U3RyYXRlZ3kgPSBhZGRSZXR1cm5TdHJhdGVneSh1bml2ZXJzYWxMaW5rLCBvcHRpb25zLnJldHVyblN0cmF0ZWd5KTtcbiAgICAgIGNvbnN0IHVzZURlZXBMaW5rID0gISFkZWVwTGluayAmJiAhb3B0aW9ucy5mb3JjZVJlZGlyZWN0O1xuICAgICAgaWYgKHVzZURlZXBMaW5rKSB7XG4gICAgICAgIHNldE9wZW5NZXRob2QoXCJjdXN0b20tZGVlcGxpbmtcIik7XG4gICAgICAgIG9wZW5EZWVwbGlua1dpdGhGYWxsYmFjayh0b0RlZXBsaW5rKGxpbmtXaXRTdHJhdGVneSwgZGVlcExpbmspLCAoKSA9PiB7XG4gICAgICAgICAgc2V0T3Blbk1ldGhvZChcInVuaXZlcnNhbC1saW5rXCIpO1xuICAgICAgICAgIG9wZW5MaW5rQmxhbmsobGlua1dpdFN0cmF0ZWd5KTtcbiAgICAgICAgfSk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBzZXRPcGVuTWV0aG9kKFwidW5pdmVyc2FsLWxpbmtcIik7XG4gICAgICAgIG9wZW5MaW5rQmxhbmsobGlua1dpdFN0cmF0ZWd5KTtcbiAgICAgIH1cbiAgICB9IGVsc2Uge1xuICAgICAgc2V0T3Blbk1ldGhvZChcInVuaXZlcnNhbC1saW5rXCIpO1xuICAgICAgY29uc3QgbGlua1dpdFN0cmF0ZWd5ID0gYWRkUmV0dXJuU3RyYXRlZ3kodW5pdmVyc2FsTGluaywgb3B0aW9ucy5yZXR1cm5TdHJhdGVneSk7XG4gICAgICBvcGVuTGlua0JsYW5rKGxpbmtXaXRTdHJhdGVneSk7XG4gICAgfVxuICB9IGVsc2Uge1xuICAgIGlmIChpc09TKFwiaW9zXCIpKSB7XG4gICAgICBpZiAob3B0aW9ucy5yZXR1cm5TdHJhdGVneSA9PT0gXCJiYWNrXCIpIHtcbiAgICAgICAgaWYgKGlzQnJvd3NlcihcInNhZmFyaVwiKSkge1xuICAgICAgICAgIG9wdGlvbnMucmV0dXJuU3RyYXRlZ3kgPSBcIm5vbmVcIjtcbiAgICAgICAgfSBlbHNlIGlmIChpc0Jyb3dzZXIoXCJjaHJvbWVcIikpIHtcbiAgICAgICAgICBvcHRpb25zLnJldHVyblN0cmF0ZWd5ID0gXCJnb29nbGVjaHJvbWU6Ly9cIjtcbiAgICAgICAgfSBlbHNlIGlmIChpc0Jyb3dzZXIoXCJmaXJlZm94XCIpKSB7XG4gICAgICAgICAgb3B0aW9ucy5yZXR1cm5TdHJhdGVneSA9IFwiZmlyZWZveDovL1wiO1xuICAgICAgICB9IGVsc2UgaWYgKGlzQnJvd3NlcihcIm9wZXJhXCIpKSB7XG4gICAgICAgICAgb3B0aW9ucy5yZXR1cm5TdHJhdGVneSA9IFwib3BlcmEtaHR0cDovL1wiO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIG9wdGlvbnMucmV0dXJuU3RyYXRlZ3kgPSBsb2NhdGlvbi5ocmVmO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgICBpZiAoaXNCcm93c2VyKFwiY2hyb21lXCIpKSB7XG4gICAgICAgIHNldE9wZW5NZXRob2QoXCJ1bml2ZXJzYWwtbGlua1wiKTtcbiAgICAgICAgb3BlbkxpbmsoYWRkUmV0dXJuU3RyYXRlZ3kodW5pdmVyc2FsTGluaywgb3B0aW9ucy5yZXR1cm5TdHJhdGVneSksIFwiX3NlbGZcIik7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBzZXRPcGVuTWV0aG9kKFwidW5pdmVyc2FsLWxpbmtcIik7XG4gICAgICAgIG9wZW5MaW5rQmxhbmsoYWRkUmV0dXJuU3RyYXRlZ3kodW5pdmVyc2FsTGluaywgb3B0aW9ucy5yZXR1cm5TdHJhdGVneSkpO1xuICAgICAgfVxuICAgIH0gZWxzZSBpZiAoaXNPUyhcImFuZHJvaWRcIikpIHtcbiAgICAgIGlmIChvcHRpb25zLnJldHVyblN0cmF0ZWd5ID09PSBcImJhY2tcIikge1xuICAgICAgICBpZiAoaXNCcm93c2VyKFwiY2hyb21lXCIpKSB7XG4gICAgICAgICAgb3B0aW9ucy5yZXR1cm5TdHJhdGVneSA9IFwiZ29vZ2xlY2hyb21lOi8vXCI7XG4gICAgICAgIH0gZWxzZSBpZiAoaXNCcm93c2VyKFwiZmlyZWZveFwiKSkge1xuICAgICAgICAgIG9wdGlvbnMucmV0dXJuU3RyYXRlZ3kgPSBcImZpcmVmb3g6Ly9cIjtcbiAgICAgICAgfSBlbHNlIGlmIChpc0Jyb3dzZXIoXCJvcGVyYVwiKSkge1xuICAgICAgICAgIG9wdGlvbnMucmV0dXJuU3RyYXRlZ3kgPSBcIm9wZXJhLWh0dHA6Ly9cIjtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBvcHRpb25zLnJldHVyblN0cmF0ZWd5ID0gbG9jYXRpb24uaHJlZjtcbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgc2V0T3Blbk1ldGhvZChcInVuaXZlcnNhbC1saW5rXCIpO1xuICAgICAgb3BlbkxpbmtCbGFuayhhZGRSZXR1cm5TdHJhdGVneSh1bml2ZXJzYWxMaW5rLCBvcHRpb25zLnJldHVyblN0cmF0ZWd5KSk7XG4gICAgfSBlbHNlIGlmIChpc09TKFwiaXBhZFwiKSkge1xuICAgICAgaWYgKG9wdGlvbnMucmV0dXJuU3RyYXRlZ3kgPT09IFwiYmFja1wiKSB7XG4gICAgICAgIGlmIChpc0Jyb3dzZXIoXCJzYWZhcmlcIikpIHtcbiAgICAgICAgICBvcHRpb25zLnJldHVyblN0cmF0ZWd5ID0gXCJub25lXCI7XG4gICAgICAgIH0gZWxzZSBpZiAoaXNCcm93c2VyKFwiY2hyb21lXCIpKSB7XG4gICAgICAgICAgb3B0aW9ucy5yZXR1cm5TdHJhdGVneSA9IFwiZ29vZ2xlY2hyb21lOi8vXCI7XG4gICAgICAgIH0gZWxzZSBpZiAoaXNCcm93c2VyKFwiZmlyZWZveFwiKSkge1xuICAgICAgICAgIG9wdGlvbnMucmV0dXJuU3RyYXRlZ3kgPSBcImZpcmVmb3g6Ly9cIjtcbiAgICAgICAgfSBlbHNlIGlmIChpc0Jyb3dzZXIoXCJvcGVyYVwiKSkge1xuICAgICAgICAgIG9wdGlvbnMucmV0dXJuU3RyYXRlZ3kgPSBcIm9wZXJhLWh0dHA6Ly9cIjtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBvcHRpb25zLnJldHVyblN0cmF0ZWd5ID0gbG9jYXRpb24uaHJlZjtcbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgaWYgKGlzQnJvd3NlcihcImNocm9tZVwiKSkge1xuICAgICAgICBzZXRPcGVuTWV0aG9kKFwidW5pdmVyc2FsLWxpbmtcIik7XG4gICAgICAgIG9wZW5MaW5rKGFkZFJldHVyblN0cmF0ZWd5KHVuaXZlcnNhbExpbmssIG9wdGlvbnMucmV0dXJuU3RyYXRlZ3kpLCBcIl9zZWxmXCIpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgc2V0T3Blbk1ldGhvZChcInVuaXZlcnNhbC1saW5rXCIpO1xuICAgICAgICBvcGVuTGlua0JsYW5rKGFkZFJldHVyblN0cmF0ZWd5KHVuaXZlcnNhbExpbmssIG9wdGlvbnMucmV0dXJuU3RyYXRlZ3kpKTtcbiAgICAgIH1cbiAgICB9IGVsc2UgaWYgKGlzT1MoXCJtYWNvc1wiLCBcIndpbmRvd3NcIiwgXCJsaW51eFwiKSkge1xuICAgICAgaWYgKG9wdGlvbnMucmV0dXJuU3RyYXRlZ3kgPT09IFwiYmFja1wiKSB7XG4gICAgICAgIGlmIChpc0Jyb3dzZXIoXCJzYWZhcmlcIikpIHtcbiAgICAgICAgICBvcHRpb25zLnJldHVyblN0cmF0ZWd5ID0gXCJub25lXCI7XG4gICAgICAgIH0gZWxzZSBpZiAoaXNCcm93c2VyKFwiY2hyb21lXCIpKSB7XG4gICAgICAgICAgb3B0aW9ucy5yZXR1cm5TdHJhdGVneSA9IFwiZ29vZ2xlY2hyb21lOi8vXCI7XG4gICAgICAgIH0gZWxzZSBpZiAoaXNCcm93c2VyKFwiZmlyZWZveFwiKSkge1xuICAgICAgICAgIG9wdGlvbnMucmV0dXJuU3RyYXRlZ3kgPSBcImZpcmVmb3g6Ly9cIjtcbiAgICAgICAgfSBlbHNlIGlmIChpc0Jyb3dzZXIoXCJvcGVyYVwiKSkge1xuICAgICAgICAgIG9wdGlvbnMucmV0dXJuU3RyYXRlZ3kgPSBcIm9wZXJhLWh0dHA6Ly9cIjtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBvcHRpb25zLnJldHVyblN0cmF0ZWd5ID0gXCJub25lXCI7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIGNvbnN0IGxpbmtXaXRTdHJhdGVneSA9IGFkZFJldHVyblN0cmF0ZWd5KHVuaXZlcnNhbExpbmssIG9wdGlvbnMucmV0dXJuU3RyYXRlZ3kpO1xuICAgICAgY29uc3QgdXNlRGVlcExpbmsgPSAhIWRlZXBMaW5rICYmICFvcHRpb25zLmZvcmNlUmVkaXJlY3Q7XG4gICAgICBpZiAodXNlRGVlcExpbmspIHtcbiAgICAgICAgc2V0T3Blbk1ldGhvZChcImN1c3RvbS1kZWVwbGlua1wiKTtcbiAgICAgICAgb3BlbkRlZXBsaW5rV2l0aEZhbGxiYWNrKHRvRGVlcGxpbmsobGlua1dpdFN0cmF0ZWd5LCBkZWVwTGluayksICgpID0+IHtcbiAgICAgICAgICBzZXRPcGVuTWV0aG9kKFwidW5pdmVyc2FsLWxpbmtcIik7XG4gICAgICAgICAgb3BlbkxpbmtCbGFuayhsaW5rV2l0U3RyYXRlZ3kpO1xuICAgICAgICB9KTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHNldE9wZW5NZXRob2QoXCJ1bml2ZXJzYWwtbGlua1wiKTtcbiAgICAgICAgb3BlbkxpbmtCbGFuayhsaW5rV2l0U3RyYXRlZ3kpO1xuICAgICAgfVxuICAgIH0gZWxzZSB7XG4gICAgICBzZXRPcGVuTWV0aG9kKFwidW5pdmVyc2FsLWxpbmtcIik7XG4gICAgICBvcGVuTGlua0JsYW5rKGFkZFJldHVyblN0cmF0ZWd5KHVuaXZlcnNhbExpbmssIG9wdGlvbnMucmV0dXJuU3RyYXRlZ3kpKTtcbiAgICB9XG4gIH1cbn1cbmZ1bmN0aW9uIGFkZFF1ZXJ5UGFyYW1ldGVyKHVybCwga2V5LCB2YWx1ZSkge1xuICBjb25zdCBwYXJzZWQgPSBuZXcgVVJMKHVybCk7XG4gIHBhcnNlZC5zZWFyY2hQYXJhbXMuYXBwZW5kKGtleSwgdmFsdWUpO1xuICByZXR1cm4gcGFyc2VkLnRvU3RyaW5nKCk7XG59XG5mdW5jdGlvbiBjb252ZXJ0VG9UR0RpcmVjdExpbmsodW5pdmVyc2FsTGluaykge1xuICBjb25zdCB1cmwgPSBuZXcgVVJMKHVuaXZlcnNhbExpbmspO1xuICBpZiAodXJsLnNlYXJjaFBhcmFtcy5oYXMoXCJhdHRhY2hcIikpIHtcbiAgICB1cmwuc2VhcmNoUGFyYW1zLmRlbGV0ZShcImF0dGFjaFwiKTtcbiAgICB1cmwucGF0aG5hbWUgKz0gXCIvc3RhcnRcIjtcbiAgfVxuICByZXR1cm4gdXJsLnRvU3RyaW5nKCk7XG59XG5mdW5jdGlvbiBjb252ZXJ0VG9UR0RlZXBMaW5rKGRpcmVjdExpbmspIHtcbiAgY29uc3QgcGFyc2VkID0gbmV3IFVSTChkaXJlY3RMaW5rKTtcbiAgY29uc3QgWywgZG9tYWluLCBhcHBuYW1lXSA9IHBhcnNlZC5wYXRobmFtZS5zcGxpdChcIi9cIik7XG4gIGNvbnN0IHN0YXJ0YXBwID0gcGFyc2VkLnNlYXJjaFBhcmFtcy5nZXQoXCJzdGFydGFwcFwiKTtcbiAgcmV0dXJuIGB0ZzovL3Jlc29sdmU/ZG9tYWluPSR7ZG9tYWlufSZhcHBuYW1lPSR7YXBwbmFtZX0mc3RhcnRhcHA9JHtzdGFydGFwcH1gO1xufVxuY29uc3QgRGVza3RvcENvbm5lY3Rpb25Nb2RhbCA9IChwcm9wcykgPT4ge1xuICBjb25zdCBbbW9kZSwgc2V0TW9kZV0gPSBjcmVhdGVTaWduYWwoXCJtb2JpbGVcIik7XG4gIGNvbnN0IFtjb25uZWN0aW9uRXJyb3JlZCwgc2V0Q29ubmVjdGlvbkVycm9yZWRdID0gY3JlYXRlU2lnbmFsKGZhbHNlKTtcbiAgY29uc3QgW3VuaXZlcnNhbExpbmssIHNldFVuaXZlcnNhbExpbmtdID0gY3JlYXRlU2lnbmFsKCk7XG4gIGNvbnN0IFtmaXJzdENsaWNrLCBzZXRGaXJzdENsaWNrXSA9IGNyZWF0ZVNpZ25hbCh0cnVlKTtcbiAgY29uc3QgY29ubmVjdG9yID0gdXNlQ29udGV4dChDb25uZWN0b3JDb250ZXh0KTtcbiAgY29uc3QgdW5zdWJzY3JpYmUgPSBjb25uZWN0b3Iub25TdGF0dXNDaGFuZ2UoKCkgPT4ge1xuICB9LCAoKSA9PiB7XG4gICAgaWYgKHByb3BzLndhbGxldC5hcHBOYW1lICE9PSBBVF9XQUxMRVRfQVBQX05BTUUpIHtcbiAgICAgIHNldENvbm5lY3Rpb25FcnJvcmVkKHRydWUpO1xuICAgIH1cbiAgfSk7XG4gIG9uQ2xlYW51cCh1bnN1YnNjcmliZSk7XG4gIGNvbnN0IGdlbmVyYXRlVW5pdmVyc2FsTGluayA9ICgpID0+IHtcbiAgICB0cnkge1xuICAgICAgY29uc3QgdW5pdmVyc2FsTGluazIgPSBjb25uZWN0b3IuY29ubmVjdCh7XG4gICAgICAgIHVuaXZlcnNhbExpbms6IHByb3BzLndhbGxldC51bml2ZXJzYWxMaW5rLFxuICAgICAgICBicmlkZ2VVcmw6IHByb3BzLndhbGxldC5icmlkZ2VVcmxcbiAgICAgIH0sIHByb3BzLmFkZGl0aW9uYWxSZXF1ZXN0KTtcbiAgICAgIHNldFVuaXZlcnNhbExpbmsodW5pdmVyc2FsTGluazIpO1xuICAgIH0gY2F0Y2ggKGUyKSB7XG4gICAgfVxuICB9O1xuICBjcmVhdGVFZmZlY3QoKCkgPT4ge1xuICAgIGlmICh1bnRyYWNrKG1vZGUpICE9PSBcImV4dGVuc2lvblwiICYmIChzdXBwb3J0c01vYmlsZShwcm9wcy53YWxsZXQpIHx8IHN1cHBvcnRzRGVza3RvcChwcm9wcy53YWxsZXQpKSkge1xuICAgICAgZ2VuZXJhdGVVbml2ZXJzYWxMaW5rKCk7XG4gICAgfVxuICB9KTtcbiAgY29uc3Qgb25DbGlja01vYmlsZSA9ICgpID0+IHtcbiAgICBzZXRDb25uZWN0aW9uRXJyb3JlZChmYWxzZSk7XG4gICAgaWYgKG1vZGUoKSA9PT0gXCJleHRlbnNpb25cIikge1xuICAgICAgZ2VuZXJhdGVVbml2ZXJzYWxMaW5rKCk7XG4gICAgfVxuICAgIHNldE1vZGUoXCJtb2JpbGVcIik7XG4gICAgc2V0TGFzdFNlbGVjdGVkV2FsbGV0SW5mbyhfX3NwcmVhZFByb3BzKF9fc3ByZWFkVmFsdWVzKHt9LCBwcm9wcy53YWxsZXQpLCB7XG4gICAgICBvcGVuTWV0aG9kOiBcInFyY29kZVwiXG4gICAgfSkpO1xuICB9O1xuICBjb25zdCBvbkNsaWNrRGVza3RvcCA9ICgpID0+IHtcbiAgICBzZXRDb25uZWN0aW9uRXJyb3JlZChmYWxzZSk7XG4gICAgaWYgKG1vZGUoKSA9PT0gXCJleHRlbnNpb25cIikge1xuICAgICAgZ2VuZXJhdGVVbml2ZXJzYWxMaW5rKCk7XG4gICAgfVxuICAgIHNldE1vZGUoXCJkZXNrdG9wXCIpO1xuICAgIGlmIChpc1RlbGVncmFtVXJsKHVuaXZlcnNhbExpbmsoKSkpIHtcbiAgICAgIG9uQ2xpY2tUZWxlZ3JhbSgpO1xuICAgIH0gZWxzZSB7XG4gICAgICBjb25zdCBmb3JjZVJlZGlyZWN0ID0gIWZpcnN0Q2xpY2soKTtcbiAgICAgIHNldEZpcnN0Q2xpY2soZmFsc2UpO1xuICAgICAgcmVkaXJlY3RUb1dhbGxldCh1bml2ZXJzYWxMaW5rKCksIHByb3BzLndhbGxldC5kZWVwTGluaywge1xuICAgICAgICByZXR1cm5TdHJhdGVneTogYXBwU3RhdGUucmV0dXJuU3RyYXRlZ3ksXG4gICAgICAgIGZvcmNlUmVkaXJlY3RcbiAgICAgIH0sIChtZXRob2QpID0+IHtcbiAgICAgICAgc2V0TGFzdFNlbGVjdGVkV2FsbGV0SW5mbyhfX3NwcmVhZFByb3BzKF9fc3ByZWFkVmFsdWVzKHt9LCBwcm9wcy53YWxsZXQpLCB7XG4gICAgICAgICAgb3Blbk1ldGhvZDogbWV0aG9kXG4gICAgICAgIH0pKTtcbiAgICAgIH0pO1xuICAgIH1cbiAgfTtcbiAgY29uc3Qgb25DbGlja1RlbGVncmFtID0gKCkgPT4ge1xuICAgIGNvbnN0IGZvcmNlUmVkaXJlY3QgPSAhZmlyc3RDbGljaygpO1xuICAgIHNldEZpcnN0Q2xpY2soZmFsc2UpO1xuICAgIHNldExhc3RTZWxlY3RlZFdhbGxldEluZm8oX19zcHJlYWRQcm9wcyhfX3NwcmVhZFZhbHVlcyh7fSwgcHJvcHMud2FsbGV0KSwge1xuICAgICAgb3Blbk1ldGhvZDogXCJ1bml2ZXJzYWwtbGlua1wiXG4gICAgfSkpO1xuICAgIHJlZGlyZWN0VG9UZWxlZ3JhbSh1bml2ZXJzYWxMaW5rKCksIHtcbiAgICAgIHJldHVyblN0cmF0ZWd5OiBhcHBTdGF0ZS5yZXR1cm5TdHJhdGVneSxcbiAgICAgIHR3YVJldHVyblVybDogYXBwU3RhdGUudHdhUmV0dXJuVXJsLFxuICAgICAgZm9yY2VSZWRpcmVjdFxuICAgIH0pO1xuICB9O1xuICBjb25zdCBvbkNsaWNrRXh0ZW5zaW9uID0gKCkgPT4ge1xuICAgIHNldENvbm5lY3Rpb25FcnJvcmVkKGZhbHNlKTtcbiAgICBzZXRNb2RlKFwiZXh0ZW5zaW9uXCIpO1xuICAgIGlmIChpc1dhbGxldEluZm9DdXJyZW50bHlJbmplY3RlZChwcm9wcy53YWxsZXQpKSB7XG4gICAgICBzZXRMYXN0U2VsZWN0ZWRXYWxsZXRJbmZvKHByb3BzLndhbGxldCk7XG4gICAgICBjb25uZWN0b3IuY29ubmVjdCh7XG4gICAgICAgIGpzQnJpZGdlS2V5OiBwcm9wcy53YWxsZXQuanNCcmlkZ2VLZXlcbiAgICAgIH0sIHByb3BzLmFkZGl0aW9uYWxSZXF1ZXN0KTtcbiAgICB9XG4gIH07XG4gIGlmIChzdXBwb3J0c01vYmlsZShwcm9wcy53YWxsZXQpKSB7XG4gICAgb25DbGlja01vYmlsZSgpO1xuICB9IGVsc2UgaWYgKHN1cHBvcnRzRXh0ZW5zaW9uKHByb3BzLndhbGxldCkpIHtcbiAgICBvbkNsaWNrRXh0ZW5zaW9uKCk7XG4gIH0gZWxzZSB7XG4gICAgb25DbGlja0Rlc2t0b3AoKTtcbiAgfVxuICByZXR1cm4gY3JlYXRlQ29tcG9uZW50KERlc2t0b3BDb25uZWN0aW9uTW9kYWxTdHlsZWQsIHtcbiAgICBcImRhdGEtdGMtd2FsbGV0cy1tb2RhbC1jb25uZWN0aW9uLWRlc2t0b3BcIjogXCJ0cnVlXCIsXG4gICAgZ2V0IGNoaWxkcmVuKCkge1xuICAgICAgcmV0dXJuIFtjcmVhdGVDb21wb25lbnQoU2hvdywge1xuICAgICAgICBnZXQgd2hlbigpIHtcbiAgICAgICAgICByZXR1cm4gIXByb3BzLmJhY2tEaXNhYmxlZDtcbiAgICAgICAgfSxcbiAgICAgICAgZ2V0IGNoaWxkcmVuKCkge1xuICAgICAgICAgIHJldHVybiBjcmVhdGVDb21wb25lbnQoU3R5bGVkSWNvbkJ1dHRvbiQyLCB7XG4gICAgICAgICAgICBpY29uOiBcImFycm93XCIsXG4gICAgICAgICAgICBvbkNsaWNrOiAoKSA9PiBwcm9wcy5vbkJhY2tDbGljaygpXG4gICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICAgIH0pLCBjcmVhdGVDb21wb25lbnQoSDFTdHlsZWQkNiwge1xuICAgICAgICBnZXQgY2hpbGRyZW4oKSB7XG4gICAgICAgICAgcmV0dXJuIHByb3BzLndhbGxldC5uYW1lO1xuICAgICAgICB9XG4gICAgICB9KSwgY3JlYXRlQ29tcG9uZW50KFNob3csIHtcbiAgICAgICAgZ2V0IHdoZW4oKSB7XG4gICAgICAgICAgcmV0dXJuIG1vZGUoKSA9PT0gXCJtb2JpbGVcIjtcbiAgICAgICAgfSxcbiAgICAgICAgZ2V0IGNoaWxkcmVuKCkge1xuICAgICAgICAgIHJldHVybiBjcmVhdGVDb21wb25lbnQoSDJTdHlsZWQkNCwge1xuICAgICAgICAgICAgdHJhbnNsYXRpb25LZXk6IFwid2FsbGV0TW9kYWwuZGVza3RvcENvbm5lY3Rpb25Nb2RhbC5zY2FuUVJcIixcbiAgICAgICAgICAgIGdldCB0cmFuc2xhdGlvblZhbHVlcygpIHtcbiAgICAgICAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgICAgICBuYW1lOiBwcm9wcy53YWxsZXQubmFtZVxuICAgICAgICAgICAgICB9O1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIGdldCBjaGlsZHJlbigpIHtcbiAgICAgICAgICAgICAgcmV0dXJuIFtcIlNjYW4gdGhlIFFSIGNvZGUgYmVsb3cgd2l0aCB5b3VyIHBob25lXFx1MjAxOXMgb3IgXCIsIGNyZWF0ZU1lbW8oKCkgPT4gcHJvcHMud2FsbGV0Lm5hbWUpLCBcIlxcdTIwMTlzIGNhbWVyYVwiXTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgICAgfSksIGNyZWF0ZUNvbXBvbmVudChCb2R5U3R5bGVkJDEsIHtcbiAgICAgICAgZ2V0IHFyKCkge1xuICAgICAgICAgIHJldHVybiBtb2RlKCkgPT09IFwibW9iaWxlXCI7XG4gICAgICAgIH0sXG4gICAgICAgIGdldCBjaGlsZHJlbigpIHtcbiAgICAgICAgICByZXR1cm4gY3JlYXRlQ29tcG9uZW50KFN3aXRjaCwge1xuICAgICAgICAgICAgZ2V0IGNoaWxkcmVuKCkge1xuICAgICAgICAgICAgICByZXR1cm4gW2NyZWF0ZUNvbXBvbmVudChNYXRjaCwge1xuICAgICAgICAgICAgICAgIGdldCB3aGVuKCkge1xuICAgICAgICAgICAgICAgICAgcmV0dXJuIG1vZGUoKSA9PT0gXCJtb2JpbGVcIjtcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIGdldCBjaGlsZHJlbigpIHtcbiAgICAgICAgICAgICAgICAgIHJldHVybiBjcmVhdGVDb21wb25lbnQoUVJDb2RlU3R5bGVkJDEsIHtcbiAgICAgICAgICAgICAgICAgICAgZGlzYWJsZUNvcHk6IGZhbHNlLFxuICAgICAgICAgICAgICAgICAgICBnZXQgc291cmNlVXJsKCkge1xuICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBhZGRSZXR1cm5TdHJhdGVneSh1bml2ZXJzYWxMaW5rKCksIFwibm9uZVwiKTtcbiAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgZ2V0IGltYWdlVXJsKCkge1xuICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBwcm9wcy53YWxsZXQuaW1hZ2VVcmw7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgfSksIGNyZWF0ZUNvbXBvbmVudChNYXRjaCwge1xuICAgICAgICAgICAgICAgIGdldCB3aGVuKCkge1xuICAgICAgICAgICAgICAgICAgcmV0dXJuIGNvbm5lY3Rpb25FcnJvcmVkKCk7XG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICBnZXQgY2hpbGRyZW4oKSB7XG4gICAgICAgICAgICAgICAgICByZXR1cm4gW2NyZWF0ZUNvbXBvbmVudChFcnJvckljb25TdHlsZWQkMSwge1xuICAgICAgICAgICAgICAgICAgICBzaXplOiBcInNcIlxuICAgICAgICAgICAgICAgICAgfSksIGNyZWF0ZUNvbXBvbmVudChCb2R5VGV4dFN0eWxlZCQxLCB7XG4gICAgICAgICAgICAgICAgICAgIHRyYW5zbGF0aW9uS2V5OiBcIndhbGxldE1vZGFsLmRlc2t0b3BDb25uZWN0aW9uTW9kYWwuY29ubmVjdGlvbkRlY2xpbmVkXCIsXG4gICAgICAgICAgICAgICAgICAgIGNoaWxkcmVuOiBcIkNvbm5lY3Rpb24gZGVjbGluZWRcIlxuICAgICAgICAgICAgICAgICAgfSksIGNyZWF0ZUNvbXBvbmVudChCdXR0b25zQ29udGFpbmVyU3R5bGVkJDEsIHtcbiAgICAgICAgICAgICAgICAgICAgZ2V0IGNoaWxkcmVuKCkge1xuICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBjcmVhdGVDb21wb25lbnQoQnV0dG9uLCB7XG4gICAgICAgICAgICAgICAgICAgICAgICBnZXQgbGVmdEljb24oKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBjcmVhdGVDb21wb25lbnQoUmV0cnlJY29uLCB7fSk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgZ2V0IG9uQ2xpY2soKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBtb2RlKCkgPT09IFwiZXh0ZW5zaW9uXCIgPyBvbkNsaWNrRXh0ZW5zaW9uIDogb25DbGlja0Rlc2t0b3A7XG4gICAgICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgZ2V0IGNoaWxkcmVuKCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gY3JlYXRlQ29tcG9uZW50KFRyYW5zbGF0aW9uLCB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdHJhbnNsYXRpb25LZXk6IFwiY29tbW9uLnJldHJ5XCIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY2hpbGRyZW46IFwiUmV0cnlcIlxuICAgICAgICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgfSldO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgfSksIGNyZWF0ZUNvbXBvbmVudChNYXRjaCwge1xuICAgICAgICAgICAgICAgIGdldCB3aGVuKCkge1xuICAgICAgICAgICAgICAgICAgcmV0dXJuIG1vZGUoKSA9PT0gXCJleHRlbnNpb25cIjtcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIGdldCBjaGlsZHJlbigpIHtcbiAgICAgICAgICAgICAgICAgIHJldHVybiBbY3JlYXRlQ29tcG9uZW50KFNob3csIHtcbiAgICAgICAgICAgICAgICAgICAgZ2V0IHdoZW4oKSB7XG4gICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGlzV2FsbGV0SW5mb0N1cnJlbnRseUluamVjdGVkKHByb3BzLndhbGxldCk7XG4gICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgIGdldCBjaGlsZHJlbigpIHtcbiAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gW2NyZWF0ZUNvbXBvbmVudChMb2FkZXJTdHlsZWQkMSwge1xuICAgICAgICAgICAgICAgICAgICAgICAgc2l6ZTogXCJzXCJcbiAgICAgICAgICAgICAgICAgICAgICB9KSwgY3JlYXRlQ29tcG9uZW50KEJvZHlUZXh0U3R5bGVkJDEsIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHRyYW5zbGF0aW9uS2V5OiBcIndhbGxldE1vZGFsLmRlc2t0b3BDb25uZWN0aW9uTW9kYWwuY29udGludWVJbkV4dGVuc2lvblwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgZ2V0IHRyYW5zbGF0aW9uVmFsdWVzKCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5hbWU6IHByb3BzLndhbGxldC5uYW1lXG4gICAgICAgICAgICAgICAgICAgICAgICAgIH07XG4gICAgICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgZ2V0IGNoaWxkcmVuKCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gW1wiQ29udGludWUgaW4gXCIsIGNyZWF0ZU1lbW8oKCkgPT4gcHJvcHMud2FsbGV0Lm5hbWUpLCBcIiBicm93c2VyIGV4dGVuc2lvblxcdTIwMjZcIl07XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgfSksIGNyZWF0ZUNvbXBvbmVudChCdXR0b25zQ29udGFpbmVyU3R5bGVkJDEsIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGdldCBjaGlsZHJlbigpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGNyZWF0ZUNvbXBvbmVudChCdXR0b24sIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBnZXQgbGVmdEljb24oKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gY3JlYXRlQ29tcG9uZW50KFJldHJ5SWNvbiwge30pO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgb25DbGljazogb25DbGlja0V4dGVuc2lvbixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBnZXQgY2hpbGRyZW4oKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gY3JlYXRlQ29tcG9uZW50KFRyYW5zbGF0aW9uLCB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRyYW5zbGF0aW9uS2V5OiBcImNvbW1vbi5yZXRyeVwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjaGlsZHJlbjogXCJSZXRyeVwiXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgIH0pXTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgfSksIGNyZWF0ZUNvbXBvbmVudChTaG93LCB7XG4gICAgICAgICAgICAgICAgICAgIGdldCB3aGVuKCkge1xuICAgICAgICAgICAgICAgICAgICAgIHJldHVybiAhaXNXYWxsZXRJbmZvQ3VycmVudGx5SW5qZWN0ZWQocHJvcHMud2FsbGV0KTtcbiAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgZ2V0IGNoaWxkcmVuKCkge1xuICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBbY3JlYXRlQ29tcG9uZW50KEJvZHlUZXh0U3R5bGVkJDEsIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHRyYW5zbGF0aW9uS2V5OiBcIndhbGxldE1vZGFsLmRlc2t0b3BDb25uZWN0aW9uTW9kYWwuZG9udEhhdmVFeHRlbnNpb25cIixcbiAgICAgICAgICAgICAgICAgICAgICAgIGdldCB0cmFuc2xhdGlvblZhbHVlcygpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBuYW1lOiBwcm9wcy53YWxsZXQubmFtZVxuICAgICAgICAgICAgICAgICAgICAgICAgICB9O1xuICAgICAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgICAgIGdldCBjaGlsZHJlbigpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIFtcIlNlZW1zIHlvdSBkb24ndCBoYXZlIGluc3RhbGxlZCBcIiwgY3JlYXRlTWVtbygoKSA9PiBwcm9wcy53YWxsZXQubmFtZSksIFwiIGJyb3dzZXIgZXh0ZW5zaW9uXCJdO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgIH0pLCBjcmVhdGVDb21wb25lbnQoQnV0dG9uc0NvbnRhaW5lclN0eWxlZCQxLCB7XG4gICAgICAgICAgICAgICAgICAgICAgICBnZXQgY2hpbGRyZW4oKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBjcmVhdGVDb21wb25lbnQoTGluaywge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGdldCBocmVmKCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHByb3BzLndhbGxldC5hYm91dFVybDtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJsYW5rOiB0cnVlLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGdldCBjaGlsZHJlbigpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBjcmVhdGVDb21wb25lbnQoQnV0dG9uLCB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGdldCByaWdodEljb24oKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGNyZWF0ZUNvbXBvbmVudChMaW5rSWNvbiwge30pO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBvbkNsaWNrOiBvbkNsaWNrRXh0ZW5zaW9uLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBnZXQgY2hpbGRyZW4oKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGNyZWF0ZUNvbXBvbmVudChUcmFuc2xhdGlvbiwge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdHJhbnNsYXRpb25LZXk6IFwid2FsbGV0TW9kYWwuZGVza3RvcENvbm5lY3Rpb25Nb2RhbC5nZXRXYWxsZXRcIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGdldCB0cmFuc2xhdGlvblZhbHVlcygpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBuYW1lOiBwcm9wcy53YWxsZXQubmFtZVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9O1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGdldCBjaGlsZHJlbigpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIFtcIkdldCBcIiwgY3JlYXRlTWVtbygoKSA9PiBwcm9wcy53YWxsZXQubmFtZSldO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgIH0pXTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgfSldO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgfSksIGNyZWF0ZUNvbXBvbmVudChNYXRjaCwge1xuICAgICAgICAgICAgICAgIGdldCB3aGVuKCkge1xuICAgICAgICAgICAgICAgICAgcmV0dXJuIG1vZGUoKSA9PT0gXCJkZXNrdG9wXCI7XG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICBnZXQgY2hpbGRyZW4oKSB7XG4gICAgICAgICAgICAgICAgICByZXR1cm4gW2NyZWF0ZUNvbXBvbmVudChMb2FkZXJJY29uLCB7XG4gICAgICAgICAgICAgICAgICAgIHNpemU6IFwibVwiXG4gICAgICAgICAgICAgICAgICB9KSwgY3JlYXRlQ29tcG9uZW50KEJvZHlUZXh0U3R5bGVkJDEsIHtcbiAgICAgICAgICAgICAgICAgICAgdHJhbnNsYXRpb25LZXk6IFwid2FsbGV0TW9kYWwuZGVza3RvcENvbm5lY3Rpb25Nb2RhbC5jb250aW51ZU9uRGVza3RvcFwiLFxuICAgICAgICAgICAgICAgICAgICBnZXQgdHJhbnNsYXRpb25WYWx1ZXMoKSB7XG4gICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIG5hbWU6IHByb3BzLndhbGxldC5uYW1lXG4gICAgICAgICAgICAgICAgICAgICAgfTtcbiAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgZ2V0IGNoaWxkcmVuKCkge1xuICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBbXCJDb250aW51ZSBpbiBcIiwgY3JlYXRlTWVtbygoKSA9PiBwcm9wcy53YWxsZXQubmFtZSksIFwiIG9uIGRlc2t0b3BcXHUyMDI2XCJdO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICB9KSwgY3JlYXRlQ29tcG9uZW50KEJ1dHRvbnNDb250YWluZXJTdHlsZWQkMSwge1xuICAgICAgICAgICAgICAgICAgICBnZXQgY2hpbGRyZW4oKSB7XG4gICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIFtjcmVhdGVDb21wb25lbnQoQnV0dG9uLCB7XG4gICAgICAgICAgICAgICAgICAgICAgICBnZXQgbGVmdEljb24oKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBjcmVhdGVDb21wb25lbnQoUmV0cnlJY29uLCB7fSk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgb25DbGljazogb25DbGlja0Rlc2t0b3AsXG4gICAgICAgICAgICAgICAgICAgICAgICBnZXQgY2hpbGRyZW4oKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBjcmVhdGVDb21wb25lbnQoVHJhbnNsYXRpb24sIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0cmFuc2xhdGlvbktleTogXCJjb21tb24ucmV0cnlcIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjaGlsZHJlbjogXCJSZXRyeVwiXG4gICAgICAgICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgIH0pLCBjcmVhdGVDb21wb25lbnQoTGluaywge1xuICAgICAgICAgICAgICAgICAgICAgICAgZ2V0IGhyZWYoKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBwcm9wcy53YWxsZXQuYWJvdXRVcmw7XG4gICAgICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgYmxhbms6IHRydWUsXG4gICAgICAgICAgICAgICAgICAgICAgICBnZXQgY2hpbGRyZW4oKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBjcmVhdGVDb21wb25lbnQoQnV0dG9uLCB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZ2V0IHJpZ2h0SWNvbigpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBjcmVhdGVDb21wb25lbnQoTGlua0ljb24sIHt9KTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGdldCBjaGlsZHJlbigpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBjcmVhdGVDb21wb25lbnQoVHJhbnNsYXRpb24sIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdHJhbnNsYXRpb25LZXk6IFwid2FsbGV0TW9kYWwuZGVza3RvcENvbm5lY3Rpb25Nb2RhbC5nZXRXYWxsZXRcIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZ2V0IHRyYW5zbGF0aW9uVmFsdWVzKCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBuYW1lOiBwcm9wcy53YWxsZXQubmFtZVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH07XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGdldCBjaGlsZHJlbigpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gW1wiR2V0IFwiLCBjcmVhdGVNZW1vKCgpID0+IHByb3BzLndhbGxldC5uYW1lKV07XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgfSldO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICB9KV07XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICB9KV07XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICAgIH0pLCBjcmVhdGVDb21wb25lbnQoU2hvdywge1xuICAgICAgICBnZXQgd2hlbigpIHtcbiAgICAgICAgICByZXR1cm4gcHJvcHMud2FsbGV0LmFwcE5hbWUgPT09IEFUX1dBTExFVF9BUFBfTkFNRTtcbiAgICAgICAgfSxcbiAgICAgICAgZ2V0IGNoaWxkcmVuKCkge1xuICAgICAgICAgIHJldHVybiBjcmVhdGVDb21wb25lbnQoVGdCdXR0b25TdHlsZWQsIHtcbiAgICAgICAgICAgIGdldCByaWdodEljb24oKSB7XG4gICAgICAgICAgICAgIHJldHVybiBjcmVhdGVDb21wb25lbnQoVGdJbWFnZVN0eWxlZCwge1xuICAgICAgICAgICAgICAgIGdldCBzcmMoKSB7XG4gICAgICAgICAgICAgICAgICByZXR1cm4gSU1HLlRHO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgc2NhbGU6IFwic1wiLFxuICAgICAgICAgICAgb25DbGljazogb25DbGlja1RlbGVncmFtLFxuICAgICAgICAgICAgZ2V0IGNoaWxkcmVuKCkge1xuICAgICAgICAgICAgICByZXR1cm4gY3JlYXRlQ29tcG9uZW50KFRyYW5zbGF0aW9uLCB7XG4gICAgICAgICAgICAgICAgdHJhbnNsYXRpb25LZXk6IFwid2FsbGV0TW9kYWwuZGVza3RvcENvbm5lY3Rpb25Nb2RhbC5vcGVuV2FsbGV0T25UZWxlZ3JhbVwiLFxuICAgICAgICAgICAgICAgIGNoaWxkcmVuOiBcIk9wZW4gV2FsbGV0IGluIFRlbGVncmFtIG9uIGRlc2t0b3BcIlxuICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgICAgfSksIGNyZWF0ZUNvbXBvbmVudChTaG93LCB7XG4gICAgICAgIGdldCB3aGVuKCkge1xuICAgICAgICAgIHJldHVybiBwcm9wcy53YWxsZXQuYXBwTmFtZSAhPT0gQVRfV0FMTEVUX0FQUF9OQU1FO1xuICAgICAgICB9LFxuICAgICAgICBnZXQgY2hpbGRyZW4oKSB7XG4gICAgICAgICAgcmV0dXJuIGNyZWF0ZUNvbXBvbmVudChCb3R0b21CdXR0b25zQ29udGFpbmVyU3R5bGVkLCB7XG4gICAgICAgICAgICBnZXQgY2hpbGRyZW4oKSB7XG4gICAgICAgICAgICAgIHJldHVybiBbY3JlYXRlQ29tcG9uZW50KFNob3csIHtcbiAgICAgICAgICAgICAgICBnZXQgd2hlbigpIHtcbiAgICAgICAgICAgICAgICAgIHJldHVybiBjcmVhdGVNZW1vKCgpID0+IG1vZGUoKSAhPT0gXCJtb2JpbGVcIikoKSAmJiBzdXBwb3J0c01vYmlsZShwcm9wcy53YWxsZXQpO1xuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgZ2V0IGNoaWxkcmVuKCkge1xuICAgICAgICAgICAgICAgICAgcmV0dXJuIGNyZWF0ZUNvbXBvbmVudChGb290ZXJCdXR0b24kMSwge1xuICAgICAgICAgICAgICAgICAgICBhcHBlYXJhbmNlOiBcInNlY29uZGFyeVwiLFxuICAgICAgICAgICAgICAgICAgICBnZXQgbGVmdEljb24oKSB7XG4gICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGNyZWF0ZUNvbXBvbmVudChNb2JpbGVJY29uLCB7fSk7XG4gICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgIG9uQ2xpY2s6IG9uQ2xpY2tNb2JpbGUsXG4gICAgICAgICAgICAgICAgICAgIGdldCBjaGlsZHJlbigpIHtcbiAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gY3JlYXRlQ29tcG9uZW50KFRyYW5zbGF0aW9uLCB7XG4gICAgICAgICAgICAgICAgICAgICAgICB0cmFuc2xhdGlvbktleTogXCJjb21tb24ubW9iaWxlXCIsXG4gICAgICAgICAgICAgICAgICAgICAgICBjaGlsZHJlbjogXCJNb2JpbGVcIlxuICAgICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgIH0pLCBjcmVhdGVDb21wb25lbnQoU2hvdywge1xuICAgICAgICAgICAgICAgIGdldCB3aGVuKCkge1xuICAgICAgICAgICAgICAgICAgcmV0dXJuIGNyZWF0ZU1lbW8oKCkgPT4gbW9kZSgpICE9PSBcImV4dGVuc2lvblwiKSgpICYmIHN1cHBvcnRzRXh0ZW5zaW9uKHByb3BzLndhbGxldCk7XG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICBnZXQgY2hpbGRyZW4oKSB7XG4gICAgICAgICAgICAgICAgICByZXR1cm4gY3JlYXRlQ29tcG9uZW50KEZvb3RlckJ1dHRvbiQxLCB7XG4gICAgICAgICAgICAgICAgICAgIGFwcGVhcmFuY2U6IFwic2Vjb25kYXJ5XCIsXG4gICAgICAgICAgICAgICAgICAgIGdldCBsZWZ0SWNvbigpIHtcbiAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gY3JlYXRlQ29tcG9uZW50KEJyb3dzZXJJY29uLCB7fSk7XG4gICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgIG9uQ2xpY2s6IG9uQ2xpY2tFeHRlbnNpb24sXG4gICAgICAgICAgICAgICAgICAgIGdldCBjaGlsZHJlbigpIHtcbiAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gY3JlYXRlQ29tcG9uZW50KFRyYW5zbGF0aW9uLCB7XG4gICAgICAgICAgICAgICAgICAgICAgICB0cmFuc2xhdGlvbktleTogXCJjb21tb24uYnJvd3NlckV4dGVuc2lvblwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgY2hpbGRyZW46IFwiQnJvd3NlciBFeHRlbnNpb25cIlxuICAgICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgIH0pLCBjcmVhdGVDb21wb25lbnQoU2hvdywge1xuICAgICAgICAgICAgICAgIGdldCB3aGVuKCkge1xuICAgICAgICAgICAgICAgICAgcmV0dXJuIGNyZWF0ZU1lbW8oKCkgPT4gbW9kZSgpICE9PSBcImRlc2t0b3BcIikoKSAmJiBzdXBwb3J0c0Rlc2t0b3AocHJvcHMud2FsbGV0KTtcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIGdldCBjaGlsZHJlbigpIHtcbiAgICAgICAgICAgICAgICAgIHJldHVybiBjcmVhdGVDb21wb25lbnQoRm9vdGVyQnV0dG9uJDEsIHtcbiAgICAgICAgICAgICAgICAgICAgYXBwZWFyYW5jZTogXCJzZWNvbmRhcnlcIixcbiAgICAgICAgICAgICAgICAgICAgZ2V0IGxlZnRJY29uKCkge1xuICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBjcmVhdGVDb21wb25lbnQoRGVza3RvcEljb24sIHt9KTtcbiAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgb25DbGljazogb25DbGlja0Rlc2t0b3AsXG4gICAgICAgICAgICAgICAgICAgIGdldCBjaGlsZHJlbigpIHtcbiAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gY3JlYXRlQ29tcG9uZW50KFRyYW5zbGF0aW9uLCB7XG4gICAgICAgICAgICAgICAgICAgICAgICB0cmFuc2xhdGlvbktleTogXCJjb21tb24uZGVza3RvcFwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgY2hpbGRyZW46IFwiRGVza3RvcFwiXG4gICAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgfSldO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgICB9KV07XG4gICAgfVxuICB9KTtcbn07XG5jb25zdCBJbmZvTW9kYWxTdHlsZWQgPSBzdHlsZWQuZGl2YGA7XG5jb25zdCBTdHlsZWRJY29uQnV0dG9uJDEgPSBzdHlsZWQoSWNvbkJ1dHRvbilgXG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIHRvcDogMTZweDtcbiAgICBsZWZ0OiAxNnB4O1xuYDtcbmNvbnN0IEgxU3R5bGVkJDUgPSBzdHlsZWQoSDEpYFxuICAgIG1hcmdpbi1ib3R0b206IDE4cHg7XG5gO1xuY29uc3QgSW5mb0Jsb2NrID0gc3R5bGVkLmRpdmBcbiAgICBwYWRkaW5nOiAxNnB4IDA7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG5gO1xuY29uc3QgSW5mb0Jsb2NrSWNvbkNsYXNzID0gdWBcbiAgICBtYXJnaW4tYm90dG9tOiAxMnB4O1xuYDtcbmNvbnN0IEgzU3R5bGVkID0gc3R5bGVkKEgzKWBcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgbWFyZ2luLWJvdHRvbTogNHB4O1xuYDtcbmNvbnN0IFRleHRTdHlsZWQkMSA9IHN0eWxlZChUZXh0KWBcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgbWF4LXdpZHRoOiAzNTJweDtcbiAgICBjb2xvcjogJHsocHJvcHMpID0+IHByb3BzLnRoZW1lLmNvbG9ycy50ZXh0LnNlY29uZGFyeX07XG5gO1xuY29uc3QgQnV0dG9uc0Jsb2NrID0gc3R5bGVkLmRpdmBcbiAgICBwYWRkaW5nOiAxNnB4IDI0cHggMjRweDtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gICAgZ2FwOiA4cHg7XG5gO1xuY29uc3QgTElOS1MgPSB7XG4gIEdFVF9BX1dBTExFVDogXCJodHRwczovL3Rvbi5vcmcvd2FsbGV0cz9maWx0ZXJzW3dhbGxldF9mZWF0dXJlc11bc2x1Z11bJGluXT1kYXBwLWF1dGgmcGFnaW5hdGlvbltsaW1pdF09LTFcIlxufTtcbmNvbnN0IEluZm9Nb2RhbCA9IChwcm9wcykgPT4ge1xuICByZXR1cm4gY3JlYXRlQ29tcG9uZW50KEluZm9Nb2RhbFN0eWxlZCwge1xuICAgIFwiZGF0YS10Yy13YWxsZXRzLW1vZGFsLWluZm9cIjogXCJ0cnVlXCIsXG4gICAgZ2V0IGNoaWxkcmVuKCkge1xuICAgICAgcmV0dXJuIFtjcmVhdGVDb21wb25lbnQoU3R5bGVkSWNvbkJ1dHRvbiQxLCB7XG4gICAgICAgIGljb246IFwiYXJyb3dcIixcbiAgICAgICAgb25DbGljazogKCkgPT4gcHJvcHMub25CYWNrQ2xpY2soKVxuICAgICAgfSksIGNyZWF0ZUNvbXBvbmVudChIMVN0eWxlZCQ1LCB7XG4gICAgICAgIHRyYW5zbGF0aW9uS2V5OiBcIndhbGxldE1vZGFsLmluZm9Nb2RhbC53aGF0SXNBV2FsbGV0XCIsXG4gICAgICAgIGNoaWxkcmVuOiBcIldoYXQgaXMgYSB3YWxsZXRcIlxuICAgICAgfSksIGNyZWF0ZUNvbXBvbmVudChTY3JvbGxDb250YWluZXIsIHtcbiAgICAgICAgZ2V0IGNoaWxkcmVuKCkge1xuICAgICAgICAgIHJldHVybiBbY3JlYXRlQ29tcG9uZW50KEluZm9CbG9jaywge1xuICAgICAgICAgICAgZ2V0IGNoaWxkcmVuKCkge1xuICAgICAgICAgICAgICByZXR1cm4gW2NyZWF0ZUNvbXBvbmVudChTZWN1cml0eUljb24sIHtcbiAgICAgICAgICAgICAgICBcImNsYXNzXCI6IEluZm9CbG9ja0ljb25DbGFzc1xuICAgICAgICAgICAgICB9KSwgY3JlYXRlQ29tcG9uZW50KEgzU3R5bGVkLCB7XG4gICAgICAgICAgICAgICAgdHJhbnNsYXRpb25LZXk6IFwid2FsbGV0TW9kYWwuaW5mb01vZGFsLnNlY3VyZURpZ2l0YWxBc3NldHNcIixcbiAgICAgICAgICAgICAgICBjaGlsZHJlbjogXCJTZWN1cmUgZGlnaXRhbCBhc3NldHMgc3RvcmFnZVwiXG4gICAgICAgICAgICAgIH0pLCBjcmVhdGVDb21wb25lbnQoVGV4dFN0eWxlZCQxLCB7XG4gICAgICAgICAgICAgICAgdHJhbnNsYXRpb25LZXk6IFwid2FsbGV0TW9kYWwuaW5mb01vZGFsLndhbGxldFByb3RlY3RzXCIsXG4gICAgICAgICAgICAgICAgY2hpbGRyZW46IFwiQSB3YWxsZXQgcHJvdGVjdHMgYW5kIG1hbmFnZXMgeW91ciBkaWdpdGFsIGFzc2V0cyBpbmNsdWRpbmcgVE9OLCB0b2tlbnMgYW5kIGNvbGxlY3RhYmxlcy5cIlxuICAgICAgICAgICAgICB9KV07XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfSksIGNyZWF0ZUNvbXBvbmVudChJbmZvQmxvY2ssIHtcbiAgICAgICAgICAgIGdldCBjaGlsZHJlbigpIHtcbiAgICAgICAgICAgICAgcmV0dXJuIFtjcmVhdGVDb21wb25lbnQoUGVyc29uYWxpdHlJY29uLCB7XG4gICAgICAgICAgICAgICAgXCJjbGFzc1wiOiBJbmZvQmxvY2tJY29uQ2xhc3NcbiAgICAgICAgICAgICAgfSksIGNyZWF0ZUNvbXBvbmVudChIM1N0eWxlZCwge1xuICAgICAgICAgICAgICAgIHRyYW5zbGF0aW9uS2V5OiBcIndhbGxldE1vZGFsLmluZm9Nb2RhbC5jb250cm9sSWRlbnRpdHlcIixcbiAgICAgICAgICAgICAgICBjaGlsZHJlbjogXCJDb250cm9sIHlvdXIgV2ViMyBpZGVudGl0eVwiXG4gICAgICAgICAgICAgIH0pLCBjcmVhdGVDb21wb25lbnQoVGV4dFN0eWxlZCQxLCB7XG4gICAgICAgICAgICAgICAgdHJhbnNsYXRpb25LZXk6IFwid2FsbGV0TW9kYWwuaW5mb01vZGFsLm1hbmFnZUlkZW50aXR5XCIsXG4gICAgICAgICAgICAgICAgY2hpbGRyZW46IFwiTWFuYWdlIHlvdXIgZGlnaXRhbCBpZGVudGl0eSBhbmQgYWNjZXNzIGRlY2VudHJhbGl6ZWQgYXBwbGljYXRpb25zIHdpdGggZWFzZS4gTWFpbnRhaW4gY29udHJvbCBvdmVyIHlvdXIgZGF0YSBhbmQgZW5nYWdlIHNlY3VyZWx5IGluIHRoZSBibG9ja2NoYWluIGVjb3N5c3RlbS5cIlxuICAgICAgICAgICAgICB9KV07XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfSksIGNyZWF0ZUNvbXBvbmVudChJbmZvQmxvY2ssIHtcbiAgICAgICAgICAgIGdldCBjaGlsZHJlbigpIHtcbiAgICAgICAgICAgICAgcmV0dXJuIFtjcmVhdGVDb21wb25lbnQoU3dhcEljb24sIHtcbiAgICAgICAgICAgICAgICBcImNsYXNzXCI6IEluZm9CbG9ja0ljb25DbGFzc1xuICAgICAgICAgICAgICB9KSwgY3JlYXRlQ29tcG9uZW50KEgzU3R5bGVkLCB7XG4gICAgICAgICAgICAgICAgdHJhbnNsYXRpb25LZXk6IFwid2FsbGV0TW9kYWwuaW5mb01vZGFsLmVmZm9ydGxlc3NDcnlwdG9UcmFuc2FjdGlvbnNcIixcbiAgICAgICAgICAgICAgICBjaGlsZHJlbjogXCJFZmZvcnRsZXNzIGNyeXB0byB0cmFuc2FjdGlvbnNcIlxuICAgICAgICAgICAgICB9KSwgY3JlYXRlQ29tcG9uZW50KFRleHRTdHlsZWQkMSwge1xuICAgICAgICAgICAgICAgIHRyYW5zbGF0aW9uS2V5OiBcIndhbGxldE1vZGFsLmluZm9Nb2RhbC5lYXNpbHlTZW5kXCIsXG4gICAgICAgICAgICAgICAgY2hpbGRyZW46IFwiRWFzaWx5IHNlbmQsIHJlY2VpdmUsIG1vbml0b3IgeW91ciBjcnlwdG9jdXJyZW5jaWVzLiBTdHJlYW1saW5lIHlvdXIgb3BlcmF0aW9ucyB3aXRoIGRlY2VudHJhbGl6ZWQgYXBwbGljYXRpb25zLlwiXG4gICAgICAgICAgICAgIH0pXTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9KSwgY3JlYXRlQ29tcG9uZW50KEJ1dHRvbnNCbG9jaywge1xuICAgICAgICAgICAgZ2V0IGNoaWxkcmVuKCkge1xuICAgICAgICAgICAgICByZXR1cm4gY3JlYXRlQ29tcG9uZW50KExpbmssIHtcbiAgICAgICAgICAgICAgICBnZXQgaHJlZigpIHtcbiAgICAgICAgICAgICAgICAgIHJldHVybiBMSU5LUy5HRVRfQV9XQUxMRVQ7XG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICBibGFuazogdHJ1ZSxcbiAgICAgICAgICAgICAgICBnZXQgY2hpbGRyZW4oKSB7XG4gICAgICAgICAgICAgICAgICByZXR1cm4gY3JlYXRlQ29tcG9uZW50KEJ1dHRvbiwge1xuICAgICAgICAgICAgICAgICAgICBnZXQgcmlnaHRJY29uKCkge1xuICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBjcmVhdGVDb21wb25lbnQoV2FsbGV0SWNvbiwge30pO1xuICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICBnZXQgY2hpbGRyZW4oKSB7XG4gICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGNyZWF0ZUNvbXBvbmVudChUcmFuc2xhdGlvbiwge1xuICAgICAgICAgICAgICAgICAgICAgICAgdHJhbnNsYXRpb25LZXk6IFwid2FsbGV0TW9kYWwuaW5mb01vZGFsLmdldEFXYWxsZXRcIixcbiAgICAgICAgICAgICAgICAgICAgICAgIGNoaWxkcmVuOiBcIkdldCBhIFdhbGxldFwiXG4gICAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfSldO1xuICAgICAgICB9XG4gICAgICB9KV07XG4gICAgfVxuICB9KTtcbn07XG5jb25zdCBNb2JpbGVDb25uZWN0aW9uTW9kYWxTdHlsZWQgPSBzdHlsZWQuZGl2YGA7XG5jb25zdCBCb2R5U3R5bGVkID0gc3R5bGVkLmRpdmBcbiAgICBmbGV4OiAxO1xuICAgIG1hcmdpbi10b3A6IDE4cHg7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gICAgbWluLWhlaWdodDogMjMycHg7XG5gO1xuY29uc3QgSDFTdHlsZWQkNCA9IHN0eWxlZChIMSlgXG4gICAgbWF4LXdpZHRoOiAyNjJweDtcbiAgICBtYXJnaW46IDAgYXV0byA4cHg7XG5gO1xuY29uc3QgU3R5bGVkSWNvbkJ1dHRvbiA9IHN0eWxlZChJY29uQnV0dG9uKWBcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgdG9wOiAxNnB4O1xuICAgIGxlZnQ6IDE2cHg7XG5gO1xuY29uc3QgRm9vdGVyU3R5bGVkID0gc3R5bGVkLmRpdmBcbiAgICBwYWRkaW5nOiAxNnB4O1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICBnYXA6IDEycHg7XG4gICAgYm9yZGVyLXRvcDogMC41cHggc29saWQgJHsocHJvcHMpID0+IHJnYmEocHJvcHMudGhlbWUuY29sb3JzLmljb24uc2Vjb25kYXJ5LCAwLjIpfTtcbmA7XG5jb25zdCBJbWFnZVN0eWxlZCA9IHN0eWxlZChJbWFnZSlgXG4gICAgd2lkdGg6IDM2cHg7XG4gICAgaGVpZ2h0OiAzNnB4O1xuICAgIGJvcmRlci1yYWRpdXM6IDEwcHg7XG5gO1xuY29uc3QgRm9vdGVyQnV0dG9uID0gc3R5bGVkKExpbmspYFxuICAgIG1hcmdpbi1sZWZ0OiBhdXRvO1xuYDtcbmNvbnN0IExvYWRlclN0eWxlZCA9IHN0eWxlZChMb2FkZXJJY29uKWBcbiAgICBtYXJnaW4tYm90dG9tOiAxOHB4O1xuICAgIG1hcmdpbi10b3A6IDJweDtcbmA7XG5jb25zdCBFcnJvckljb25TdHlsZWQgPSBzdHlsZWQoRXJyb3JJY29uKWBcbiAgICBtYXJnaW4tYm90dG9tOiAxNnB4O1xuYDtcbmNvbnN0IEJvZHlUZXh0U3R5bGVkID0gc3R5bGVkKEgyKWBcbiAgICBjb2xvcjogJHsocHJvcHMpID0+IHByb3BzLnRoZW1lLmNvbG9ycy50ZXh0LnNlY29uZGFyeX07XG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgIG1hcmdpbi1ib3R0b206IDIwcHg7XG5gO1xuY29uc3QgQnV0dG9uc0NvbnRhaW5lclN0eWxlZCA9IHN0eWxlZC5kaXZgXG4gICAgZGlzcGxheTogZmxleDtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgICBnYXA6IDhweDtcbiAgICBwYWRkaW5nLWJvdHRvbTogMTZweDtcbmA7XG5jb25zdCBIMVN0eWxlZCQzID0gc3R5bGVkKEgxKWBcbiAgICBtYXJnaW4tYm90dG9tOiAycHg7XG4gICAgcGFkZGluZzogMCA2NHB4O1xuYDtcbmNvbnN0IEgyU3R5bGVkJDMgPSBzdHlsZWQoSDIpYFxuICAgIG1hcmdpbi1ib3R0b206IDIwcHg7XG4gICAgcGFkZGluZzogMCA2NHB4O1xuICAgIG1pbi1oZWlnaHQ6IDQ0cHg7XG5gO1xuY29uc3QgUXJDb2RlV3JhcHBlciQxID0gc3R5bGVkLmRpdmBcbiAgICBwYWRkaW5nOiAwIDI0cHggMjRweDtcbmA7XG5jb25zdCBNb2JpbGVDb25uZWN0aW9uUVIgPSAocHJvcHMpID0+IHtcbiAgcmV0dXJuIFtjcmVhdGVDb21wb25lbnQoSDFTdHlsZWQkMywge1xuICAgIGdldCBjaGlsZHJlbigpIHtcbiAgICAgIHJldHVybiBwcm9wcy53YWxsZXRJbmZvLm5hbWU7XG4gICAgfVxuICB9KSwgY3JlYXRlQ29tcG9uZW50KEgyU3R5bGVkJDMsIHtcbiAgICB0cmFuc2xhdGlvbktleTogXCJ3YWxsZXRNb2RhbC5tb2JpbGVDb25uZWN0aW9uTW9kYWwuc2NhblFSXCIsXG4gICAgZ2V0IHRyYW5zbGF0aW9uVmFsdWVzKCkge1xuICAgICAgcmV0dXJuIHtcbiAgICAgICAgbmFtZTogcHJvcHMud2FsbGV0SW5mby5uYW1lXG4gICAgICB9O1xuICAgIH0sXG4gICAgZ2V0IGNoaWxkcmVuKCkge1xuICAgICAgcmV0dXJuIFtcIlNjYW4gdGhlIFFSIGNvZGUgYmVsb3cgd2l0aCB5b3VyIHBob25lXFx1MjAxOXMgb3IgXCIsIGNyZWF0ZU1lbW8oKCkgPT4gcHJvcHMud2FsbGV0SW5mby5uYW1lKSwgXCJcXHUyMDE5cyBjYW1lcmFcIl07XG4gICAgfVxuICB9KSwgY3JlYXRlQ29tcG9uZW50KFFyQ29kZVdyYXBwZXIkMSwge1xuICAgIGdldCBjaGlsZHJlbigpIHtcbiAgICAgIHJldHVybiBjcmVhdGVDb21wb25lbnQoUVJDb2RlLCB7XG4gICAgICAgIGdldCBpbWFnZVVybCgpIHtcbiAgICAgICAgICByZXR1cm4gcHJvcHMud2FsbGV0SW5mby5pbWFnZVVybDtcbiAgICAgICAgfSxcbiAgICAgICAgZ2V0IHNvdXJjZVVybCgpIHtcbiAgICAgICAgICByZXR1cm4gYWRkUmV0dXJuU3RyYXRlZ3kocHJvcHMudW5pdmVyc2FsTGluaywgXCJub25lXCIpO1xuICAgICAgICB9LFxuICAgICAgICBkaXNhYmxlQ29weTogdHJ1ZVxuICAgICAgfSk7XG4gICAgfVxuICB9KV07XG59O1xuY29uc3QgTW9iaWxlQ29ubmVjdGlvbk1vZGFsID0gKHByb3BzKSA9PiB7XG4gIGNvbnN0IHRoZW1lID0gdXNlVGhlbWUoKTtcbiAgY29uc3QgW2ZpcnN0Q2xpY2ssIHNldEZpcnN0Q2xpY2tdID0gY3JlYXRlU2lnbmFsKHRydWUpO1xuICBjb25zdCBbc2hvd1FSLCBzZXRTaG93UVJdID0gY3JlYXRlU2lnbmFsKGZhbHNlKTtcbiAgY29uc3QgW2Nvbm5lY3Rpb25FcnJvcmVkLCBzZXRDb25uZWN0aW9uRXJyb3JlZF0gPSBjcmVhdGVTaWduYWwoZmFsc2UpO1xuICBjb25zdCBjb25uZWN0b3IgPSB1c2VDb250ZXh0KENvbm5lY3RvckNvbnRleHQpO1xuICBjb25zdCB1bnN1YnNjcmliZSA9IGNvbm5lY3Rvci5vblN0YXR1c0NoYW5nZSgoKSA9PiB7XG4gIH0sICgpID0+IHtcbiAgICBzZXRDb25uZWN0aW9uRXJyb3JlZCh0cnVlKTtcbiAgfSk7XG4gIGNvbnN0IHVuaXZlcnNhbExpbmsgPSBjcmVhdGVNZW1vKCgpID0+IGNvbm5lY3Rvci5jb25uZWN0KHtcbiAgICB1bml2ZXJzYWxMaW5rOiBwcm9wcy53YWxsZXQudW5pdmVyc2FsTGluayxcbiAgICBicmlkZ2VVcmw6IHByb3BzLndhbGxldC5icmlkZ2VVcmxcbiAgfSwgcHJvcHMuYWRkaXRpb25hbFJlcXVlc3QpKTtcbiAgY29uc3Qgb25DbGlja1RlbGVncmFtID0gKCkgPT4ge1xuICAgIGNvbnN0IGFsd2F5c0ZvcmNlUmVkaXJlY3QgPSB0cnVlO1xuICAgIHNldExhc3RTZWxlY3RlZFdhbGxldEluZm8oX19zcHJlYWRQcm9wcyhfX3NwcmVhZFZhbHVlcyh7fSwgcHJvcHMud2FsbGV0KSwge1xuICAgICAgb3Blbk1ldGhvZDogXCJ1bml2ZXJzYWwtbGlua1wiXG4gICAgfSkpO1xuICAgIHJlZGlyZWN0VG9UZWxlZ3JhbSh1bml2ZXJzYWxMaW5rKCksIHtcbiAgICAgIHJldHVyblN0cmF0ZWd5OiBhcHBTdGF0ZS5yZXR1cm5TdHJhdGVneSxcbiAgICAgIHR3YVJldHVyblVybDogYXBwU3RhdGUudHdhUmV0dXJuVXJsLFxuICAgICAgZm9yY2VSZWRpcmVjdDogYWx3YXlzRm9yY2VSZWRpcmVjdFxuICAgIH0pO1xuICB9O1xuICBjb25zdCBvblJldHJ5ID0gKCkgPT4ge1xuICAgIGNvbnN0IGN1cnJlbnRVbml2ZXJzYWxMaW5rID0gdW5pdmVyc2FsTGluaygpO1xuICAgIGlmIChpc1RlbGVncmFtVXJsKGN1cnJlbnRVbml2ZXJzYWxMaW5rKSkge1xuICAgICAgcmV0dXJuIG9uQ2xpY2tUZWxlZ3JhbSgpO1xuICAgIH1cbiAgICBzZXRDb25uZWN0aW9uRXJyb3JlZChmYWxzZSk7XG4gICAgY29uc3QgZm9yY2VSZWRpcmVjdCA9ICFmaXJzdENsaWNrKCk7XG4gICAgc2V0Rmlyc3RDbGljayhmYWxzZSk7XG4gICAgcmVkaXJlY3RUb1dhbGxldCh1bml2ZXJzYWxMaW5rKCksIHByb3BzLndhbGxldC5kZWVwTGluaywge1xuICAgICAgcmV0dXJuU3RyYXRlZ3k6IGFwcFN0YXRlLnJldHVyblN0cmF0ZWd5LFxuICAgICAgZm9yY2VSZWRpcmVjdFxuICAgIH0sIChtZXRob2QpID0+IHtcbiAgICAgIHNldExhc3RTZWxlY3RlZFdhbGxldEluZm8oX19zcHJlYWRQcm9wcyhfX3NwcmVhZFZhbHVlcyh7fSwgcHJvcHMud2FsbGV0KSwge1xuICAgICAgICBvcGVuTWV0aG9kOiBtZXRob2RcbiAgICAgIH0pKTtcbiAgICB9KTtcbiAgfTtcbiAgY29uc3Qgb25PcGVuUVIgPSAoKSA9PiB7XG4gICAgc2V0Q29ubmVjdGlvbkVycm9yZWQoZmFsc2UpO1xuICAgIHNldFNob3dRUih0cnVlKTtcbiAgICBzZXRMYXN0U2VsZWN0ZWRXYWxsZXRJbmZvKF9fc3ByZWFkUHJvcHMoX19zcHJlYWRWYWx1ZXMoe30sIHByb3BzLndhbGxldCksIHtcbiAgICAgIG9wZW5NZXRob2Q6IFwicXJjb2RlXCJcbiAgICB9KSk7XG4gIH07XG4gIGNvbnN0IG9uQ2xvc2VRUiA9ICgpID0+IHtcbiAgICBzZXRTaG93UVIoZmFsc2UpO1xuICAgIHNldExhc3RTZWxlY3RlZFdhbGxldEluZm8oX19zcHJlYWRQcm9wcyhfX3NwcmVhZFZhbHVlcyh7fSwgcHJvcHMud2FsbGV0KSwge1xuICAgICAgb3Blbk1ldGhvZDogXCJ1bml2ZXJzYWwtbGlua1wiXG4gICAgfSkpO1xuICB9O1xuICBjb25zdCBvbkJhY2sgPSAoKSA9PiB7XG4gICAgaWYgKHNob3dRUigpKSB7XG4gICAgICBvbkNsb3NlUVIoKTtcbiAgICB9IGVsc2Uge1xuICAgICAgcHJvcHMub25CYWNrQ2xpY2soKTtcbiAgICB9XG4gIH07XG4gIG9uQ2xlYW51cCh1bnN1YnNjcmliZSk7XG4gIG9uUmV0cnkoKTtcbiAgcmV0dXJuIGNyZWF0ZUNvbXBvbmVudChNb2JpbGVDb25uZWN0aW9uTW9kYWxTdHlsZWQsIHtcbiAgICBcImRhdGEtdGMtd2FsbGV0cy1tb2RhbC1jb25uZWN0aW9uLW1vYmlsZVwiOiBcInRydWVcIixcbiAgICBnZXQgY2hpbGRyZW4oKSB7XG4gICAgICByZXR1cm4gW2NyZWF0ZUNvbXBvbmVudChTaG93LCB7XG4gICAgICAgIGdldCB3aGVuKCkge1xuICAgICAgICAgIHJldHVybiAhcHJvcHMuYmFja0Rpc2FibGVkIHx8IHNob3dRUigpO1xuICAgICAgICB9LFxuICAgICAgICBnZXQgY2hpbGRyZW4oKSB7XG4gICAgICAgICAgcmV0dXJuIGNyZWF0ZUNvbXBvbmVudChTdHlsZWRJY29uQnV0dG9uLCB7XG4gICAgICAgICAgICBpY29uOiBcImFycm93XCIsXG4gICAgICAgICAgICBvbkNsaWNrOiBvbkJhY2tcbiAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgICAgfSksIGNyZWF0ZUNvbXBvbmVudChTaG93LCB7XG4gICAgICAgIGdldCB3aGVuKCkge1xuICAgICAgICAgIHJldHVybiBzaG93UVIoKTtcbiAgICAgICAgfSxcbiAgICAgICAgZ2V0IGNoaWxkcmVuKCkge1xuICAgICAgICAgIHJldHVybiBjcmVhdGVDb21wb25lbnQoTW9iaWxlQ29ubmVjdGlvblFSLCB7XG4gICAgICAgICAgICBnZXQgdW5pdmVyc2FsTGluaygpIHtcbiAgICAgICAgICAgICAgcmV0dXJuIHVuaXZlcnNhbExpbmsoKTtcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBnZXQgd2FsbGV0SW5mbygpIHtcbiAgICAgICAgICAgICAgcmV0dXJuIHByb3BzLndhbGxldDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgICAgfSksIGNyZWF0ZUNvbXBvbmVudChTaG93LCB7XG4gICAgICAgIGdldCB3aGVuKCkge1xuICAgICAgICAgIHJldHVybiAhc2hvd1FSKCk7XG4gICAgICAgIH0sXG4gICAgICAgIGdldCBjaGlsZHJlbigpIHtcbiAgICAgICAgICByZXR1cm4gW2NyZWF0ZUNvbXBvbmVudChIMVN0eWxlZCQ0LCB7XG4gICAgICAgICAgICBnZXQgY2hpbGRyZW4oKSB7XG4gICAgICAgICAgICAgIHJldHVybiBwcm9wcy53YWxsZXQubmFtZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9KSwgY3JlYXRlQ29tcG9uZW50KEJvZHlTdHlsZWQsIHtcbiAgICAgICAgICAgIGdldCBjaGlsZHJlbigpIHtcbiAgICAgICAgICAgICAgcmV0dXJuIFtjcmVhdGVDb21wb25lbnQoU2hvdywge1xuICAgICAgICAgICAgICAgIGdldCB3aGVuKCkge1xuICAgICAgICAgICAgICAgICAgcmV0dXJuIGNvbm5lY3Rpb25FcnJvcmVkKCk7XG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICBnZXQgY2hpbGRyZW4oKSB7XG4gICAgICAgICAgICAgICAgICByZXR1cm4gW2NyZWF0ZUNvbXBvbmVudChFcnJvckljb25TdHlsZWQsIHtcbiAgICAgICAgICAgICAgICAgICAgc2l6ZTogXCJzXCJcbiAgICAgICAgICAgICAgICAgIH0pLCBjcmVhdGVDb21wb25lbnQoQm9keVRleHRTdHlsZWQsIHtcbiAgICAgICAgICAgICAgICAgICAgdHJhbnNsYXRpb25LZXk6IFwid2FsbGV0TW9kYWwubW9iaWxlQ29ubmVjdGlvbk1vZGFsLmNvbm5lY3Rpb25EZWNsaW5lZFwiLFxuICAgICAgICAgICAgICAgICAgICBjaGlsZHJlbjogXCJDb25uZWN0aW9uIGRlY2xpbmVkXCJcbiAgICAgICAgICAgICAgICAgIH0pLCBjcmVhdGVDb21wb25lbnQoQnV0dG9uc0NvbnRhaW5lclN0eWxlZCwge1xuICAgICAgICAgICAgICAgICAgICBnZXQgY2hpbGRyZW4oKSB7XG4gICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIFtjcmVhdGVDb21wb25lbnQoQnV0dG9uLCB7XG4gICAgICAgICAgICAgICAgICAgICAgICBnZXQgbGVmdEljb24oKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBjcmVhdGVDb21wb25lbnQoUmV0cnlJY29uLCB7fSk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgb25DbGljazogb25SZXRyeSxcbiAgICAgICAgICAgICAgICAgICAgICAgIGdldCBjaGlsZHJlbigpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGNyZWF0ZUNvbXBvbmVudChUcmFuc2xhdGlvbiwge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRyYW5zbGF0aW9uS2V5OiBcImNvbW1vbi5yZXRyeVwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNoaWxkcmVuOiBcIlJldHJ5XCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgfSksIGNyZWF0ZUNvbXBvbmVudChCdXR0b24sIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGdldCBsZWZ0SWNvbigpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGNyZWF0ZUNvbXBvbmVudChRUkljb24sIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBnZXQgZmlsbCgpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiB0aGVtZS5jb2xvcnMuYWNjZW50O1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgb25DbGljazogb25PcGVuUVIsXG4gICAgICAgICAgICAgICAgICAgICAgICBnZXQgY2hpbGRyZW4oKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBjcmVhdGVDb21wb25lbnQoVHJhbnNsYXRpb24sIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0cmFuc2xhdGlvbktleTogXCJ3YWxsZXRNb2RhbC5tb2JpbGVDb25uZWN0aW9uTW9kYWwuc2hvd1FSXCIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY2hpbGRyZW46IFwiU2hvdyBRUiBDb2RlXCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgfSldO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICB9KV07XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICB9KSwgY3JlYXRlQ29tcG9uZW50KFNob3csIHtcbiAgICAgICAgICAgICAgICBnZXQgd2hlbigpIHtcbiAgICAgICAgICAgICAgICAgIHJldHVybiAhY29ubmVjdGlvbkVycm9yZWQoKTtcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIGdldCBjaGlsZHJlbigpIHtcbiAgICAgICAgICAgICAgICAgIHJldHVybiBbY3JlYXRlQ29tcG9uZW50KExvYWRlclN0eWxlZCwge1xuICAgICAgICAgICAgICAgICAgICBzaXplOiBcInNcIlxuICAgICAgICAgICAgICAgICAgfSksIGNyZWF0ZUNvbXBvbmVudChCb2R5VGV4dFN0eWxlZCwge1xuICAgICAgICAgICAgICAgICAgICB0cmFuc2xhdGlvbktleTogXCJ3YWxsZXRNb2RhbC5tb2JpbGVDb25uZWN0aW9uTW9kYWwuY29udGludWVJblwiLFxuICAgICAgICAgICAgICAgICAgICBnZXQgdHJhbnNsYXRpb25WYWx1ZXMoKSB7XG4gICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIG5hbWU6IHByb3BzLndhbGxldC5uYW1lXG4gICAgICAgICAgICAgICAgICAgICAgfTtcbiAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgZ2V0IGNoaWxkcmVuKCkge1xuICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBbXCJDb250aW51ZSBpbiBcIiwgY3JlYXRlTWVtbygoKSA9PiBwcm9wcy53YWxsZXQubmFtZSksIFwiXFx1MjAyNlwiXTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgfSksIGNyZWF0ZUNvbXBvbmVudChCdXR0b25zQ29udGFpbmVyU3R5bGVkLCB7XG4gICAgICAgICAgICAgICAgICAgIGdldCBjaGlsZHJlbigpIHtcbiAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gW2NyZWF0ZUNvbXBvbmVudChCdXR0b24sIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGdldCBsZWZ0SWNvbigpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGNyZWF0ZUNvbXBvbmVudChSZXRyeUljb24sIHt9KTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICBvbkNsaWNrOiBvblJldHJ5LFxuICAgICAgICAgICAgICAgICAgICAgICAgZ2V0IGNoaWxkcmVuKCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gY3JlYXRlQ29tcG9uZW50KFRyYW5zbGF0aW9uLCB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdHJhbnNsYXRpb25LZXk6IFwiY29tbW9uLnJldHJ5XCIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY2hpbGRyZW46IFwiUmV0cnlcIlxuICAgICAgICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICB9KSwgY3JlYXRlQ29tcG9uZW50KEJ1dHRvbiwge1xuICAgICAgICAgICAgICAgICAgICAgICAgZ2V0IGxlZnRJY29uKCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gY3JlYXRlQ29tcG9uZW50KFFSSWNvbiwge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGdldCBmaWxsKCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHRoZW1lLmNvbG9ycy5hY2NlbnQ7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICBvbkNsaWNrOiBvbk9wZW5RUixcbiAgICAgICAgICAgICAgICAgICAgICAgIGdldCBjaGlsZHJlbigpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGNyZWF0ZUNvbXBvbmVudChUcmFuc2xhdGlvbiwge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRyYW5zbGF0aW9uS2V5OiBcIndhbGxldE1vZGFsLm1vYmlsZUNvbm5lY3Rpb25Nb2RhbC5zaG93UVJcIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjaGlsZHJlbjogXCJTaG93IFFSIENvZGVcIlxuICAgICAgICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICB9KV07XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgIH0pXTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgIH0pXTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9KSwgY3JlYXRlQ29tcG9uZW50KEZvb3RlclN0eWxlZCwge1xuICAgICAgICAgICAgZ2V0IGNoaWxkcmVuKCkge1xuICAgICAgICAgICAgICByZXR1cm4gW2NyZWF0ZUNvbXBvbmVudChJbWFnZVN0eWxlZCwge1xuICAgICAgICAgICAgICAgIGdldCBzcmMoKSB7XG4gICAgICAgICAgICAgICAgICByZXR1cm4gcHJvcHMud2FsbGV0LmltYWdlVXJsO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgfSksIGNyZWF0ZUNvbXBvbmVudChIMywge1xuICAgICAgICAgICAgICAgIGdldCBjaGlsZHJlbigpIHtcbiAgICAgICAgICAgICAgICAgIHJldHVybiBwcm9wcy53YWxsZXQubmFtZTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgIH0pLCBjcmVhdGVDb21wb25lbnQoRm9vdGVyQnV0dG9uLCB7XG4gICAgICAgICAgICAgICAgZ2V0IGhyZWYoKSB7XG4gICAgICAgICAgICAgICAgICByZXR1cm4gcHJvcHMud2FsbGV0LmFib3V0VXJsO1xuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgYmxhbms6IHRydWUsXG4gICAgICAgICAgICAgICAgZ2V0IGNoaWxkcmVuKCkge1xuICAgICAgICAgICAgICAgICAgcmV0dXJuIGNyZWF0ZUNvbXBvbmVudChCdXR0b24sIHtcbiAgICAgICAgICAgICAgICAgICAgZ2V0IGNoaWxkcmVuKCkge1xuICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBjcmVhdGVDb21wb25lbnQoVHJhbnNsYXRpb24sIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHRyYW5zbGF0aW9uS2V5OiBcImNvbW1vbi5nZXRcIixcbiAgICAgICAgICAgICAgICAgICAgICAgIGNoaWxkcmVuOiBcIkdFVFwiXG4gICAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgfSldO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH0pXTtcbiAgICAgICAgfVxuICAgICAgfSldO1xuICAgIH1cbiAgfSk7XG59O1xuY29uc3QgYm9yZGVycyQxID0ge1xuICBtOiBcIjE2cHhcIixcbiAgczogXCIxMnB4XCIsXG4gIG5vbmU6IFwiMFwiXG59O1xuY29uc3QgdGdCb3JkZXJzID0ge1xuICBtOiBcIjZweFwiLFxuICBzOiBcIjZweFwiLFxuICBub25lOiBcIjBcIlxufTtcbmNvbnN0IFVsU3R5bGVkID0gc3R5bGVkLnVsYFxuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xuICAgIG1hcmdpbjogMCBhdXRvO1xuICAgIHdpZHRoOiBmaXQtY29udGVudDtcbiAgICBtYXgtd2lkdGg6IDEwMCU7XG4gICAgbWluLXdpZHRoOiAxMDAlO1xuICAgIGhlaWdodDogZml0LWNvbnRlbnQ7XG4gICAgb3ZlcmZsb3cteDogYXV0bztcbiAgICBvdmVyZmxvdy15OiBoaWRkZW47XG4gICAgcGFkZGluZzogMCAxM3B4IDI0cHg7XG5cbiAgICAmJjo6LXdlYmtpdC1zY3JvbGxiYXIge1xuICAgICAgICBkaXNwbGF5OiBub25lO1xuICAgIH1cblxuICAgIC1tcy1vdmVyZmxvdy1zdHlsZTogbm9uZTtcbiAgICBzY3JvbGxiYXItd2lkdGg6IG5vbmU7XG5cbiAgICA+IGxpIHtcbiAgICAgICAgaGVpZ2h0OiBmaXQtY29udGVudDtcbiAgICB9XG5gO1xuY29uc3QgT3RoZXJPcHRpb25CdXR0b24gPSBzdHlsZWQubGlgXG4gICAgd2lkdGg6IDgycHg7XG4gICAgbWluLXdpZHRoOiA4MnB4O1xuICAgIGhlaWdodDogMTI0cHg7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgcGFkZGluZzogOHB4IDRweDtcblxuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICBjdXJzb3I6IHBvaW50ZXI7XG5cbiAgICB0cmFuc2l0aW9uOiB0cmFuc2Zvcm0gMC4xcyBlYXNlLWluLW91dDtcblxuICAgICR7bWVkaWFOb3RUb3VjaH0ge1xuICAgICAgICAmOmhvdmVyIHtcbiAgICAgICAgICAgIHRyYW5zZm9ybTogc2NhbGUoMS4wNCk7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICAmOmFjdGl2ZSB7XG4gICAgICAgIHRyYW5zZm9ybTogc2NhbGUoMC45Nik7XG4gICAgfVxuXG4gICAgJHttZWRpYVRvdWNofSB7XG4gICAgICAgICY6YWN0aXZlIHtcbiAgICAgICAgICAgIHRyYW5zZm9ybTogc2NhbGUoMC45Mik7XG4gICAgICAgIH1cbiAgICB9XG5gO1xuY29uc3QgRGl2aWRlciA9IHN0eWxlZC5kaXZgXG4gICAgd2lkdGg6IDFweDtcbiAgICBtYXJnaW46IDAgMTBweDtcbiAgICBoZWlnaHQ6IDI0cHg7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgIHRvcDogMjZweDtcblxuICAgIGJhY2tncm91bmQtY29sb3I6ICR7KHByb3BzKSA9PiBwcm9wcy50aGVtZS5jb2xvcnMuaWNvbi5zZWNvbmRhcnl9O1xuICAgIG9wYWNpdHk6IDAuMjtcbmA7XG5jb25zdCBJY29uQ29udGFpbmVyID0gc3R5bGVkLmRpdmBcbiAgICB3aWR0aDogNjBweDtcbiAgICBoZWlnaHQ6IDYwcHg7XG4gICAgYm9yZGVyLXJhZGl1czogJHsocHJvcHMpID0+IGJvcmRlcnMkMVtwcm9wcy50aGVtZS5ib3JkZXJSYWRpdXNdfTtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG5cbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkeyhwcm9wcykgPT4gcHJvcHMudGhlbWUuY29sb3JzLmJhY2tncm91bmQudGludH07XG4gICAgbWFyZ2luLWJvdHRvbTogOHB4O1xuYDtcbmNvbnN0IEgxU3R5bGVkJDIgPSBzdHlsZWQoSDEpYFxuICAgIG1hcmdpbi10b3A6IDM4cHg7XG4gICAgbWFyZ2luLWJvdHRvbTogNHB4O1xuICAgIHBhZGRpbmc6IDAgMjRweDtcbmA7XG5jb25zdCBIMlN0eWxlZCQyID0gc3R5bGVkKEgyKWBcbiAgICBtYXJnaW4tYm90dG9tOiAyNHB4O1xuICAgIHBhZGRpbmc6IDAgMjRweDtcbiAgICBtaW4taGVpZ2h0OiA0NHB4O1xuICAgIG1heC13aWR0aDogJHsocHJvcHMpID0+IHByb3BzLm1heFdpZHRofXB4O1xuICAgIG1hcmdpbi1sZWZ0OiAkeyhwcm9wcykgPT4gcHJvcHMubWF4V2lkdGggPyBcImF1dG9cIiA6IFwiMHB4XCJ9O1xuICAgIG1hcmdpbi1yaWdodDogJHsocHJvcHMpID0+IHByb3BzLm1heFdpZHRoID8gXCJhdXRvXCIgOiBcIjBweFwifTtcbmA7XG5zdHlsZWQoQnV0dG9uKWBcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgICBtYXJnaW46IDAgYXV0bztcbmA7XG5jb25zdCBUZWxlZ3JhbUJ1dHRvblN0eWxlZCA9IHN0eWxlZChCdXR0b24pYFxuICAgIG1hcmdpbjogMCAyNHB4IDI0cHg7XG4gICAgd2lkdGg6IGNhbGMoMTAwJSAtIDQ4cHgpO1xuICAgIGJvcmRlci1yYWRpdXM6ICR7KHByb3BzKSA9PiBib3JkZXJzJDFbcHJvcHMudGhlbWUuYm9yZGVyUmFkaXVzXX07XG4gICAgcGFkZGluZzogMTRweCAxNnB4IDE0cHggMTRweDtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkeyhwcm9wcykgPT4gcHJvcHMudGhlbWUuY29sb3JzLnRlbGVncmFtQnV0dG9ufTtcblxuICAgIGNvbG9yOiAkeyhwcm9wcykgPT4gcHJvcHMudGhlbWUuY29sb3JzLmNvbnN0YW50LndoaXRlfTtcbiAgICBmb250LXdlaWdodDogNTEwO1xuICAgIGZvbnQtc2l6ZTogMTZweDtcbiAgICBsaW5lLWhlaWdodDogMjBweDtcbmA7XG5jb25zdCBUR0ltYWdlU3R5bGVkID0gc3R5bGVkKEltYWdlKWBcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDtcbiAgICBib3JkZXItcmFkaXVzOiAkeyhwcm9wcykgPT4gdGdCb3JkZXJzW3Byb3BzLnRoZW1lLmJvcmRlclJhZGl1c119O1xuICAgIHdpZHRoOiAyNHB4O1xuICAgIGhlaWdodDogMjRweDtcbmA7XG5jb25zdCBTdHlsZWRMZWZ0QWN0aW9uQnV0dG9uID0gc3R5bGVkKEljb25CdXR0b24pYFxuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICB0b3A6IDE2cHg7XG4gICAgbGVmdDogMTZweDtcbmA7XG5jb25zdCBIMVN0eWxlZCQxID0gc3R5bGVkKEgxKWBcbiAgICBtYXJnaW4tYm90dG9tOiAycHg7XG4gICAgcGFkZGluZzogMCA2NHB4O1xuYDtcbmNvbnN0IEgyU3R5bGVkJDEgPSBzdHlsZWQoSDIpYFxuICAgIG1hcmdpbi1ib3R0b206IDIwcHg7XG4gICAgcGFkZGluZzogMCA2NHB4O1xuYDtcbmNvbnN0IFFyQ29kZVdyYXBwZXIgPSBzdHlsZWQuZGl2YFxuICAgIHBhZGRpbmc6IDAgMjRweCAyNHB4O1xuYDtcbmNvbnN0IE1vYmlsZVVuaXZlcnNhbFFSID0gKHByb3BzKSA9PiB7XG4gIHJldHVybiBbY3JlYXRlQ29tcG9uZW50KEgxU3R5bGVkJDEsIHtcbiAgICB0cmFuc2xhdGlvbktleTogXCJ3YWxsZXRNb2RhbC5tb2JpbGVVbml2ZXJzYWxNb2RhbC5jb25uZWN0WW91cldhbGxldFwiLFxuICAgIGNoaWxkcmVuOiBcIkNvbm5lY3QgeW91ciB3YWxsZXRcIlxuICB9KSwgY3JlYXRlQ29tcG9uZW50KEgyU3R5bGVkJDEsIHtcbiAgICB0cmFuc2xhdGlvbktleTogXCJ3YWxsZXRNb2RhbC5tb2JpbGVVbml2ZXJzYWxNb2RhbC5zY2FuXCIsXG4gICAgY2hpbGRyZW46IFwiU2NhbiB3aXRoIHlvdXIgbW9iaWxlIHdhbGxldFwiXG4gIH0pLCBjcmVhdGVDb21wb25lbnQoUXJDb2RlV3JhcHBlciwge1xuICAgIGdldCBjaGlsZHJlbigpIHtcbiAgICAgIHJldHVybiBjcmVhdGVDb21wb25lbnQoUVJDb2RlLCB7XG4gICAgICAgIGdldCBpbWFnZVVybCgpIHtcbiAgICAgICAgICByZXR1cm4gSU1HLlRPTjtcbiAgICAgICAgfSxcbiAgICAgICAgZ2V0IHNvdXJjZVVybCgpIHtcbiAgICAgICAgICByZXR1cm4gYWRkUmV0dXJuU3RyYXRlZ3kocHJvcHMudW5pdmVyc2FsTGluaywgXCJub25lXCIpO1xuICAgICAgICB9LFxuICAgICAgICBkaXNhYmxlQ29weTogdHJ1ZVxuICAgICAgfSk7XG4gICAgfVxuICB9KV07XG59O1xuZnVuY3Rpb24gZ2V0VW5pcXVlQnJpZGdlcyh3YWxsZXRzTGlzdCkge1xuICBjb25zdCB1bmlxdWVCcmlkZ2VzID0gbmV3IFNldChcbiAgICB3YWxsZXRzTGlzdC5maWx0ZXIoaXNXYWxsZXRJbmZvUmVtb3RlKS5tYXAoKGl0ZW0pID0+IGl0ZW0uYnJpZGdlVXJsKVxuICApO1xuICByZXR1cm4gQXJyYXkuZnJvbSh1bmlxdWVCcmlkZ2VzKS5tYXAoKGJyaWRnZVVybCkgPT4gKHsgYnJpZGdlVXJsIH0pKTtcbn1cbmZ1bmN0aW9uIGJyaWRnZXNJc0VxdWFsKGxlZnQsIHJpZ2h0KSB7XG4gIGNvbnN0IGxlZnRTZXQgPSBuZXcgU2V0KGxlZnQgPT0gbnVsbCA/IHZvaWQgMCA6IGxlZnQubWFwKChpMikgPT4gaTIuYnJpZGdlVXJsKSk7XG4gIGNvbnN0IHJpZ2h0U2V0ID0gbmV3IFNldChyaWdodCA9PSBudWxsID8gdm9pZCAwIDogcmlnaHQubWFwKChpMikgPT4gaTIuYnJpZGdlVXJsKSk7XG4gIHJldHVybiBsZWZ0U2V0LnNpemUgPT09IHJpZ2h0U2V0LnNpemUgJiYgWy4uLmxlZnRTZXRdLmV2ZXJ5KCh2YWx1ZSkgPT4gcmlnaHRTZXQuaGFzKHZhbHVlKSk7XG59XG5jb25zdCBfdG1wbCQkMSA9IC8qIEBfX1BVUkVfXyAqLyB0ZW1wbGF0ZSQxKGA8bGk+PC9saT5gKSwgX3RtcGwkMiA9IC8qIEBfX1BVUkVfXyAqLyB0ZW1wbGF0ZSQxKGA8ZGl2IGRhdGEtdGMtd2FsbGV0cy1tb2RhbC11bml2ZXJzYWwtbW9iaWxlPVwidHJ1ZVwiPjwvZGl2PmApO1xuY29uc3QgTW9iaWxlVW5pdmVyc2FsTW9kYWwgPSAocHJvcHMpID0+IHtcbiAgY29uc3QgW3Nob3dRUiwgc2V0U2hvd1FSXSA9IGNyZWF0ZVNpZ25hbChmYWxzZSk7XG4gIGNvbnN0IFtmaXJzdENsaWNrLCBzZXRGaXJzdENsaWNrXSA9IGNyZWF0ZVNpZ25hbCh0cnVlKTtcbiAgY29uc3QgW3VuaXZlcnNhbExpbmssIHNldFVuaXZlcnNhbExpbmtdID0gY3JlYXRlU2lnbmFsKG51bGwpO1xuICBjb25zdCBjb25uZWN0b3IgPSBhcHBTdGF0ZS5jb25uZWN0b3I7XG4gIGNvbnN0IHdhbGxldHNMaXN0ID0gKCkgPT4gcHJvcHMud2FsbGV0c0xpc3QuZmlsdGVyKCh3KSA9PiBzdXBwb3J0c01vYmlsZSh3KSAmJiB3LmFwcE5hbWUgIT09IEFUX1dBTExFVF9BUFBfTkFNRSk7XG4gIGNvbnN0IHNob3VsZFNob3dNb3JlQnV0dG9uID0gKCkgPT4gd2FsbGV0c0xpc3QoKS5sZW5ndGggPiA3O1xuICBjb25zdCB3YWxsZXRzQnJpZGdlcyA9IGNyZWF0ZU1lbW8oKCkgPT4gZ2V0VW5pcXVlQnJpZGdlcyhwcm9wcy53YWxsZXRzTGlzdCksIG51bGwsIHtcbiAgICBlcXVhbHM6IGJyaWRnZXNJc0VxdWFsXG4gIH0pO1xuICBjb25zdCBnZXRVbml2ZXJzYWxMaW5rID0gKCkgPT4ge1xuICAgIGlmICghdW5pdmVyc2FsTGluaygpKSB7XG4gICAgICBzZXRVbml2ZXJzYWxMaW5rKGNvbm5lY3Rvci5jb25uZWN0KHdhbGxldHNCcmlkZ2VzKCksIHByb3BzLmFkZGl0aW9uYWxSZXF1ZXN0KSk7XG4gICAgfVxuICAgIHJldHVybiB1bml2ZXJzYWxMaW5rKCk7XG4gIH07XG4gIHNldExhc3RTZWxlY3RlZFdhbGxldEluZm8oe1xuICAgIG9wZW5NZXRob2Q6IFwidW5pdmVyc2FsLWxpbmtcIlxuICB9KTtcbiAgY29uc3QgW2lzQ29waWVkU2hvd24sIHNldElzQ29waWVkU2hvd25dID0gY3JlYXRlU2lnbmFsKHZvaWQgMCk7XG4gIGNvbnN0IG9uQ29weSA9ICgpID0+IF9fYXN5bmModm9pZCAwLCBudWxsLCBmdW5jdGlvbiogKCkge1xuICAgIGlmIChpc0NvcGllZFNob3duKCkgIT09IHZvaWQgMCkge1xuICAgICAgY2xlYXJUaW1lb3V0KGlzQ29waWVkU2hvd24oKSk7XG4gICAgfVxuICAgIHlpZWxkIGNvcHlUb0NsaXBib2FyZChnZXRVbml2ZXJzYWxMaW5rKCkpO1xuICAgIGNvbnN0IHRpbWVvdXRJZCA9IHNldFRpbWVvdXQoKCkgPT4gc2V0SXNDb3BpZWRTaG93bih2b2lkIDApLCAxNTAwKTtcbiAgICBzZXRJc0NvcGllZFNob3duKHRpbWVvdXRJZCk7XG4gIH0pO1xuICBjb25zdCBvblNlbGVjdFVuaXZlcnNhbCA9ICgpID0+IHtcbiAgICBjb25zdCBmb3JjZVJlZGlyZWN0ID0gIWZpcnN0Q2xpY2soKTtcbiAgICBzZXRGaXJzdENsaWNrKGZhbHNlKTtcbiAgICByZWRpcmVjdFRvV2FsbGV0KGdldFVuaXZlcnNhbExpbmsoKSwgdm9pZCAwLCB7XG4gICAgICByZXR1cm5TdHJhdGVneTogYXBwU3RhdGUucmV0dXJuU3RyYXRlZ3ksXG4gICAgICBmb3JjZVJlZGlyZWN0XG4gICAgfSwgKG1ldGhvZCkgPT4ge1xuICAgICAgc2V0TGFzdFNlbGVjdGVkV2FsbGV0SW5mbyh7XG4gICAgICAgIG9wZW5NZXRob2Q6IG1ldGhvZFxuICAgICAgfSk7XG4gICAgfSk7XG4gIH07XG4gIGNvbnN0IG9uU2VsZWN0VGVsZWdyYW0gPSAoKSA9PiB7XG4gICAgc2V0VW5pdmVyc2FsTGluayhudWxsKTtcbiAgICBjb25zdCBhdFdhbGxldCA9IHByb3BzLndhbGxldHNMaXN0LmZpbmQoKHdhbGxldCkgPT4gd2FsbGV0LmFwcE5hbWUgPT09IEFUX1dBTExFVF9BUFBfTkFNRSk7XG4gICAgaWYgKCFhdFdhbGxldCB8fCAhaXNXYWxsZXRJbmZvUmVtb3RlKGF0V2FsbGV0KSkge1xuICAgICAgdGhyb3cgbmV3IFRvbkNvbm5lY3RVSUVycm9yKFwiQHdhbGxldCBib3Qgbm90IGZvdW5kIGluIHRoZSB3YWxsZXRzIGxpc3RcIik7XG4gICAgfVxuICAgIGNvbnN0IHdhbGxldExpbmsgPSBjb25uZWN0b3IuY29ubmVjdCh7XG4gICAgICBicmlkZ2VVcmw6IGF0V2FsbGV0LmJyaWRnZVVybCxcbiAgICAgIHVuaXZlcnNhbExpbms6IGF0V2FsbGV0LnVuaXZlcnNhbExpbmtcbiAgICB9LCBwcm9wcy5hZGRpdGlvbmFsUmVxdWVzdCk7XG4gICAgY29uc3QgZm9yY2VSZWRpcmVjdCA9ICFmaXJzdENsaWNrKCk7XG4gICAgc2V0Rmlyc3RDbGljayhmYWxzZSk7XG4gICAgcmVkaXJlY3RUb1RlbGVncmFtKHdhbGxldExpbmssIHtcbiAgICAgIHJldHVyblN0cmF0ZWd5OiBhcHBTdGF0ZS5yZXR1cm5TdHJhdGVneSxcbiAgICAgIHR3YVJldHVyblVybDogYXBwU3RhdGUudHdhUmV0dXJuVXJsLFxuICAgICAgZm9yY2VSZWRpcmVjdFxuICAgIH0pO1xuICB9O1xuICBjb25zdCBvbk9wZW5RUiA9ICgpID0+IHtcbiAgICBzZXRTaG93UVIodHJ1ZSk7XG4gICAgc2V0TGFzdFNlbGVjdGVkV2FsbGV0SW5mbyh7XG4gICAgICBvcGVuTWV0aG9kOiBcInFyY29kZVwiXG4gICAgfSk7XG4gIH07XG4gIGNvbnN0IG9uQ2xvc2VRUiA9ICgpID0+IHtcbiAgICBzZXRTaG93UVIoZmFsc2UpO1xuICAgIHNldExhc3RTZWxlY3RlZFdhbGxldEluZm8oe1xuICAgICAgb3Blbk1ldGhvZDogXCJ1bml2ZXJzYWwtbGlua1wiXG4gICAgfSk7XG4gIH07XG4gIHJldHVybiAoKCkgPT4ge1xuICAgIGNvbnN0IF9lbCQgPSBfdG1wbCQyLmNsb25lTm9kZSh0cnVlKTtcbiAgICBpbnNlcnQoX2VsJCwgY3JlYXRlQ29tcG9uZW50KFNob3csIHtcbiAgICAgIGdldCB3aGVuKCkge1xuICAgICAgICByZXR1cm4gc2hvd1FSKCk7XG4gICAgICB9LFxuICAgICAgZ2V0IGNoaWxkcmVuKCkge1xuICAgICAgICByZXR1cm4gW2NyZWF0ZUNvbXBvbmVudChTdHlsZWRMZWZ0QWN0aW9uQnV0dG9uLCB7XG4gICAgICAgICAgaWNvbjogXCJhcnJvd1wiLFxuICAgICAgICAgIG9uQ2xpY2s6IG9uQ2xvc2VRUlxuICAgICAgICB9KSwgY3JlYXRlQ29tcG9uZW50KE1vYmlsZVVuaXZlcnNhbFFSLCB7XG4gICAgICAgICAgZ2V0IHVuaXZlcnNhbExpbmsoKSB7XG4gICAgICAgICAgICByZXR1cm4gZ2V0VW5pdmVyc2FsTGluaygpO1xuICAgICAgICAgIH1cbiAgICAgICAgfSldO1xuICAgICAgfVxuICAgIH0pLCBudWxsKTtcbiAgICBpbnNlcnQoX2VsJCwgY3JlYXRlQ29tcG9uZW50KFNob3csIHtcbiAgICAgIGdldCB3aGVuKCkge1xuICAgICAgICByZXR1cm4gIXNob3dRUigpO1xuICAgICAgfSxcbiAgICAgIGdldCBjaGlsZHJlbigpIHtcbiAgICAgICAgcmV0dXJuIFtjcmVhdGVDb21wb25lbnQoU3R5bGVkTGVmdEFjdGlvbkJ1dHRvbiwge1xuICAgICAgICAgIGdldCBpY29uKCkge1xuICAgICAgICAgICAgcmV0dXJuIGNyZWF0ZUNvbXBvbmVudChRUkljb24sIHt9KTtcbiAgICAgICAgICB9LFxuICAgICAgICAgIG9uQ2xpY2s6IG9uT3BlblFSXG4gICAgICAgIH0pLCBjcmVhdGVDb21wb25lbnQoSDFTdHlsZWQkMiwge1xuICAgICAgICAgIHRyYW5zbGF0aW9uS2V5OiBcIndhbGxldE1vZGFsLm1vYmlsZVVuaXZlcnNhbE1vZGFsLmNvbm5lY3RZb3VyV2FsbGV0XCIsXG4gICAgICAgICAgY2hpbGRyZW46IFwiQ29ubmVjdCB5b3VyIHdhbGxldFwiXG4gICAgICAgIH0pLCBjcmVhdGVDb21wb25lbnQoSDJTdHlsZWQkMiwge1xuICAgICAgICAgIHRyYW5zbGF0aW9uS2V5OiBcIndhbGxldE1vZGFsLm1vYmlsZVVuaXZlcnNhbE1vZGFsLm9wZW5XYWxsZXRPblRlbGVncmFtT3JTZWxlY3RcIixcbiAgICAgICAgICBtYXhXaWR0aDogMzQyLFxuICAgICAgICAgIGNoaWxkcmVuOiBcIk9wZW4gV2FsbGV0IGluIFRlbGVncmFtIG9yIHNlbGVjdCB5b3VyIHdhbGxldCB0byBjb25uZWN0XCJcbiAgICAgICAgfSksIGNyZWF0ZUNvbXBvbmVudChUZWxlZ3JhbUJ1dHRvblN0eWxlZCwge1xuICAgICAgICAgIGdldCBsZWZ0SWNvbigpIHtcbiAgICAgICAgICAgIHJldHVybiBjcmVhdGVDb21wb25lbnQoQXRXYWxsZXRJY29uLCB7fSk7XG4gICAgICAgICAgfSxcbiAgICAgICAgICBnZXQgcmlnaHRJY29uKCkge1xuICAgICAgICAgICAgcmV0dXJuIGNyZWF0ZUNvbXBvbmVudChUR0ltYWdlU3R5bGVkLCB7XG4gICAgICAgICAgICAgIGdldCBzcmMoKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIElNRy5URztcbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgfSxcbiAgICAgICAgICBvbkNsaWNrOiBvblNlbGVjdFRlbGVncmFtLFxuICAgICAgICAgIHNjYWxlOiBcInNcIixcbiAgICAgICAgICBnZXQgY2hpbGRyZW4oKSB7XG4gICAgICAgICAgICByZXR1cm4gY3JlYXRlQ29tcG9uZW50KFRyYW5zbGF0aW9uLCB7XG4gICAgICAgICAgICAgIHRyYW5zbGF0aW9uS2V5OiBcIndhbGxldE1vZGFsLm1vYmlsZVVuaXZlcnNhbE1vZGFsLm9wZW5XYWxsZXRPblRlbGVncmFtXCIsXG4gICAgICAgICAgICAgIGNoaWxkcmVuOiBcIk9wZW4gV2FsbGV0IGluIFRlbGVncmFtXCJcbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgIH1cbiAgICAgICAgfSksIGNyZWF0ZUNvbXBvbmVudChVbFN0eWxlZCwge1xuICAgICAgICAgIGdldCBjaGlsZHJlbigpIHtcbiAgICAgICAgICAgIHJldHVybiBbY3JlYXRlQ29tcG9uZW50KEZvciwge1xuICAgICAgICAgICAgICBnZXQgZWFjaCgpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gY3JlYXRlTWVtbygoKSA9PiAhIXNob3VsZFNob3dNb3JlQnV0dG9uKCkpKCkgPyB3YWxsZXRzTGlzdCgpLnNsaWNlKDAsIDQpIDogd2FsbGV0c0xpc3QoKTtcbiAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgY2hpbGRyZW46ICh3YWxsZXQpID0+ICgoKSA9PiB7XG4gICAgICAgICAgICAgICAgY29uc3QgX2VsJDMgPSBfdG1wbCQkMS5jbG9uZU5vZGUodHJ1ZSk7XG4gICAgICAgICAgICAgICAgaW5zZXJ0KF9lbCQzLCBjcmVhdGVDb21wb25lbnQoV2FsbGV0SXRlbSwge1xuICAgICAgICAgICAgICAgICAgZ2V0IGljb24oKSB7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiB3YWxsZXQuaW1hZ2VVcmw7XG4gICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgZ2V0IG5hbWUoKSB7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiB3YWxsZXQubmFtZTtcbiAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICBvbkNsaWNrOiAoKSA9PiBwcm9wcy5vblNlbGVjdCh3YWxsZXQpXG4gICAgICAgICAgICAgICAgfSkpO1xuICAgICAgICAgICAgICAgIHJldHVybiBfZWwkMztcbiAgICAgICAgICAgICAgfSkoKVxuICAgICAgICAgICAgfSksIGNyZWF0ZUNvbXBvbmVudChTaG93LCB7XG4gICAgICAgICAgICAgIGdldCB3aGVuKCkge1xuICAgICAgICAgICAgICAgIHJldHVybiBzaG91bGRTaG93TW9yZUJ1dHRvbigpO1xuICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICBnZXQgY2hpbGRyZW4oKSB7XG4gICAgICAgICAgICAgICAgY29uc3QgX2VsJDIgPSBfdG1wbCQkMS5jbG9uZU5vZGUodHJ1ZSk7XG4gICAgICAgICAgICAgICAgaW5zZXJ0KF9lbCQyLCBjcmVhdGVDb21wb25lbnQoRm91cldhbGxldHNJdGVtLCB7XG4gICAgICAgICAgICAgICAgICBsYWJlbExpbmUxOiBcIlZpZXcgYWxsXCIsXG4gICAgICAgICAgICAgICAgICBsYWJlbExpbmUyOiBcIndhbGxldHNcIixcbiAgICAgICAgICAgICAgICAgIGdldCBpbWFnZXMoKSB7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiB3YWxsZXRzTGlzdCgpLnNsaWNlKDMsIDcpLm1hcCgoaTIpID0+IGkyLmltYWdlVXJsKTtcbiAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICBvbkNsaWNrOiAoKSA9PiBwcm9wcy5vblNlbGVjdEFsbFdhbGxldHMoKVxuICAgICAgICAgICAgICAgIH0pKTtcbiAgICAgICAgICAgICAgICByZXR1cm4gX2VsJDI7XG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0pLCBjcmVhdGVDb21wb25lbnQoRGl2aWRlciwge1xuICAgICAgICAgICAgICBjaGlsZHJlbjogXCJcXHhBMFwiXG4gICAgICAgICAgICB9KSwgY3JlYXRlQ29tcG9uZW50KE90aGVyT3B0aW9uQnV0dG9uLCB7XG4gICAgICAgICAgICAgIG9uQ2xpY2s6IG9uU2VsZWN0VW5pdmVyc2FsLFxuICAgICAgICAgICAgICBnZXQgY2hpbGRyZW4oKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIFtjcmVhdGVDb21wb25lbnQoSWNvbkNvbnRhaW5lciwge1xuICAgICAgICAgICAgICAgICAgZ2V0IGNoaWxkcmVuKCkge1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gY3JlYXRlQ29tcG9uZW50KExvbmdBcnJvd0ljb24sIHt9KTtcbiAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9KSwgY3JlYXRlQ29tcG9uZW50KFRleHQsIHtcbiAgICAgICAgICAgICAgICAgIGZvbnRXZWlnaHQ6IDU5MCxcbiAgICAgICAgICAgICAgICAgIHRyYW5zbGF0aW9uS2V5OiBcIndhbGxldE1vZGFsLm1vYmlsZVVuaXZlcnNhbE1vZGFsLm9wZW5MaW5rXCIsXG4gICAgICAgICAgICAgICAgICBjaGlsZHJlbjogXCJPcGVuIExpbmtcIlxuICAgICAgICAgICAgICAgIH0pXTtcbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSksIGNyZWF0ZUNvbXBvbmVudChPdGhlck9wdGlvbkJ1dHRvbiwge1xuICAgICAgICAgICAgICBvbkNsaWNrOiBvbkNvcHksXG4gICAgICAgICAgICAgIGdldCBjaGlsZHJlbigpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gW2NyZWF0ZUNvbXBvbmVudChJY29uQ29udGFpbmVyLCB7XG4gICAgICAgICAgICAgICAgICBnZXQgY2hpbGRyZW4oKSB7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBjcmVhdGVNZW1vKCgpID0+IGlzQ29waWVkU2hvd24oKSAhPT0gdm9pZCAwKSgpID8gY3JlYXRlQ29tcG9uZW50KERvbmVJY29uLCB7fSkgOiBjcmVhdGVDb21wb25lbnQoQ29weUxpZ2h0SWNvbiwge30pO1xuICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH0pLCBjcmVhdGVDb21wb25lbnQoVGV4dCwge1xuICAgICAgICAgICAgICAgICAgZm9udFdlaWdodDogNTkwLFxuICAgICAgICAgICAgICAgICAgZ2V0IHRyYW5zbGF0aW9uS2V5KCkge1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gaXNDb3BpZWRTaG93bigpICE9PSB2b2lkIDAgPyBcImNvbW1vbi5jb3BpZWRcIiA6IFwiY29tbW9uLmNvcHlMaW5rXCI7XG4gICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgZ2V0IGNoaWxkcmVuKCkge1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gaXNDb3BpZWRTaG93bigpICE9PSB2b2lkIDAgPyBcIkNvcGllZFwiIDogXCJDb3B5IExpbmtcIjtcbiAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9KV07XG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0pXTtcbiAgICAgICAgICB9XG4gICAgICAgIH0pXTtcbiAgICAgIH1cbiAgICB9KSwgbnVsbCk7XG4gICAgcmV0dXJuIF9lbCQ7XG4gIH0pKCk7XG59O1xuY29uc3QgYm9yZGVycyA9IHtcbiAgbTogXCIxNnB4XCIsXG4gIHM6IFwiOHB4XCIsXG4gIG5vbmU6IFwiMFwiXG59O1xuY29uc3QgaG92ZXJCb3JkZXJzID0ge1xuICBtOiBcIjhweFwiLFxuICBzOiBcIjRweFwiLFxuICBub25lOiBcIjBcIlxufTtcbmNvbnN0IERlc2t0b3BVbml2ZXJzYWxNb2RhbFN0eWxlZCA9IHN0eWxlZC5kaXZgXG4gICAgZGlzcGxheTogZmxleDtcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgcGFkZGluZy1ib3R0b206IDE2cHg7XG5gO1xuY29uc3QgSDJTdHlsZWQgPSBzdHlsZWQoSDIpYFxuICAgIG1heC13aWR0aDogMzIwcHg7XG4gICAgbWFyZ2luLXRvcDogMnB4O1xuICAgIG1hcmdpbi1ib3R0b206IDIwcHg7XG5gO1xuY29uc3QgSDJBdmFpbGFibGVXYWxsZXRzU3R5bGVkID0gc3R5bGVkKEgyKWBcbiAgICBtYXJnaW4tYm90dG9tOiAxNnB4O1xuYDtcbmNvbnN0IFFSQ29kZVN0eWxlZCA9IHN0eWxlZChRUkNvZGUpYFxuICAgIG1hcmdpbi1ib3R0b206IDI0cHg7XG5gO1xuY29uc3QgV2FsbGV0c0NvbnRhaW5lclN0eWxlZCA9IHN0eWxlZC51bGBcbiAgICBkaXNwbGF5OiBmbGV4O1xuYDtcbnN0eWxlZC5kaXZgXG4gICAgZGlzcGxheTogZmxleDtcbiAgICBnYXA6IDE2cHg7XG4gICAgd2lkdGg6IDEwMCU7XG5gO1xuc3R5bGVkKEJ1dHRvbilgXG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgIGZvbnQtc2l6ZTogMTZweDtcbiAgICBsaW5lLWhlaWdodDogMjBweDtcbiAgICB3aWR0aDogMTAwJTtcbiAgICBwYWRkaW5nOiAwIDE2cHg7XG4gICAgaGVpZ2h0OiA1NnB4O1xuICAgIGJvcmRlci1yYWRpdXM6ICR7KHByb3BzKSA9PiBib3JkZXJzW3Byb3BzLnRoZW1lLmJvcmRlclJhZGl1c119O1xuXG4gICAgJjpob3ZlciB7XG4gICAgICAgICR7KHByb3BzKSA9PiBwcm9wcy5kaXNhYmxlRXZlbnRzQW5pbWF0aW9uID8gXCJ0cmFuc2Zvcm06IHVuc2V0O1wiIDogXCJcIn1cbiAgICB9XG5cbiAgICAmOmFjdGl2ZSB7XG4gICAgICAgICR7KHByb3BzKSA9PiBwcm9wcy5kaXNhYmxlRXZlbnRzQW5pbWF0aW9uID8gXCJ0cmFuc2Zvcm06IHVuc2V0O1wiIDogXCJcIn1cbiAgICB9XG5gO1xuc3R5bGVkLnVsYFxuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICBib3R0b206IDEwMCU7XG4gICAgbGVmdDogMDtcbiAgICBtYXJnaW46IDA7XG4gICAgcGFkZGluZzogOHB4O1xuICAgIHdpZHRoOiAxODhweDtcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoLTE2cHgpO1xuXG4gICAgYmFja2dyb3VuZC1jb2xvcjogJHsocHJvcHMpID0+IHByb3BzLnRoZW1lLmNvbG9ycy5iYWNrZ3JvdW5kLnByaW1hcnl9O1xuICAgIGJvcmRlci1yYWRpdXM6ICR7KHByb3BzKSA9PiBib3JkZXJzW3Byb3BzLnRoZW1lLmJvcmRlclJhZGl1c119O1xuICAgIGJveC1zaGFkb3c6IDAgNHB4IDI0cHggcmdiYSgwLCAwLCAwLCAwLjE2KTtcbmA7XG5zdHlsZWQubGlgXG4gICAgcGFkZGluZzogOHB4O1xuXG4gICAgZGlzcGxheTogZmxleDtcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgIGdhcDogOHB4O1xuXG4gICAgY3Vyc29yOiBwb2ludGVyO1xuICAgIGJvcmRlci1yYWRpdXM6ICR7KHByb3BzKSA9PiBob3ZlckJvcmRlcnNbcHJvcHMudGhlbWUuYm9yZGVyUmFkaXVzXX07XG5cbiAgICB0cmFuc2l0aW9uOiBiYWNrZ3JvdW5kLWNvbG9yLCB0cmFuc2Zvcm0gMC4xcyBlYXNlLWluLW91dDtcblxuICAgICY6aG92ZXIge1xuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkeyhwcm9wcykgPT4gcHJvcHMudGhlbWUuY29sb3JzLmJhY2tncm91bmQuc2Vjb25kYXJ5fTtcbiAgICB9XG5cbiAgICAmOmFjdGl2ZSB7XG4gICAgICAgIHRyYW5zZm9ybTogc2NhbGUoMC45Nik7XG4gICAgfVxuYDtcbnN0eWxlZChJbWFnZSlgXG4gICAgd2lkdGg6IDI0cHg7XG4gICAgaGVpZ2h0OiAyNHB4O1xuXG4gICAgYm9yZGVyLXJhZGl1czogNnB4O1xuYDtcbnN0eWxlZC5kaXZgXG4gICAgbWFyZ2luLXRvcDogMjNweDtcbiAgICBtYXJnaW4tYm90dG9tOiAxcHg7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuYDtcbnN0eWxlZChUZXh0KWBcbiAgICBjb2xvcjogJHsocHJvcHMpID0+IHByb3BzLnRoZW1lLmNvbG9ycy50ZXh0LnNlY29uZGFyeX07XG4gICAgZm9udC1zaXplOiAxNnB4O1xuYDtcbmNvbnN0IF90bXBsJCA9IC8qIEBfX1BVUkVfXyAqLyB0ZW1wbGF0ZSQxKGA8bGk+PC9saT5gKTtcbmNvbnN0IERlc2t0b3BVbml2ZXJzYWxNb2RhbCA9IChwcm9wcykgPT4ge1xuICBjb25zdCBbcG9wdXBPcGVuZWQsIHNldFBvcHVwT3BlbmVkXSA9IGNyZWF0ZVNpZ25hbChmYWxzZSk7XG4gIGNvbnN0IGNvbm5lY3RvciA9IGFwcFN0YXRlLmNvbm5lY3RvcjtcbiAgY29uc3Qgd2FsbGV0c0JyaWRnZXMgPSBjcmVhdGVNZW1vKCgpID0+IGdldFVuaXF1ZUJyaWRnZXMocHJvcHMud2FsbGV0c0xpc3QpLCBudWxsLCB7XG4gICAgZXF1YWxzOiBicmlkZ2VzSXNFcXVhbFxuICB9KTtcbiAgc2V0TGFzdFNlbGVjdGVkV2FsbGV0SW5mbyh7XG4gICAgb3Blbk1ldGhvZDogXCJxcmNvZGVcIlxuICB9KTtcbiAgY29uc3QgcmVxdWVzdCA9IGNyZWF0ZU1lbW8oKCkgPT4gY29ubmVjdG9yLmNvbm5lY3Qod2FsbGV0c0JyaWRnZXMoKSwgcHJvcHMuYWRkaXRpb25hbFJlcXVlc3QpKTtcbiAgcmV0dXJuIGNyZWF0ZUNvbXBvbmVudChEZXNrdG9wVW5pdmVyc2FsTW9kYWxTdHlsZWQsIHtcbiAgICBvbkNsaWNrOiAoKSA9PiBzZXRQb3B1cE9wZW5lZChmYWxzZSksXG4gICAgXCJkYXRhLXRjLXdhbGxldHMtbW9kYWwtdW5pdmVyc2FsLWRlc2t0b3BcIjogXCJ0cnVlXCIsXG4gICAgZ2V0IGNoaWxkcmVuKCkge1xuICAgICAgcmV0dXJuIFtjcmVhdGVDb21wb25lbnQoSDEsIHtcbiAgICAgICAgdHJhbnNsYXRpb25LZXk6IFwid2FsbGV0TW9kYWwuZGVza3RvcFVuaXZlcnNhbE1vZGFsLmNvbm5lY3RZb3VyV2FsbGV0XCIsXG4gICAgICAgIGNoaWxkcmVuOiBcIkNvbm5lY3QgeW91ciB3YWxsZXRcIlxuICAgICAgfSksIGNyZWF0ZUNvbXBvbmVudChIMlN0eWxlZCwge1xuICAgICAgICB0cmFuc2xhdGlvbktleTogXCJ3YWxsZXRNb2RhbC5kZXNrdG9wVW5pdmVyc2FsTW9kYWwuc2NhblwiLFxuICAgICAgICBjaGlsZHJlbjogXCJTY2FuIHdpdGggeW91ciBtb2JpbGUgd2FsbGV0XCJcbiAgICAgIH0pLCBjcmVhdGVDb21wb25lbnQoUVJDb2RlU3R5bGVkLCB7XG4gICAgICAgIGdldCBzb3VyY2VVcmwoKSB7XG4gICAgICAgICAgcmV0dXJuIGFkZFJldHVyblN0cmF0ZWd5KHJlcXVlc3QoKSwgXCJub25lXCIpO1xuICAgICAgICB9LFxuICAgICAgICBnZXQgZGlzYWJsZUNvcHkoKSB7XG4gICAgICAgICAgcmV0dXJuIHBvcHVwT3BlbmVkKCk7XG4gICAgICAgIH0sXG4gICAgICAgIGdldCBpbWFnZVVybCgpIHtcbiAgICAgICAgICByZXR1cm4gSU1HLlRPTjtcbiAgICAgICAgfVxuICAgICAgfSksIGNyZWF0ZUNvbXBvbmVudChIMkF2YWlsYWJsZVdhbGxldHNTdHlsZWQsIHtcbiAgICAgICAgdHJhbnNsYXRpb25LZXk6IFwid2FsbGV0TW9kYWwuZGVza3RvcFVuaXZlcnNhbE1vZGFsLmF2YWlsYWJsZVdhbGxldHNcIixcbiAgICAgICAgY2hpbGRyZW46IFwiQXZhaWxhYmxlIHdhbGxldHNcIlxuICAgICAgfSksIGNyZWF0ZUNvbXBvbmVudChXYWxsZXRzQ29udGFpbmVyU3R5bGVkLCB7XG4gICAgICAgIGdldCBjaGlsZHJlbigpIHtcbiAgICAgICAgICByZXR1cm4gW2NyZWF0ZUNvbXBvbmVudChGb3IsIHtcbiAgICAgICAgICAgIGdldCBlYWNoKCkge1xuICAgICAgICAgICAgICByZXR1cm4gcHJvcHMud2FsbGV0c0xpc3Quc2xpY2UoMCwgMyk7XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgY2hpbGRyZW46ICh3YWxsZXQpID0+ICgoKSA9PiB7XG4gICAgICAgICAgICAgIGNvbnN0IF9lbCQgPSBfdG1wbCQuY2xvbmVOb2RlKHRydWUpO1xuICAgICAgICAgICAgICBpbnNlcnQoX2VsJCwgY3JlYXRlQ29tcG9uZW50KFdhbGxldExhYmVsZWRJdGVtLCB7XG4gICAgICAgICAgICAgICAgd2FsbGV0LFxuICAgICAgICAgICAgICAgIG9uQ2xpY2s6ICgpID0+IHByb3BzLm9uU2VsZWN0KHdhbGxldClcbiAgICAgICAgICAgICAgfSkpO1xuICAgICAgICAgICAgICByZXR1cm4gX2VsJDtcbiAgICAgICAgICAgIH0pKClcbiAgICAgICAgICB9KSwgY3JlYXRlQ29tcG9uZW50KEZvdXJXYWxsZXRzSXRlbSwge1xuICAgICAgICAgICAgbGFiZWxMaW5lMTogXCJWaWV3IGFsbFwiLFxuICAgICAgICAgICAgbGFiZWxMaW5lMjogXCJ3YWxsZXRzXCIsXG4gICAgICAgICAgICBnZXQgaW1hZ2VzKCkge1xuICAgICAgICAgICAgICByZXR1cm4gcHJvcHMud2FsbGV0c0xpc3Quc2xpY2UoMywgNykubWFwKChpMikgPT4gaTIuaW1hZ2VVcmwpO1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIG9uQ2xpY2s6ICgpID0+IHByb3BzLm9uU2VsZWN0QWxsV2FsbGV0cygpXG4gICAgICAgICAgfSldO1xuICAgICAgICB9XG4gICAgICB9KV07XG4gICAgfVxuICB9KTtcbn07XG5jb25zdCBXYWxsZXRzTW9kYWwgPSAoKSA9PiB7XG4gIGNvbnN0IHtcbiAgICBsb2NhbGVcbiAgfSA9IHVzZUkxOG4oKVsxXTtcbiAgY3JlYXRlRWZmZWN0KCgpID0+IGxvY2FsZShhcHBTdGF0ZS5sYW5ndWFnZSkpO1xuICBjcmVhdGVFZmZlY3QoKCkgPT4ge1xuICAgIGlmIChnZXRXYWxsZXRzTW9kYWxJc09wZW5lZCgpKSB7XG4gICAgICB1cGRhdGVJc01vYmlsZSgpO1xuICAgIH0gZWxzZSB7XG4gICAgICBzZXRTZWxlY3RlZFdhbGxldEluZm8obnVsbCk7XG4gICAgICBzZXRTZWxlY3RlZFRhYihcInVuaXZlcnNhbFwiKTtcbiAgICAgIHNldEluZm9UYWIoZmFsc2UpO1xuICAgIH1cbiAgfSk7XG4gIGNvbnN0IGNvbm5lY3RvciA9IHVzZUNvbnRleHQoQ29ubmVjdG9yQ29udGV4dCk7XG4gIGNvbnN0IHRvbkNvbm5lY3RVSSA9IHVzZUNvbnRleHQoVG9uQ29ubmVjdFVpQ29udGV4dCk7XG4gIGNvbnN0IFtmZXRjaGVkV2FsbGV0c0xpc3RdID0gY3JlYXRlUmVzb3VyY2UoKCkgPT4gdG9uQ29ubmVjdFVJLmdldFdhbGxldHMoKSk7XG4gIGNvbnN0IFtzZWxlY3RlZFdhbGxldEluZm8sIHNldFNlbGVjdGVkV2FsbGV0SW5mb10gPSBjcmVhdGVTaWduYWwobnVsbCk7XG4gIGNvbnN0IFtzZWxlY3RlZFRhYiwgc2V0U2VsZWN0ZWRUYWJdID0gY3JlYXRlU2lnbmFsKFwidW5pdmVyc2FsXCIpO1xuICBjb25zdCBbaW5mb1RhYiwgc2V0SW5mb1RhYl0gPSBjcmVhdGVTaWduYWwoZmFsc2UpO1xuICBjb25zdCB3YWxsZXRzTGlzdCA9IGNyZWF0ZU1lbW8oKCkgPT4ge1xuICAgIGlmIChmZXRjaGVkV2FsbGV0c0xpc3Quc3RhdGUgIT09IFwicmVhZHlcIikge1xuICAgICAgcmV0dXJuIG51bGw7XG4gICAgfVxuICAgIGxldCB3YWxsZXRzTGlzdDIgPSBhcHBseVdhbGxldHNMaXN0Q29uZmlndXJhdGlvbihmZXRjaGVkV2FsbGV0c0xpc3QoKSwgYXBwU3RhdGUud2FsbGV0c0xpc3RDb25maWd1cmF0aW9uKTtcbiAgICBjb25zdCBpbmplY3RlZFdhbGxldHMgPSB3YWxsZXRzTGlzdDIuZmlsdGVyKGlzV2FsbGV0SW5mb0N1cnJlbnRseUluamVjdGVkKTtcbiAgICBjb25zdCBub3RJbmplY3RlZFdhbGxldHMgPSB3YWxsZXRzTGlzdDIuZmlsdGVyKCh3KSA9PiAhaXNXYWxsZXRJbmZvQ3VycmVudGx5SW5qZWN0ZWQodykpO1xuICAgIHdhbGxldHNMaXN0MiA9IChpbmplY3RlZFdhbGxldHMgfHwgW10pLmNvbmNhdChub3RJbmplY3RlZFdhbGxldHMpO1xuICAgIGNvbnN0IHByZWZlcnJlZFdhbGxldEFwcE5hbWUgPSBhcHBTdGF0ZS5wcmVmZXJyZWRXYWxsZXRBcHBOYW1lO1xuICAgIGNvbnN0IHByZWZlcnJlZFdhbGxldCA9IHdhbGxldHNMaXN0Mi5maW5kKChpdGVtKSA9PiBlcVdhbGxldE5hbWUoaXRlbSwgcHJlZmVycmVkV2FsbGV0QXBwTmFtZSkpO1xuICAgIGNvbnN0IHNvbWVXYWxsZXRzV2l0aFNhbWVOYW1lID0gd2FsbGV0c0xpc3QyLmZpbHRlcigoaXRlbSkgPT4gZXFXYWxsZXROYW1lKGl0ZW0sIHByZWZlcnJlZFdhbGxldEFwcE5hbWUpKS5sZW5ndGggPj0gMjtcbiAgICBpZiAocHJlZmVycmVkV2FsbGV0QXBwTmFtZSAmJiBwcmVmZXJyZWRXYWxsZXQgJiYgIXNvbWVXYWxsZXRzV2l0aFNhbWVOYW1lKSB7XG4gICAgICB3YWxsZXRzTGlzdDIgPSBbX19zcHJlYWRQcm9wcyhfX3NwcmVhZFZhbHVlcyh7fSwgcHJlZmVycmVkV2FsbGV0KSwge1xuICAgICAgICBpc1ByZWZlcnJlZDogdHJ1ZVxuICAgICAgfSldLmNvbmNhdCh3YWxsZXRzTGlzdDIuZmlsdGVyKChpdGVtKSA9PiAhZXFXYWxsZXROYW1lKGl0ZW0sIHByZWZlcnJlZFdhbGxldEFwcE5hbWUpKSk7XG4gICAgfVxuICAgIGNvbnN0IGF0V2FsbGV0ID0gd2FsbGV0c0xpc3QyLmZpbmQoKGl0ZW0pID0+IGVxV2FsbGV0TmFtZShpdGVtLCBBVF9XQUxMRVRfQVBQX05BTUUpKTtcbiAgICBpZiAoYXRXYWxsZXQpIHtcbiAgICAgIHdhbGxldHNMaXN0MiA9IFthdFdhbGxldF0uY29uY2F0KHdhbGxldHNMaXN0Mi5maWx0ZXIoKGl0ZW0pID0+ICFlcVdhbGxldE5hbWUoaXRlbSwgQVRfV0FMTEVUX0FQUF9OQU1FKSkpO1xuICAgIH1cbiAgICByZXR1cm4gd2FsbGV0c0xpc3QyO1xuICB9KTtcbiAgY29uc3QgYWRkaXRpb25hbFJlcXVlc3RMb2FkaW5nID0gKCkgPT4ge1xuICAgIHZhciBfYTI7XG4gICAgcmV0dXJuICgoX2EyID0gYXBwU3RhdGUuY29ubmVjdFJlcXVlc3RQYXJhbWV0ZXJzKSA9PSBudWxsID8gdm9pZCAwIDogX2EyLnN0YXRlKSA9PT0gXCJsb2FkaW5nXCI7XG4gIH07XG4gIGNvbnN0IGFkZGl0aW9uYWxSZXF1ZXN0ID0gY3JlYXRlTWVtbygoKSA9PiB7XG4gICAgdmFyIF9hMjtcbiAgICBpZiAoYWRkaXRpb25hbFJlcXVlc3RMb2FkaW5nKCkpIHtcbiAgICAgIHJldHVybiB2b2lkIDA7XG4gICAgfVxuICAgIHJldHVybiAoX2EyID0gYXBwU3RhdGUuY29ubmVjdFJlcXVlc3RQYXJhbWV0ZXJzKSA9PSBudWxsID8gdm9pZCAwIDogX2EyLnZhbHVlO1xuICB9KTtcbiAgY29uc3Qgb25DbG9zZSA9IChjbG9zZVJlYXNvbikgPT4ge1xuICAgIHRvbkNvbm5lY3RVSS5jbG9zZU1vZGFsKGNsb3NlUmVhc29uKTtcbiAgfTtcbiAgY29uc3QgdW5zdWJzY3JpYmUgPSBjb25uZWN0b3Iub25TdGF0dXNDaGFuZ2UoKHdhbGxldCkgPT4ge1xuICAgIGlmICh3YWxsZXQpIHtcbiAgICAgIG9uQ2xvc2UoXCJ3YWxsZXQtc2VsZWN0ZWRcIik7XG4gICAgfVxuICB9KTtcbiAgY29uc3Qgb25TZWxlY3RBbGxXYWxsZXRzID0gKCkgPT4ge1xuICAgIHNldFNlbGVjdGVkVGFiKFwiYWxsLXdhbGxldHNcIik7XG4gIH07XG4gIGNvbnN0IG9uU2VsZWN0VW5pdmVyc2FsID0gKCkgPT4ge1xuICAgIHNldFNlbGVjdGVkVGFiKFwidW5pdmVyc2FsXCIpO1xuICB9O1xuICBjb25zdCBjbGVhclNlbGVjdGVkV2FsbGV0SW5mbyA9ICgpID0+IHtcbiAgICBzZXRTZWxlY3RlZFdhbGxldEluZm8obnVsbCk7XG4gIH07XG4gIG9uQ2xlYW51cCgoKSA9PiB7XG4gICAgc2V0U2VsZWN0ZWRXYWxsZXRJbmZvKG51bGwpO1xuICAgIHNldEluZm9UYWIoZmFsc2UpO1xuICB9KTtcbiAgb25DbGVhbnVwKHVuc3Vic2NyaWJlKTtcbiAgcmV0dXJuIGNyZWF0ZUNvbXBvbmVudChTdHlsZWRNb2RhbCwge1xuICAgIGdldCBvcGVuZWQoKSB7XG4gICAgICByZXR1cm4gZ2V0V2FsbGV0c01vZGFsSXNPcGVuZWQoKTtcbiAgICB9LFxuICAgIGdldCBlbmFibGVBbmRyb2lkQmFja0hhbmRsZXIoKSB7XG4gICAgICByZXR1cm4gYXBwU3RhdGUuZW5hYmxlQW5kcm9pZEJhY2tIYW5kbGVyO1xuICAgIH0sXG4gICAgb25DbG9zZTogKCkgPT4gb25DbG9zZShcImFjdGlvbi1jYW5jZWxsZWRcIiksXG4gICAgb25DbGlja1F1ZXN0aW9uOiAoKSA9PiBzZXRJbmZvVGFiKCh2KSA9PiAhdiksXG4gICAgXCJkYXRhLXRjLXdhbGxldHMtbW9kYWwtY29udGFpbmVyXCI6IFwidHJ1ZVwiLFxuICAgIGdldCBjaGlsZHJlbigpIHtcbiAgICAgIHJldHVybiBbY3JlYXRlQ29tcG9uZW50KFNob3csIHtcbiAgICAgICAgZ2V0IHdoZW4oKSB7XG4gICAgICAgICAgcmV0dXJuIGluZm9UYWIoKTtcbiAgICAgICAgfSxcbiAgICAgICAgZ2V0IGNoaWxkcmVuKCkge1xuICAgICAgICAgIHJldHVybiBjcmVhdGVDb21wb25lbnQoSW5mb01vZGFsLCB7XG4gICAgICAgICAgICBvbkJhY2tDbGljazogKCkgPT4gc2V0SW5mb1RhYihmYWxzZSlcbiAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgICAgfSksIGNyZWF0ZUNvbXBvbmVudChTaG93LCB7XG4gICAgICAgIGdldCB3aGVuKCkge1xuICAgICAgICAgIHJldHVybiAhaW5mb1RhYigpO1xuICAgICAgICB9LFxuICAgICAgICBnZXQgY2hpbGRyZW4oKSB7XG4gICAgICAgICAgcmV0dXJuIFtjcmVhdGVDb21wb25lbnQoU2hvdywge1xuICAgICAgICAgICAgZ2V0IHdoZW4oKSB7XG4gICAgICAgICAgICAgIHJldHVybiBhZGRpdGlvbmFsUmVxdWVzdExvYWRpbmcoKSB8fCAhd2FsbGV0c0xpc3QoKTtcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBnZXQgY2hpbGRyZW4oKSB7XG4gICAgICAgICAgICAgIHJldHVybiBbY3JlYXRlQ29tcG9uZW50KEgxU3R5bGVkJDgsIHtcbiAgICAgICAgICAgICAgICB0cmFuc2xhdGlvbktleTogXCJ3YWxsZXRNb2RhbC5sb2FkaW5nXCIsXG4gICAgICAgICAgICAgICAgY2hpbGRyZW46IFwiV2FsbGV0cyBsaXN0IGlzIGxvYWRpbmdcIlxuICAgICAgICAgICAgICB9KSwgY3JlYXRlQ29tcG9uZW50KExvYWRlckNvbnRhaW5lclN0eWxlZCwge1xuICAgICAgICAgICAgICAgIGdldCBjaGlsZHJlbigpIHtcbiAgICAgICAgICAgICAgICAgIHJldHVybiBjcmVhdGVDb21wb25lbnQoTG9hZGVySWNvbiwge1xuICAgICAgICAgICAgICAgICAgICBzaXplOiBcIm1cIlxuICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICB9KV07XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfSksIGNyZWF0ZUNvbXBvbmVudChTaG93LCB7XG4gICAgICAgICAgICBnZXQgd2hlbigpIHtcbiAgICAgICAgICAgICAgcmV0dXJuIGNyZWF0ZU1lbW8oKCkgPT4gISEhYWRkaXRpb25hbFJlcXVlc3RMb2FkaW5nKCkpKCkgJiYgd2FsbGV0c0xpc3QoKTtcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBnZXQgY2hpbGRyZW4oKSB7XG4gICAgICAgICAgICAgIHJldHVybiBjcmVhdGVDb21wb25lbnQoU3dpdGNoLCB7XG4gICAgICAgICAgICAgICAgZ2V0IGNoaWxkcmVuKCkge1xuICAgICAgICAgICAgICAgICAgcmV0dXJuIFtjcmVhdGVDb21wb25lbnQoTWF0Y2gsIHtcbiAgICAgICAgICAgICAgICAgICAgZ2V0IHdoZW4oKSB7XG4gICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHNlbGVjdGVkV2FsbGV0SW5mbygpO1xuICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICBnZXQgY2hpbGRyZW4oKSB7XG4gICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGNyZWF0ZUNvbXBvbmVudChEeW5hbWljLCB7XG4gICAgICAgICAgICAgICAgICAgICAgICBnZXQgY29tcG9uZW50KCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gaXNNb2JpbGUoKSA/IE1vYmlsZUNvbm5lY3Rpb25Nb2RhbCA6IERlc2t0b3BDb25uZWN0aW9uTW9kYWw7XG4gICAgICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgZ2V0IHdhbGxldCgpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHNlbGVjdGVkV2FsbGV0SW5mbygpO1xuICAgICAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgICAgIGdldCBhZGRpdGlvbmFsUmVxdWVzdCgpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGFkZGl0aW9uYWxSZXF1ZXN0KCk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgb25CYWNrQ2xpY2s6IGNsZWFyU2VsZWN0ZWRXYWxsZXRJbmZvXG4gICAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgIH0pLCBjcmVhdGVDb21wb25lbnQoTWF0Y2gsIHtcbiAgICAgICAgICAgICAgICAgICAgZ2V0IHdoZW4oKSB7XG4gICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHNlbGVjdGVkVGFiKCkgPT09IFwidW5pdmVyc2FsXCI7XG4gICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgIGdldCBjaGlsZHJlbigpIHtcbiAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gY3JlYXRlQ29tcG9uZW50KER5bmFtaWMsIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGdldCBjb21wb25lbnQoKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBpc01vYmlsZSgpID8gTW9iaWxlVW5pdmVyc2FsTW9kYWwgOiBEZXNrdG9wVW5pdmVyc2FsTW9kYWw7XG4gICAgICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgb25TZWxlY3Q6IHNldFNlbGVjdGVkV2FsbGV0SW5mbyxcbiAgICAgICAgICAgICAgICAgICAgICAgIGdldCB3YWxsZXRzTGlzdCgpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHdhbGxldHNMaXN0KCk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgZ2V0IGFkZGl0aW9uYWxSZXF1ZXN0KCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gYWRkaXRpb25hbFJlcXVlc3QoKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICBvblNlbGVjdEFsbFdhbGxldHNcbiAgICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgfSksIGNyZWF0ZUNvbXBvbmVudChNYXRjaCwge1xuICAgICAgICAgICAgICAgICAgICBnZXQgd2hlbigpIHtcbiAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gc2VsZWN0ZWRUYWIoKSA9PT0gXCJhbGwtd2FsbGV0c1wiO1xuICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICBnZXQgY2hpbGRyZW4oKSB7XG4gICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGNyZWF0ZUNvbXBvbmVudChBbGxXYWxsZXRzTGlzdE1vZGFsLCB7XG4gICAgICAgICAgICAgICAgICAgICAgICBnZXQgd2FsbGV0c0xpc3QoKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiB3YWxsZXRzTGlzdCgpO1xuICAgICAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgICAgIG9uQmFjazogb25TZWxlY3RVbml2ZXJzYWwsXG4gICAgICAgICAgICAgICAgICAgICAgICBvblNlbGVjdDogc2V0U2VsZWN0ZWRXYWxsZXRJbmZvXG4gICAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgIH0pXTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH0pXTtcbiAgICAgICAgfVxuICAgICAgfSldO1xuICAgIH1cbiAgfSk7XG59O1xuY29uc3QgQWN0aW9uTW9kYWxTdHlsZWQgPSBzdHlsZWQuZGl2YFxuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgIHBhZGRpbmctYm90dG9tOiA4cHg7XG5gO1xuY29uc3QgSDFTdHlsZWQgPSBzdHlsZWQoSDEpYFxuICAgIG1hcmdpbi10b3A6IDE2cHg7XG5gO1xuY29uc3QgVGV4dFN0eWxlZCA9IHN0eWxlZChUZXh0KWBcbiAgICBmb250LXdlaWdodDogNTEwO1xuICAgIGZvbnQtc2l6ZTogMTZweDtcbiAgICBsaW5lLWhlaWdodDogMjBweDtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgbWF4LXdpZHRoOiAyNTBweDtcblxuICAgIGNvbG9yOiAkeyhwcm9wcykgPT4gcHJvcHMudGhlbWUuY29sb3JzLnRleHQuc2Vjb25kYXJ5fTtcbmA7XG5jb25zdCBMb2FkZXJCdXR0b25TdHlsZWQgPSBzdHlsZWQoQnV0dG9uKWBcbiAgICBtaW4td2lkdGg6IDExMnB4O1xuICAgIG1hcmdpbi10b3A6IDMycHg7XG5gO1xuY29uc3QgTG9hZGVySWNvblN0eWxlZCA9IHN0eWxlZChMb2FkZXJJY29uKWBcbiAgICBoZWlnaHQ6IDE2cHg7XG4gICAgd2lkdGg6IDE2cHg7XG5gO1xuY29uc3QgQnV0dG9uU3R5bGVkID0gc3R5bGVkKEJ1dHRvbilgXG4gICAgbWFyZ2luLXRvcDogMzJweDtcbmA7XG5jb25zdCBBY3Rpb25Nb2RhbCA9IChwcm9wcykgPT4ge1xuICBjb25zdCBkYXRhQXR0cnMgPSB1c2VEYXRhQXR0cmlidXRlcyhwcm9wcyk7XG4gIGNvbnN0IHRvbkNvbm5lY3RVSSA9IHVzZUNvbnRleHQoVG9uQ29ubmVjdFVpQ29udGV4dCk7XG4gIGNvbnN0IFtmaXJzdENsaWNrLCBzZXRGaXJzdENsaWNrXSA9IGNyZWF0ZVNpZ25hbCh0cnVlKTtcbiAgY29uc3QgW3NlbnQsIHNldFNlbnRdID0gY3JlYXRlU2lnbmFsKGZhbHNlKTtcbiAgY3JlYXRlRWZmZWN0KCgpID0+IHtcbiAgICBjb25zdCBjdXJyZW50QWN0aW9uID0gYWN0aW9uKCk7XG4gICAgc2V0U2VudCghIWN1cnJlbnRBY3Rpb24gJiYgXCJzZW50XCIgaW4gY3VycmVudEFjdGlvbiAmJiBjdXJyZW50QWN0aW9uLnNlbnQpO1xuICB9KTtcbiAgbGV0IHVuaXZlcnNhbExpbms7XG4gIGlmICgodG9uQ29ubmVjdFVJID09IG51bGwgPyB2b2lkIDAgOiB0b25Db25uZWN0VUkud2FsbGV0KSAmJiBcInVuaXZlcnNhbExpbmtcIiBpbiB0b25Db25uZWN0VUkud2FsbGV0ICYmICh0b25Db25uZWN0VUkud2FsbGV0Lm9wZW5NZXRob2QgPT09IFwidW5pdmVyc2FsLWxpbmtcIiB8fCBpc1RlbGVncmFtVXJsKHRvbkNvbm5lY3RVSS53YWxsZXQudW5pdmVyc2FsTGluaykgJiYgaXNJblRNQSgpKSkge1xuICAgIHVuaXZlcnNhbExpbmsgPSB0b25Db25uZWN0VUkud2FsbGV0LnVuaXZlcnNhbExpbms7XG4gIH1cbiAgbGV0IGRlZXBMaW5rO1xuICBpZiAoKHRvbkNvbm5lY3RVSSA9PSBudWxsID8gdm9pZCAwIDogdG9uQ29ubmVjdFVJLndhbGxldCkgJiYgXCJkZWVwTGlua1wiIGluIHRvbkNvbm5lY3RVSS53YWxsZXQgJiYgKHRvbkNvbm5lY3RVSS53YWxsZXQub3Blbk1ldGhvZCA9PT0gXCJjdXN0b20tZGVlcGxpbmtcIiB8fCBpc1RlbGVncmFtVXJsKHRvbkNvbm5lY3RVSS53YWxsZXQuZGVlcExpbmspICYmIGlzSW5UTUEoKSkpIHtcbiAgICBkZWVwTGluayA9IHRvbkNvbm5lY3RVSS53YWxsZXQuZGVlcExpbms7XG4gIH1cbiAgY29uc3Qgb25PcGVuV2FsbGV0ID0gKCkgPT4ge1xuICAgIGNvbnN0IGN1cnJlbnRBY3Rpb24gPSBhY3Rpb24oKTtcbiAgICBjb25zdCByZXR1cm5TdHJhdGVneSA9IFwicmV0dXJuU3RyYXRlZ3lcIiBpbiBjdXJyZW50QWN0aW9uID8gY3VycmVudEFjdGlvbi5yZXR1cm5TdHJhdGVneSA6IGFwcFN0YXRlLnJldHVyblN0cmF0ZWd5O1xuICAgIGNvbnN0IGZvcmNlUmVkaXJlY3QgPSAhZmlyc3RDbGljaygpO1xuICAgIHNldEZpcnN0Q2xpY2soZmFsc2UpO1xuICAgIGlmIChpc1RlbGVncmFtVXJsKHVuaXZlcnNhbExpbmspKSB7XG4gICAgICByZWRpcmVjdFRvVGVsZWdyYW0odW5pdmVyc2FsTGluaywge1xuICAgICAgICByZXR1cm5TdHJhdGVneSxcbiAgICAgICAgdHdhUmV0dXJuVXJsOiBcInR3YVJldHVyblVybFwiIGluIGN1cnJlbnRBY3Rpb24gPyBjdXJyZW50QWN0aW9uLnR3YVJldHVyblVybCA6IGFwcFN0YXRlLnR3YVJldHVyblVybCxcbiAgICAgICAgZm9yY2VSZWRpcmVjdFxuICAgICAgfSk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHJlZGlyZWN0VG9XYWxsZXQodW5pdmVyc2FsTGluaywgZGVlcExpbmssIHtcbiAgICAgICAgcmV0dXJuU3RyYXRlZ3ksXG4gICAgICAgIGZvcmNlUmVkaXJlY3RcbiAgICAgIH0sICgpID0+IHtcbiAgICAgIH0pO1xuICAgIH1cbiAgfTtcbiAgcmV0dXJuIGNyZWF0ZUNvbXBvbmVudChBY3Rpb25Nb2RhbFN0eWxlZCwgbWVyZ2VQcm9wcyhkYXRhQXR0cnMsIHtcbiAgICBnZXQgY2hpbGRyZW4oKSB7XG4gICAgICByZXR1cm4gW2NyZWF0ZU1lbW8oKCkgPT4gcHJvcHMuaWNvbiksIGNyZWF0ZUNvbXBvbmVudChIMVN0eWxlZCwge1xuICAgICAgICBnZXQgdHJhbnNsYXRpb25LZXkoKSB7XG4gICAgICAgICAgcmV0dXJuIHByb3BzLmhlYWRlclRyYW5zbGF0aW9uS2V5O1xuICAgICAgICB9LFxuICAgICAgICBnZXQgdHJhbnNsYXRpb25WYWx1ZXMoKSB7XG4gICAgICAgICAgcmV0dXJuIHByb3BzLmhlYWRlclRyYW5zbGF0aW9uVmFsdWVzO1xuICAgICAgICB9XG4gICAgICB9KSwgY3JlYXRlQ29tcG9uZW50KFRleHRTdHlsZWQsIHtcbiAgICAgICAgZ2V0IHRyYW5zbGF0aW9uS2V5KCkge1xuICAgICAgICAgIHJldHVybiBwcm9wcy50ZXh0VHJhbnNsYXRpb25LZXk7XG4gICAgICAgIH0sXG4gICAgICAgIGdldCB0cmFuc2xhdGlvblZhbHVlcygpIHtcbiAgICAgICAgICByZXR1cm4gcHJvcHMudGV4dFRyYW5zbGF0aW9uVmFsdWVzO1xuICAgICAgICB9XG4gICAgICB9KSwgY3JlYXRlQ29tcG9uZW50KFNob3csIHtcbiAgICAgICAgZ2V0IHdoZW4oKSB7XG4gICAgICAgICAgcmV0dXJuICFzZW50KCkgJiYgKHByb3BzLnNob3dCdXR0b24gPT09IFwib3Blbi13YWxsZXRcIiAmJiB1bml2ZXJzYWxMaW5rIHx8IHByb3BzLnNob3dCdXR0b24gIT09IFwib3Blbi13YWxsZXRcIik7XG4gICAgICAgIH0sXG4gICAgICAgIGdldCBjaGlsZHJlbigpIHtcbiAgICAgICAgICByZXR1cm4gY3JlYXRlQ29tcG9uZW50KExvYWRlckJ1dHRvblN0eWxlZCwge1xuICAgICAgICAgICAgZGlzYWJsZWQ6IHRydWUsXG4gICAgICAgICAgICBcImRhdGEtdGMtY29ubmVjdC1idXR0b24tbG9hZGluZ1wiOiBcInRydWVcIixcbiAgICAgICAgICAgIGdldCBjaGlsZHJlbigpIHtcbiAgICAgICAgICAgICAgcmV0dXJuIGNyZWF0ZUNvbXBvbmVudChMb2FkZXJJY29uU3R5bGVkLCB7fSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICAgIH0pLCBjcmVhdGVDb21wb25lbnQoU2hvdywge1xuICAgICAgICBnZXQgd2hlbigpIHtcbiAgICAgICAgICByZXR1cm4gc2VudCgpO1xuICAgICAgICB9LFxuICAgICAgICBnZXQgY2hpbGRyZW4oKSB7XG4gICAgICAgICAgcmV0dXJuIFtjcmVhdGVDb21wb25lbnQoU2hvdywge1xuICAgICAgICAgICAgZ2V0IHdoZW4oKSB7XG4gICAgICAgICAgICAgIHJldHVybiBwcm9wcy5zaG93QnV0dG9uICE9PSBcIm9wZW4td2FsbGV0XCI7XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgZ2V0IGNoaWxkcmVuKCkge1xuICAgICAgICAgICAgICByZXR1cm4gY3JlYXRlQ29tcG9uZW50KEJ1dHRvblN0eWxlZCwge1xuICAgICAgICAgICAgICAgIG9uQ2xpY2s6ICgpID0+IHByb3BzLm9uQ2xvc2UoKSxcbiAgICAgICAgICAgICAgICBnZXQgY2hpbGRyZW4oKSB7XG4gICAgICAgICAgICAgICAgICByZXR1cm4gY3JlYXRlQ29tcG9uZW50KFRyYW5zbGF0aW9uLCB7XG4gICAgICAgICAgICAgICAgICAgIHRyYW5zbGF0aW9uS2V5OiBcImNvbW1vbi5jbG9zZVwiLFxuICAgICAgICAgICAgICAgICAgICBjaGlsZHJlbjogXCJDbG9zZVwiXG4gICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH0pLCBjcmVhdGVDb21wb25lbnQoU2hvdywge1xuICAgICAgICAgICAgZ2V0IHdoZW4oKSB7XG4gICAgICAgICAgICAgIHJldHVybiBwcm9wcy5zaG93QnV0dG9uID09PSBcIm9wZW4td2FsbGV0XCIgJiYgdW5pdmVyc2FsTGluaztcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBnZXQgY2hpbGRyZW4oKSB7XG4gICAgICAgICAgICAgIHJldHVybiBjcmVhdGVDb21wb25lbnQoQnV0dG9uU3R5bGVkLCB7XG4gICAgICAgICAgICAgICAgb25DbGljazogb25PcGVuV2FsbGV0LFxuICAgICAgICAgICAgICAgIGdldCBjaGlsZHJlbigpIHtcbiAgICAgICAgICAgICAgICAgIHJldHVybiBjcmVhdGVDb21wb25lbnQoVHJhbnNsYXRpb24sIHtcbiAgICAgICAgICAgICAgICAgICAgdHJhbnNsYXRpb25LZXk6IFwiY29tbW9uLm9wZW5XYWxsZXRcIixcbiAgICAgICAgICAgICAgICAgICAgY2hpbGRyZW46IFwiT3BlbiB3YWxsZXRcIlxuICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9KV07XG4gICAgICAgIH1cbiAgICAgIH0pXTtcbiAgICB9XG4gIH0pKTtcbn07XG5jb25zdCBDb25maXJtVHJhbnNhY3Rpb25Nb2RhbCA9IChwcm9wcykgPT4ge1xuICBjb25zdCB0b25Db25uZWN0VUkgPSB1c2VDb250ZXh0KFRvbkNvbm5lY3RVaUNvbnRleHQpO1xuICBjb25zdCBbdDJdID0gdXNlSTE4bigpO1xuICBjb25zdCBuYW1lID0gKCkgPT4gdG9uQ29ubmVjdFVJLndhbGxldCAmJiBcIm5hbWVcIiBpbiB0b25Db25uZWN0VUkud2FsbGV0ID8gdG9uQ29ubmVjdFVJLndhbGxldC5uYW1lIDogdDIoXCJjb21tb24ueW91cldhbGxldFwiLCB7fSwgXCJZb3VyIHdhbGxldFwiKTtcbiAgcmV0dXJuIGNyZWF0ZUNvbXBvbmVudChBY3Rpb25Nb2RhbCwge1xuICAgIGhlYWRlclRyYW5zbGF0aW9uS2V5OiBcImFjdGlvbk1vZGFsLmNvbmZpcm1UcmFuc2FjdGlvbi5oZWFkZXJcIixcbiAgICBnZXQgaGVhZGVyVHJhbnNsYXRpb25WYWx1ZXMoKSB7XG4gICAgICByZXR1cm4ge1xuICAgICAgICBuYW1lOiBuYW1lKClcbiAgICAgIH07XG4gICAgfSxcbiAgICB0ZXh0VHJhbnNsYXRpb25LZXk6IFwiYWN0aW9uTW9kYWwuY29uZmlybVRyYW5zYWN0aW9uLnRleHRcIixcbiAgICBnZXQgaWNvbigpIHtcbiAgICAgIHJldHVybiBjcmVhdGVDb21wb25lbnQoTG9hZGVySWNvbiwge1xuICAgICAgICBzaXplOiBcIm1cIlxuICAgICAgfSk7XG4gICAgfSxcbiAgICBvbkNsb3NlOiAoKSA9PiBwcm9wcy5vbkNsb3NlKCksXG4gICAgc2hvd0J1dHRvbjogXCJvcGVuLXdhbGxldFwiLFxuICAgIFwiZGF0YS10Yy1jb25maXJtLW1vZGFsXCI6IFwidHJ1ZVwiXG4gIH0pO1xufTtcbmNvbnN0IFRyYW5zYWN0aW9uQ2FuY2VsZWRNb2RhbCA9IChwcm9wcykgPT4ge1xuICByZXR1cm4gY3JlYXRlQ29tcG9uZW50KEFjdGlvbk1vZGFsLCB7XG4gICAgaGVhZGVyVHJhbnNsYXRpb25LZXk6IFwiYWN0aW9uTW9kYWwudHJhbnNhY3Rpb25DYW5jZWxlZC5oZWFkZXJcIixcbiAgICB0ZXh0VHJhbnNsYXRpb25LZXk6IFwiYWN0aW9uTW9kYWwudHJhbnNhY3Rpb25DYW5jZWxlZC50ZXh0XCIsXG4gICAgZ2V0IGljb24oKSB7XG4gICAgICByZXR1cm4gY3JlYXRlQ29tcG9uZW50KEVycm9ySWNvbiwge1xuICAgICAgICBzaXplOiBcIm1cIlxuICAgICAgfSk7XG4gICAgfSxcbiAgICBvbkNsb3NlOiAoKSA9PiBwcm9wcy5vbkNsb3NlKCksXG4gICAgXCJkYXRhLXRjLXRyYW5zYWN0aW9uLWNhbmNlbGVkLW1vZGFsXCI6IFwidHJ1ZVwiXG4gIH0pO1xufTtcbmNvbnN0IFRyYW5zYWN0aW9uU2VudE1vZGFsID0gKHByb3BzKSA9PiB7XG4gIHJldHVybiBjcmVhdGVDb21wb25lbnQoQWN0aW9uTW9kYWwsIHtcbiAgICBoZWFkZXJUcmFuc2xhdGlvbktleTogXCJhY3Rpb25Nb2RhbC50cmFuc2FjdGlvblNlbnQuaGVhZGVyXCIsXG4gICAgdGV4dFRyYW5zbGF0aW9uS2V5OiBcImFjdGlvbk1vZGFsLnRyYW5zYWN0aW9uU2VudC50ZXh0XCIsXG4gICAgZ2V0IGljb24oKSB7XG4gICAgICByZXR1cm4gY3JlYXRlQ29tcG9uZW50KFN1Y2Nlc3NJY29uLCB7XG4gICAgICAgIHNpemU6IFwibVwiXG4gICAgICB9KTtcbiAgICB9LFxuICAgIG9uQ2xvc2U6ICgpID0+IHByb3BzLm9uQ2xvc2UoKSxcbiAgICBcImRhdGEtdGMtdHJhbnNhY3Rpb24tc2VudC1tb2RhbFwiOiBcInRydWVcIlxuICB9KTtcbn07XG5jb25zdCBBY3Rpb25zTW9kYWwgPSAoKSA9PiB7XG4gIHJldHVybiBjcmVhdGVDb21wb25lbnQoTW9kYWwsIHtcbiAgICBnZXQgb3BlbmVkKCkge1xuICAgICAgdmFyIF9hMjtcbiAgICAgIHJldHVybiBjcmVhdGVNZW1vKCgpID0+IGFjdGlvbigpICE9PSBudWxsKSgpICYmICgoX2EyID0gYWN0aW9uKCkpID09IG51bGwgPyB2b2lkIDAgOiBfYTIub3Blbk1vZGFsKSA9PT0gdHJ1ZTtcbiAgICB9LFxuICAgIGdldCBlbmFibGVBbmRyb2lkQmFja0hhbmRsZXIoKSB7XG4gICAgICByZXR1cm4gYXBwU3RhdGUuZW5hYmxlQW5kcm9pZEJhY2tIYW5kbGVyO1xuICAgIH0sXG4gICAgb25DbG9zZTogKCkgPT4gc2V0QWN0aW9uKG51bGwpLFxuICAgIFwiZGF0YS10Yy1hY3Rpb25zLW1vZGFsLWNvbnRhaW5lclwiOiBcInRydWVcIixcbiAgICBnZXQgY2hpbGRyZW4oKSB7XG4gICAgICByZXR1cm4gY3JlYXRlQ29tcG9uZW50KFN3aXRjaCwge1xuICAgICAgICBnZXQgY2hpbGRyZW4oKSB7XG4gICAgICAgICAgcmV0dXJuIFtjcmVhdGVDb21wb25lbnQoTWF0Y2gsIHtcbiAgICAgICAgICAgIGdldCB3aGVuKCkge1xuICAgICAgICAgICAgICByZXR1cm4gYWN0aW9uKCkubmFtZSA9PT0gXCJ0cmFuc2FjdGlvbi1zZW50XCI7XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgZ2V0IGNoaWxkcmVuKCkge1xuICAgICAgICAgICAgICByZXR1cm4gY3JlYXRlQ29tcG9uZW50KFRyYW5zYWN0aW9uU2VudE1vZGFsLCB7XG4gICAgICAgICAgICAgICAgb25DbG9zZTogKCkgPT4gc2V0QWN0aW9uKG51bGwpXG4gICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH0pLCBjcmVhdGVDb21wb25lbnQoTWF0Y2gsIHtcbiAgICAgICAgICAgIGdldCB3aGVuKCkge1xuICAgICAgICAgICAgICByZXR1cm4gYWN0aW9uKCkubmFtZSA9PT0gXCJ0cmFuc2FjdGlvbi1jYW5jZWxlZFwiO1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIGdldCBjaGlsZHJlbigpIHtcbiAgICAgICAgICAgICAgcmV0dXJuIGNyZWF0ZUNvbXBvbmVudChUcmFuc2FjdGlvbkNhbmNlbGVkTW9kYWwsIHtcbiAgICAgICAgICAgICAgICBvbkNsb3NlOiAoKSA9PiBzZXRBY3Rpb24obnVsbClcbiAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfSksIGNyZWF0ZUNvbXBvbmVudChNYXRjaCwge1xuICAgICAgICAgICAgZ2V0IHdoZW4oKSB7XG4gICAgICAgICAgICAgIHJldHVybiBhY3Rpb24oKS5uYW1lID09PSBcImNvbmZpcm0tdHJhbnNhY3Rpb25cIjtcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBnZXQgY2hpbGRyZW4oKSB7XG4gICAgICAgICAgICAgIHJldHVybiBjcmVhdGVDb21wb25lbnQoQ29uZmlybVRyYW5zYWN0aW9uTW9kYWwsIHtcbiAgICAgICAgICAgICAgICBvbkNsb3NlOiAoKSA9PiBzZXRBY3Rpb24obnVsbClcbiAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfSldO1xuICAgICAgICB9XG4gICAgICB9KTtcbiAgICB9XG4gIH0pO1xufTtcbmNvbnN0IFNpbmdsZVdhbGxldE1vZGFsID0gKCkgPT4ge1xuICBjb25zdCB7XG4gICAgbG9jYWxlXG4gIH0gPSB1c2VJMThuKClbMV07XG4gIGNyZWF0ZUVmZmVjdCgoKSA9PiBsb2NhbGUoYXBwU3RhdGUubGFuZ3VhZ2UpKTtcbiAgY3JlYXRlRWZmZWN0KCgpID0+IHtcbiAgICBpZiAoZ2V0U2luZ2xlV2FsbGV0TW9kYWxJc09wZW5lZCgpKSB7XG4gICAgICB1cGRhdGVJc01vYmlsZSgpO1xuICAgIH1cbiAgfSk7XG4gIGNvbnN0IGNvbm5lY3RvciA9IHVzZUNvbnRleHQoQ29ubmVjdG9yQ29udGV4dCk7XG4gIGNvbnN0IHRvbkNvbm5lY3RVSSA9IHVzZUNvbnRleHQoVG9uQ29ubmVjdFVpQ29udGV4dCk7XG4gIGNvbnN0IFtpbmZvVGFiLCBzZXRJbmZvVGFiXSA9IGNyZWF0ZVNpZ25hbChmYWxzZSk7XG4gIGNvbnN0IGFkZGl0aW9uYWxSZXF1ZXN0TG9hZGluZyA9ICgpID0+IHtcbiAgICB2YXIgX2EyO1xuICAgIHJldHVybiAoKF9hMiA9IGFwcFN0YXRlLmNvbm5lY3RSZXF1ZXN0UGFyYW1ldGVycykgPT0gbnVsbCA/IHZvaWQgMCA6IF9hMi5zdGF0ZSkgPT09IFwibG9hZGluZ1wiO1xuICB9O1xuICBjb25zdCBhZGRpdGlvbmFsUmVxdWVzdCA9IGNyZWF0ZU1lbW8oKCkgPT4ge1xuICAgIHZhciBfYTI7XG4gICAgaWYgKGFkZGl0aW9uYWxSZXF1ZXN0TG9hZGluZygpKSB7XG4gICAgICByZXR1cm4gdm9pZCAwO1xuICAgIH1cbiAgICByZXR1cm4gKF9hMiA9IGFwcFN0YXRlLmNvbm5lY3RSZXF1ZXN0UGFyYW1ldGVycykgPT0gbnVsbCA/IHZvaWQgMCA6IF9hMi52YWx1ZTtcbiAgfSk7XG4gIGNvbnN0IG9uQ2xvc2UgPSAoY2xvc2VSZWFzb24pID0+IHtcbiAgICB0b25Db25uZWN0VUkuY2xvc2VTaW5nbGVXYWxsZXRNb2RhbChjbG9zZVJlYXNvbik7XG4gIH07XG4gIGNvbnN0IHVuc3Vic2NyaWJlID0gY29ubmVjdG9yLm9uU3RhdHVzQ2hhbmdlKCh3YWxsZXQpID0+IHtcbiAgICBpZiAod2FsbGV0KSB7XG4gICAgICBvbkNsb3NlKFwid2FsbGV0LXNlbGVjdGVkXCIpO1xuICAgIH1cbiAgfSk7XG4gIG9uQ2xlYW51cCh1bnN1YnNjcmliZSk7XG4gIG9uQ2xlYW51cCgoKSA9PiB7XG4gICAgc2V0SW5mb1RhYihmYWxzZSk7XG4gIH0pO1xuICByZXR1cm4gY3JlYXRlQ29tcG9uZW50KFN0eWxlZE1vZGFsLCB7XG4gICAgZ2V0IG9wZW5lZCgpIHtcbiAgICAgIHJldHVybiBnZXRTaW5nbGVXYWxsZXRNb2RhbElzT3BlbmVkKCk7XG4gICAgfSxcbiAgICBnZXQgZW5hYmxlQW5kcm9pZEJhY2tIYW5kbGVyKCkge1xuICAgICAgcmV0dXJuIGFwcFN0YXRlLmVuYWJsZUFuZHJvaWRCYWNrSGFuZGxlcjtcbiAgICB9LFxuICAgIG9uQ2xvc2U6ICgpID0+IG9uQ2xvc2UoXCJhY3Rpb24tY2FuY2VsbGVkXCIpLFxuICAgIG9uQ2xpY2tRdWVzdGlvbjogKCkgPT4gc2V0SW5mb1RhYigodikgPT4gIXYpLFxuICAgIFwiZGF0YS10Yy13YWxsZXRzLW1vZGFsLWNvbnRhaW5lclwiOiBcInRydWVcIixcbiAgICBnZXQgY2hpbGRyZW4oKSB7XG4gICAgICByZXR1cm4gW2NyZWF0ZUNvbXBvbmVudChTaG93LCB7XG4gICAgICAgIGdldCB3aGVuKCkge1xuICAgICAgICAgIHJldHVybiBpbmZvVGFiKCk7XG4gICAgICAgIH0sXG4gICAgICAgIGdldCBjaGlsZHJlbigpIHtcbiAgICAgICAgICByZXR1cm4gY3JlYXRlQ29tcG9uZW50KEluZm9Nb2RhbCwge1xuICAgICAgICAgICAgb25CYWNrQ2xpY2s6ICgpID0+IHNldEluZm9UYWIoZmFsc2UpXG4gICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICAgIH0pLCBjcmVhdGVDb21wb25lbnQoU2hvdywge1xuICAgICAgICBnZXQgd2hlbigpIHtcbiAgICAgICAgICByZXR1cm4gIWluZm9UYWIoKTtcbiAgICAgICAgfSxcbiAgICAgICAgZ2V0IGNoaWxkcmVuKCkge1xuICAgICAgICAgIHJldHVybiBbY3JlYXRlQ29tcG9uZW50KFNob3csIHtcbiAgICAgICAgICAgIGdldCB3aGVuKCkge1xuICAgICAgICAgICAgICByZXR1cm4gYWRkaXRpb25hbFJlcXVlc3RMb2FkaW5nKCk7XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgZ2V0IGNoaWxkcmVuKCkge1xuICAgICAgICAgICAgICByZXR1cm4gW2NyZWF0ZUNvbXBvbmVudChIMVN0eWxlZCQ4LCB7XG4gICAgICAgICAgICAgICAgdHJhbnNsYXRpb25LZXk6IFwid2FsbGV0TW9kYWwubG9hZGluZ1wiLFxuICAgICAgICAgICAgICAgIGNoaWxkcmVuOiBcIldhbGxldHMgbGlzdCBpcyBsb2FkaW5nXCJcbiAgICAgICAgICAgICAgfSksIGNyZWF0ZUNvbXBvbmVudChMb2FkZXJDb250YWluZXJTdHlsZWQsIHtcbiAgICAgICAgICAgICAgICBnZXQgY2hpbGRyZW4oKSB7XG4gICAgICAgICAgICAgICAgICByZXR1cm4gY3JlYXRlQ29tcG9uZW50KExvYWRlckljb24sIHtcbiAgICAgICAgICAgICAgICAgICAgc2l6ZTogXCJtXCJcbiAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgfSldO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH0pLCBjcmVhdGVDb21wb25lbnQoU2hvdywge1xuICAgICAgICAgICAgZ2V0IHdoZW4oKSB7XG4gICAgICAgICAgICAgIHJldHVybiAhYWRkaXRpb25hbFJlcXVlc3RMb2FkaW5nKCk7XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgZ2V0IGNoaWxkcmVuKCkge1xuICAgICAgICAgICAgICByZXR1cm4gY3JlYXRlQ29tcG9uZW50KER5bmFtaWMsIHtcbiAgICAgICAgICAgICAgICBnZXQgY29tcG9uZW50KCkge1xuICAgICAgICAgICAgICAgICAgcmV0dXJuIGlzTW9iaWxlKCkgPyBNb2JpbGVDb25uZWN0aW9uTW9kYWwgOiBEZXNrdG9wQ29ubmVjdGlvbk1vZGFsO1xuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgZ2V0IHdhbGxldCgpIHtcbiAgICAgICAgICAgICAgICAgIHJldHVybiBnZXRTaW5nbGVXYWxsZXRNb2RhbFdhbGxldEluZm8oKTtcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIGdldCBhZGRpdGlvbmFsUmVxdWVzdCgpIHtcbiAgICAgICAgICAgICAgICAgIHJldHVybiBhZGRpdGlvbmFsUmVxdWVzdCgpO1xuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgb25CYWNrQ2xpY2s6ICgpID0+IHtcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIGJhY2tEaXNhYmxlZDogdHJ1ZVxuICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9KV07XG4gICAgICAgIH1cbiAgICAgIH0pXTtcbiAgICB9XG4gIH0pO1xufTtcbmNvbnN0IEFwcCA9IChwcm9wcykgPT4ge1xuICBjb25zdCB0cmFuc2xhdGlvbnMgPSBjcmVhdGVJMThuQ29udGV4dChpMThuRGljdGlvbmFyeSwgYXBwU3RhdGUubGFuZ3VhZ2UpO1xuICBkZWZpbmVTdHlsZXNSb290KCk7XG4gIGZpeE1vYmlsZVNhZmFyaUFjdGl2ZVRyYW5zaXRpb24oKTtcbiAgcmV0dXJuIGNyZWF0ZUNvbXBvbmVudChJMThuQ29udGV4dC5Qcm92aWRlciwge1xuICAgIHZhbHVlOiB0cmFuc2xhdGlvbnMsXG4gICAgZ2V0IGNoaWxkcmVuKCkge1xuICAgICAgcmV0dXJuIGNyZWF0ZUNvbXBvbmVudChUb25Db25uZWN0VWlDb250ZXh0LlByb3ZpZGVyLCB7XG4gICAgICAgIGdldCB2YWx1ZSgpIHtcbiAgICAgICAgICByZXR1cm4gcHJvcHMudG9uQ29ubmVjdFVJO1xuICAgICAgICB9LFxuICAgICAgICBnZXQgY2hpbGRyZW4oKSB7XG4gICAgICAgICAgcmV0dXJuIGNyZWF0ZUNvbXBvbmVudChDb25uZWN0b3JDb250ZXh0LlByb3ZpZGVyLCB7XG4gICAgICAgICAgICBnZXQgdmFsdWUoKSB7XG4gICAgICAgICAgICAgIHJldHVybiBhcHBTdGF0ZS5jb25uZWN0b3I7XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgZ2V0IGNoaWxkcmVuKCkge1xuICAgICAgICAgICAgICByZXR1cm4gW2NyZWF0ZUNvbXBvbmVudChHbG9iYWxTdHlsZXMsIHt9KSwgY3JlYXRlQ29tcG9uZW50KFRoZW1lUHJvdmlkZXIsIHtcbiAgICAgICAgICAgICAgICB0aGVtZTogdGhlbWVTdGF0ZSxcbiAgICAgICAgICAgICAgICBnZXQgY2hpbGRyZW4oKSB7XG4gICAgICAgICAgICAgICAgICByZXR1cm4gW2NyZWF0ZUNvbXBvbmVudChTaG93LCB7XG4gICAgICAgICAgICAgICAgICAgIGdldCB3aGVuKCkge1xuICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBhcHBTdGF0ZS5idXR0b25Sb290SWQ7XG4gICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgIGdldCBjaGlsZHJlbigpIHtcbiAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gY3JlYXRlQ29tcG9uZW50KFBvcnRhbCwge1xuICAgICAgICAgICAgICAgICAgICAgICAgZ2V0IG1vdW50KCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoYXBwU3RhdGUuYnV0dG9uUm9vdElkKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICBnZXQgY2hpbGRyZW4oKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBjcmVhdGVDb21wb25lbnQoQWNjb3VudEJ1dHRvbiwge30pO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICB9KSwgY3JlYXRlQ29tcG9uZW50KER5bmFtaWMsIHtcbiAgICAgICAgICAgICAgICAgICAgY29tcG9uZW50OiBnbG9iYWxTdHlsZXNUYWcsXG4gICAgICAgICAgICAgICAgICAgIGdldCBjaGlsZHJlbigpIHtcbiAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gW2NyZWF0ZUNvbXBvbmVudChXYWxsZXRzTW9kYWwsIHt9KSwgY3JlYXRlQ29tcG9uZW50KFNpbmdsZVdhbGxldE1vZGFsLCB7fSksIGNyZWF0ZUNvbXBvbmVudChBY3Rpb25zTW9kYWwsIHt9KV07XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgIH0pXTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgIH0pXTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgICAgfSk7XG4gICAgfVxuICB9KTtcbn07XG5jb25zdCB3aWRnZXRDb250cm9sbGVyID0ge1xuICBvcGVuV2FsbGV0c01vZGFsOiAoKSA9PiB2b2lkIHNldFRpbWVvdXQoKCkgPT4gc2V0V2FsbGV0c01vZGFsU3RhdGUoe1xuICAgIHN0YXR1czogXCJvcGVuZWRcIixcbiAgICBjbG9zZVJlYXNvbjogbnVsbFxuICB9KSksXG4gIGNsb3NlV2FsbGV0c01vZGFsOiAocmVhc29uKSA9PiB2b2lkIHNldFRpbWVvdXQoKCkgPT4gc2V0V2FsbGV0c01vZGFsU3RhdGUoe1xuICAgIHN0YXR1czogXCJjbG9zZWRcIixcbiAgICBjbG9zZVJlYXNvbjogcmVhc29uXG4gIH0pKSxcbiAgb3BlblNpbmdsZVdhbGxldE1vZGFsOiAod2FsbGV0SW5mbykgPT4ge1xuICAgIHZvaWQgc2V0VGltZW91dCgoKSA9PiBzZXRTaW5nbGVXYWxsZXRNb2RhbFN0YXRlKHtcbiAgICAgIHN0YXR1czogXCJvcGVuZWRcIixcbiAgICAgIGNsb3NlUmVhc29uOiBudWxsLFxuICAgICAgd2FsbGV0SW5mb1xuICAgIH0pKTtcbiAgfSxcbiAgY2xvc2VTaW5nbGVXYWxsZXRNb2RhbDogKHJlYXNvbikgPT4gdm9pZCBzZXRUaW1lb3V0KCgpID0+IHNldFNpbmdsZVdhbGxldE1vZGFsU3RhdGUoe1xuICAgIHN0YXR1czogXCJjbG9zZWRcIixcbiAgICBjbG9zZVJlYXNvbjogcmVhc29uXG4gIH0pKSxcbiAgc2V0QWN0aW9uOiAoYWN0aW9uMikgPT4gdm9pZCBzZXRUaW1lb3V0KCgpID0+IHNldEFjdGlvbihhY3Rpb24yKSksXG4gIGNsZWFyQWN0aW9uOiAoKSA9PiB2b2lkIHNldFRpbWVvdXQoKCkgPT4gc2V0QWN0aW9uKG51bGwpKSxcbiAgZ2V0U2VsZWN0ZWRXYWxsZXRJbmZvOiAoKSA9PiBsYXN0U2VsZWN0ZWRXYWxsZXRJbmZvKCksXG4gIHJlbW92ZVNlbGVjdGVkV2FsbGV0SW5mbzogKCkgPT4gc2V0TGFzdFNlbGVjdGVkV2FsbGV0SW5mbyhudWxsKSxcbiAgcmVuZGVyQXBwOiAocm9vdCwgdG9uQ29ubmVjdFVJKSA9PiByZW5kZXIoKCkgPT4gY3JlYXRlQ29tcG9uZW50KEFwcCwge1xuICAgIHRvbkNvbm5lY3RVSVxuICB9KSwgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQocm9vdCkpXG59O1xuY2xhc3MgV2FsbGV0c01vZGFsTWFuYWdlciB7XG4gIGNvbnN0cnVjdG9yKG9wdGlvbnMpIHtcbiAgICBfX3B1YmxpY0ZpZWxkKHRoaXMsIFwiY29ubmVjdG9yXCIpO1xuICAgIF9fcHVibGljRmllbGQodGhpcywgXCJzZXRDb25uZWN0UmVxdWVzdFBhcmFtZXRlcnNDYWxsYmFja1wiKTtcbiAgICBfX3B1YmxpY0ZpZWxkKHRoaXMsIFwiY29uc3VtZXJzXCIsIFtdKTtcbiAgICBfX3B1YmxpY0ZpZWxkKHRoaXMsIFwidHJhY2tlclwiKTtcbiAgICBfX3B1YmxpY0ZpZWxkKHRoaXMsIFwic3RhdGVcIiwgd2FsbGV0c01vZGFsU3RhdGUoKSk7XG4gICAgdGhpcy5jb25uZWN0b3IgPSBvcHRpb25zLmNvbm5lY3RvcjtcbiAgICB0aGlzLnRyYWNrZXIgPSBvcHRpb25zLnRyYWNrZXI7XG4gICAgdGhpcy5zZXRDb25uZWN0UmVxdWVzdFBhcmFtZXRlcnNDYWxsYmFjayA9IG9wdGlvbnMuc2V0Q29ubmVjdFJlcXVlc3RQYXJhbWV0ZXJzQ2FsbGJhY2s7XG4gICAgY3JlYXRlRWZmZWN0KCgpID0+IHtcbiAgICAgIGNvbnN0IHN0YXRlID0gd2FsbGV0c01vZGFsU3RhdGUoKTtcbiAgICAgIHRoaXMuc3RhdGUgPSBzdGF0ZTtcbiAgICAgIHRoaXMuY29uc3VtZXJzLmZvckVhY2goKGNvbnN1bWVyKSA9PiBjb25zdW1lcihzdGF0ZSkpO1xuICAgIH0pO1xuICB9XG4gIG9wZW4oKSB7XG4gICAgcmV0dXJuIF9fYXN5bmModGhpcywgbnVsbCwgZnVuY3Rpb24qICgpIHtcbiAgICAgIHRoaXMudHJhY2tlci50cmFja0Nvbm5lY3Rpb25TdGFydGVkKCk7XG4gICAgICBjb25zdCB3YWxsZXRzTGlzdCA9IHlpZWxkIHRoaXMuY29ubmVjdG9yLmdldFdhbGxldHMoKTtcbiAgICAgIGNvbnN0IGVtYmVkZGVkV2FsbGV0ID0gd2FsbGV0c0xpc3QuZmluZChpc1dhbGxldEluZm9DdXJyZW50bHlFbWJlZGRlZCk7XG4gICAgICBpZiAoZW1iZWRkZWRXYWxsZXQpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuY29ubmVjdEVtYmVkZGVkV2FsbGV0KGVtYmVkZGVkV2FsbGV0KTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHJldHVybiB0aGlzLm9wZW5XYWxsZXRzTW9kYWwoKTtcbiAgICAgIH1cbiAgICB9KTtcbiAgfVxuICBjbG9zZShyZWFzb24gPSBcImFjdGlvbi1jYW5jZWxsZWRcIikge1xuICAgIGlmIChyZWFzb24gPT09IFwiYWN0aW9uLWNhbmNlbGxlZFwiKSB7XG4gICAgICB0aGlzLnRyYWNrZXIudHJhY2tDb25uZWN0aW9uRXJyb3IoXCJDb25uZWN0aW9uIHdhcyBjYW5jZWxsZWRcIik7XG4gICAgfVxuICAgIHdpZGdldENvbnRyb2xsZXIuY2xvc2VXYWxsZXRzTW9kYWwocmVhc29uKTtcbiAgfVxuICBvblN0YXRlQ2hhbmdlKG9uQ2hhbmdlKSB7XG4gICAgdGhpcy5jb25zdW1lcnMucHVzaChvbkNoYW5nZSk7XG4gICAgcmV0dXJuICgpID0+IHtcbiAgICAgIHRoaXMuY29uc3VtZXJzID0gdGhpcy5jb25zdW1lcnMuZmlsdGVyKChjb25zdW1lcikgPT4gY29uc3VtZXIgIT09IG9uQ2hhbmdlKTtcbiAgICB9O1xuICB9XG4gIGNvbm5lY3RFbWJlZGRlZFdhbGxldChlbWJlZGRlZFdhbGxldCkge1xuICAgIGNvbnN0IGNvbm5lY3QgPSAocGFyYW1ldGVycykgPT4ge1xuICAgICAgc2V0TGFzdFNlbGVjdGVkV2FsbGV0SW5mbyhlbWJlZGRlZFdhbGxldCk7XG4gICAgICB0aGlzLmNvbm5lY3Rvci5jb25uZWN0KHsganNCcmlkZ2VLZXk6IGVtYmVkZGVkV2FsbGV0LmpzQnJpZGdlS2V5IH0sIHBhcmFtZXRlcnMpO1xuICAgIH07XG4gICAgY29uc3QgYWRkaXRpb25hbFJlcXVlc3QgPSBhcHBTdGF0ZS5jb25uZWN0UmVxdWVzdFBhcmFtZXRlcnM7XG4gICAgaWYgKChhZGRpdGlvbmFsUmVxdWVzdCA9PSBudWxsID8gdm9pZCAwIDogYWRkaXRpb25hbFJlcXVlc3Quc3RhdGUpID09PSBcImxvYWRpbmdcIikge1xuICAgICAgdGhpcy5zZXRDb25uZWN0UmVxdWVzdFBhcmFtZXRlcnNDYWxsYmFjayhjb25uZWN0KTtcbiAgICB9IGVsc2Uge1xuICAgICAgY29ubmVjdChhZGRpdGlvbmFsUmVxdWVzdCA9PSBudWxsID8gdm9pZCAwIDogYWRkaXRpb25hbFJlcXVlc3QudmFsdWUpO1xuICAgIH1cbiAgfVxuICBvcGVuV2FsbGV0c01vZGFsKCkge1xuICAgIHJldHVybiBfX2FzeW5jKHRoaXMsIG51bGwsIGZ1bmN0aW9uKiAoKSB7XG4gICAgICBpZiAoaXNJblRNQSgpKSB7XG4gICAgICAgIHNlbmRFeHBhbmQoKTtcbiAgICAgIH1cbiAgICAgIHdpZGdldENvbnRyb2xsZXIub3BlbldhbGxldHNNb2RhbCgpO1xuICAgICAgcmV0dXJuIG5ldyBQcm9taXNlKChyZXNvbHZlKSA9PiB7XG4gICAgICAgIGNvbnN0IHVuc3Vic2NyaWJlID0gdGhpcy5vblN0YXRlQ2hhbmdlKChzdGF0ZSkgPT4ge1xuICAgICAgICAgIGNvbnN0IHsgc3RhdHVzIH0gPSBzdGF0ZTtcbiAgICAgICAgICBpZiAoc3RhdHVzID09PSBcIm9wZW5lZFwiKSB7XG4gICAgICAgICAgICB1bnN1YnNjcmliZSgpO1xuICAgICAgICAgICAgcmVzb2x2ZSgpO1xuICAgICAgICAgIH1cbiAgICAgICAgfSk7XG4gICAgICB9KTtcbiAgICB9KTtcbiAgfVxufVxuY2xhc3MgVHJhbnNhY3Rpb25Nb2RhbE1hbmFnZXIge1xuICBjb25zdHJ1Y3RvcihvcHRpb25zKSB7XG4gICAgX19wdWJsaWNGaWVsZCh0aGlzLCBcImNvbm5lY3RvclwiKTtcbiAgICBfX3B1YmxpY0ZpZWxkKHRoaXMsIFwiY29uc3VtZXJzXCIsIFtdKTtcbiAgICB0aGlzLmNvbm5lY3RvciA9IG9wdGlvbnMuY29ubmVjdG9yO1xuICAgIGNyZWF0ZUVmZmVjdCgoKSA9PiB7XG4gICAgICBjb25zdCBjdXJyZW50QWN0aW9uID0gYWN0aW9uKCk7XG4gICAgICB0aGlzLmNvbnN1bWVycy5mb3JFYWNoKChjb25zdW1lcikgPT4gY29uc3VtZXIoY3VycmVudEFjdGlvbikpO1xuICAgIH0pO1xuICB9XG4gIG9uU3RhdGVDaGFuZ2UoY29uc3VtZXIpIHtcbiAgICB0aGlzLmNvbnN1bWVycy5wdXNoKGNvbnN1bWVyKTtcbiAgICByZXR1cm4gKCkgPT4ge1xuICAgICAgdGhpcy5jb25zdW1lcnMgPSB0aGlzLmNvbnN1bWVycy5maWx0ZXIoKGMyKSA9PiBjMiAhPT0gY29uc3VtZXIpO1xuICAgIH07XG4gIH1cbn1cbmNsYXNzIFNpbmdsZVdhbGxldE1vZGFsTWFuYWdlciB7XG4gIGNvbnN0cnVjdG9yKG9wdGlvbnMpIHtcbiAgICBfX3B1YmxpY0ZpZWxkKHRoaXMsIFwiY29ubmVjdG9yXCIpO1xuICAgIF9fcHVibGljRmllbGQodGhpcywgXCJzZXRDb25uZWN0UmVxdWVzdFBhcmFtZXRlcnNDYWxsYmFja1wiKTtcbiAgICBfX3B1YmxpY0ZpZWxkKHRoaXMsIFwiY29uc3VtZXJzXCIsIFtdKTtcbiAgICBfX3B1YmxpY0ZpZWxkKHRoaXMsIFwidHJhY2tlclwiKTtcbiAgICBfX3B1YmxpY0ZpZWxkKHRoaXMsIFwic3RhdGVcIiwgc2luZ2xlV2FsbGV0TW9kYWxTdGF0ZSgpKTtcbiAgICB0aGlzLmNvbm5lY3RvciA9IG9wdGlvbnMuY29ubmVjdG9yO1xuICAgIHRoaXMudHJhY2tlciA9IG9wdGlvbnMudHJhY2tlcjtcbiAgICB0aGlzLnNldENvbm5lY3RSZXF1ZXN0UGFyYW1ldGVyc0NhbGxiYWNrID0gb3B0aW9ucy5zZXRDb25uZWN0UmVxdWVzdFBhcmFtZXRlcnNDYWxsYmFjaztcbiAgICBjcmVhdGVFZmZlY3QoKCkgPT4ge1xuICAgICAgY29uc3Qgc3RhdGUgPSBzaW5nbGVXYWxsZXRNb2RhbFN0YXRlKCk7XG4gICAgICB0aGlzLnN0YXRlID0gc3RhdGU7XG4gICAgICB0aGlzLmNvbnN1bWVycy5mb3JFYWNoKChjb25zdW1lcikgPT4gY29uc3VtZXIoc3RhdGUpKTtcbiAgICB9KTtcbiAgfVxuICBvcGVuKHdhbGxldCkge1xuICAgIHJldHVybiBfX2FzeW5jKHRoaXMsIG51bGwsIGZ1bmN0aW9uKiAoKSB7XG4gICAgICB0aGlzLnRyYWNrZXIudHJhY2tDb25uZWN0aW9uU3RhcnRlZCgpO1xuICAgICAgY29uc3QgZmV0Y2hlZFdhbGxldHNMaXN0ID0geWllbGQgdGhpcy5jb25uZWN0b3IuZ2V0V2FsbGV0cygpO1xuICAgICAgY29uc3Qgd2FsbGV0c0xpc3QgPSBhcHBseVdhbGxldHNMaXN0Q29uZmlndXJhdGlvbihcbiAgICAgICAgZmV0Y2hlZFdhbGxldHNMaXN0LFxuICAgICAgICBhcHBTdGF0ZS53YWxsZXRzTGlzdENvbmZpZ3VyYXRpb25cbiAgICAgICk7XG4gICAgICBjb25zdCBlbWJlZGRlZFdhbGxldCA9IHdhbGxldHNMaXN0LmZpbmQoaXNXYWxsZXRJbmZvQ3VycmVudGx5RW1iZWRkZWQpO1xuICAgICAgY29uc3QgaXNFbWJlZGRlZFdhbGxldEV4aXN0ID0gISFlbWJlZGRlZFdhbGxldDtcbiAgICAgIGlmIChpc0VtYmVkZGVkV2FsbGV0RXhpc3QpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuY29ubmVjdEVtYmVkZGVkV2FsbGV0KGVtYmVkZGVkV2FsbGV0KTtcbiAgICAgIH1cbiAgICAgIGNvbnN0IGV4dGVybmFsV2FsbGV0cyA9IHdhbGxldHNMaXN0LmZpbHRlcihpc1dhbGxldEluZm9SZW1vdGUpO1xuICAgICAgY29uc3QgZXh0ZXJuYWxXYWxsZXQgPSBleHRlcm5hbFdhbGxldHMuZmluZCgod2FsbGV0SW5mbykgPT4gZXFXYWxsZXROYW1lKHdhbGxldEluZm8sIHdhbGxldCkpO1xuICAgICAgY29uc3QgaXNFeHRlcm5hbFdhbGxldEV4aXN0ID0gISFleHRlcm5hbFdhbGxldDtcbiAgICAgIGlmIChpc0V4dGVybmFsV2FsbGV0RXhpc3QpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMub3BlblNpbmdsZVdhbGxldE1vZGFsKGV4dGVybmFsV2FsbGV0KTtcbiAgICAgIH1cbiAgICAgIGNvbnN0IGVycm9yID0gYFRyeWluZyB0byBvcGVuIG1vZGFsIHdpbmRvdyB3aXRoIHVua25vd24gd2FsbGV0IFwiJHt3YWxsZXR9XCIuYDtcbiAgICAgIHRoaXMudHJhY2tlci50cmFja0Nvbm5lY3Rpb25FcnJvcihlcnJvcik7XG4gICAgICB0aHJvdyBuZXcgVG9uQ29ubmVjdFVJRXJyb3IoZXJyb3IpO1xuICAgIH0pO1xuICB9XG4gIGNsb3NlKHJlYXNvbiA9IFwiYWN0aW9uLWNhbmNlbGxlZFwiKSB7XG4gICAgaWYgKHJlYXNvbiA9PT0gXCJhY3Rpb24tY2FuY2VsbGVkXCIpIHtcbiAgICAgIHRoaXMudHJhY2tlci50cmFja0Nvbm5lY3Rpb25FcnJvcihcIkNvbm5lY3Rpb24gd2FzIGNhbmNlbGxlZFwiKTtcbiAgICB9XG4gICAgd2lkZ2V0Q29udHJvbGxlci5jbG9zZVNpbmdsZVdhbGxldE1vZGFsKFwiYWN0aW9uLWNhbmNlbGxlZFwiKTtcbiAgfVxuICBvblN0YXRlQ2hhbmdlKG9uQ2hhbmdlKSB7XG4gICAgdGhpcy5jb25zdW1lcnMucHVzaChvbkNoYW5nZSk7XG4gICAgcmV0dXJuICgpID0+IHtcbiAgICAgIHRoaXMuY29uc3VtZXJzID0gdGhpcy5jb25zdW1lcnMuZmlsdGVyKChjb25zdW1lcikgPT4gY29uc3VtZXIgIT09IG9uQ2hhbmdlKTtcbiAgICB9O1xuICB9XG4gIGNvbm5lY3RFbWJlZGRlZFdhbGxldChlbWJlZGRlZFdhbGxldCkge1xuICAgIGNvbnN0IGNvbm5lY3QgPSAocGFyYW1ldGVycykgPT4ge1xuICAgICAgc2V0TGFzdFNlbGVjdGVkV2FsbGV0SW5mbyhlbWJlZGRlZFdhbGxldCk7XG4gICAgICB0aGlzLmNvbm5lY3Rvci5jb25uZWN0KHsganNCcmlkZ2VLZXk6IGVtYmVkZGVkV2FsbGV0LmpzQnJpZGdlS2V5IH0sIHBhcmFtZXRlcnMpO1xuICAgIH07XG4gICAgY29uc3QgYWRkaXRpb25hbFJlcXVlc3QgPSBhcHBTdGF0ZS5jb25uZWN0UmVxdWVzdFBhcmFtZXRlcnM7XG4gICAgaWYgKChhZGRpdGlvbmFsUmVxdWVzdCA9PSBudWxsID8gdm9pZCAwIDogYWRkaXRpb25hbFJlcXVlc3Quc3RhdGUpID09PSBcImxvYWRpbmdcIikge1xuICAgICAgdGhpcy5zZXRDb25uZWN0UmVxdWVzdFBhcmFtZXRlcnNDYWxsYmFjayhjb25uZWN0KTtcbiAgICB9IGVsc2Uge1xuICAgICAgY29ubmVjdChhZGRpdGlvbmFsUmVxdWVzdCA9PSBudWxsID8gdm9pZCAwIDogYWRkaXRpb25hbFJlcXVlc3QudmFsdWUpO1xuICAgIH1cbiAgfVxuICBvcGVuU2luZ2xlV2FsbGV0TW9kYWwod2FsbGV0KSB7XG4gICAgcmV0dXJuIF9fYXN5bmModGhpcywgbnVsbCwgZnVuY3Rpb24qICgpIHtcbiAgICAgIGlmIChpc0luVE1BKCkpIHtcbiAgICAgICAgc2VuZEV4cGFuZCgpO1xuICAgICAgfVxuICAgICAgd2lkZ2V0Q29udHJvbGxlci5vcGVuU2luZ2xlV2FsbGV0TW9kYWwod2FsbGV0KTtcbiAgICAgIHJldHVybiBuZXcgUHJvbWlzZSgocmVzb2x2ZSkgPT4ge1xuICAgICAgICBjb25zdCB1bnN1YnNjcmliZSA9IHRoaXMub25TdGF0ZUNoYW5nZSgoc3RhdGUpID0+IHtcbiAgICAgICAgICBjb25zdCB7IHN0YXR1cyB9ID0gc3RhdGU7XG4gICAgICAgICAgaWYgKHN0YXR1cyA9PT0gXCJvcGVuZWRcIikge1xuICAgICAgICAgICAgdW5zdWJzY3JpYmUoKTtcbiAgICAgICAgICAgIHJlc29sdmUoKTtcbiAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgICAgfSk7XG4gICAgfSk7XG4gIH1cbn1cbmNsYXNzIFRvbkNvbm5lY3RVSVRyYWNrZXIge1xuICBjb25zdHJ1Y3RvcihvcHRpb25zKSB7XG4gICAgX19wdWJsaWNGaWVsZCh0aGlzLCBcImV2ZW50UHJlZml4XCIsIFwidG9uLWNvbm5lY3QtdWktXCIpO1xuICAgIF9fcHVibGljRmllbGQodGhpcywgXCJ0b25Db25uZWN0VWlWZXJzaW9uXCIpO1xuICAgIF9fcHVibGljRmllbGQodGhpcywgXCJ0b25Db25uZWN0U2RrVmVyc2lvblwiLCBudWxsKTtcbiAgICBfX3B1YmxpY0ZpZWxkKHRoaXMsIFwiZXZlbnREaXNwYXRjaGVyXCIpO1xuICAgIHZhciBfYTI7XG4gICAgdGhpcy5ldmVudERpc3BhdGNoZXIgPSAoX2EyID0gb3B0aW9ucyA9PSBudWxsID8gdm9pZCAwIDogb3B0aW9ucy5ldmVudERpc3BhdGNoZXIpICE9IG51bGwgPyBfYTIgOiBuZXcgQnJvd3NlckV2ZW50RGlzcGF0Y2hlcigpO1xuICAgIHRoaXMudG9uQ29ubmVjdFVpVmVyc2lvbiA9IG9wdGlvbnMudG9uQ29ubmVjdFVpVmVyc2lvbjtcbiAgICB0aGlzLmluaXQoKS5jYXRjaCgpO1xuICB9XG4gIGdldCB2ZXJzaW9uKCkge1xuICAgIHJldHVybiBjcmVhdGVWZXJzaW9uSW5mbyh7XG4gICAgICB0b25fY29ubmVjdF9zZGtfbGliOiB0aGlzLnRvbkNvbm5lY3RTZGtWZXJzaW9uLFxuICAgICAgdG9uX2Nvbm5lY3RfdWlfbGliOiB0aGlzLnRvbkNvbm5lY3RVaVZlcnNpb25cbiAgICB9KTtcbiAgfVxuICBpbml0KCkge1xuICAgIHJldHVybiBfX2FzeW5jKHRoaXMsIG51bGwsIGZ1bmN0aW9uKiAoKSB7XG4gICAgICB0cnkge1xuICAgICAgICB5aWVsZCB0aGlzLnNldFJlcXVlc3RWZXJzaW9uSGFuZGxlcigpO1xuICAgICAgICB0aGlzLnRvbkNvbm5lY3RTZGtWZXJzaW9uID0geWllbGQgdGhpcy5yZXF1ZXN0VG9uQ29ubmVjdFNka1ZlcnNpb24oKTtcbiAgICAgIH0gY2F0Y2ggKGUyKSB7XG4gICAgICB9XG4gICAgfSk7XG4gIH1cbiAgc2V0UmVxdWVzdFZlcnNpb25IYW5kbGVyKCkge1xuICAgIHJldHVybiBfX2FzeW5jKHRoaXMsIG51bGwsIGZ1bmN0aW9uKiAoKSB7XG4gICAgICB5aWVsZCB0aGlzLmV2ZW50RGlzcGF0Y2hlci5hZGRFdmVudExpc3RlbmVyKFwidG9uLWNvbm5lY3QtdWktcmVxdWVzdC12ZXJzaW9uXCIsICgpID0+IF9fYXN5bmModGhpcywgbnVsbCwgZnVuY3Rpb24qICgpIHtcbiAgICAgICAgeWllbGQgdGhpcy5ldmVudERpc3BhdGNoZXIuZGlzcGF0Y2hFdmVudChcbiAgICAgICAgICBcInRvbi1jb25uZWN0LXVpLXJlc3BvbnNlLXZlcnNpb25cIixcbiAgICAgICAgICBjcmVhdGVSZXNwb25zZVZlcnNpb25FdmVudCh0aGlzLnRvbkNvbm5lY3RVaVZlcnNpb24pXG4gICAgICAgICk7XG4gICAgICB9KSk7XG4gICAgfSk7XG4gIH1cbiAgcmVxdWVzdFRvbkNvbm5lY3RTZGtWZXJzaW9uKCkge1xuICAgIHJldHVybiBfX2FzeW5jKHRoaXMsIG51bGwsIGZ1bmN0aW9uKiAoKSB7XG4gICAgICByZXR1cm4gbmV3IFByb21pc2UoKHJlc29sdmUsIHJlamVjdCkgPT4gX19hc3luYyh0aGlzLCBudWxsLCBmdW5jdGlvbiogKCkge1xuICAgICAgICB0cnkge1xuICAgICAgICAgIHlpZWxkIHRoaXMuZXZlbnREaXNwYXRjaGVyLmFkZEV2ZW50TGlzdGVuZXIoXG4gICAgICAgICAgICBcInRvbi1jb25uZWN0LXJlc3BvbnNlLXZlcnNpb25cIixcbiAgICAgICAgICAgIChldmVudCkgPT4ge1xuICAgICAgICAgICAgICByZXNvbHZlKGV2ZW50LmRldGFpbC52ZXJzaW9uKTtcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICB7IG9uY2U6IHRydWUgfVxuICAgICAgICAgICk7XG4gICAgICAgICAgeWllbGQgdGhpcy5ldmVudERpc3BhdGNoZXIuZGlzcGF0Y2hFdmVudChcbiAgICAgICAgICAgIFwidG9uLWNvbm5lY3QtcmVxdWVzdC12ZXJzaW9uXCIsXG4gICAgICAgICAgICBjcmVhdGVSZXF1ZXN0VmVyc2lvbkV2ZW50KClcbiAgICAgICAgICApO1xuICAgICAgICB9IGNhdGNoIChlMikge1xuICAgICAgICAgIHJlamVjdChlMik7XG4gICAgICAgIH1cbiAgICAgIH0pKTtcbiAgICB9KTtcbiAgfVxuICBkaXNwYXRjaFVzZXJBY3Rpb25FdmVudChldmVudERldGFpbHMpIHtcbiAgICB2YXIgX2EyO1xuICAgIHRyeSB7XG4gICAgICAoX2EyID0gdGhpcy5ldmVudERpc3BhdGNoZXIpID09IG51bGwgPyB2b2lkIDAgOiBfYTIuZGlzcGF0Y2hFdmVudChgJHt0aGlzLmV2ZW50UHJlZml4fSR7ZXZlbnREZXRhaWxzLnR5cGV9YCwgZXZlbnREZXRhaWxzKS5jYXRjaCgpO1xuICAgIH0gY2F0Y2ggKGUyKSB7XG4gICAgfVxuICB9XG4gIHRyYWNrQ29ubmVjdGlvblN0YXJ0ZWQoLi4uYXJncykge1xuICAgIHRyeSB7XG4gICAgICBjb25zdCBldmVudCA9IGNyZWF0ZUNvbm5lY3Rpb25TdGFydGVkRXZlbnQodGhpcy52ZXJzaW9uLCAuLi5hcmdzKTtcbiAgICAgIHRoaXMuZGlzcGF0Y2hVc2VyQWN0aW9uRXZlbnQoZXZlbnQpO1xuICAgIH0gY2F0Y2ggKGUyKSB7XG4gICAgfVxuICB9XG4gIHRyYWNrQ29ubmVjdGlvbkNvbXBsZXRlZCguLi5hcmdzKSB7XG4gICAgdHJ5IHtcbiAgICAgIGNvbnN0IGV2ZW50ID0gY3JlYXRlQ29ubmVjdGlvbkNvbXBsZXRlZEV2ZW50KHRoaXMudmVyc2lvbiwgLi4uYXJncyk7XG4gICAgICB0aGlzLmRpc3BhdGNoVXNlckFjdGlvbkV2ZW50KGV2ZW50KTtcbiAgICB9IGNhdGNoIChlMikge1xuICAgIH1cbiAgfVxuICB0cmFja0Nvbm5lY3Rpb25FcnJvciguLi5hcmdzKSB7XG4gICAgdHJ5IHtcbiAgICAgIGNvbnN0IGV2ZW50ID0gY3JlYXRlQ29ubmVjdGlvbkVycm9yRXZlbnQodGhpcy52ZXJzaW9uLCAuLi5hcmdzKTtcbiAgICAgIHRoaXMuZGlzcGF0Y2hVc2VyQWN0aW9uRXZlbnQoZXZlbnQpO1xuICAgIH0gY2F0Y2ggKGUyKSB7XG4gICAgfVxuICB9XG4gIHRyYWNrQ29ubmVjdGlvblJlc3RvcmluZ1N0YXJ0ZWQoLi4uYXJncykge1xuICAgIHRyeSB7XG4gICAgICBjb25zdCBldmVudCA9IGNyZWF0ZUNvbm5lY3Rpb25SZXN0b3JpbmdTdGFydGVkRXZlbnQodGhpcy52ZXJzaW9uLCAuLi5hcmdzKTtcbiAgICAgIHRoaXMuZGlzcGF0Y2hVc2VyQWN0aW9uRXZlbnQoZXZlbnQpO1xuICAgIH0gY2F0Y2ggKGUyKSB7XG4gICAgfVxuICB9XG4gIHRyYWNrQ29ubmVjdGlvblJlc3RvcmluZ0NvbXBsZXRlZCguLi5hcmdzKSB7XG4gICAgdHJ5IHtcbiAgICAgIGNvbnN0IGV2ZW50ID0gY3JlYXRlQ29ubmVjdGlvblJlc3RvcmluZ0NvbXBsZXRlZEV2ZW50KHRoaXMudmVyc2lvbiwgLi4uYXJncyk7XG4gICAgICB0aGlzLmRpc3BhdGNoVXNlckFjdGlvbkV2ZW50KGV2ZW50KTtcbiAgICB9IGNhdGNoIChlMikge1xuICAgIH1cbiAgfVxuICB0cmFja0Nvbm5lY3Rpb25SZXN0b3JpbmdFcnJvciguLi5hcmdzKSB7XG4gICAgdHJ5IHtcbiAgICAgIGNvbnN0IGV2ZW50ID0gY3JlYXRlQ29ubmVjdGlvblJlc3RvcmluZ0Vycm9yRXZlbnQodGhpcy52ZXJzaW9uLCAuLi5hcmdzKTtcbiAgICAgIHRoaXMuZGlzcGF0Y2hVc2VyQWN0aW9uRXZlbnQoZXZlbnQpO1xuICAgIH0gY2F0Y2ggKGUyKSB7XG4gICAgfVxuICB9XG4gIHRyYWNrRGlzY29ubmVjdGlvbiguLi5hcmdzKSB7XG4gICAgdHJ5IHtcbiAgICAgIGNvbnN0IGV2ZW50ID0gY3JlYXRlRGlzY29ubmVjdGlvbkV2ZW50KHRoaXMudmVyc2lvbiwgLi4uYXJncyk7XG4gICAgICB0aGlzLmRpc3BhdGNoVXNlckFjdGlvbkV2ZW50KGV2ZW50KTtcbiAgICB9IGNhdGNoIChlMikge1xuICAgIH1cbiAgfVxuICB0cmFja1RyYW5zYWN0aW9uU2VudEZvclNpZ25hdHVyZSguLi5hcmdzKSB7XG4gICAgdHJ5IHtcbiAgICAgIGNvbnN0IGV2ZW50ID0gY3JlYXRlVHJhbnNhY3Rpb25TZW50Rm9yU2lnbmF0dXJlRXZlbnQodGhpcy52ZXJzaW9uLCAuLi5hcmdzKTtcbiAgICAgIHRoaXMuZGlzcGF0Y2hVc2VyQWN0aW9uRXZlbnQoZXZlbnQpO1xuICAgIH0gY2F0Y2ggKGUyKSB7XG4gICAgfVxuICB9XG4gIHRyYWNrVHJhbnNhY3Rpb25TaWduZWQoLi4uYXJncykge1xuICAgIHRyeSB7XG4gICAgICBjb25zdCBldmVudCA9IGNyZWF0ZVRyYW5zYWN0aW9uU2lnbmVkRXZlbnQodGhpcy52ZXJzaW9uLCAuLi5hcmdzKTtcbiAgICAgIHRoaXMuZGlzcGF0Y2hVc2VyQWN0aW9uRXZlbnQoZXZlbnQpO1xuICAgIH0gY2F0Y2ggKGUyKSB7XG4gICAgfVxuICB9XG4gIHRyYWNrVHJhbnNhY3Rpb25TaWduaW5nRmFpbGVkKC4uLmFyZ3MpIHtcbiAgICB0cnkge1xuICAgICAgY29uc3QgZXZlbnQgPSBjcmVhdGVUcmFuc2FjdGlvblNpZ25pbmdGYWlsZWRFdmVudCh0aGlzLnZlcnNpb24sIC4uLmFyZ3MpO1xuICAgICAgdGhpcy5kaXNwYXRjaFVzZXJBY3Rpb25FdmVudChldmVudCk7XG4gICAgfSBjYXRjaCAoZTIpIHtcbiAgICB9XG4gIH1cbn1cbmNvbnN0IHRvbkNvbm5lY3RVaVZlcnNpb24gPSBcIjIuMC45XCI7XG5jbGFzcyBUb25Db25uZWN0VUkge1xuICBjb25zdHJ1Y3RvcihvcHRpb25zKSB7XG4gICAgX19wdWJsaWNGaWVsZCh0aGlzLCBcIndhbGxldEluZm9TdG9yYWdlXCIsIG5ldyBXYWxsZXRJbmZvU3RvcmFnZSgpKTtcbiAgICBfX3B1YmxpY0ZpZWxkKHRoaXMsIFwicHJlZmVycmVkV2FsbGV0U3RvcmFnZVwiLCBuZXcgUHJlZmVycmVkV2FsbGV0U3RvcmFnZSgpKTtcbiAgICBfX3B1YmxpY0ZpZWxkKHRoaXMsIFwidHJhY2tlclwiKTtcbiAgICBfX3B1YmxpY0ZpZWxkKHRoaXMsIFwid2FsbGV0SW5mb1wiLCBudWxsKTtcbiAgICBfX3B1YmxpY0ZpZWxkKHRoaXMsIFwic3lzdGVtVGhlbWVDaGFuZ2VVbnN1YnNjcmliZVwiLCBudWxsKTtcbiAgICBfX3B1YmxpY0ZpZWxkKHRoaXMsIFwiYWN0aW9uc0NvbmZpZ3VyYXRpb25cIik7XG4gICAgX19wdWJsaWNGaWVsZCh0aGlzLCBcIndhbGxldHNMaXN0XCIpO1xuICAgIF9fcHVibGljRmllbGQodGhpcywgXCJjb25uZWN0UmVxdWVzdFBhcmFtZXRlcnNDYWxsYmFja1wiKTtcbiAgICBfX3B1YmxpY0ZpZWxkKHRoaXMsIFwiY29ubmVjdG9yXCIpO1xuICAgIF9fcHVibGljRmllbGQodGhpcywgXCJtb2RhbFwiKTtcbiAgICBfX3B1YmxpY0ZpZWxkKHRoaXMsIFwic2luZ2xlV2FsbGV0TW9kYWxcIik7XG4gICAgX19wdWJsaWNGaWVsZCh0aGlzLCBcInRyYW5zYWN0aW9uTW9kYWxcIik7XG4gICAgX19wdWJsaWNGaWVsZCh0aGlzLCBcImNvbm5lY3Rpb25SZXN0b3JlZFwiLCBQcm9taXNlLnJlc29sdmUoZmFsc2UpKTtcbiAgICBpZiAob3B0aW9ucyAmJiBcImNvbm5lY3RvclwiIGluIG9wdGlvbnMgJiYgb3B0aW9ucy5jb25uZWN0b3IpIHtcbiAgICAgIHRoaXMuY29ubmVjdG9yID0gb3B0aW9ucy5jb25uZWN0b3I7XG4gICAgfSBlbHNlIGlmIChvcHRpb25zICYmIFwibWFuaWZlc3RVcmxcIiBpbiBvcHRpb25zICYmIG9wdGlvbnMubWFuaWZlc3RVcmwpIHtcbiAgICAgIHRoaXMuY29ubmVjdG9yID0gbmV3IFRvbkNvbm5lY3Qoe1xuICAgICAgICBtYW5pZmVzdFVybDogb3B0aW9ucy5tYW5pZmVzdFVybCxcbiAgICAgICAgZXZlbnREaXNwYXRjaGVyOiBvcHRpb25zID09IG51bGwgPyB2b2lkIDAgOiBvcHRpb25zLmV2ZW50RGlzcGF0Y2hlclxuICAgICAgfSk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHRocm93IG5ldyBUb25Db25uZWN0VUlFcnJvcihcbiAgICAgICAgXCJZb3UgaGF2ZSB0byBzcGVjaWZ5IGEgYG1hbmlmZXN0VXJsYCBvciBhIGBjb25uZWN0b3JgIGluIHRoZSBvcHRpb25zLlwiXG4gICAgICApO1xuICAgIH1cbiAgICB0aGlzLnRyYWNrZXIgPSBuZXcgVG9uQ29ubmVjdFVJVHJhY2tlcih7XG4gICAgICBldmVudERpc3BhdGNoZXI6IG9wdGlvbnMgPT0gbnVsbCA/IHZvaWQgMCA6IG9wdGlvbnMuZXZlbnREaXNwYXRjaGVyLFxuICAgICAgdG9uQ29ubmVjdFVpVmVyc2lvblxuICAgIH0pO1xuICAgIHRoaXMubW9kYWwgPSBuZXcgV2FsbGV0c01vZGFsTWFuYWdlcih7XG4gICAgICBjb25uZWN0b3I6IHRoaXMuY29ubmVjdG9yLFxuICAgICAgdHJhY2tlcjogdGhpcy50cmFja2VyLFxuICAgICAgc2V0Q29ubmVjdFJlcXVlc3RQYXJhbWV0ZXJzQ2FsbGJhY2s6IChjYWxsYmFjaykgPT4ge1xuICAgICAgICB0aGlzLmNvbm5lY3RSZXF1ZXN0UGFyYW1ldGVyc0NhbGxiYWNrID0gY2FsbGJhY2s7XG4gICAgICB9XG4gICAgfSk7XG4gICAgdGhpcy5zaW5nbGVXYWxsZXRNb2RhbCA9IG5ldyBTaW5nbGVXYWxsZXRNb2RhbE1hbmFnZXIoe1xuICAgICAgY29ubmVjdG9yOiB0aGlzLmNvbm5lY3RvcixcbiAgICAgIHRyYWNrZXI6IHRoaXMudHJhY2tlcixcbiAgICAgIHNldENvbm5lY3RSZXF1ZXN0UGFyYW1ldGVyc0NhbGxiYWNrOiAoY2FsbGJhY2spID0+IHtcbiAgICAgICAgdGhpcy5jb25uZWN0UmVxdWVzdFBhcmFtZXRlcnNDYWxsYmFjayA9IGNhbGxiYWNrO1xuICAgICAgfVxuICAgIH0pO1xuICAgIHRoaXMudHJhbnNhY3Rpb25Nb2RhbCA9IG5ldyBUcmFuc2FjdGlvbk1vZGFsTWFuYWdlcih7XG4gICAgICBjb25uZWN0b3I6IHRoaXMuY29ubmVjdG9yXG4gICAgfSk7XG4gICAgdGhpcy53YWxsZXRzTGlzdCA9IHRoaXMuZ2V0V2FsbGV0cygpO1xuICAgIHRoaXMud2FsbGV0c0xpc3QudGhlbigobGlzdCkgPT4gcHJlbG9hZEltYWdlcyh1bmlxKGxpc3QubWFwKChpdGVtKSA9PiBpdGVtLmltYWdlVXJsKSkpKTtcbiAgICBjb25zdCByb290SWQgPSB0aGlzLm5vcm1hbGl6ZVdpZGdldFJvb3Qob3B0aW9ucyA9PSBudWxsID8gdm9pZCAwIDogb3B0aW9ucy53aWRnZXRSb290SWQpO1xuICAgIHRoaXMuc3Vic2NyaWJlVG9XYWxsZXRDaGFuZ2UoKTtcbiAgICBpZiAoKG9wdGlvbnMgPT0gbnVsbCA/IHZvaWQgMCA6IG9wdGlvbnMucmVzdG9yZUNvbm5lY3Rpb24pICE9PSBmYWxzZSkge1xuICAgICAgdGhpcy5jb25uZWN0aW9uUmVzdG9yZWQgPSBjcmVhdGVNYWNyb3Rhc2tBc3luYygoKSA9PiBfX2FzeW5jKHRoaXMsIG51bGwsIGZ1bmN0aW9uKiAoKSB7XG4gICAgICAgIHRoaXMudHJhY2tlci50cmFja0Nvbm5lY3Rpb25SZXN0b3JpbmdTdGFydGVkKCk7XG4gICAgICAgIHlpZWxkIHRoaXMuY29ubmVjdG9yLnJlc3RvcmVDb25uZWN0aW9uKCk7XG4gICAgICAgIGlmICghdGhpcy5jb25uZWN0b3IuY29ubmVjdGVkKSB7XG4gICAgICAgICAgdGhpcy50cmFja2VyLnRyYWNrQ29ubmVjdGlvblJlc3RvcmluZ0Vycm9yKFwiQ29ubmVjdGlvbiB3YXMgbm90IHJlc3RvcmVkXCIpO1xuICAgICAgICAgIHRoaXMud2FsbGV0SW5mb1N0b3JhZ2UucmVtb3ZlV2FsbGV0SW5mbygpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIHRoaXMudHJhY2tlci50cmFja0Nvbm5lY3Rpb25SZXN0b3JpbmdDb21wbGV0ZWQodGhpcy53YWxsZXQpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiB0aGlzLmNvbm5lY3Rvci5jb25uZWN0ZWQ7XG4gICAgICB9KSk7XG4gICAgfVxuICAgIHRoaXMudWlPcHRpb25zID0gbWVyZ2VPcHRpb25zKG9wdGlvbnMsIHsgdWlQcmVmZXJlbmNlczogeyB0aGVtZTogXCJTWVNURU1cIiB9IH0pO1xuICAgIGNvbnN0IHByZWZlcnJlZFdhbGxldE5hbWUgPSB0aGlzLnByZWZlcnJlZFdhbGxldFN0b3JhZ2UuZ2V0UHJlZmVycmVkV2FsbGV0QXBwTmFtZSgpO1xuICAgIHNldEFwcFN0YXRlKHtcbiAgICAgIGNvbm5lY3RvcjogdGhpcy5jb25uZWN0b3IsXG4gICAgICBwcmVmZXJyZWRXYWxsZXRBcHBOYW1lOiBwcmVmZXJyZWRXYWxsZXROYW1lXG4gICAgfSk7XG4gICAgd2lkZ2V0Q29udHJvbGxlci5yZW5kZXJBcHAocm9vdElkLCB0aGlzKTtcbiAgfVxuICBzdGF0aWMgZ2V0V2FsbGV0cygpIHtcbiAgICByZXR1cm4gVG9uQ29ubmVjdC5nZXRXYWxsZXRzKCk7XG4gIH1cbiAgZ2V0IGNvbm5lY3RlZCgpIHtcbiAgICByZXR1cm4gdGhpcy5jb25uZWN0b3IuY29ubmVjdGVkO1xuICB9XG4gIGdldCBhY2NvdW50KCkge1xuICAgIHJldHVybiB0aGlzLmNvbm5lY3Rvci5hY2NvdW50O1xuICB9XG4gIGdldCB3YWxsZXQoKSB7XG4gICAgaWYgKCF0aGlzLmNvbm5lY3Rvci53YWxsZXQpIHtcbiAgICAgIHJldHVybiBudWxsO1xuICAgIH1cbiAgICByZXR1cm4gX19zcHJlYWRWYWx1ZXMoX19zcHJlYWRWYWx1ZXMoe30sIHRoaXMuY29ubmVjdG9yLndhbGxldCksIHRoaXMud2FsbGV0SW5mbyk7XG4gIH1cbiAgc2V0IHVpT3B0aW9ucyhvcHRpb25zKSB7XG4gICAgdmFyIF9hMiwgX2IyLCBfYzIsIF9kMiwgX2UyO1xuICAgIHRoaXMuY2hlY2tCdXR0b25Sb290RXhpc3Qob3B0aW9ucy5idXR0b25Sb290SWQpO1xuICAgIHRoaXMuYWN0aW9uc0NvbmZpZ3VyYXRpb24gPSBvcHRpb25zLmFjdGlvbnNDb25maWd1cmF0aW9uO1xuICAgIGlmICgoX2EyID0gb3B0aW9ucy51aVByZWZlcmVuY2VzKSA9PSBudWxsID8gdm9pZCAwIDogX2EyLnRoZW1lKSB7XG4gICAgICBpZiAoKChfYjIgPSBvcHRpb25zLnVpUHJlZmVyZW5jZXMpID09IG51bGwgPyB2b2lkIDAgOiBfYjIudGhlbWUpICE9PSBcIlNZU1RFTVwiKSB7XG4gICAgICAgIChfYzIgPSB0aGlzLnN5c3RlbVRoZW1lQ2hhbmdlVW5zdWJzY3JpYmUpID09IG51bGwgPyB2b2lkIDAgOiBfYzIuY2FsbCh0aGlzKTtcbiAgICAgICAgc2V0VGhlbWUob3B0aW9ucy51aVByZWZlcmVuY2VzLnRoZW1lLCBvcHRpb25zLnVpUHJlZmVyZW5jZXMuY29sb3JzU2V0KTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHNldFRoZW1lKGdldFN5c3RlbVRoZW1lKCksIG9wdGlvbnMudWlQcmVmZXJlbmNlcy5jb2xvcnNTZXQpO1xuICAgICAgICBpZiAoIXRoaXMuc3lzdGVtVGhlbWVDaGFuZ2VVbnN1YnNjcmliZSkge1xuICAgICAgICAgIHRoaXMuc3lzdGVtVGhlbWVDaGFuZ2VVbnN1YnNjcmliZSA9IHN1YnNjcmliZVRvVGhlbWVDaGFuZ2Uoc2V0VGhlbWUpO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfSBlbHNlIHtcbiAgICAgIGlmICgoX2QyID0gb3B0aW9ucy51aVByZWZlcmVuY2VzKSA9PSBudWxsID8gdm9pZCAwIDogX2QyLmNvbG9yc1NldCkge1xuICAgICAgICBzZXRDb2xvcnMob3B0aW9ucy51aVByZWZlcmVuY2VzLmNvbG9yc1NldCk7XG4gICAgICB9XG4gICAgfVxuICAgIGlmICgoX2UyID0gb3B0aW9ucy51aVByZWZlcmVuY2VzKSA9PSBudWxsID8gdm9pZCAwIDogX2UyLmJvcmRlclJhZGl1cykge1xuICAgICAgc2V0Qm9yZGVyUmFkaXVzKG9wdGlvbnMudWlQcmVmZXJlbmNlcy5ib3JkZXJSYWRpdXMpO1xuICAgIH1cbiAgICBzZXRBcHBTdGF0ZSgoc3RhdGUpID0+IHtcbiAgICAgIHZhciBfYTMsIF9iMztcbiAgICAgIGNvbnN0IG1lcmdlZCA9IG1lcmdlT3B0aW9ucyhcbiAgICAgICAgX19zcHJlYWRWYWx1ZXMoX19zcHJlYWRWYWx1ZXMoX19zcHJlYWRWYWx1ZXMoX19zcHJlYWRWYWx1ZXMoe30sIG9wdGlvbnMubGFuZ3VhZ2UgJiYgeyBsYW5ndWFnZTogb3B0aW9ucy5sYW5ndWFnZSB9KSwgISEoKF9hMyA9IG9wdGlvbnMuYWN0aW9uc0NvbmZpZ3VyYXRpb24pID09IG51bGwgPyB2b2lkIDAgOiBfYTMucmV0dXJuU3RyYXRlZ3kpICYmIHtcbiAgICAgICAgICByZXR1cm5TdHJhdGVneTogb3B0aW9ucy5hY3Rpb25zQ29uZmlndXJhdGlvbi5yZXR1cm5TdHJhdGVneVxuICAgICAgICB9KSwgISEoKF9iMyA9IG9wdGlvbnMuYWN0aW9uc0NvbmZpZ3VyYXRpb24pID09IG51bGwgPyB2b2lkIDAgOiBfYjMudHdhUmV0dXJuVXJsKSAmJiB7XG4gICAgICAgICAgdHdhUmV0dXJuVXJsOiBvcHRpb25zLmFjdGlvbnNDb25maWd1cmF0aW9uLnR3YVJldHVyblVybFxuICAgICAgICB9KSwgISFvcHRpb25zLndhbGxldHNMaXN0Q29uZmlndXJhdGlvbiAmJiB7XG4gICAgICAgICAgd2FsbGV0c0xpc3RDb25maWd1cmF0aW9uOiBvcHRpb25zLndhbGxldHNMaXN0Q29uZmlndXJhdGlvblxuICAgICAgICB9KSxcbiAgICAgICAgdW53cmFwKHN0YXRlKVxuICAgICAgKTtcbiAgICAgIGlmIChvcHRpb25zLmJ1dHRvblJvb3RJZCAhPT0gdm9pZCAwKSB7XG4gICAgICAgIG1lcmdlZC5idXR0b25Sb290SWQgPSBvcHRpb25zLmJ1dHRvblJvb3RJZDtcbiAgICAgIH1cbiAgICAgIGlmIChvcHRpb25zLmVuYWJsZUFuZHJvaWRCYWNrSGFuZGxlciAhPT0gdm9pZCAwKSB7XG4gICAgICAgIG1lcmdlZC5lbmFibGVBbmRyb2lkQmFja0hhbmRsZXIgPSBvcHRpb25zLmVuYWJsZUFuZHJvaWRCYWNrSGFuZGxlcjtcbiAgICAgIH1cbiAgICAgIHJldHVybiBtZXJnZWQ7XG4gICAgfSk7XG4gIH1cbiAgc2V0Q29ubmVjdFJlcXVlc3RQYXJhbWV0ZXJzKGNvbm5lY3RSZXF1ZXN0UGFyYW1ldGVycykge1xuICAgIHZhciBfYTI7XG4gICAgc2V0QXBwU3RhdGUoeyBjb25uZWN0UmVxdWVzdFBhcmFtZXRlcnMgfSk7XG4gICAgaWYgKChjb25uZWN0UmVxdWVzdFBhcmFtZXRlcnMgPT0gbnVsbCA/IHZvaWQgMCA6IGNvbm5lY3RSZXF1ZXN0UGFyYW1ldGVycy5zdGF0ZSkgPT09IFwicmVhZHlcIiB8fCAhY29ubmVjdFJlcXVlc3RQYXJhbWV0ZXJzKSB7XG4gICAgICAoX2EyID0gdGhpcy5jb25uZWN0UmVxdWVzdFBhcmFtZXRlcnNDYWxsYmFjaykgPT0gbnVsbCA/IHZvaWQgMCA6IF9hMi5jYWxsKHRoaXMsIGNvbm5lY3RSZXF1ZXN0UGFyYW1ldGVycyA9PSBudWxsID8gdm9pZCAwIDogY29ubmVjdFJlcXVlc3RQYXJhbWV0ZXJzLnZhbHVlKTtcbiAgICB9XG4gIH1cbiAgZ2V0V2FsbGV0cygpIHtcbiAgICByZXR1cm4gX19hc3luYyh0aGlzLCBudWxsLCBmdW5jdGlvbiogKCkge1xuICAgICAgcmV0dXJuIHRoaXMuY29ubmVjdG9yLmdldFdhbGxldHMoKTtcbiAgICB9KTtcbiAgfVxuICBvblN0YXR1c0NoYW5nZShjYWxsYmFjaywgZXJyb3JzSGFuZGxlcikge1xuICAgIHJldHVybiB0aGlzLmNvbm5lY3Rvci5vblN0YXR1c0NoYW5nZSgod2FsbGV0KSA9PiBfX2FzeW5jKHRoaXMsIG51bGwsIGZ1bmN0aW9uKiAoKSB7XG4gICAgICBpZiAod2FsbGV0KSB7XG4gICAgICAgIGNvbnN0IGxhc3RTZWxlY3RlZFdhbGxldEluZm8yID0geWllbGQgdGhpcy5nZXRTZWxlY3RlZFdhbGxldEluZm8od2FsbGV0KTtcbiAgICAgICAgY2FsbGJhY2soX19zcHJlYWRWYWx1ZXMoX19zcHJlYWRWYWx1ZXMoe30sIHdhbGxldCksIGxhc3RTZWxlY3RlZFdhbGxldEluZm8yIHx8IHRoaXMud2FsbGV0SW5mb1N0b3JhZ2UuZ2V0V2FsbGV0SW5mbygpKSk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBjYWxsYmFjayh3YWxsZXQpO1xuICAgICAgfVxuICAgIH0pLCBlcnJvcnNIYW5kbGVyKTtcbiAgfVxuICBvcGVuTW9kYWwoKSB7XG4gICAgcmV0dXJuIF9fYXN5bmModGhpcywgbnVsbCwgZnVuY3Rpb24qICgpIHtcbiAgICAgIHJldHVybiB0aGlzLm1vZGFsLm9wZW4oKTtcbiAgICB9KTtcbiAgfVxuICBjbG9zZU1vZGFsKHJlYXNvbikge1xuICAgIHRoaXMubW9kYWwuY2xvc2UocmVhc29uKTtcbiAgfVxuICBvbk1vZGFsU3RhdGVDaGFuZ2Uob25DaGFuZ2UpIHtcbiAgICByZXR1cm4gdGhpcy5tb2RhbC5vblN0YXRlQ2hhbmdlKG9uQ2hhbmdlKTtcbiAgfVxuICBnZXQgbW9kYWxTdGF0ZSgpIHtcbiAgICByZXR1cm4gdGhpcy5tb2RhbC5zdGF0ZTtcbiAgfVxuICBvcGVuU2luZ2xlV2FsbGV0TW9kYWwod2FsbGV0KSB7XG4gICAgcmV0dXJuIF9fYXN5bmModGhpcywgbnVsbCwgZnVuY3Rpb24qICgpIHtcbiAgICAgIHJldHVybiB0aGlzLnNpbmdsZVdhbGxldE1vZGFsLm9wZW4od2FsbGV0KTtcbiAgICB9KTtcbiAgfVxuICBjbG9zZVNpbmdsZVdhbGxldE1vZGFsKGNsb3NlUmVhc29uKSB7XG4gICAgdGhpcy5zaW5nbGVXYWxsZXRNb2RhbC5jbG9zZShjbG9zZVJlYXNvbik7XG4gIH1cbiAgb25TaW5nbGVXYWxsZXRNb2RhbFN0YXRlQ2hhbmdlKG9uQ2hhbmdlKSB7XG4gICAgcmV0dXJuIHRoaXMuc2luZ2xlV2FsbGV0TW9kYWwub25TdGF0ZUNoYW5nZShvbkNoYW5nZSk7XG4gIH1cbiAgZ2V0IHNpbmdsZVdhbGxldE1vZGFsU3RhdGUoKSB7XG4gICAgcmV0dXJuIHRoaXMuc2luZ2xlV2FsbGV0TW9kYWwuc3RhdGU7XG4gIH1cbiAgY29ubmVjdFdhbGxldCgpIHtcbiAgICByZXR1cm4gX19hc3luYyh0aGlzLCBudWxsLCBmdW5jdGlvbiogKCkge1xuICAgICAgY29uc3Qgd2FsbGV0c0xpc3QgPSB5aWVsZCB0aGlzLmdldFdhbGxldHMoKTtcbiAgICAgIGNvbnN0IGVtYmVkZGVkV2FsbGV0ID0gd2FsbGV0c0xpc3QuZmluZChpc1dhbGxldEluZm9DdXJyZW50bHlFbWJlZGRlZCk7XG4gICAgICBpZiAoZW1iZWRkZWRXYWxsZXQpIHtcbiAgICAgICAgcmV0dXJuIHlpZWxkIHRoaXMuY29ubmVjdEVtYmVkZGVkV2FsbGV0KGVtYmVkZGVkV2FsbGV0KTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHJldHVybiB5aWVsZCB0aGlzLmNvbm5lY3RFeHRlcm5hbFdhbGxldCgpO1xuICAgICAgfVxuICAgIH0pO1xuICB9XG4gIGRpc2Nvbm5lY3QoKSB7XG4gICAgdGhpcy50cmFja2VyLnRyYWNrRGlzY29ubmVjdGlvbih0aGlzLndhbGxldCwgXCJkYXBwXCIpO1xuICAgIHdpZGdldENvbnRyb2xsZXIuY2xlYXJBY3Rpb24oKTtcbiAgICB3aWRnZXRDb250cm9sbGVyLnJlbW92ZVNlbGVjdGVkV2FsbGV0SW5mbygpO1xuICAgIHRoaXMud2FsbGV0SW5mb1N0b3JhZ2UucmVtb3ZlV2FsbGV0SW5mbygpO1xuICAgIHJldHVybiB0aGlzLmNvbm5lY3Rvci5kaXNjb25uZWN0KCk7XG4gIH1cbiAgc2VuZFRyYW5zYWN0aW9uKHR4LCBvcHRpb25zKSB7XG4gICAgcmV0dXJuIF9fYXN5bmModGhpcywgbnVsbCwgZnVuY3Rpb24qICgpIHtcbiAgICAgIHRoaXMudHJhY2tlci50cmFja1RyYW5zYWN0aW9uU2VudEZvclNpZ25hdHVyZSh0aGlzLndhbGxldCwgdHgpO1xuICAgICAgaWYgKCF0aGlzLmNvbm5lY3RlZCkge1xuICAgICAgICB0aGlzLnRyYWNrZXIudHJhY2tUcmFuc2FjdGlvblNpZ25pbmdGYWlsZWQodGhpcy53YWxsZXQsIHR4LCBcIldhbGxldCB3YXMgbm90IGNvbm5lY3RlZFwiKTtcbiAgICAgICAgdGhyb3cgbmV3IFRvbkNvbm5lY3RVSUVycm9yKFwiQ29ubmVjdCB3YWxsZXQgdG8gc2VuZCBhIHRyYW5zYWN0aW9uLlwiKTtcbiAgICAgIH1cbiAgICAgIGlmIChpc0luVE1BKCkpIHtcbiAgICAgICAgc2VuZEV4cGFuZCgpO1xuICAgICAgfVxuICAgICAgY29uc3QgeyBub3RpZmljYXRpb25zOiBub3RpZmljYXRpb25zMiwgbW9kYWxzLCByZXR1cm5TdHJhdGVneSwgdHdhUmV0dXJuVXJsLCBza2lwUmVkaXJlY3RUb1dhbGxldCB9ID0gdGhpcy5nZXRNb2RhbHNBbmROb3RpZmljYXRpb25zQ29uZmlndXJhdGlvbihvcHRpb25zKTtcbiAgICAgIHdpZGdldENvbnRyb2xsZXIuc2V0QWN0aW9uKHtcbiAgICAgICAgbmFtZTogXCJjb25maXJtLXRyYW5zYWN0aW9uXCIsXG4gICAgICAgIHNob3dOb3RpZmljYXRpb246IG5vdGlmaWNhdGlvbnMyLmluY2x1ZGVzKFwiYmVmb3JlXCIpLFxuICAgICAgICBvcGVuTW9kYWw6IG1vZGFscy5pbmNsdWRlcyhcImJlZm9yZVwiKSxcbiAgICAgICAgc2VudDogZmFsc2VcbiAgICAgIH0pO1xuICAgICAgY29uc3Qgb25SZXF1ZXN0U2VudCA9ICgpID0+IHtcbiAgICAgICAgaWYgKGFib3J0Q29udHJvbGxlci5zaWduYWwuYWJvcnRlZCkge1xuICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuICAgICAgICB3aWRnZXRDb250cm9sbGVyLnNldEFjdGlvbih7XG4gICAgICAgICAgbmFtZTogXCJjb25maXJtLXRyYW5zYWN0aW9uXCIsXG4gICAgICAgICAgc2hvd05vdGlmaWNhdGlvbjogbm90aWZpY2F0aW9uczIuaW5jbHVkZXMoXCJiZWZvcmVcIiksXG4gICAgICAgICAgb3Blbk1vZGFsOiBtb2RhbHMuaW5jbHVkZXMoXCJiZWZvcmVcIiksXG4gICAgICAgICAgc2VudDogdHJ1ZVxuICAgICAgICB9KTtcbiAgICAgICAgaWYgKHRoaXMud2FsbGV0SW5mbyAmJiBcInVuaXZlcnNhbExpbmtcIiBpbiB0aGlzLndhbGxldEluZm8gJiYgKHRoaXMud2FsbGV0SW5mby5vcGVuTWV0aG9kID09PSBcInVuaXZlcnNhbC1saW5rXCIgfHwgdGhpcy53YWxsZXRJbmZvLm9wZW5NZXRob2QgPT09IFwiY3VzdG9tLWRlZXBsaW5rXCIpKSB7XG4gICAgICAgICAgaWYgKGlzVGVsZWdyYW1VcmwodGhpcy53YWxsZXRJbmZvLnVuaXZlcnNhbExpbmspKSB7XG4gICAgICAgICAgICByZWRpcmVjdFRvVGVsZWdyYW0odGhpcy53YWxsZXRJbmZvLnVuaXZlcnNhbExpbmssIHtcbiAgICAgICAgICAgICAgcmV0dXJuU3RyYXRlZ3ksXG4gICAgICAgICAgICAgIHR3YVJldHVyblVybDogdHdhUmV0dXJuVXJsIHx8IGFwcFN0YXRlLnR3YVJldHVyblVybCxcbiAgICAgICAgICAgICAgZm9yY2VSZWRpcmVjdDogZmFsc2VcbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICByZWRpcmVjdFRvV2FsbGV0KFxuICAgICAgICAgICAgICB0aGlzLndhbGxldEluZm8udW5pdmVyc2FsTGluayxcbiAgICAgICAgICAgICAgdGhpcy53YWxsZXRJbmZvLmRlZXBMaW5rLFxuICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgcmV0dXJuU3RyYXRlZ3ksXG4gICAgICAgICAgICAgICAgZm9yY2VSZWRpcmVjdDogZmFsc2VcbiAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgKCkgPT4ge1xuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICApO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfTtcbiAgICAgIGNvbnN0IGFib3J0Q29udHJvbGxlciA9IG5ldyBBYm9ydENvbnRyb2xsZXIoKTtcbiAgICAgIGNvbnN0IHVuc3Vic2NyaWJlID0gdGhpcy5vblRyYW5zYWN0aW9uTW9kYWxTdGF0ZUNoYW5nZSgoYWN0aW9uMikgPT4ge1xuICAgICAgICBpZiAoYWN0aW9uMiA9PSBudWxsID8gdm9pZCAwIDogYWN0aW9uMi5vcGVuTW9kYWwpIHtcbiAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cbiAgICAgICAgdW5zdWJzY3JpYmUoKTtcbiAgICAgICAgaWYgKCFhY3Rpb24yKSB7XG4gICAgICAgICAgYWJvcnRDb250cm9sbGVyLmFib3J0KCk7XG4gICAgICAgIH1cbiAgICAgIH0pO1xuICAgICAgdHJ5IHtcbiAgICAgICAgY29uc3QgcmVzdWx0ID0geWllbGQgdGhpcy53YWl0Rm9yU2VuZFRyYW5zYWN0aW9uKFxuICAgICAgICAgIHtcbiAgICAgICAgICAgIHRyYW5zYWN0aW9uOiB0eCxcbiAgICAgICAgICAgIHNpZ25hbDogYWJvcnRDb250cm9sbGVyLnNpZ25hbFxuICAgICAgICAgIH0sXG4gICAgICAgICAgb25SZXF1ZXN0U2VudFxuICAgICAgICApO1xuICAgICAgICB0aGlzLnRyYWNrZXIudHJhY2tUcmFuc2FjdGlvblNpZ25lZCh0aGlzLndhbGxldCwgdHgsIHJlc3VsdCk7XG4gICAgICAgIHdpZGdldENvbnRyb2xsZXIuc2V0QWN0aW9uKHtcbiAgICAgICAgICBuYW1lOiBcInRyYW5zYWN0aW9uLXNlbnRcIixcbiAgICAgICAgICBzaG93Tm90aWZpY2F0aW9uOiBub3RpZmljYXRpb25zMi5pbmNsdWRlcyhcInN1Y2Nlc3NcIiksXG4gICAgICAgICAgb3Blbk1vZGFsOiBtb2RhbHMuaW5jbHVkZXMoXCJzdWNjZXNzXCIpXG4gICAgICAgIH0pO1xuICAgICAgICByZXR1cm4gcmVzdWx0O1xuICAgICAgfSBjYXRjaCAoZTIpIHtcbiAgICAgICAgd2lkZ2V0Q29udHJvbGxlci5zZXRBY3Rpb24oe1xuICAgICAgICAgIG5hbWU6IFwidHJhbnNhY3Rpb24tY2FuY2VsZWRcIixcbiAgICAgICAgICBzaG93Tm90aWZpY2F0aW9uOiBub3RpZmljYXRpb25zMi5pbmNsdWRlcyhcImVycm9yXCIpLFxuICAgICAgICAgIG9wZW5Nb2RhbDogbW9kYWxzLmluY2x1ZGVzKFwiZXJyb3JcIilcbiAgICAgICAgfSk7XG4gICAgICAgIGlmIChlMiBpbnN0YW5jZW9mIFRvbkNvbm5lY3RFcnJvcikge1xuICAgICAgICAgIHRocm93IGUyO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGNvbnNvbGUuZXJyb3IoZTIpO1xuICAgICAgICAgIHRocm93IG5ldyBUb25Db25uZWN0VUlFcnJvcihcIlVuaGFuZGxlZCBlcnJvcjpcIiArIGUyKTtcbiAgICAgICAgfVxuICAgICAgfSBmaW5hbGx5IHtcbiAgICAgICAgdW5zdWJzY3JpYmUoKTtcbiAgICAgIH1cbiAgICB9KTtcbiAgfVxuICBjb25uZWN0RW1iZWRkZWRXYWxsZXQoZW1iZWRkZWRXYWxsZXQpIHtcbiAgICByZXR1cm4gX19hc3luYyh0aGlzLCBudWxsLCBmdW5jdGlvbiogKCkge1xuICAgICAgY29uc3QgY29ubmVjdCA9IChwYXJhbWV0ZXJzKSA9PiB7XG4gICAgICAgIHNldExhc3RTZWxlY3RlZFdhbGxldEluZm8oZW1iZWRkZWRXYWxsZXQpO1xuICAgICAgICB0aGlzLmNvbm5lY3Rvci5jb25uZWN0KHsganNCcmlkZ2VLZXk6IGVtYmVkZGVkV2FsbGV0LmpzQnJpZGdlS2V5IH0sIHBhcmFtZXRlcnMpO1xuICAgICAgfTtcbiAgICAgIGNvbnN0IGFkZGl0aW9uYWxSZXF1ZXN0ID0gYXBwU3RhdGUuY29ubmVjdFJlcXVlc3RQYXJhbWV0ZXJzO1xuICAgICAgaWYgKChhZGRpdGlvbmFsUmVxdWVzdCA9PSBudWxsID8gdm9pZCAwIDogYWRkaXRpb25hbFJlcXVlc3Quc3RhdGUpID09PSBcImxvYWRpbmdcIikge1xuICAgICAgICB0aGlzLmNvbm5lY3RSZXF1ZXN0UGFyYW1ldGVyc0NhbGxiYWNrID0gY29ubmVjdDtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGNvbm5lY3QoYWRkaXRpb25hbFJlcXVlc3QgPT0gbnVsbCA/IHZvaWQgMCA6IGFkZGl0aW9uYWxSZXF1ZXN0LnZhbHVlKTtcbiAgICAgIH1cbiAgICAgIHJldHVybiB5aWVsZCB0aGlzLndhaXRGb3JXYWxsZXRDb25uZWN0aW9uKHtcbiAgICAgICAgaWdub3JlRXJyb3JzOiBmYWxzZVxuICAgICAgfSk7XG4gICAgfSk7XG4gIH1cbiAgY29ubmVjdEV4dGVybmFsV2FsbGV0KCkge1xuICAgIHJldHVybiBfX2FzeW5jKHRoaXMsIG51bGwsIGZ1bmN0aW9uKiAoKSB7XG4gICAgICBjb25zdCBhYm9ydENvbnRyb2xsZXIgPSBuZXcgQWJvcnRDb250cm9sbGVyKCk7XG4gICAgICB3aWRnZXRDb250cm9sbGVyLm9wZW5XYWxsZXRzTW9kYWwoKTtcbiAgICAgIGNvbnN0IHVuc3Vic2NyaWJlID0gdGhpcy5vbk1vZGFsU3RhdGVDaGFuZ2UoKHN0YXRlKSA9PiB7XG4gICAgICAgIGNvbnN0IHsgc3RhdHVzLCBjbG9zZVJlYXNvbiB9ID0gc3RhdGU7XG4gICAgICAgIGlmIChzdGF0dXMgPT09IFwib3BlbmVkXCIpIHtcbiAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cbiAgICAgICAgdW5zdWJzY3JpYmUoKTtcbiAgICAgICAgaWYgKGNsb3NlUmVhc29uID09PSBcImFjdGlvbi1jYW5jZWxsZWRcIikge1xuICAgICAgICAgIGFib3J0Q29udHJvbGxlci5hYm9ydCgpO1xuICAgICAgICB9XG4gICAgICB9KTtcbiAgICAgIHJldHVybiB5aWVsZCB0aGlzLndhaXRGb3JXYWxsZXRDb25uZWN0aW9uKHtcbiAgICAgICAgaWdub3JlRXJyb3JzOiB0cnVlLFxuICAgICAgICBzaWduYWw6IGFib3J0Q29udHJvbGxlci5zaWduYWxcbiAgICAgIH0pO1xuICAgIH0pO1xuICB9XG4gIHdhaXRGb3JXYWxsZXRDb25uZWN0aW9uKG9wdGlvbnMpIHtcbiAgICByZXR1cm4gX19hc3luYyh0aGlzLCBudWxsLCBmdW5jdGlvbiogKCkge1xuICAgICAgcmV0dXJuIG5ldyBQcm9taXNlKChyZXNvbHZlLCByZWplY3QpID0+IHtcbiAgICAgICAgdGhpcy50cmFja2VyLnRyYWNrQ29ubmVjdGlvblN0YXJ0ZWQoKTtcbiAgICAgICAgY29uc3QgeyBpZ25vcmVFcnJvcnMgPSBmYWxzZSwgc2lnbmFsID0gbnVsbCB9ID0gb3B0aW9ucztcbiAgICAgICAgaWYgKHNpZ25hbCAmJiBzaWduYWwuYWJvcnRlZCkge1xuICAgICAgICAgIHRoaXMudHJhY2tlci50cmFja0Nvbm5lY3Rpb25FcnJvcihcIkNvbm5lY3Rpb24gd2FzIGNhbmNlbGxlZFwiKTtcbiAgICAgICAgICByZXR1cm4gcmVqZWN0KG5ldyBUb25Db25uZWN0VUlFcnJvcihcIldhbGxldCB3YXMgbm90IGNvbm5lY3RlZFwiKSk7XG4gICAgICAgIH1cbiAgICAgICAgY29uc3Qgb25TdGF0dXNDaGFuZ2VIYW5kbGVyID0gKHdhbGxldCkgPT4gX19hc3luYyh0aGlzLCBudWxsLCBmdW5jdGlvbiogKCkge1xuICAgICAgICAgIGlmICghd2FsbGV0KSB7XG4gICAgICAgICAgICB0aGlzLnRyYWNrZXIudHJhY2tDb25uZWN0aW9uRXJyb3IoXCJDb25uZWN0aW9uIHdhcyBjYW5jZWxsZWRcIik7XG4gICAgICAgICAgICBpZiAoaWdub3JlRXJyb3JzKSB7XG4gICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHVuc3Vic2NyaWJlKCk7XG4gICAgICAgICAgICByZWplY3QobmV3IFRvbkNvbm5lY3RVSUVycm9yKFwiV2FsbGV0IHdhcyBub3QgY29ubmVjdGVkXCIpKTtcbiAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgdGhpcy50cmFja2VyLnRyYWNrQ29ubmVjdGlvbkNvbXBsZXRlZCh3YWxsZXQpO1xuICAgICAgICAgICAgdW5zdWJzY3JpYmUoKTtcbiAgICAgICAgICAgIHJlc29sdmUod2FsbGV0KTtcbiAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgICAgICBjb25zdCBvbkVycm9yc0hhbmRsZXIgPSAocmVhc29uKSA9PiB7XG4gICAgICAgICAgdGhpcy50cmFja2VyLnRyYWNrQ29ubmVjdGlvbkVycm9yKHJlYXNvbi5tZXNzYWdlKTtcbiAgICAgICAgICBpZiAoaWdub3JlRXJyb3JzKSB7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgfVxuICAgICAgICAgIHVuc3Vic2NyaWJlKCk7XG4gICAgICAgICAgcmVqZWN0KHJlYXNvbik7XG4gICAgICAgIH07XG4gICAgICAgIGNvbnN0IHVuc3Vic2NyaWJlID0gdGhpcy5vblN0YXR1c0NoYW5nZShcbiAgICAgICAgICAod2FsbGV0KSA9PiBvblN0YXR1c0NoYW5nZUhhbmRsZXIod2FsbGV0KSxcbiAgICAgICAgICAocmVhc29uKSA9PiBvbkVycm9yc0hhbmRsZXIocmVhc29uKVxuICAgICAgICApO1xuICAgICAgICBpZiAoc2lnbmFsKSB7XG4gICAgICAgICAgc2lnbmFsLmFkZEV2ZW50TGlzdGVuZXIoXG4gICAgICAgICAgICBcImFib3J0XCIsXG4gICAgICAgICAgICAoKSA9PiB7XG4gICAgICAgICAgICAgIHVuc3Vic2NyaWJlKCk7XG4gICAgICAgICAgICAgIHJlamVjdChuZXcgVG9uQ29ubmVjdFVJRXJyb3IoXCJXYWxsZXQgd2FzIG5vdCBjb25uZWN0ZWRcIikpO1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIHsgb25jZTogdHJ1ZSB9XG4gICAgICAgICAgKTtcbiAgICAgICAgfVxuICAgICAgfSk7XG4gICAgfSk7XG4gIH1cbiAgd2FpdEZvclNlbmRUcmFuc2FjdGlvbihvcHRpb25zLCBvblJlcXVlc3RTZW50KSB7XG4gICAgcmV0dXJuIF9fYXN5bmModGhpcywgbnVsbCwgZnVuY3Rpb24qICgpIHtcbiAgICAgIHJldHVybiBuZXcgUHJvbWlzZSgocmVzb2x2ZSwgcmVqZWN0KSA9PiB7XG4gICAgICAgIGNvbnN0IHsgdHJhbnNhY3Rpb24sIHNpZ25hbCB9ID0gb3B0aW9ucztcbiAgICAgICAgaWYgKHNpZ25hbC5hYm9ydGVkKSB7XG4gICAgICAgICAgdGhpcy50cmFja2VyLnRyYWNrVHJhbnNhY3Rpb25TaWduaW5nRmFpbGVkKFxuICAgICAgICAgICAgdGhpcy53YWxsZXQsXG4gICAgICAgICAgICB0cmFuc2FjdGlvbixcbiAgICAgICAgICAgIFwiVHJhbnNhY3Rpb24gd2FzIGNhbmNlbGxlZFwiXG4gICAgICAgICAgKTtcbiAgICAgICAgICByZXR1cm4gcmVqZWN0KG5ldyBUb25Db25uZWN0VUlFcnJvcihcIlRyYW5zYWN0aW9uIHdhcyBub3Qgc2VudFwiKSk7XG4gICAgICAgIH1cbiAgICAgICAgY29uc3Qgb25UcmFuc2FjdGlvbkhhbmRsZXIgPSAodHJhbnNhY3Rpb24yKSA9PiBfX2FzeW5jKHRoaXMsIG51bGwsIGZ1bmN0aW9uKiAoKSB7XG4gICAgICAgICAgcmVzb2x2ZSh0cmFuc2FjdGlvbjIpO1xuICAgICAgICB9KTtcbiAgICAgICAgY29uc3Qgb25FcnJvcnNIYW5kbGVyID0gKHJlYXNvbikgPT4ge1xuICAgICAgICAgIHJlamVjdChyZWFzb24pO1xuICAgICAgICB9O1xuICAgICAgICBjb25zdCBvbkNhbmNlbGVkSGFuZGxlciA9ICgpID0+IHtcbiAgICAgICAgICB0aGlzLnRyYWNrZXIudHJhY2tUcmFuc2FjdGlvblNpZ25pbmdGYWlsZWQoXG4gICAgICAgICAgICB0aGlzLndhbGxldCxcbiAgICAgICAgICAgIHRyYW5zYWN0aW9uLFxuICAgICAgICAgICAgXCJUcmFuc2FjdGlvbiB3YXMgY2FuY2VsbGVkXCJcbiAgICAgICAgICApO1xuICAgICAgICAgIHJlamVjdChuZXcgVG9uQ29ubmVjdFVJRXJyb3IoXCJUcmFuc2FjdGlvbiB3YXMgbm90IHNlbnRcIikpO1xuICAgICAgICB9O1xuICAgICAgICBzaWduYWwuYWRkRXZlbnRMaXN0ZW5lcihcImFib3J0XCIsIG9uQ2FuY2VsZWRIYW5kbGVyLCB7IG9uY2U6IHRydWUgfSk7XG4gICAgICAgIHRoaXMuY29ubmVjdG9yLnNlbmRUcmFuc2FjdGlvbih0cmFuc2FjdGlvbiwgeyBvblJlcXVlc3RTZW50LCBzaWduYWwgfSkudGhlbigocmVzdWx0KSA9PiB7XG4gICAgICAgICAgc2lnbmFsLnJlbW92ZUV2ZW50TGlzdGVuZXIoXCJhYm9ydFwiLCBvbkNhbmNlbGVkSGFuZGxlcik7XG4gICAgICAgICAgcmV0dXJuIG9uVHJhbnNhY3Rpb25IYW5kbGVyKHJlc3VsdCk7XG4gICAgICAgIH0pLmNhdGNoKChyZWFzb24pID0+IHtcbiAgICAgICAgICBzaWduYWwucmVtb3ZlRXZlbnRMaXN0ZW5lcihcImFib3J0XCIsIG9uQ2FuY2VsZWRIYW5kbGVyKTtcbiAgICAgICAgICByZXR1cm4gb25FcnJvcnNIYW5kbGVyKHJlYXNvbik7XG4gICAgICAgIH0pO1xuICAgICAgfSk7XG4gICAgfSk7XG4gIH1cbiAgb25UcmFuc2FjdGlvbk1vZGFsU3RhdGVDaGFuZ2Uob25DaGFuZ2UpIHtcbiAgICByZXR1cm4gdGhpcy50cmFuc2FjdGlvbk1vZGFsLm9uU3RhdGVDaGFuZ2Uob25DaGFuZ2UpO1xuICB9XG4gIHN1YnNjcmliZVRvV2FsbGV0Q2hhbmdlKCkge1xuICAgIHRoaXMuY29ubmVjdG9yLm9uU3RhdHVzQ2hhbmdlKCh3YWxsZXQpID0+IF9fYXN5bmModGhpcywgbnVsbCwgZnVuY3Rpb24qICgpIHtcbiAgICAgIHZhciBfYTI7XG4gICAgICBpZiAod2FsbGV0KSB7XG4gICAgICAgIHlpZWxkIHRoaXMudXBkYXRlV2FsbGV0SW5mbyh3YWxsZXQpO1xuICAgICAgICB0aGlzLnNldFByZWZlcnJlZFdhbGxldEFwcE5hbWUoKChfYTIgPSB0aGlzLndhbGxldEluZm8pID09IG51bGwgPyB2b2lkIDAgOiBfYTIuYXBwTmFtZSkgfHwgd2FsbGV0LmRldmljZS5hcHBOYW1lKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHRoaXMud2FsbGV0SW5mb1N0b3JhZ2UucmVtb3ZlV2FsbGV0SW5mbygpO1xuICAgICAgfVxuICAgIH0pKTtcbiAgfVxuICBzZXRQcmVmZXJyZWRXYWxsZXRBcHBOYW1lKHZhbHVlKSB7XG4gICAgdGhpcy5wcmVmZXJyZWRXYWxsZXRTdG9yYWdlLnNldFByZWZlcnJlZFdhbGxldEFwcE5hbWUodmFsdWUpO1xuICAgIHNldEFwcFN0YXRlKHsgcHJlZmVycmVkV2FsbGV0QXBwTmFtZTogdmFsdWUgfSk7XG4gIH1cbiAgZ2V0U2VsZWN0ZWRXYWxsZXRJbmZvKHdhbGxldCkge1xuICAgIHJldHVybiBfX2FzeW5jKHRoaXMsIG51bGwsIGZ1bmN0aW9uKiAoKSB7XG4gICAgICBsZXQgbGFzdFNlbGVjdGVkV2FsbGV0SW5mbzIgPSB3aWRnZXRDb250cm9sbGVyLmdldFNlbGVjdGVkV2FsbGV0SW5mbygpO1xuICAgICAgaWYgKCFsYXN0U2VsZWN0ZWRXYWxsZXRJbmZvMikge1xuICAgICAgICByZXR1cm4gbnVsbDtcbiAgICAgIH1cbiAgICAgIGxldCBmdWxsTGFzdFNlbGVjdGVkV2FsbGV0SW5mbztcbiAgICAgIGlmICghKFwibmFtZVwiIGluIGxhc3RTZWxlY3RlZFdhbGxldEluZm8yKSkge1xuICAgICAgICBjb25zdCB3YWxsZXRzTGlzdCA9IGFwcGx5V2FsbGV0c0xpc3RDb25maWd1cmF0aW9uKFxuICAgICAgICAgIHlpZWxkIHRoaXMud2FsbGV0c0xpc3QsXG4gICAgICAgICAgYXBwU3RhdGUud2FsbGV0c0xpc3RDb25maWd1cmF0aW9uXG4gICAgICAgICk7XG4gICAgICAgIGNvbnN0IHdhbGxldEluZm8gPSB3YWxsZXRzTGlzdC5maW5kKChpdGVtKSA9PiBlcVdhbGxldE5hbWUoaXRlbSwgd2FsbGV0LmRldmljZS5hcHBOYW1lKSk7XG4gICAgICAgIGlmICghd2FsbGV0SW5mbykge1xuICAgICAgICAgIHRocm93IG5ldyBUb25Db25uZWN0VUlFcnJvcihcbiAgICAgICAgICAgIGBDYW5ub3QgZmluZCBXYWxsZXRJbmZvIGZvciB0aGUgJyR7d2FsbGV0LmRldmljZS5hcHBOYW1lfScgd2FsbGV0YFxuICAgICAgICAgICk7XG4gICAgICAgIH1cbiAgICAgICAgZnVsbExhc3RTZWxlY3RlZFdhbGxldEluZm8gPSBfX3NwcmVhZFZhbHVlcyhfX3NwcmVhZFZhbHVlcyh7fSwgd2FsbGV0SW5mbyksIGxhc3RTZWxlY3RlZFdhbGxldEluZm8yKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGZ1bGxMYXN0U2VsZWN0ZWRXYWxsZXRJbmZvID0gbGFzdFNlbGVjdGVkV2FsbGV0SW5mbzI7XG4gICAgICB9XG4gICAgICByZXR1cm4gZnVsbExhc3RTZWxlY3RlZFdhbGxldEluZm87XG4gICAgfSk7XG4gIH1cbiAgdXBkYXRlV2FsbGV0SW5mbyh3YWxsZXQpIHtcbiAgICByZXR1cm4gX19hc3luYyh0aGlzLCBudWxsLCBmdW5jdGlvbiogKCkge1xuICAgICAgY29uc3Qgc2VsZWN0ZWRXYWxsZXRJbmZvID0geWllbGQgdGhpcy5nZXRTZWxlY3RlZFdhbGxldEluZm8od2FsbGV0KTtcbiAgICAgIGlmIChzZWxlY3RlZFdhbGxldEluZm8pIHtcbiAgICAgICAgdGhpcy53YWxsZXRJbmZvID0gc2VsZWN0ZWRXYWxsZXRJbmZvO1xuICAgICAgICB0aGlzLndhbGxldEluZm9TdG9yYWdlLnNldFdhbGxldEluZm8oc2VsZWN0ZWRXYWxsZXRJbmZvKTtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuICAgICAgY29uc3Qgc3RvcmVkV2FsbGV0SW5mbyA9IHRoaXMud2FsbGV0SW5mb1N0b3JhZ2UuZ2V0V2FsbGV0SW5mbygpO1xuICAgICAgaWYgKHN0b3JlZFdhbGxldEluZm8pIHtcbiAgICAgICAgdGhpcy53YWxsZXRJbmZvID0gc3RvcmVkV2FsbGV0SW5mbztcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuICAgICAgdGhpcy53YWxsZXRJbmZvID0gKHlpZWxkIHRoaXMud2FsbGV0c0xpc3QpLmZpbmQoXG4gICAgICAgICh3YWxsZXRJbmZvKSA9PiBlcVdhbGxldE5hbWUod2FsbGV0SW5mbywgd2FsbGV0LmRldmljZS5hcHBOYW1lKVxuICAgICAgKSB8fCBudWxsO1xuICAgIH0pO1xuICB9XG4gIG5vcm1hbGl6ZVdpZGdldFJvb3Qocm9vdElkKSB7XG4gICAgaWYgKCFyb290SWQgfHwgIWRvY3VtZW50LmdldEVsZW1lbnRCeUlkKHJvb3RJZCkpIHtcbiAgICAgIHJvb3RJZCA9IFwidGMtd2lkZ2V0LXJvb3RcIjtcbiAgICAgIGNvbnN0IHJvb3RFbGVtZW50ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKTtcbiAgICAgIHJvb3RFbGVtZW50LmlkID0gcm9vdElkO1xuICAgICAgZG9jdW1lbnQuYm9keS5hcHBlbmRDaGlsZChyb290RWxlbWVudCk7XG4gICAgfVxuICAgIHJldHVybiByb290SWQ7XG4gIH1cbiAgY2hlY2tCdXR0b25Sb290RXhpc3QoYnV0dG9uUm9vdElkKSB7XG4gICAgaWYgKGJ1dHRvblJvb3RJZCA9PSBudWxsKSB7XG4gICAgICByZXR1cm47XG4gICAgfVxuICAgIGlmICghZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoYnV0dG9uUm9vdElkKSkge1xuICAgICAgdGhyb3cgbmV3IFRvbkNvbm5lY3RVSUVycm9yKGAke2J1dHRvblJvb3RJZH0gZWxlbWVudCBub3QgZm91bmQgaW4gdGhlIGRvY3VtZW50LmApO1xuICAgIH1cbiAgfVxuICBnZXRNb2RhbHNBbmROb3RpZmljYXRpb25zQ29uZmlndXJhdGlvbihvcHRpb25zKSB7XG4gICAgdmFyIF9hMiwgX2IyLCBfYzIsIF9kMiwgX2UyLCBfZjI7XG4gICAgY29uc3QgYWxsQWN0aW9ucyA9IFtcbiAgICAgIFwiYmVmb3JlXCIsXG4gICAgICBcInN1Y2Nlc3NcIixcbiAgICAgIFwiZXJyb3JcIlxuICAgIF07XG4gICAgbGV0IG5vdGlmaWNhdGlvbnMyID0gYWxsQWN0aW9ucztcbiAgICBpZiAoKChfYTIgPSB0aGlzLmFjdGlvbnNDb25maWd1cmF0aW9uKSA9PSBudWxsID8gdm9pZCAwIDogX2EyLm5vdGlmaWNhdGlvbnMpICYmICgoX2IyID0gdGhpcy5hY3Rpb25zQ29uZmlndXJhdGlvbikgPT0gbnVsbCA/IHZvaWQgMCA6IF9iMi5ub3RpZmljYXRpb25zKSAhPT0gXCJhbGxcIikge1xuICAgICAgbm90aWZpY2F0aW9uczIgPSB0aGlzLmFjdGlvbnNDb25maWd1cmF0aW9uLm5vdGlmaWNhdGlvbnM7XG4gICAgfVxuICAgIGlmIChvcHRpb25zID09IG51bGwgPyB2b2lkIDAgOiBvcHRpb25zLm5vdGlmaWNhdGlvbnMpIHtcbiAgICAgIGlmIChvcHRpb25zLm5vdGlmaWNhdGlvbnMgPT09IFwiYWxsXCIpIHtcbiAgICAgICAgbm90aWZpY2F0aW9uczIgPSBhbGxBY3Rpb25zO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgbm90aWZpY2F0aW9uczIgPSBvcHRpb25zLm5vdGlmaWNhdGlvbnM7XG4gICAgICB9XG4gICAgfVxuICAgIGxldCBtb2RhbHMgPSBbXCJiZWZvcmVcIl07XG4gICAgaWYgKChfYzIgPSB0aGlzLmFjdGlvbnNDb25maWd1cmF0aW9uKSA9PSBudWxsID8gdm9pZCAwIDogX2MyLm1vZGFscykge1xuICAgICAgaWYgKHRoaXMuYWN0aW9uc0NvbmZpZ3VyYXRpb24ubW9kYWxzID09PSBcImFsbFwiKSB7XG4gICAgICAgIG1vZGFscyA9IGFsbEFjdGlvbnM7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBtb2RhbHMgPSB0aGlzLmFjdGlvbnNDb25maWd1cmF0aW9uLm1vZGFscztcbiAgICAgIH1cbiAgICB9XG4gICAgaWYgKG9wdGlvbnMgPT0gbnVsbCA/IHZvaWQgMCA6IG9wdGlvbnMubW9kYWxzKSB7XG4gICAgICBpZiAob3B0aW9ucy5tb2RhbHMgPT09IFwiYWxsXCIpIHtcbiAgICAgICAgbW9kYWxzID0gYWxsQWN0aW9ucztcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIG1vZGFscyA9IG9wdGlvbnMubW9kYWxzO1xuICAgICAgfVxuICAgIH1cbiAgICBjb25zdCByZXR1cm5TdHJhdGVneSA9IChvcHRpb25zID09IG51bGwgPyB2b2lkIDAgOiBvcHRpb25zLnJldHVyblN0cmF0ZWd5KSB8fCAoKF9kMiA9IHRoaXMuYWN0aW9uc0NvbmZpZ3VyYXRpb24pID09IG51bGwgPyB2b2lkIDAgOiBfZDIucmV0dXJuU3RyYXRlZ3kpIHx8IFwiYmFja1wiO1xuICAgIGNvbnN0IHR3YVJldHVyblVybCA9IChvcHRpb25zID09IG51bGwgPyB2b2lkIDAgOiBvcHRpb25zLnR3YVJldHVyblVybCkgfHwgKChfZTIgPSB0aGlzLmFjdGlvbnNDb25maWd1cmF0aW9uKSA9PSBudWxsID8gdm9pZCAwIDogX2UyLnR3YVJldHVyblVybCk7XG4gICAgbGV0IHNraXBSZWRpcmVjdFRvV2FsbGV0ID0gKG9wdGlvbnMgPT0gbnVsbCA/IHZvaWQgMCA6IG9wdGlvbnMuc2tpcFJlZGlyZWN0VG9XYWxsZXQpIHx8ICgoX2YyID0gdGhpcy5hY3Rpb25zQ29uZmlndXJhdGlvbikgPT0gbnVsbCA/IHZvaWQgMCA6IF9mMi5za2lwUmVkaXJlY3RUb1dhbGxldCkgfHwgXCJpb3NcIjtcbiAgICBpZiAoaXNJblRNQSgpKSB7XG4gICAgICBza2lwUmVkaXJlY3RUb1dhbGxldCA9IFwibmV2ZXJcIjtcbiAgICB9XG4gICAgcmV0dXJuIHtcbiAgICAgIG5vdGlmaWNhdGlvbnM6IG5vdGlmaWNhdGlvbnMyLFxuICAgICAgbW9kYWxzLFxuICAgICAgcmV0dXJuU3RyYXRlZ3ksXG4gICAgICB0d2FSZXR1cm5VcmwsXG4gICAgICBza2lwUmVkaXJlY3RUb1dhbGxldFxuICAgIH07XG4gIH1cbn1cbmV4cG9ydCB7XG4gIFRIRU1FLFxuICBUb25Db25uZWN0VUksXG4gIFRvbkNvbm5lY3RVSUVycm9yXG59O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5kZXgubWpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@tonconnect/ui/lib/index.mjs\n"));

/***/ })

},
/******/ function(__webpack_require__) { // webpackRuntimeModules
/******/ var __webpack_exec__ = function(moduleId) { return __webpack_require__(__webpack_require__.s = moduleId); }
/******/ __webpack_require__.O(0, ["main-app"], function() { return __webpack_exec__("(app-pages-browser)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22F%3A%5C%5CDownloads%5C%5Cckliker-main%5C%5Cckliker-main%5C%5Capp%5C%5Cclicker%5C%5Clayout.tsx%22%2C%22ids%22%3A%5B%5D%7D&server=false!"); });
/******/ var __webpack_exports__ = __webpack_require__.O();
/******/ _N_E = __webpack_exports__;
/******/ }
]);
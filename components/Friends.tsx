'use client'

import React, { useState, useCallback, useEffect } from 'react';
import Image, { StaticImageData } from 'next/image';
import { useGameStore } from '@/utils/game-mechanics';
import { formatNumber, triggerHapticFeedback } from '@/utils/ui';
import { REFERRAL_BONUS_BASE, REFERRAL_BONUS_PREMIUM, LEVELS } from '@/utils/consts';
import { getUserTelegramId } from '@/utils/user';
import { useToast } from '@/contexts/ToastContext';
import { initUtils } from '@telegram-apps/sdk';
import TopInfoSection from '@/components/TopInfoSection';
import IceCubes from '@/icons/IceCubes';
import Settings from '@/icons/Settings';

// –ò–º–ø–æ—Ä—Ç—ã –¥–ª—è —Ñ–æ–Ω–∞ –∏ –∞–Ω–∏–º–∞—Ü–∏–π
import './layout.css';
import styles from './stars.module.scss';
import styles2 from './stars2.module.scss';
import tapStyles from './Animation.module.scss';
import Animation from './Animation';
import Animation2 from './Animation2';
import Animation3 from './Animation3';

interface Referral {
  id: string;
  telegramId: string;
  name: string | null;
  points: number;
  referralPointsEarned: number;
  levelName: string;
  levelImage: StaticImageData;
}

export default function Friends() {
  const showToast = useToast();

  const { userTelegramInitData, gameLevelIndex, pointsBalance, energy, maxEnergy, userTelegramName, profitPerHour } = useGameStore();
  const [copyButtonText, setCopyButtonText] = useState('Copy');
  const [referrals, setReferrals] = useState<Referral[]>([]);
  const [referralCount, setReferralCount] = useState(0);
  const [isLoadingReferrals, setIsLoadingReferrals] = useState(true);

  // –°–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ç–µ–∫—É—â–µ–π –≤–∫–ª–∞–¥–∫–æ–π
  const [currentView, setCurrentView] = useState('default');

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤–∫–ª–∞–¥–∫–∏
  useEffect(() => {
    if (currentView === 'Cash') {
      console.log('–ü–µ—Ä–µ—Ö–æ–¥ –Ω–∞ –≤–∫–ª–∞–¥–∫—É Cash');
      // –õ–æ–≥–∏–∫–∞ –¥–ª—è –ø–µ—Ä–µ—Ö–æ–¥–∞ –Ω–∞ –≤–∫–ª–∞–¥–∫—É "Cash"
    } else if (currentView === 'settings') {
      console.log('–ü–µ—Ä–µ—Ö–æ–¥ –Ω–∞ –≤–∫–ª–∞–¥–∫—É Settings');
      // –õ–æ–≥–∏–∫–∞ –¥–ª—è –ø–µ—Ä–µ—Ö–æ–¥–∞ –Ω–∞ –≤–∫–ª–∞–¥–∫—É "Settings"
    }
  }, [currentView]);

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–±–æ—Ä–∞ —Ñ–æ–Ω–∞ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —É—Ä–æ–≤–Ω—è
  const renderBackground = () => {
    if (gameLevelIndex >= 0 && gameLevelIndex <= 2) {
      // –£—Ä–æ–≤–Ω–∏ 1-3
      return (
        <div className={styles.starsBackground} style={{ zIndex: 0, position: 'fixed', top: 0, left: 0, right: 0, bottom: 0 }}>
          <div className={styles.stars}></div>
          <div className={styles.stars2}></div>
          <div className={styles.stars3}></div>
        </div>
      );
    } else if (gameLevelIndex >= 3 && gameLevelIndex <= 8) {
      // –£—Ä–æ–≤–Ω–∏ 4-9
      return (
        <div className={styles2.starsBackground1} style={{ zIndex: 0, position: 'fixed', top: 0, left: 0, right: 0, bottom: 0 }}>
          <div className={styles2.stars_lv3}></div>
          <div className={styles2.stars2_lv3}></div>
          <div className={styles2.stars3_lv3}></div>
        </div>
      );
    }
    return null; // –ù–∞ —Å–ª—É—á–∞–π, –µ—Å–ª–∏ —É—Ä–æ–≤–Ω–∏ –≤—ã–π–¥—É—Ç –∑–∞ –ø—Ä–µ–¥–µ–ª—ã 0-8
  };

  // –ó–∞–≥—Ä—É–∑–∫–∞ —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤
  const fetchReferrals = useCallback(async () => {
    setIsLoadingReferrals(true);
    try {
      const response = await fetch(`/api/user/referrals?initData=${encodeURIComponent(userTelegramInitData)}`);
      if (!response.ok) {
        throw new Error('Failed to fetch referrals');
      }
      const data = await response.json();
      setReferrals(data.referrals);
      setReferralCount(data.referralCount);
    } catch (error) {
      console.error('Error fetching referrals:', error);
      showToast('Failed to fetch referrals. Please try again later.', 'error');
    } finally {
      setIsLoadingReferrals(false);
    }
  }, [userTelegramInitData, showToast]);

  useEffect(() => {
    fetchReferrals();
  }, [fetchReferrals]);

  // –ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ —Å—Å—ã–ª–∫–∏ –¥–ª—è –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è
  const handleCopyInviteLink = useCallback(() => {
    if (!navigator.clipboard) {
      showToast('Clipboard not supported', 'error');
      return;
    }

    navigator.clipboard
      .writeText(process.env.NEXT_PUBLIC_BOT_USERNAME ? `https://t.me/${process.env.NEXT_PUBLIC_BOT_USERNAME}/${process.env.NEXT_PUBLIC_APP_URL_SHORT_NAME}?startapp=kentId${getUserTelegramId(userTelegramInitData) || ''}` : 'https://t.me/icetongame_bot')
      .then(() => {
        setCopyButtonText('Copied!');
        showToast('Invite link copied to clipboard!', 'success');
        setTimeout(() => setCopyButtonText('Copy'), 2000);
      })
      .catch((err) => {
        console.error('Failed to copy text: ', err);
        showToast('Failed to copy link. Please try again.', 'error');
      });
  }, [userTelegramInitData, showToast]);

  // –ü—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ –¥—Ä—É–≥–∞ —á–µ—Ä–µ–∑ Telegram
  const handleInviteFriend = useCallback(() => {
    const botUsername = process.env.NEXT_PUBLIC_BOT_USERNAME;
    const userTelegramId = getUserTelegramId(userTelegramInitData);

    const inviteLink = botUsername
      ? `https://t.me/${process.env.NEXT_PUBLIC_BOT_USERNAME}/${process.env.NEXT_PUBLIC_APP_URL_SHORT_NAME}?startapp=kentId${userTelegramId || ''}`
      : 'https://t.me/icetongame_bot';

    const shareText = `üéÆ –ü—Ä–∏—Å–æ–µ–¥–∏–Ω—è–π—Å—è –∫–æ –º–Ω–µ –≤ TON ICE: –Ω–∞–∂–∏–º–∞–π, –∑–∞—Ä–∞–±–∞—Ç—ã–≤–∞–π –∏ –≤—ã–∏–≥—Ä—ã–≤–∞–π! iTONüèÜüöÄ –î–∞–≤–∞–π—Ç–µ –∏–≥—Ä–∞—Ç—å –∏ –∑–∞—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –≤–º–µ—Å—Ç–µ!`;

    try {
      if (window.Telegram?.WebApp?.HapticFeedback) {
        triggerHapticFeedback(window);
      } else {
        console.warn('HapticFeedback is not supported');
      }

      const utils = initUtils();
      const fullUrl = `https://t.me/share/url?url=${encodeURIComponent(inviteLink)}&text=${encodeURIComponent(shareText)}`;
      utils.openTelegramLink(fullUrl);
    } catch (error) {
      console.error('Error opening Telegram link:', error);
      showToast('Failed to open sharing dialog. Please try again.', 'error');

      // Fallback: copy the invite link to clipboard
      navigator.clipboard.writeText(inviteLink)
        .then(() => showToast('Invite link copied to clipboard instead', 'success'))
        .catch(() => showToast('Failed to share or copy invite link', 'error'));
    }
  }, [userTelegramInitData, showToast]);

  return (
    <div className="bg-black flex justify-center h-screen overflow-hidden">
      <div className="w-full bg-black text-white h-full font-bold flex flex-col max-w-xl relative">
        {/* –®–∞–ø–∫–∞ */}
        <div className="text-left mb-8">
          <h1 className="text-lg text-white mb-1"></h1>
          <div className="text-xs text-white">
            <p></p>
            <p className="text-xs text-white-400 mt-1"></p>
          </div>
        </div>

        {/* TopInfoSection —Å –∫–Ω–æ–ø–∫–∞–º–∏ */}
        <TopInfoSection
          isGamePage={true} // –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ false, —Ç–∞–∫ –∫–∞–∫ —ç—Ç–æ –Ω–µ —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –∏–≥—Ä—ã
          setCurrentView={setCurrentView} // –ü–µ—Ä–µ–¥–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é –¥–ª—è —Å–º–µ–Ω—ã –≤–∫–ª–∞–¥–æ–∫
        />

        {/* –û—Å–Ω–æ–≤–Ω–æ–π –∫–æ–Ω—Ç–µ–Ω—Ç */}
        <div className="flex-grow mt-4 bg-[#f3ba2f] rounded-t-[48px] relative top-glow overflow-y-auto">
          {/* –§–æ–Ω –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —É—Ä–æ–≤–Ω—è */}
          {renderBackground()}

          {/* –û—Å—Ç–∞–ª—å–Ω–æ–π –∫–æ–Ω—Ç–µ–Ω—Ç —Å—Ç—Ä–∞–Ω–∏—Ü—ã */}
          <div className="px-4 pt-4 pb-36 relative z-10">
            {/* –í–µ—Ä—Ö–Ω–µ–µ –º–µ–Ω—é */}
            <div className="flex items-center justify-between mb-4">
              <div className="flex items-center space-x-2">
                <span className="text-2xl">üë´</span>
                <span className="text-2xl">ü†í</span>
                <span className="text-2xl">üì±</span>
              </div>
            </div>

            {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ –∏ –æ–ø–∏—Å–∞–Ω–∏–µ */}
            <div className="text-left mb-8">
              <h1 className="text-lg text-white mb-1">–ü—Ä–∏–≥–ª–∞—à–∞–π –¥—Ä—É–∑–µ–π</h1>
              <div className="text-xs text-white">
                <p></p>
                <p className="text-xs text-white-400 mt-1">–†–∞—Å–ø—Ä–æ—Å—Ç—Ä–∞–Ω—è–π –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —Å—Ä–µ–¥–∏ –¥—Ä—É–∑–µ–π. –ü—Ä–∏–≥–ª–∞—à–∞–π –∏—Ö –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç—å—Å—è –∫ Iceton –∏ –∑–∞—Ä–∞–±–∞—Ç—ã–≤–∞–π % –æ—Ç –∏—Ö –º–∞–π–Ω–∏–Ω–≥–∞</p>
              </div>
            </div>

            {/* –ü–ª–∏—Ç–∫–∏ —Å –±–æ–Ω—É—Å–∞–º–∏ */}
            <div className="flex space-x-4 mb-8">
              <div className="flex-1 bg-gradient-to-r from-[#2a2e35] to-[#1d2025] p-4 rounded-xl shadow-lg">
                <p className="text-xs text-gray-400 mb-2">–ó–∞—Ä–∞–±–∞—Ç—ã–≤–∞–π</p>
                <p className="text-xl font-bold text-white mb-2">+{formatNumber(REFERRAL_BONUS_BASE)}</p>
                <p className="text-xs text-gray-400">–∑–∞ –æ–±—ã—á–Ω–æ–≥–æ –¥—Ä—É–≥–∞</p>
              </div>
              <div className="flex-1 bg-gradient-to-r from-[#2a2e35] to-[#1d2025] p-4 rounded-xl shadow-lg">
                <p className="text-xs text-gray-400 mb-2">–ó–∞—Ä–∞–±–∞—Ç—ã–≤–∞–π</p>
                <p className="text-xl font-bold text-white mb-2">+{formatNumber(REFERRAL_BONUS_PREMIUM)}</p>
                <p className="text-xs text-gray-400">–∑–∞ –¥—Ä—É–≥–∞ —Å –ø—Ä–µ–º–∏—É–º –ø–æ–¥–ø–∏—Å–∫–æ–π</p>
              </div>
            </div>

            {/* –í—Ç–æ—Ä–æ–π –±–ª–æ–∫ —Å –¥—Ä—É–∑—å—è–º–∏ */}
            <div className="flex items-center justify-between mb-6">
              <div className="flex items-center space-x-2">
                <span className="text-2xl">üë´</span>
                <span className="text-2xl">ü†í</span>
                <span className="text-2xl">üï∂</span>
              </div>
            </div>

            <div className="text-left mb-8">
              <p className="text-sm text-white">–ü—Ä–µ–≤—Ä–∞—â–∞–π –¥—Ä—É–∑–µ–π –≤ —Ç—Ä–µ–π–¥–µ—Ä–æ–≤ –∏ –∑–∞—Ä–∞–±–∞—Ç—ã–≤–∞–π TON</p>
            </div>

            {/* –ü–ª–∏—Ç–∫–∏ —Å –¥–æ—Ö–æ–¥–∞–º–∏ */}
            <div className="flex space-x-4 mb-8">
              <div className="flex-1 bg-gradient-to-r from-[#2a2e35] to-[#1d2025] p-4 rounded-xl shadow-lg">
                <p className="text-xs text-gray-400 mb-2">–î–æ—Ö–æ–¥</p>
                <p className="text-xl font-bold text-white mb-2">20%</p>
                <p className="text-xs text-gray-400">–æ—Ç –∏—Ö –¥—Ä—É–∑–µ–π –∏ —Ç–æ—Ä–≥–æ–≤–æ–π –∫–æ–º–∏—Å—Å–∏–∏</p>
              </div>
              <div className="flex-1 bg-gradient-to-r from-[#2a2e35] to-[#1d2025] p-4 rounded-xl shadow-lg">
                <p className="text-xs text-gray-400 mb-2">–î–æ—Ö–æ–¥</p>
                <p className="text-xl font-bold text-white mb-2">2.5%</p>
                <p className="text-xs text-gray-400">–æ—Ç –∏—Ö –¥—Ä—É–∑–µ–π –∏ —Ç–æ—Ä–≥–æ–≤–æ–π –∫–æ–º–∏—Å—Å–∏–∏</p>
              </div>
            </div>

            {/* –ü–ª–∏—Ç–∫–∞ —Å –∫–Ω–æ–ø–∫–æ–π "–ö–∞–∫ —ç—Ç–æ —Ä–∞–±–æ—Ç–∞–µ—Ç?" */}
            <div className="bg-gradient-to-r from-[#2a2e35] to-[#1d2025] p-4 rounded-xl shadow-lg mb-8">
              <div className="flex items-center space-x-2">
                <span className="text-2xl">üìö</span>
                <p className="text-sm font-bold text-white">–ö–∞–∫ —ç—Ç–æ —Ä–∞–±–æ—Ç–∞–µ—Ç?</p>
              </div>
              <p className="text-xs text-gray-400 mt-2">–£—Å–ª–æ–≤–∏—è —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π –ø—Ä–æ–≥—Ä–∞–º–º—ã</p>
            </div>

            {/* –ö–Ω–æ–ø–∫–∞ "–ü—Ä–∏–≥–ª–∞—Å–∏—Ç—å –¥—Ä—É–≥–∞" */}
            <button
              onClick={handleInviteFriend}
              className="w-full py-3 bg-white text-black font-bold rounded-lg shadow-lg hover:shadow-xl transition-shadow mb-8"
            >
              –ü—Ä–∏–≥–ª–∞—Å–∏—Ç—å –¥—Ä—É–≥–∞
            </button>

            {/* –°–ø–∏—Å–æ–∫ –¥—Ä—É–∑–µ–π */}
            <div className="mb-8">
              <h2 className="text-lg font-bold text-white mb-4">–î—Ä—É–∑—å—è, –∫–æ—Ç–æ—Ä—ã—Ö –≤—ã –ø—Ä–∏–≥–ª–∞—Å–∏–ª–∏</h2>
              {isLoadingReferrals ? (
                <div className="space-y-2 animate-pulse">
                  {[...Array(3)].map((_, index) => (
                    <div key={index} className="flex justify-between items-center bg-[#2a2e35] rounded-lg p-4">
                      <div className="flex items-center space-x-3">
                        <div className="w-12 h-12 bg-gray-700 rounded-full"></div>
                        <div className="space-y-2">
                          <div className="h-4 bg-gray-700 rounded w-24"></div>
                          <div className="h-3 bg-gray-700 rounded w-20"></div>
                        </div>
                      </div>
                      <div className="h-4 bg-gray-700 rounded w-16"></div>
                    </div>
                  ))}
                </div>
              ) : referrals.length > 0 ? (
                <ul className="space-y-2">
                  {referrals.map((referral: Referral) => (
                    <li key={referral.id} className="flex justify-between items-center bg-[#2a2e35] rounded-lg p-4">
                      <div className="flex items-center space-x-3">
                        <Image src={referral.levelImage} alt={referral.levelName} width={48} height={48} className="rounded-full" />
                        <div>
                          <span className="font-medium">{referral.name || `User ${referral.telegramId}`}</span>
                          <p className="text-sm text-gray-400">{referral.levelName} ‚Ä¢ {formatNumber(referral.points)} points</p>
                        </div>
                      </div>
                      <span className="text-[#f3ba2f]">+{formatNumber(referral.referralPointsEarned)}</span>
                    </li>
                  ))}
                </ul>
              ) : (
                <div className="text-center text-gray-400 bg-[#2a2e35] rounded-lg p-4">
                  –í—ã –µ—â–µ –Ω–∏–∫–æ–≥–æ –Ω–µ –ø—Ä–∏–≥–ª–∞—Å–∏–ª–∏
                </div>
              )}
            </div>
          </div>
        </div>
      </div>
    </div>
  );
}